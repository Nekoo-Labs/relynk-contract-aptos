
// ** Expanded prelude

// Copyright (c) The Diem Core Contributors
// Copyright (c) The Move Contributors
// SPDX-License-Identifier: Apache-2.0

// Basic theory for vectors using arrays. This version of vectors is not extensional.

datatype Vec<T> {
    Vec(v: [int]T, l: int)
}

function {:builtin "MapConst"} MapConstVec<T>(T): [int]T;
function DefaultVecElem<T>(): T;
function {:inline} DefaultVecMap<T>(): [int]T { MapConstVec(DefaultVecElem()) }

function {:inline} EmptyVec<T>(): Vec T {
    Vec(DefaultVecMap(), 0)
}

function {:inline} MakeVec1<T>(v: T): Vec T {
    Vec(DefaultVecMap()[0 := v], 1)
}

function {:inline} MakeVec2<T>(v1: T, v2: T): Vec T {
    Vec(DefaultVecMap()[0 := v1][1 := v2], 2)
}

function {:inline} MakeVec3<T>(v1: T, v2: T, v3: T): Vec T {
    Vec(DefaultVecMap()[0 := v1][1 := v2][2 := v3], 3)
}

function {:inline} MakeVec4<T>(v1: T, v2: T, v3: T, v4: T): Vec T {
    Vec(DefaultVecMap()[0 := v1][1 := v2][2 := v3][3 := v4], 4)
}

function {:inline} ExtendVec<T>(v: Vec T, elem: T): Vec T {
    (var l := v->l;
    Vec(v->v[l := elem], l + 1))
}

function {:inline} ReadVec<T>(v: Vec T, i: int): T {
    v->v[i]
}

function {:inline} LenVec<T>(v: Vec T): int {
    v->l
}

function {:inline} IsEmptyVec<T>(v: Vec T): bool {
    v->l == 0
}

function {:inline} RemoveVec<T>(v: Vec T): Vec T {
    (var l := v->l - 1;
    Vec(v->v[l := DefaultVecElem()], l))
}

function {:inline} RemoveAtVec<T>(v: Vec T, i: int): Vec T {
    (var l := v->l - 1;
    Vec(
        (lambda j: int ::
           if j >= 0 && j < l then
               if j < i then v->v[j] else v->v[j+1]
           else DefaultVecElem()),
        l))
}

function {:inline} ConcatVec<T>(v1: Vec T, v2: Vec T): Vec T {
    (var l1, m1, l2, m2 := v1->l, v1->v, v2->l, v2->v;
    Vec(
        (lambda i: int ::
          if i >= 0 && i < l1 + l2 then
            if i < l1 then m1[i] else m2[i - l1]
          else DefaultVecElem()),
        l1 + l2))
}

function {:inline} ReverseVec<T>(v: Vec T): Vec T {
    (var l := v->l;
    Vec(
        (lambda i: int :: if 0 <= i && i < l then v->v[l - i - 1] else DefaultVecElem()),
        l))
}

function {:inline} SliceVec<T>(v: Vec T, i: int, j: int): Vec T {
    (var m := v->v;
    Vec(
        (lambda k:int ::
          if 0 <= k && k < j - i then
            m[i + k]
          else
            DefaultVecElem()),
        (if j - i < 0 then 0 else j - i)))
}


function {:inline} UpdateVec<T>(v: Vec T, i: int, elem: T): Vec T {
    Vec(v->v[i := elem], v->l)
}

function {:inline} SwapVec<T>(v: Vec T, i: int, j: int): Vec T {
    (var m := v->v;
    Vec(m[i := m[j]][j := m[i]], v->l))
}

function {:inline} ContainsVec<T>(v: Vec T, e: T): bool {
    (var l := v->l;
    (exists i: int :: InRangeVec(v, i) && v->v[i] == e))
}

function IndexOfVec<T>(v: Vec T, e: T): int;
axiom {:ctor "Vec"} (forall<T> v: Vec T, e: T :: {IndexOfVec(v, e)}
    (var i := IndexOfVec(v,e);
     if (!ContainsVec(v, e)) then i == -1
     else InRangeVec(v, i) && ReadVec(v, i) == e &&
        (forall j: int :: j >= 0 && j < i ==> ReadVec(v, j) != e)));

// This function should stay non-inlined as it guards many quantifiers
// over vectors. It appears important to have this uninterpreted for
// quantifier triggering.
function InRangeVec<T>(v: Vec T, i: int): bool {
    i >= 0 && i < LenVec(v)
}

// Copyright (c) The Diem Core Contributors
// Copyright (c) The Move Contributors
// SPDX-License-Identifier: Apache-2.0

// Boogie model for multisets, based on Boogie arrays. This theory assumes extensional equality for element types.

datatype Multiset<T> {
    Multiset(v: [T]int, l: int)
}

function {:builtin "MapConst"} MapConstMultiset<T>(l: int): [T]int;

function {:inline} EmptyMultiset<T>(): Multiset T {
    Multiset(MapConstMultiset(0), 0)
}

function {:inline} LenMultiset<T>(s: Multiset T): int {
    s->l
}

function {:inline} ExtendMultiset<T>(s: Multiset T, v: T): Multiset T {
    (var len := s->l;
    (var cnt := s->v[v];
    Multiset(s->v[v := (cnt + 1)], len + 1)))
}

// This function returns (s1 - s2). This function assumes that s2 is a subset of s1.
function {:inline} SubtractMultiset<T>(s1: Multiset T, s2: Multiset T): Multiset T {
    (var len1 := s1->l;
    (var len2 := s2->l;
    Multiset((lambda v:T :: s1->v[v]-s2->v[v]), len1-len2)))
}

function {:inline} IsEmptyMultiset<T>(s: Multiset T): bool {
    (s->l == 0) &&
    (forall v: T :: s->v[v] == 0)
}

function {:inline} IsSubsetMultiset<T>(s1: Multiset T, s2: Multiset T): bool {
    (s1->l <= s2->l) &&
    (forall v: T :: s1->v[v] <= s2->v[v])
}

function {:inline} ContainsMultiset<T>(s: Multiset T, v: T): bool {
    s->v[v] > 0
}

// Copyright (c) The Diem Core Contributors
// Copyright (c) The Move Contributors
// SPDX-License-Identifier: Apache-2.0

// Theory for tables.

// v is the SMT array holding the key-value assignment. e is an array which
// independently determines whether a key is valid or not. l is the length.
//
// Note that even though the program cannot reflect over existence of a key,
// we want the specification to be able to do this, so it can express
// verification conditions like "key has been inserted".
datatype Table <K, V> {
    Table(v: [K]V, e: [K]bool, l: int)
}

// Functions for default SMT arrays. For the table values, we don't care and
// use an uninterpreted function.
function DefaultTableArray<K, V>(): [K]V;
function DefaultTableKeyExistsArray<K>(): [K]bool;
axiom DefaultTableKeyExistsArray() == (lambda i: int :: false);

function {:inline} EmptyTable<K, V>(): Table K V {
    Table(DefaultTableArray(), DefaultTableKeyExistsArray(), 0)
}

function {:inline} GetTable<K,V>(t: Table K V, k: K): V {
    // Notice we do not check whether key is in the table. The result is undetermined if it is not.
    t->v[k]
}

function {:inline} LenTable<K,V>(t: Table K V): int {
    t->l
}


function {:inline} ContainsTable<K,V>(t: Table K V, k: K): bool {
    t->e[k]
}

function {:inline} UpdateTable<K,V>(t: Table K V, k: K, v: V): Table K V {
    Table(t->v[k := v], t->e, t->l)
}

function {:inline} AddTable<K,V>(t: Table K V, k: K, v: V): Table K V {
    // This function has an undetermined result if the key is already in the table
    // (all specification functions have this "partial definiteness" behavior). Thus we can
    // just increment the length.
    Table(t->v[k := v], t->e[k := true], t->l + 1)
}

function {:inline} RemoveTable<K,V>(t: Table K V, k: K): Table K V {
    // Similar as above, we only need to consider the case where the key is in the table.
    Table(t->v, t->e[k := false], t->l - 1)
}

axiom {:ctor "Table"} (forall<K,V> t: Table K V :: {LenTable(t)}
    (exists k: K :: {ContainsTable(t, k)} ContainsTable(t, k)) ==> LenTable(t) >= 1
);
// TODO: we might want to encoder a stronger property that the length of table
// must be more than N given a set of N items. Currently we don't see a need here
// and the above axiom seems to be sufficient.
// Copyright Â© Aptos Foundation
// SPDX-License-Identifier: Apache-2.0

// ==================================================================================
// Native object::exists_at


datatype $1_cmp_Ordering {
    $1_cmp_Ordering_Less(),
    $1_cmp_Ordering_Equal(),
    $1_cmp_Ordering_Greater()
}
function $IsValid'$1_cmp_Ordering_Less'(s: $1_cmp_Ordering): bool {
    true
}
function $IsValid'$1_cmp_Ordering_Equal'(s: $1_cmp_Ordering): bool {
    true
}
function $IsValid'$1_cmp_Ordering_Greater'(s: $1_cmp_Ordering): bool {
    true
}
function $IsValid'$1_cmp_Ordering'(s: $1_cmp_Ordering): bool {
    true
}
function {:inline} $IsEqual'$1_cmp_Ordering'(s1: $1_cmp_Ordering, s2: $1_cmp_Ordering): bool {
    s1 == s2
}

function $Arbitrary_value_of'$1_cmp_Ordering'(): $1_cmp_Ordering;

function {:inline} $1_cmp_$compare'bool'(s1: bool, s2: bool): $1_cmp_Ordering {
    if s1 == s2 then $1_cmp_Ordering_Equal()
    else if s1 == true then $1_cmp_Ordering_Greater()
    else
        $1_cmp_Ordering_Less()
}

procedure {:inline 1} $1_cmp_compare'bool'(s1: bool, s2: bool) returns ($ret0: $1_cmp_Ordering)  {
    $ret0 := $1_cmp_$compare'bool'(s1, s2);
    return;
}

function {:inline} $1_cmp_$compare'signer'(s1: $signer, s2: $signer): $1_cmp_Ordering {
    if s1 == s2 then $1_cmp_Ordering_Equal()
    else if s1 is $signer && s2 is $permissioned_signer then $1_cmp_Ordering_Less()
    else if s1 is $permissioned_signer && s2 is $signer then $1_cmp_Ordering_Greater()
    else if s1 is $signer then
        $compare_int(s1 -> $addr, s2 -> $addr)
    else if s1 -> $addr == s2 -> $addr then
        $compare_int(s1 -> $permission_addr, s2 -> $permission_addr)
    else
        $compare_int(s1 -> $addr, s2 -> $addr)
}

procedure {:inline 1} $1_cmp_compare'signer'(s1: $signer, s2: $signer) returns ($ret0: $1_cmp_Ordering)  {
    $ret0 := $1_cmp_$compare'signer'(s1, s2);
    return;
}

function $compare_int(s1: int, s2: int): $1_cmp_Ordering {
    if s1 == s2 then $1_cmp_Ordering_Equal()
    else if s1 > s2 then $1_cmp_Ordering_Greater()
    else $1_cmp_Ordering_Less()
}

function {:inline} $1_cmp_$compare'num'(s1: int, s2: int): $1_cmp_Ordering {
    $compare_int(s1, s2)
}

procedure {:inline 1} $1_cmp_compare'num'(s1: int, s2: int) returns ($ret0: $1_cmp_Ordering)  {
    $ret0 := $compare_int(s1, s2);
    return;
}

function {:inline} $1_cmp_$compare'int'(s1: int, s2: int): $1_cmp_Ordering {
    $compare_int(s1, s2)
}

procedure {:inline 1} $1_cmp_compare'int'(s1: int, s2: int) returns ($ret0: $1_cmp_Ordering)  {
    $ret0 := $compare_int(s1, s2);
    return;
}

function {:inline} $1_cmp_$compare'bv8'(s1: bv8, s2: bv8): $1_cmp_Ordering {
    if s1 == s2 then $1_cmp_Ordering_Equal()
    else if $Gt'Bv8'(s1,s2) then $1_cmp_Ordering_Greater()
    else $1_cmp_Ordering_Less()
}

procedure {:inline 1} $1_cmp_compare'bv8'(s1: bv8, s2: bv8) returns ($ret0: $1_cmp_Ordering)  {
    $ret0 := $1_cmp_$compare'bv8'(s1, s2);
    return;
}

function {:inline} $1_cmp_$compare'bv16'(s1: bv16, s2: bv16): $1_cmp_Ordering {
    if s1 == s2 then $1_cmp_Ordering_Equal()
    else if $Gt'Bv16'(s1,s2) then $1_cmp_Ordering_Greater()
    else $1_cmp_Ordering_Less()
}

procedure {:inline 1} $1_cmp_compare'bv16'(s1: bv16, s2: bv16) returns ($ret0: $1_cmp_Ordering)  {
    $ret0 := $1_cmp_$compare'bv16'(s1, s2);
    return;
}

function {:inline} $1_cmp_$compare'bv32'(s1: bv32, s2: bv32): $1_cmp_Ordering {
    if s1 == s2 then $1_cmp_Ordering_Equal()
    else if $Gt'Bv32'(s1,s2) then $1_cmp_Ordering_Greater()
    else $1_cmp_Ordering_Less()
}

procedure {:inline 1} $1_cmp_compare'bv32'(s1: bv32, s2: bv32) returns ($ret0: $1_cmp_Ordering)  {
    $ret0 := $1_cmp_$compare'bv32'(s1, s2);
    return;
}

function {:inline} $1_cmp_$compare'bv64'(s1: bv64, s2: bv64): $1_cmp_Ordering {
    if s1 == s2 then $1_cmp_Ordering_Equal()
    else if $Gt'Bv64'(s1,s2) then $1_cmp_Ordering_Greater()
    else $1_cmp_Ordering_Less()
}

procedure {:inline 1} $1_cmp_compare'bv64'(s1: bv64, s2: bv64) returns ($ret0: $1_cmp_Ordering)  {
    $ret0 := $1_cmp_$compare'bv64'(s1, s2);
    return;
}

function {:inline} $1_cmp_$compare'bv128'(s1: bv128, s2: bv128): $1_cmp_Ordering {
    if s1 == s2 then $1_cmp_Ordering_Equal()
    else if $Gt'Bv128'(s1,s2) then $1_cmp_Ordering_Greater()
    else $1_cmp_Ordering_Less()
}

procedure {:inline 1} $1_cmp_compare'bv128'(s1: bv128, s2: bv128) returns ($ret0: $1_cmp_Ordering)  {
    $ret0 := $1_cmp_$compare'bv128'(s1, s2);
    return;
}

function {:inline} $1_cmp_$compare'bv256'(s1: bv256, s2: bv256): $1_cmp_Ordering {
    if s1 == s2 then $1_cmp_Ordering_Equal()
    else if $Gt'Bv256'(s1,s2) then $1_cmp_Ordering_Greater()
    else $1_cmp_Ordering_Less()
}

procedure {:inline 1} $1_cmp_compare'bv256'(s1: bv256, s2: bv256) returns ($ret0: $1_cmp_Ordering)  {
    $ret0 := $1_cmp_$compare'bv256'(s1, s2);
    return;
}function {:inline} $1_cmp_$compare'address'(s1: int, s2: int): $1_cmp_Ordering {
    $compare_int(s1, s2)
}


procedure {:inline 1} $1_cmp_compare'address'(s1: int, s2: int) returns ($ret0: $1_cmp_Ordering)  {
    $ret0 := $compare_int(s1, s2);
    return;
}function {:inline} $1_cmp_$compare'u128'(s1: int, s2: int): $1_cmp_Ordering {
    $compare_int(s1, s2)
}


procedure {:inline 1} $1_cmp_compare'u128'(s1: int, s2: int) returns ($ret0: $1_cmp_Ordering)  {
    $ret0 := $compare_int(s1, s2);
    return;
}function {:inline} $1_cmp_$compare'u256'(s1: int, s2: int): $1_cmp_Ordering {
    $compare_int(s1, s2)
}


procedure {:inline 1} $1_cmp_compare'u256'(s1: int, s2: int) returns ($ret0: $1_cmp_Ordering)  {
    $ret0 := $compare_int(s1, s2);
    return;
}function {:inline} $1_cmp_$compare'u64'(s1: int, s2: int): $1_cmp_Ordering {
    $compare_int(s1, s2)
}


procedure {:inline 1} $1_cmp_compare'u64'(s1: int, s2: int) returns ($ret0: $1_cmp_Ordering)  {
    $ret0 := $compare_int(s1, s2);
    return;
}function {:inline} $1_cmp_$compare'u8'(s1: int, s2: int): $1_cmp_Ordering {
    $compare_int(s1, s2)
}


procedure {:inline 1} $1_cmp_compare'u8'(s1: int, s2: int) returns ($ret0: $1_cmp_Ordering)  {
    $ret0 := $compare_int(s1, s2);
    return;
}




// ==================================================================================
// Intrinsic implementation of aggregator_v2 for element type `u128`


datatype $1_aggregator_v2_Aggregator'u128' {
    $1_aggregator_v2_Aggregator'u128'($value: int, $max_value: int)
}
function {:inline} $Update'$1_aggregator_v2_Aggregator'u128''_value(s: $1_aggregator_v2_Aggregator'u128', x: int): $1_aggregator_v2_Aggregator'u128' {
    $1_aggregator_v2_Aggregator'u128'(x, s->$max_value)
}
function {:inline} $Update'$1_aggregator_v2_Aggregator'u128''_max_value(s: $1_aggregator_v2_Aggregator'u128', x: int): $1_aggregator_v2_Aggregator'u128' {
    $1_aggregator_v2_Aggregator'u128'(s->$value, x)
}
function $IsValid'$1_aggregator_v2_Aggregator'u128''(s: $1_aggregator_v2_Aggregator'u128'): bool {
    $IsValid'u128'(s->$value)
      && $IsValid'u128'(s->$max_value)
}
function {:inline} $IsEqual'$1_aggregator_v2_Aggregator'u128''(s1: $1_aggregator_v2_Aggregator'u128', s2: $1_aggregator_v2_Aggregator'u128'): bool {
    $IsEqual'u128'(s1->$value, s2->$value)
      && $IsEqual'u128'(s1->$max_value, s2->$max_value)
}

procedure {:inline 1} $1_aggregator_v2_create_unbounded_aggregator'u128'() returns (res: $1_aggregator_v2_Aggregator'u128')
{
    res := $1_aggregator_v2_Aggregator'u128'(0, $MAX_U128);
    }


    procedure {:inline 1} $1_aggregator_v2_create_aggregator'u128'($max_value: int) returns (res: $1_aggregator_v2_Aggregator'u128')
    {
        res := $1_aggregator_v2_Aggregator'u128'(0, $max_value);
        }


    procedure {:inline 1} $1_aggregator_v2_try_add'u128'(aggregator: $Mutation ($1_aggregator_v2_Aggregator'u128'), value: int) returns (res: bool, aggregator_updated: $Mutation ($1_aggregator_v2_Aggregator'u128'))
    {
        if ($Dereference(aggregator)->$max_value < value + $Dereference(aggregator)->$value) {
            res := false;
            aggregator_updated:= aggregator;
        } else {
            res := true;
            aggregator_updated:= $UpdateMutation(aggregator, $1_aggregator_v2_Aggregator'u128'(value + $Dereference(aggregator)->$value, $Dereference(aggregator)->$max_value));
        }
        }

    procedure {:inline 1} $1_aggregator_v2_try_sub'u128'(aggregator: $Mutation ($1_aggregator_v2_Aggregator'u128'), value: int) returns (res: bool, aggregator_updated: $Mutation ($1_aggregator_v2_Aggregator'u128'))
    {
        if ($Dereference(aggregator)->$value < value) {
            res := false;
            aggregator_updated:= aggregator;
            return;
        } else {
            res := true;
            aggregator_updated:= $UpdateMutation(aggregator, $1_aggregator_v2_Aggregator'u128'($Dereference(aggregator)->$value - value, $Dereference(aggregator)->$max_value));
            return;
        }
        }

    procedure {:inline 1} $1_aggregator_v2_add'u128'(aggregator: $Mutation ($1_aggregator_v2_Aggregator'u128'), value: int) returns (aggregator_updated: $Mutation ($1_aggregator_v2_Aggregator'u128'))
    {
       var try_result: bool;
       var try_aggregator: $Mutation $1_aggregator_v2_Aggregator'u128';
       call try_result, try_aggregator := $1_aggregator_v2_try_add'u128'(aggregator, value);
       if (!try_result) {
           call $ExecFailureAbort();
           return;
       }
       aggregator_updated := try_aggregator;
       return;
       }

   procedure {:inline 1} $1_aggregator_v2_sub'u128'(aggregator: $Mutation ($1_aggregator_v2_Aggregator'u128'), value: int) returns (aggregator_updated: $Mutation ($1_aggregator_v2_Aggregator'u128'))
   {
       var try_result: bool;
          var try_aggregator: $Mutation $1_aggregator_v2_Aggregator'u128';
          call try_result, try_aggregator := $1_aggregator_v2_try_sub'u128'(aggregator, value);
          if (!try_result) {
              call $ExecFailureAbort();
              return;
          }
          aggregator_updated := try_aggregator;
         return;
       }

   procedure {:inline 1} $1_aggregator_v2_read'u128'(aggregator: $1_aggregator_v2_Aggregator'u128') returns (res: int) {
       res := aggregator->$value;
       }

   procedure {:inline 1} $1_aggregator_v2_max_value'u128'(aggregator: $1_aggregator_v2_Aggregator'u128') returns (res: int) {
       res := aggregator->$max_value;
       }

   procedure {:inline 1} $1_aggregator_v2_is_at_least_impl'u128'(aggregator: $1_aggregator_v2_Aggregator'u128', min_amount: int) returns (res: bool)
   {
       res := aggregator->$value >= min_amount;
          return;
       }

function {:inline} $1_aggregator_v2_spec_get_value'u128'(s: $1_aggregator_v2_Aggregator'u128'): int {
    s->$value
}

function {:inline} $1_aggregator_v2_spec_get_max_value'u128'(s: $1_aggregator_v2_Aggregator'u128'): int {
    s->$max_value
}

function {:inline} $1_aggregator_v2_$read'u128'(s: $1_aggregator_v2_Aggregator'u128'): int {
    s->$value
}

function {:inline} $1_aggregator_v2_$is_at_least_impl'u128'(aggregator: $1_aggregator_v2_Aggregator'u128', min_amount: int): bool
   {
       aggregator->$value >= min_amount
   }
function {:inline} $1_cmp_$compare'$1_aggregator_v2_Aggregator'u128''(s1: $1_aggregator_v2_Aggregator'u128', s2: $1_aggregator_v2_Aggregator'u128'): $1_cmp_Ordering {
    $Arbitrary_value_of'$1_cmp_Ordering'()
}

procedure {:inline 1} $1_cmp_compare'$1_aggregator_v2_Aggregator'u128''(s1: $1_aggregator_v2_Aggregator'u128', s2: $1_aggregator_v2_Aggregator'u128') returns ($ret0: $1_cmp_Ordering)  {
    $ret0 := $1_cmp_$compare'$1_aggregator_v2_Aggregator'u128''(s1, s2);
    return;
}// ==================================================================================
// Intrinsic implementation of aggregator_v2 for element type `u64`


datatype $1_aggregator_v2_Aggregator'u64' {
    $1_aggregator_v2_Aggregator'u64'($value: int, $max_value: int)
}
function {:inline} $Update'$1_aggregator_v2_Aggregator'u64''_value(s: $1_aggregator_v2_Aggregator'u64', x: int): $1_aggregator_v2_Aggregator'u64' {
    $1_aggregator_v2_Aggregator'u64'(x, s->$max_value)
}
function {:inline} $Update'$1_aggregator_v2_Aggregator'u64''_max_value(s: $1_aggregator_v2_Aggregator'u64', x: int): $1_aggregator_v2_Aggregator'u64' {
    $1_aggregator_v2_Aggregator'u64'(s->$value, x)
}
function $IsValid'$1_aggregator_v2_Aggregator'u64''(s: $1_aggregator_v2_Aggregator'u64'): bool {
    $IsValid'u64'(s->$value)
      && $IsValid'u64'(s->$max_value)
}
function {:inline} $IsEqual'$1_aggregator_v2_Aggregator'u64''(s1: $1_aggregator_v2_Aggregator'u64', s2: $1_aggregator_v2_Aggregator'u64'): bool {
    $IsEqual'u64'(s1->$value, s2->$value)
      && $IsEqual'u64'(s1->$max_value, s2->$max_value)
}

procedure {:inline 1} $1_aggregator_v2_create_unbounded_aggregator'u64'() returns (res: $1_aggregator_v2_Aggregator'u64')
{
    res := $1_aggregator_v2_Aggregator'u64'(0, $MAX_U64);
    }


    procedure {:inline 1} $1_aggregator_v2_create_aggregator'u64'($max_value: int) returns (res: $1_aggregator_v2_Aggregator'u64')
    {
        res := $1_aggregator_v2_Aggregator'u64'(0, $max_value);
        }


    procedure {:inline 1} $1_aggregator_v2_try_add'u64'(aggregator: $Mutation ($1_aggregator_v2_Aggregator'u64'), value: int) returns (res: bool, aggregator_updated: $Mutation ($1_aggregator_v2_Aggregator'u64'))
    {
        if ($Dereference(aggregator)->$max_value < value + $Dereference(aggregator)->$value) {
            res := false;
            aggregator_updated:= aggregator;
        } else {
            res := true;
            aggregator_updated:= $UpdateMutation(aggregator, $1_aggregator_v2_Aggregator'u64'(value + $Dereference(aggregator)->$value, $Dereference(aggregator)->$max_value));
        }
        }

    procedure {:inline 1} $1_aggregator_v2_try_sub'u64'(aggregator: $Mutation ($1_aggregator_v2_Aggregator'u64'), value: int) returns (res: bool, aggregator_updated: $Mutation ($1_aggregator_v2_Aggregator'u64'))
    {
        if ($Dereference(aggregator)->$value < value) {
            res := false;
            aggregator_updated:= aggregator;
            return;
        } else {
            res := true;
            aggregator_updated:= $UpdateMutation(aggregator, $1_aggregator_v2_Aggregator'u64'($Dereference(aggregator)->$value - value, $Dereference(aggregator)->$max_value));
            return;
        }
        }

    procedure {:inline 1} $1_aggregator_v2_add'u64'(aggregator: $Mutation ($1_aggregator_v2_Aggregator'u64'), value: int) returns (aggregator_updated: $Mutation ($1_aggregator_v2_Aggregator'u64'))
    {
       var try_result: bool;
       var try_aggregator: $Mutation $1_aggregator_v2_Aggregator'u64';
       call try_result, try_aggregator := $1_aggregator_v2_try_add'u64'(aggregator, value);
       if (!try_result) {
           call $ExecFailureAbort();
           return;
       }
       aggregator_updated := try_aggregator;
       return;
       }

   procedure {:inline 1} $1_aggregator_v2_sub'u64'(aggregator: $Mutation ($1_aggregator_v2_Aggregator'u64'), value: int) returns (aggregator_updated: $Mutation ($1_aggregator_v2_Aggregator'u64'))
   {
       var try_result: bool;
          var try_aggregator: $Mutation $1_aggregator_v2_Aggregator'u64';
          call try_result, try_aggregator := $1_aggregator_v2_try_sub'u64'(aggregator, value);
          if (!try_result) {
              call $ExecFailureAbort();
              return;
          }
          aggregator_updated := try_aggregator;
         return;
       }

   procedure {:inline 1} $1_aggregator_v2_read'u64'(aggregator: $1_aggregator_v2_Aggregator'u64') returns (res: int) {
       res := aggregator->$value;
       }

   procedure {:inline 1} $1_aggregator_v2_max_value'u64'(aggregator: $1_aggregator_v2_Aggregator'u64') returns (res: int) {
       res := aggregator->$max_value;
       }

   procedure {:inline 1} $1_aggregator_v2_is_at_least_impl'u64'(aggregator: $1_aggregator_v2_Aggregator'u64', min_amount: int) returns (res: bool)
   {
       res := aggregator->$value >= min_amount;
          return;
       }

function {:inline} $1_aggregator_v2_spec_get_value'u64'(s: $1_aggregator_v2_Aggregator'u64'): int {
    s->$value
}

function {:inline} $1_aggregator_v2_spec_get_max_value'u64'(s: $1_aggregator_v2_Aggregator'u64'): int {
    s->$max_value
}

function {:inline} $1_aggregator_v2_$read'u64'(s: $1_aggregator_v2_Aggregator'u64'): int {
    s->$value
}

function {:inline} $1_aggregator_v2_$is_at_least_impl'u64'(aggregator: $1_aggregator_v2_Aggregator'u64', min_amount: int): bool
   {
       aggregator->$value >= min_amount
   }
function {:inline} $1_cmp_$compare'$1_aggregator_v2_Aggregator'u64''(s1: $1_aggregator_v2_Aggregator'u64', s2: $1_aggregator_v2_Aggregator'u64'): $1_cmp_Ordering {
    $Arbitrary_value_of'$1_cmp_Ordering'()
}

procedure {:inline 1} $1_cmp_compare'$1_aggregator_v2_Aggregator'u64''(s1: $1_aggregator_v2_Aggregator'u64', s2: $1_aggregator_v2_Aggregator'u64') returns ($ret0: $1_cmp_Ordering)  {
    $ret0 := $1_cmp_$compare'$1_aggregator_v2_Aggregator'u64''(s1, s2);
    return;
}

// ==================================================================================
// Intrinsic implementation of aggregator and aggregator factory

datatype $1_aggregator_Aggregator {
    $1_aggregator_Aggregator($handle: int, $key: int, $limit: int, $val: int)
}
function {:inline} $Update'$1_aggregator_Aggregator'_handle(s: $1_aggregator_Aggregator, x: int): $1_aggregator_Aggregator {
    $1_aggregator_Aggregator(x, s->$key, s->$limit, s->$val)
}
function {:inline} $Update'$1_aggregator_Aggregator'_key(s: $1_aggregator_Aggregator, x: int): $1_aggregator_Aggregator {
    $1_aggregator_Aggregator(s->$handle, x, s->$limit, s->$val)
}
function {:inline} $Update'$1_aggregator_Aggregator'_limit(s: $1_aggregator_Aggregator, x: int): $1_aggregator_Aggregator {
    $1_aggregator_Aggregator(s->$handle, s->$key, x, s->$val)
}
function {:inline} $Update'$1_aggregator_Aggregator'_val(s: $1_aggregator_Aggregator, x: int): $1_aggregator_Aggregator {
    $1_aggregator_Aggregator(s->$handle, s->$key, s->$limit, x)
}
function $IsValid'$1_aggregator_Aggregator'(s: $1_aggregator_Aggregator): bool {
    $IsValid'address'(s->$handle)
      && $IsValid'address'(s->$key)
      && $IsValid'u128'(s->$limit)
      && $IsValid'u128'(s->$val)
}
function {:inline} $IsEqual'$1_aggregator_Aggregator'(s1: $1_aggregator_Aggregator, s2: $1_aggregator_Aggregator): bool {
    s1 == s2
}
function {:inline} $1_aggregator_spec_get_limit(s: $1_aggregator_Aggregator): int {
    s->$limit
}
function {:inline} $1_aggregator_limit(s: $1_aggregator_Aggregator): int {
    s->$limit
}
procedure {:inline 1} $1_aggregator_limit(s: $1_aggregator_Aggregator) returns (res: int) {
    res := s->$limit;
    return;
}
function {:inline} $1_aggregator_spec_get_handle(s: $1_aggregator_Aggregator): int {
    s->$handle
}
function {:inline} $1_aggregator_spec_get_key(s: $1_aggregator_Aggregator): int {
    s->$key
}
function {:inline} $1_aggregator_spec_get_val(s: $1_aggregator_Aggregator): int {
    s->$val
}

function $1_aggregator_spec_read(agg: $1_aggregator_Aggregator): int {
    $1_aggregator_spec_get_val(agg)
}

function $1_aggregator_spec_aggregator_set_val(agg: $1_aggregator_Aggregator, val: int): $1_aggregator_Aggregator {
    $Update'$1_aggregator_Aggregator'_val(agg, val)
}

function $1_aggregator_spec_aggregator_get_val(agg: $1_aggregator_Aggregator): int {
    $1_aggregator_spec_get_val(agg)
}

function $1_aggregator_factory_spec_new_aggregator(limit: int) : $1_aggregator_Aggregator;

axiom (forall limit: int :: {$1_aggregator_factory_spec_new_aggregator(limit)}
    (var agg := $1_aggregator_factory_spec_new_aggregator(limit);
     $1_aggregator_spec_get_limit(agg) == limit));

axiom (forall limit: int :: {$1_aggregator_factory_spec_new_aggregator(limit)}
     (var agg := $1_aggregator_factory_spec_new_aggregator(limit);
     $1_aggregator_spec_aggregator_get_val(agg) == 0));


function {:inline} $1_cmp_$compare'$1_aggregator_Aggregator'(s1: $1_aggregator_Aggregator, s2: $1_aggregator_Aggregator): $1_cmp_Ordering {
    $Arbitrary_value_of'$1_cmp_Ordering'()
}

procedure {:inline 1} $1_cmp_compare'$1_aggregator_Aggregator'(s1: $1_aggregator_Aggregator, s2: $1_aggregator_Aggregator) returns ($ret0: $1_cmp_Ordering)  {
    $ret0 := $1_cmp_$compare'$1_aggregator_Aggregator'(s1, s2);
    return;
}


// ==================================================================================
// Native for function_info

procedure $1_function_info_is_identifier(s: Vec int) returns (res: bool);



// Uninterpreted function for all types


function $Arbitrary_value_of'#0'(): #0;



function $Arbitrary_value_of'$1_account_Account'(): $1_account_Account;



function $Arbitrary_value_of'$1_account_AccountPermission'(): $1_account_AccountPermission;



function $Arbitrary_value_of'$1_account_CapabilityOffer'$1_account_RotationCapability''(): $1_account_CapabilityOffer'$1_account_RotationCapability';



function $Arbitrary_value_of'$1_account_CapabilityOffer'$1_account_SignerCapability''(): $1_account_CapabilityOffer'$1_account_SignerCapability';



function $Arbitrary_value_of'$1_account_CoinRegister'(): $1_account_CoinRegister;



function $Arbitrary_value_of'$1_account_CoinRegisterEvent'(): $1_account_CoinRegisterEvent;



function $Arbitrary_value_of'$1_account_SignerCapability'(): $1_account_SignerCapability;



function $Arbitrary_value_of'$1_aggregator_Aggregator'(): $1_aggregator_Aggregator;



function $Arbitrary_value_of'$1_aggregator_v2_Aggregator'u128''(): $1_aggregator_v2_Aggregator'u128';



function $Arbitrary_value_of'$1_aggregator_v2_Aggregator'u64''(): $1_aggregator_v2_Aggregator'u64';



function $Arbitrary_value_of'$1_aptos_coin_AptosCoin'(): $1_aptos_coin_AptosCoin;



function $Arbitrary_value_of'$1_chain_status_GenesisEndMarker'(): $1_chain_status_GenesisEndMarker;



function $Arbitrary_value_of'$1_coin_Coin'#0''(): $1_coin_Coin'#0';



function $Arbitrary_value_of'$1_coin_Coin'$1_aptos_coin_AptosCoin''(): $1_coin_Coin'$1_aptos_coin_AptosCoin';



function $Arbitrary_value_of'$1_coin_CoinConversionMap'(): $1_coin_CoinConversionMap;



function $Arbitrary_value_of'$1_coin_CoinInfo'#0''(): $1_coin_CoinInfo'#0';



function $Arbitrary_value_of'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''(): $1_coin_CoinInfo'$1_aptos_coin_AptosCoin';



function $Arbitrary_value_of'$1_coin_CoinStore'#0''(): $1_coin_CoinStore'#0';



function $Arbitrary_value_of'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''(): $1_coin_CoinStore'$1_aptos_coin_AptosCoin';



function $Arbitrary_value_of'$1_coin_DepositEvent'(): $1_coin_DepositEvent;



function $Arbitrary_value_of'$1_coin_Ghost$aggregate_supply'#0''(): $1_coin_Ghost$aggregate_supply'#0';



function $Arbitrary_value_of'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''(): $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin';



function $Arbitrary_value_of'$1_coin_Ghost$supply'#0''(): $1_coin_Ghost$supply'#0';



function $Arbitrary_value_of'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''(): $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin';



function $Arbitrary_value_of'$1_coin_PairCreation'(): $1_coin_PairCreation;



function $Arbitrary_value_of'$1_coin_PairedCoinType'(): $1_coin_PairedCoinType;



function $Arbitrary_value_of'$1_coin_PairedFungibleAssetRefs'(): $1_coin_PairedFungibleAssetRefs;



function $Arbitrary_value_of'$1_coin_WithdrawEvent'(): $1_coin_WithdrawEvent;



function $Arbitrary_value_of'$1_dispatchable_fungible_asset_TransferRefStore'(): $1_dispatchable_fungible_asset_TransferRefStore;



function $Arbitrary_value_of'$1_event_EventHandle'$1_account_CoinRegisterEvent''(): $1_event_EventHandle'$1_account_CoinRegisterEvent';



function $Arbitrary_value_of'$1_event_EventHandle'$1_account_KeyRotationEvent''(): $1_event_EventHandle'$1_account_KeyRotationEvent';



function $Arbitrary_value_of'$1_event_EventHandle'$1_coin_DepositEvent''(): $1_event_EventHandle'$1_coin_DepositEvent';



function $Arbitrary_value_of'$1_event_EventHandle'$1_coin_WithdrawEvent''(): $1_event_EventHandle'$1_coin_WithdrawEvent';



function $Arbitrary_value_of'$1_event_EventHandle'$1_object_TransferEvent''(): $1_event_EventHandle'$1_object_TransferEvent';



function $Arbitrary_value_of'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(): $1_event_EventHandle'$1_reconfiguration_NewEpochEvent';



function $Arbitrary_value_of'$1_features_Features'(): $1_features_Features;



function $Arbitrary_value_of'$1_function_info_FunctionInfo'(): $1_function_info_FunctionInfo;



function $Arbitrary_value_of'$1_fungible_asset_BurnRef'(): $1_fungible_asset_BurnRef;



function $Arbitrary_value_of'$1_fungible_asset_ConcurrentFungibleBalance'(): $1_fungible_asset_ConcurrentFungibleBalance;



function $Arbitrary_value_of'$1_fungible_asset_ConcurrentSupply'(): $1_fungible_asset_ConcurrentSupply;



function $Arbitrary_value_of'$1_fungible_asset_Deposit'(): $1_fungible_asset_Deposit;



function $Arbitrary_value_of'$1_fungible_asset_DispatchFunctionStore'(): $1_fungible_asset_DispatchFunctionStore;



function $Arbitrary_value_of'$1_fungible_asset_FungibleAsset'(): $1_fungible_asset_FungibleAsset;



function $Arbitrary_value_of'$1_fungible_asset_FungibleStore'(): $1_fungible_asset_FungibleStore;



function $Arbitrary_value_of'$1_fungible_asset_Metadata'(): $1_fungible_asset_Metadata;



function $Arbitrary_value_of'$1_fungible_asset_MintRef'(): $1_fungible_asset_MintRef;



function $Arbitrary_value_of'$1_fungible_asset_Supply'(): $1_fungible_asset_Supply;



function $Arbitrary_value_of'$1_fungible_asset_TransferRef'(): $1_fungible_asset_TransferRef;



function $Arbitrary_value_of'$1_fungible_asset_Untransferable'(): $1_fungible_asset_Untransferable;



function $Arbitrary_value_of'$1_fungible_asset_Withdraw'(): $1_fungible_asset_Withdraw;



function $Arbitrary_value_of'$1_fungible_asset_WithdrawPermission'(): $1_fungible_asset_WithdrawPermission;



function $Arbitrary_value_of'$1_guid_GUID'(): $1_guid_GUID;



function $Arbitrary_value_of'$1_guid_ID'(): $1_guid_ID;



function $Arbitrary_value_of'$1_object_ConstructorRef'(): $1_object_ConstructorRef;



function $Arbitrary_value_of'$1_object_DeriveRef'(): $1_object_DeriveRef;



function $Arbitrary_value_of'$1_object_Object'$1_fungible_asset_FungibleStore''(): $1_object_Object'$1_fungible_asset_FungibleStore';



function $Arbitrary_value_of'$1_object_Object'$1_fungible_asset_Metadata''(): $1_object_Object'$1_fungible_asset_Metadata';



function $Arbitrary_value_of'$1_object_ObjectCore'(): $1_object_ObjectCore;



function $Arbitrary_value_of'$1_object_TombStone'(): $1_object_TombStone;



function $Arbitrary_value_of'$1_object_Transfer'(): $1_object_Transfer;



function $Arbitrary_value_of'$1_object_TransferEvent'(): $1_object_TransferEvent;



function $Arbitrary_value_of'$1_object_TransferPermission'(): $1_object_TransferPermission;



function $Arbitrary_value_of'$1_object_TransferRef'(): $1_object_TransferRef;



function $Arbitrary_value_of'$1_object_Untransferable'(): $1_object_Untransferable;



function $Arbitrary_value_of'$1_option_Option'$1_aggregator_Aggregator''(): $1_option_Option'$1_aggregator_Aggregator';



function $Arbitrary_value_of'$1_option_Option'$1_function_info_FunctionInfo''(): $1_option_Option'$1_function_info_FunctionInfo';



function $Arbitrary_value_of'$1_option_Option'$1_fungible_asset_BurnRef''(): $1_option_Option'$1_fungible_asset_BurnRef';



function $Arbitrary_value_of'$1_option_Option'$1_fungible_asset_MintRef''(): $1_option_Option'$1_fungible_asset_MintRef';



function $Arbitrary_value_of'$1_option_Option'$1_fungible_asset_TransferRef''(): $1_option_Option'$1_fungible_asset_TransferRef';



function $Arbitrary_value_of'$1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'''(): $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'';



function $Arbitrary_value_of'$1_option_Option'$1_optional_aggregator_Integer''(): $1_option_Option'$1_optional_aggregator_Integer';



function $Arbitrary_value_of'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(): $1_option_Option'$1_optional_aggregator_OptionalAggregator';



function $Arbitrary_value_of'$1_option_Option'address''(): $1_option_Option'address';



function $Arbitrary_value_of'$1_option_Option'u128''(): $1_option_Option'u128';



function $Arbitrary_value_of'$1_optional_aggregator_Integer'(): $1_optional_aggregator_Integer;



function $Arbitrary_value_of'$1_optional_aggregator_OptionalAggregator'(): $1_optional_aggregator_OptionalAggregator;



function $Arbitrary_value_of'$1_paymentv1_EscrowCapability'(): $1_paymentv1_EscrowCapability;



function $Arbitrary_value_of'$1_paymentv1_PaymentProcessed'(): $1_paymentv1_PaymentProcessed;



function $Arbitrary_value_of'$1_paymentv1_TransferClaimed'(): $1_paymentv1_TransferClaimed;



function $Arbitrary_value_of'$1_paymentv1_TransferLink'#0''(): $1_paymentv1_TransferLink'#0';



function $Arbitrary_value_of'$1_paymentv1_TransferLinkCreated'(): $1_paymentv1_TransferLinkCreated;



function $Arbitrary_value_of'$1_paymentv1_TransferLinkStore'#0''(): $1_paymentv1_TransferLinkStore'#0';



function $Arbitrary_value_of'$1_permissioned_signer_GrantedPermissionHandles'(): $1_permissioned_signer_GrantedPermissionHandles;



function $Arbitrary_value_of'$1_permissioned_signer_PermissionStorage'(): $1_permissioned_signer_PermissionStorage;



function $Arbitrary_value_of'$1_primary_fungible_store_DeriveRefPod'(): $1_primary_fungible_store_DeriveRefPod;



function $Arbitrary_value_of'$1_reconfiguration_Configuration'(): $1_reconfiguration_Configuration;



function $Arbitrary_value_of'$1_string_String'(): $1_string_String;



function $Arbitrary_value_of'$1_supported_tokens_SupportedTokens'(): $1_supported_tokens_SupportedTokens;



function $Arbitrary_value_of'$1_timestamp_CurrentTimeMicroseconds'(): $1_timestamp_CurrentTimeMicroseconds;



function $Arbitrary_value_of'$1_type_info_TypeInfo'(): $1_type_info_TypeInfo;



function $Arbitrary_value_of'signer'(): $signer;



function $Arbitrary_value_of'$1_table_Table'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata'''(): Table int ($1_object_Object'$1_fungible_asset_Metadata');



function $Arbitrary_value_of'$1_table_Table'$1_string_String_$1_paymentv1_TransferLink'#0'''(): Table int ($1_paymentv1_TransferLink'#0');



function $Arbitrary_value_of'$1_big_ordered_map_BigOrderedMap'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission''(): Table int ($1_permissioned_signer_StoredPermission);



function $Arbitrary_value_of'$1_table_Table'$1_type_info_TypeInfo_bool''(): Table int (bool);



function $Arbitrary_value_of'vec'#0''(): Vec (#0);



function $Arbitrary_value_of'vec'$1_aggregator_Aggregator''(): Vec ($1_aggregator_Aggregator);



function $Arbitrary_value_of'vec'$1_aptos_coin_AptosCoin''(): Vec ($1_aptos_coin_AptosCoin);



function $Arbitrary_value_of'vec'$1_function_info_FunctionInfo''(): Vec ($1_function_info_FunctionInfo);



function $Arbitrary_value_of'vec'$1_fungible_asset_BurnRef''(): Vec ($1_fungible_asset_BurnRef);



function $Arbitrary_value_of'vec'$1_fungible_asset_FungibleStore''(): Vec ($1_fungible_asset_FungibleStore);



function $Arbitrary_value_of'vec'$1_fungible_asset_MintRef''(): Vec ($1_fungible_asset_MintRef);



function $Arbitrary_value_of'vec'$1_fungible_asset_TransferRef''(): Vec ($1_fungible_asset_TransferRef);



function $Arbitrary_value_of'vec'$1_object_Object'$1_fungible_asset_Metadata'''(): Vec ($1_object_Object'$1_fungible_asset_Metadata');



function $Arbitrary_value_of'vec'$1_optional_aggregator_Integer''(): Vec ($1_optional_aggregator_Integer);



function $Arbitrary_value_of'vec'$1_optional_aggregator_OptionalAggregator''(): Vec ($1_optional_aggregator_OptionalAggregator);



function $Arbitrary_value_of'vec'address''(): Vec (int);



function $Arbitrary_value_of'vec'u128''(): Vec (int);



function $Arbitrary_value_of'vec'u8''(): Vec (int);



function $Arbitrary_value_of'bool'(): bool;



function $Arbitrary_value_of'address'(): int;



function $Arbitrary_value_of'u128'(): int;



function $Arbitrary_value_of'u256'(): int;



function $Arbitrary_value_of'u64'(): int;



function $Arbitrary_value_of'u8'(): int;



function $Arbitrary_value_of'vec'bv128''(): Vec (bv128);



function $Arbitrary_value_of'vec'bv8''(): Vec (bv8);



function $Arbitrary_value_of'bv128'(): bv128;



function $Arbitrary_value_of'bv256'(): bv256;



function $Arbitrary_value_of'bv64'(): bv64;



function $Arbitrary_value_of'bv8'(): bv8;




// ============================================================================================
// Primitive Types

const $MAX_U8: int;
axiom $MAX_U8 == 255;
const $MAX_U16: int;
axiom $MAX_U16 == 65535;
const $MAX_U32: int;
axiom $MAX_U32 == 4294967295;
const $MAX_U64: int;
axiom $MAX_U64 == 18446744073709551615;
const $MAX_U128: int;
axiom $MAX_U128 == 340282366920938463463374607431768211455;
const $MAX_U256: int;
axiom $MAX_U256 == 115792089237316195423570985008687907853269984665640564039457584007913129639935;

// Templates for bitvector operations

function {:bvbuiltin "bvand"} $And'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvor"} $Or'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvxor"} $Xor'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvadd"} $Add'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvsub"} $Sub'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvmul"} $Mul'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvudiv"} $Div'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvurem"} $Mod'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvshl"} $Shl'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvlshr"} $Shr'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvult"} $Lt'Bv8'(bv8,bv8) returns(bool);
function {:bvbuiltin "bvule"} $Le'Bv8'(bv8,bv8) returns(bool);
function {:bvbuiltin "bvugt"} $Gt'Bv8'(bv8,bv8) returns(bool);
function {:bvbuiltin "bvuge"} $Ge'Bv8'(bv8,bv8) returns(bool);

procedure {:inline 1} $AddBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if ($Lt'Bv8'($Add'Bv8'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Add'Bv8'(src1, src2);
}

procedure {:inline 1} $AddBv8_unchecked(src1: bv8, src2: bv8) returns (dst: bv8)
{
    dst := $Add'Bv8'(src1, src2);
}

procedure {:inline 1} $SubBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if ($Lt'Bv8'(src1, src2)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Sub'Bv8'(src1, src2);
}

procedure {:inline 1} $MulBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if ($Lt'Bv8'($Mul'Bv8'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mul'Bv8'(src1, src2);
}

procedure {:inline 1} $DivBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if (src2 == 0bv8) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Div'Bv8'(src1, src2);
}

procedure {:inline 1} $ModBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if (src2 == 0bv8) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mod'Bv8'(src1, src2);
}

procedure {:inline 1} $AndBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    dst := $And'Bv8'(src1,src2);
}

procedure {:inline 1} $OrBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    dst := $Or'Bv8'(src1,src2);
}

procedure {:inline 1} $XorBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    dst := $Xor'Bv8'(src1,src2);
}

procedure {:inline 1} $LtBv8(src1: bv8, src2: bv8) returns (dst: bool)
{
    dst := $Lt'Bv8'(src1,src2);
}

procedure {:inline 1} $LeBv8(src1: bv8, src2: bv8) returns (dst: bool)
{
    dst := $Le'Bv8'(src1,src2);
}

procedure {:inline 1} $GtBv8(src1: bv8, src2: bv8) returns (dst: bool)
{
    dst := $Gt'Bv8'(src1,src2);
}

procedure {:inline 1} $GeBv8(src1: bv8, src2: bv8) returns (dst: bool)
{
    dst := $Ge'Bv8'(src1,src2);
}

function $IsValid'bv8'(v: bv8): bool {
  $Ge'Bv8'(v,0bv8) && $Le'Bv8'(v,255bv8)
}

function {:inline} $IsEqual'bv8'(x: bv8, y: bv8): bool {
    x == y
}

procedure {:inline 1} $int2bv8(src: int) returns (dst: bv8)
{
    if (src > 255) {
        call $ExecFailureAbort();
        return;
    }
    dst := $int2bv.8(src);
}

procedure {:inline 1} $bv2int8(src: bv8) returns (dst: int)
{
    dst := $bv2int.8(src);
}

function {:builtin "(_ int2bv 8)"} $int2bv.8(i: int) returns (bv8);
function {:builtin "bv2nat"} $bv2int.8(i: bv8) returns (int);

function {:bvbuiltin "bvand"} $And'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvor"} $Or'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvxor"} $Xor'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvadd"} $Add'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvsub"} $Sub'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvmul"} $Mul'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvudiv"} $Div'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvurem"} $Mod'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvshl"} $Shl'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvlshr"} $Shr'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvult"} $Lt'Bv16'(bv16,bv16) returns(bool);
function {:bvbuiltin "bvule"} $Le'Bv16'(bv16,bv16) returns(bool);
function {:bvbuiltin "bvugt"} $Gt'Bv16'(bv16,bv16) returns(bool);
function {:bvbuiltin "bvuge"} $Ge'Bv16'(bv16,bv16) returns(bool);

procedure {:inline 1} $AddBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if ($Lt'Bv16'($Add'Bv16'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Add'Bv16'(src1, src2);
}

procedure {:inline 1} $AddBv16_unchecked(src1: bv16, src2: bv16) returns (dst: bv16)
{
    dst := $Add'Bv16'(src1, src2);
}

procedure {:inline 1} $SubBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if ($Lt'Bv16'(src1, src2)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Sub'Bv16'(src1, src2);
}

procedure {:inline 1} $MulBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if ($Lt'Bv16'($Mul'Bv16'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mul'Bv16'(src1, src2);
}

procedure {:inline 1} $DivBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if (src2 == 0bv16) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Div'Bv16'(src1, src2);
}

procedure {:inline 1} $ModBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if (src2 == 0bv16) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mod'Bv16'(src1, src2);
}

procedure {:inline 1} $AndBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    dst := $And'Bv16'(src1,src2);
}

procedure {:inline 1} $OrBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    dst := $Or'Bv16'(src1,src2);
}

procedure {:inline 1} $XorBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    dst := $Xor'Bv16'(src1,src2);
}

procedure {:inline 1} $LtBv16(src1: bv16, src2: bv16) returns (dst: bool)
{
    dst := $Lt'Bv16'(src1,src2);
}

procedure {:inline 1} $LeBv16(src1: bv16, src2: bv16) returns (dst: bool)
{
    dst := $Le'Bv16'(src1,src2);
}

procedure {:inline 1} $GtBv16(src1: bv16, src2: bv16) returns (dst: bool)
{
    dst := $Gt'Bv16'(src1,src2);
}

procedure {:inline 1} $GeBv16(src1: bv16, src2: bv16) returns (dst: bool)
{
    dst := $Ge'Bv16'(src1,src2);
}

function $IsValid'bv16'(v: bv16): bool {
  $Ge'Bv16'(v,0bv16) && $Le'Bv16'(v,65535bv16)
}

function {:inline} $IsEqual'bv16'(x: bv16, y: bv16): bool {
    x == y
}

procedure {:inline 1} $int2bv16(src: int) returns (dst: bv16)
{
    if (src > 65535) {
        call $ExecFailureAbort();
        return;
    }
    dst := $int2bv.16(src);
}

procedure {:inline 1} $bv2int16(src: bv16) returns (dst: int)
{
    dst := $bv2int.16(src);
}

function {:builtin "(_ int2bv 16)"} $int2bv.16(i: int) returns (bv16);
function {:builtin "bv2nat"} $bv2int.16(i: bv16) returns (int);

function {:bvbuiltin "bvand"} $And'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvor"} $Or'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvxor"} $Xor'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvadd"} $Add'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvsub"} $Sub'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvmul"} $Mul'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvudiv"} $Div'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvurem"} $Mod'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvshl"} $Shl'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvlshr"} $Shr'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvult"} $Lt'Bv32'(bv32,bv32) returns(bool);
function {:bvbuiltin "bvule"} $Le'Bv32'(bv32,bv32) returns(bool);
function {:bvbuiltin "bvugt"} $Gt'Bv32'(bv32,bv32) returns(bool);
function {:bvbuiltin "bvuge"} $Ge'Bv32'(bv32,bv32) returns(bool);

procedure {:inline 1} $AddBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if ($Lt'Bv32'($Add'Bv32'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Add'Bv32'(src1, src2);
}

procedure {:inline 1} $AddBv32_unchecked(src1: bv32, src2: bv32) returns (dst: bv32)
{
    dst := $Add'Bv32'(src1, src2);
}

procedure {:inline 1} $SubBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if ($Lt'Bv32'(src1, src2)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Sub'Bv32'(src1, src2);
}

procedure {:inline 1} $MulBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if ($Lt'Bv32'($Mul'Bv32'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mul'Bv32'(src1, src2);
}

procedure {:inline 1} $DivBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if (src2 == 0bv32) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Div'Bv32'(src1, src2);
}

procedure {:inline 1} $ModBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if (src2 == 0bv32) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mod'Bv32'(src1, src2);
}

procedure {:inline 1} $AndBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    dst := $And'Bv32'(src1,src2);
}

procedure {:inline 1} $OrBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    dst := $Or'Bv32'(src1,src2);
}

procedure {:inline 1} $XorBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    dst := $Xor'Bv32'(src1,src2);
}

procedure {:inline 1} $LtBv32(src1: bv32, src2: bv32) returns (dst: bool)
{
    dst := $Lt'Bv32'(src1,src2);
}

procedure {:inline 1} $LeBv32(src1: bv32, src2: bv32) returns (dst: bool)
{
    dst := $Le'Bv32'(src1,src2);
}

procedure {:inline 1} $GtBv32(src1: bv32, src2: bv32) returns (dst: bool)
{
    dst := $Gt'Bv32'(src1,src2);
}

procedure {:inline 1} $GeBv32(src1: bv32, src2: bv32) returns (dst: bool)
{
    dst := $Ge'Bv32'(src1,src2);
}

function $IsValid'bv32'(v: bv32): bool {
  $Ge'Bv32'(v,0bv32) && $Le'Bv32'(v,2147483647bv32)
}

function {:inline} $IsEqual'bv32'(x: bv32, y: bv32): bool {
    x == y
}

procedure {:inline 1} $int2bv32(src: int) returns (dst: bv32)
{
    if (src > 2147483647) {
        call $ExecFailureAbort();
        return;
    }
    dst := $int2bv.32(src);
}

procedure {:inline 1} $bv2int32(src: bv32) returns (dst: int)
{
    dst := $bv2int.32(src);
}

function {:builtin "(_ int2bv 32)"} $int2bv.32(i: int) returns (bv32);
function {:builtin "bv2nat"} $bv2int.32(i: bv32) returns (int);

function {:bvbuiltin "bvand"} $And'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvor"} $Or'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvxor"} $Xor'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvadd"} $Add'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvsub"} $Sub'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvmul"} $Mul'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvudiv"} $Div'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvurem"} $Mod'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvshl"} $Shl'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvlshr"} $Shr'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvult"} $Lt'Bv64'(bv64,bv64) returns(bool);
function {:bvbuiltin "bvule"} $Le'Bv64'(bv64,bv64) returns(bool);
function {:bvbuiltin "bvugt"} $Gt'Bv64'(bv64,bv64) returns(bool);
function {:bvbuiltin "bvuge"} $Ge'Bv64'(bv64,bv64) returns(bool);

procedure {:inline 1} $AddBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if ($Lt'Bv64'($Add'Bv64'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Add'Bv64'(src1, src2);
}

procedure {:inline 1} $AddBv64_unchecked(src1: bv64, src2: bv64) returns (dst: bv64)
{
    dst := $Add'Bv64'(src1, src2);
}

procedure {:inline 1} $SubBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if ($Lt'Bv64'(src1, src2)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Sub'Bv64'(src1, src2);
}

procedure {:inline 1} $MulBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if ($Lt'Bv64'($Mul'Bv64'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mul'Bv64'(src1, src2);
}

procedure {:inline 1} $DivBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if (src2 == 0bv64) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Div'Bv64'(src1, src2);
}

procedure {:inline 1} $ModBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if (src2 == 0bv64) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mod'Bv64'(src1, src2);
}

procedure {:inline 1} $AndBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    dst := $And'Bv64'(src1,src2);
}

procedure {:inline 1} $OrBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    dst := $Or'Bv64'(src1,src2);
}

procedure {:inline 1} $XorBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    dst := $Xor'Bv64'(src1,src2);
}

procedure {:inline 1} $LtBv64(src1: bv64, src2: bv64) returns (dst: bool)
{
    dst := $Lt'Bv64'(src1,src2);
}

procedure {:inline 1} $LeBv64(src1: bv64, src2: bv64) returns (dst: bool)
{
    dst := $Le'Bv64'(src1,src2);
}

procedure {:inline 1} $GtBv64(src1: bv64, src2: bv64) returns (dst: bool)
{
    dst := $Gt'Bv64'(src1,src2);
}

procedure {:inline 1} $GeBv64(src1: bv64, src2: bv64) returns (dst: bool)
{
    dst := $Ge'Bv64'(src1,src2);
}

function $IsValid'bv64'(v: bv64): bool {
  $Ge'Bv64'(v,0bv64) && $Le'Bv64'(v,18446744073709551615bv64)
}

function {:inline} $IsEqual'bv64'(x: bv64, y: bv64): bool {
    x == y
}

procedure {:inline 1} $int2bv64(src: int) returns (dst: bv64)
{
    if (src > 18446744073709551615) {
        call $ExecFailureAbort();
        return;
    }
    dst := $int2bv.64(src);
}

procedure {:inline 1} $bv2int64(src: bv64) returns (dst: int)
{
    dst := $bv2int.64(src);
}

function {:builtin "(_ int2bv 64)"} $int2bv.64(i: int) returns (bv64);
function {:builtin "bv2nat"} $bv2int.64(i: bv64) returns (int);

function {:bvbuiltin "bvand"} $And'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvor"} $Or'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvxor"} $Xor'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvadd"} $Add'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvsub"} $Sub'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvmul"} $Mul'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvudiv"} $Div'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvurem"} $Mod'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvshl"} $Shl'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvlshr"} $Shr'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvult"} $Lt'Bv128'(bv128,bv128) returns(bool);
function {:bvbuiltin "bvule"} $Le'Bv128'(bv128,bv128) returns(bool);
function {:bvbuiltin "bvugt"} $Gt'Bv128'(bv128,bv128) returns(bool);
function {:bvbuiltin "bvuge"} $Ge'Bv128'(bv128,bv128) returns(bool);

procedure {:inline 1} $AddBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if ($Lt'Bv128'($Add'Bv128'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Add'Bv128'(src1, src2);
}

procedure {:inline 1} $AddBv128_unchecked(src1: bv128, src2: bv128) returns (dst: bv128)
{
    dst := $Add'Bv128'(src1, src2);
}

procedure {:inline 1} $SubBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if ($Lt'Bv128'(src1, src2)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Sub'Bv128'(src1, src2);
}

procedure {:inline 1} $MulBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if ($Lt'Bv128'($Mul'Bv128'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mul'Bv128'(src1, src2);
}

procedure {:inline 1} $DivBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if (src2 == 0bv128) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Div'Bv128'(src1, src2);
}

procedure {:inline 1} $ModBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if (src2 == 0bv128) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mod'Bv128'(src1, src2);
}

procedure {:inline 1} $AndBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    dst := $And'Bv128'(src1,src2);
}

procedure {:inline 1} $OrBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    dst := $Or'Bv128'(src1,src2);
}

procedure {:inline 1} $XorBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    dst := $Xor'Bv128'(src1,src2);
}

procedure {:inline 1} $LtBv128(src1: bv128, src2: bv128) returns (dst: bool)
{
    dst := $Lt'Bv128'(src1,src2);
}

procedure {:inline 1} $LeBv128(src1: bv128, src2: bv128) returns (dst: bool)
{
    dst := $Le'Bv128'(src1,src2);
}

procedure {:inline 1} $GtBv128(src1: bv128, src2: bv128) returns (dst: bool)
{
    dst := $Gt'Bv128'(src1,src2);
}

procedure {:inline 1} $GeBv128(src1: bv128, src2: bv128) returns (dst: bool)
{
    dst := $Ge'Bv128'(src1,src2);
}

function $IsValid'bv128'(v: bv128): bool {
  $Ge'Bv128'(v,0bv128) && $Le'Bv128'(v,340282366920938463463374607431768211455bv128)
}

function {:inline} $IsEqual'bv128'(x: bv128, y: bv128): bool {
    x == y
}

procedure {:inline 1} $int2bv128(src: int) returns (dst: bv128)
{
    if (src > 340282366920938463463374607431768211455) {
        call $ExecFailureAbort();
        return;
    }
    dst := $int2bv.128(src);
}

procedure {:inline 1} $bv2int128(src: bv128) returns (dst: int)
{
    dst := $bv2int.128(src);
}

function {:builtin "(_ int2bv 128)"} $int2bv.128(i: int) returns (bv128);
function {:builtin "bv2nat"} $bv2int.128(i: bv128) returns (int);

function {:bvbuiltin "bvand"} $And'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvor"} $Or'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvxor"} $Xor'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvadd"} $Add'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvsub"} $Sub'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvmul"} $Mul'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvudiv"} $Div'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvurem"} $Mod'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvshl"} $Shl'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvlshr"} $Shr'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvult"} $Lt'Bv256'(bv256,bv256) returns(bool);
function {:bvbuiltin "bvule"} $Le'Bv256'(bv256,bv256) returns(bool);
function {:bvbuiltin "bvugt"} $Gt'Bv256'(bv256,bv256) returns(bool);
function {:bvbuiltin "bvuge"} $Ge'Bv256'(bv256,bv256) returns(bool);

procedure {:inline 1} $AddBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if ($Lt'Bv256'($Add'Bv256'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Add'Bv256'(src1, src2);
}

procedure {:inline 1} $AddBv256_unchecked(src1: bv256, src2: bv256) returns (dst: bv256)
{
    dst := $Add'Bv256'(src1, src2);
}

procedure {:inline 1} $SubBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if ($Lt'Bv256'(src1, src2)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Sub'Bv256'(src1, src2);
}

procedure {:inline 1} $MulBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if ($Lt'Bv256'($Mul'Bv256'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mul'Bv256'(src1, src2);
}

procedure {:inline 1} $DivBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if (src2 == 0bv256) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Div'Bv256'(src1, src2);
}

procedure {:inline 1} $ModBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if (src2 == 0bv256) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mod'Bv256'(src1, src2);
}

procedure {:inline 1} $AndBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    dst := $And'Bv256'(src1,src2);
}

procedure {:inline 1} $OrBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    dst := $Or'Bv256'(src1,src2);
}

procedure {:inline 1} $XorBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    dst := $Xor'Bv256'(src1,src2);
}

procedure {:inline 1} $LtBv256(src1: bv256, src2: bv256) returns (dst: bool)
{
    dst := $Lt'Bv256'(src1,src2);
}

procedure {:inline 1} $LeBv256(src1: bv256, src2: bv256) returns (dst: bool)
{
    dst := $Le'Bv256'(src1,src2);
}

procedure {:inline 1} $GtBv256(src1: bv256, src2: bv256) returns (dst: bool)
{
    dst := $Gt'Bv256'(src1,src2);
}

procedure {:inline 1} $GeBv256(src1: bv256, src2: bv256) returns (dst: bool)
{
    dst := $Ge'Bv256'(src1,src2);
}

function $IsValid'bv256'(v: bv256): bool {
  $Ge'Bv256'(v,0bv256) && $Le'Bv256'(v,115792089237316195423570985008687907853269984665640564039457584007913129639935bv256)
}

function {:inline} $IsEqual'bv256'(x: bv256, y: bv256): bool {
    x == y
}

procedure {:inline 1} $int2bv256(src: int) returns (dst: bv256)
{
    if (src > 115792089237316195423570985008687907853269984665640564039457584007913129639935) {
        call $ExecFailureAbort();
        return;
    }
    dst := $int2bv.256(src);
}

procedure {:inline 1} $bv2int256(src: bv256) returns (dst: int)
{
    dst := $bv2int.256(src);
}

function {:builtin "(_ int2bv 256)"} $int2bv.256(i: int) returns (bv256);
function {:builtin "bv2nat"} $bv2int.256(i: bv256) returns (int);

datatype $Range {
    $Range(lb: int, ub: int)
}

function {:inline} $IsValid'bool'(v: bool): bool {
  true
}

function $IsValid'u8'(v: int): bool {
  v >= 0 && v <= $MAX_U8
}

function $IsValid'u16'(v: int): bool {
  v >= 0 && v <= $MAX_U16
}

function $IsValid'u32'(v: int): bool {
  v >= 0 && v <= $MAX_U32
}

function $IsValid'u64'(v: int): bool {
  v >= 0 && v <= $MAX_U64
}

function $IsValid'u128'(v: int): bool {
  v >= 0 && v <= $MAX_U128
}

function $IsValid'u256'(v: int): bool {
  v >= 0 && v <= $MAX_U256
}

function $IsValid'num'(v: int): bool {
  true
}

function $IsValid'address'(v: int): bool {
  // TODO: restrict max to representable addresses?
  v >= 0
}

function {:inline} $IsValidRange(r: $Range): bool {
   $IsValid'u64'(r->lb) &&  $IsValid'u64'(r->ub)
}

// Intentionally not inlined so it serves as a trigger in quantifiers.
function $InRange(r: $Range, i: int): bool {
   r->lb <= i && i < r->ub
}


function {:inline} $IsEqual'u8'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'u16'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'u32'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'u64'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'u128'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'u256'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'num'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'address'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'bool'(x: bool, y: bool): bool {
    x == y
}

// ============================================================================================
// Memory

datatype $Location {
    // A global resource location within the statically known resource type's memory,
    // where `a` is an address.
    $Global(a: int),
    // A local location. `i` is the unique index of the local.
    $Local(i: int),
    // The location of a reference outside of the verification scope, for example, a `&mut` parameter
    // of the function being verified. References with these locations don't need to be written back
    // when mutation ends.
    $Param(i: int),
    // The location of an uninitialized mutation. Using this to make sure that the location
    // will not be equal to any valid mutation locations, i.e., $Local, $Global, or $Param.
    $Uninitialized()
}

// A mutable reference which also carries its current value. Since mutable references
// are single threaded in Move, we can keep them together and treat them as a value
// during mutation until the point they are stored back to their original location.
datatype $Mutation<T> {
    $Mutation(l: $Location, p: Vec int, v: T)
}

// Representation of memory for a given type.
datatype $Memory<T> {
    $Memory(domain: [int]bool, contents: [int]T)
}

function {:builtin "MapConst"} $ConstMemoryDomain(v: bool): [int]bool;
function {:builtin "MapConst"} $ConstMemoryContent<T>(v: T): [int]T;
axiom $ConstMemoryDomain(false) == (lambda i: int :: false);
axiom $ConstMemoryDomain(true) == (lambda i: int :: true);


// Dereferences a mutation.
function {:inline} $Dereference<T>(ref: $Mutation T): T {
    ref->v
}

// Update the value of a mutation.
function {:inline} $UpdateMutation<T>(m: $Mutation T, v: T): $Mutation T {
    $Mutation(m->l, m->p, v)
}

function {:inline} $ChildMutation<T1, T2>(m: $Mutation T1, offset: int, v: T2): $Mutation T2 {
    $Mutation(m->l, ExtendVec(m->p, offset), v)
}

// Return true if two mutations share the location and path
function {:inline} $IsSameMutation<T1, T2>(parent: $Mutation T1, child: $Mutation T2 ): bool {
    parent->l == child->l && parent->p == child->p
}

// Return true if the mutation is a parent of a child which was derived with the given edge offset. This
// is used to implement write-back choices.
function {:inline} $IsParentMutation<T1, T2>(parent: $Mutation T1, edge: int, child: $Mutation T2 ): bool {
    parent->l == child->l &&
    (var pp := parent->p;
    (var cp := child->p;
    (var pl := LenVec(pp);
    (var cl := LenVec(cp);
     cl == pl + 1 &&
     (forall i: int:: i >= 0 && i < pl ==> ReadVec(pp, i) ==  ReadVec(cp, i)) &&
     $EdgeMatches(ReadVec(cp, pl), edge)
    ))))
}

// Return true if the mutation is a parent of a child, for hyper edge.
function {:inline} $IsParentMutationHyper<T1, T2>(parent: $Mutation T1, hyper_edge: Vec int, child: $Mutation T2 ): bool {
    parent->l == child->l &&
    (var pp := parent->p;
    (var cp := child->p;
    (var pl := LenVec(pp);
    (var cl := LenVec(cp);
    (var el := LenVec(hyper_edge);
     cl == pl + el &&
     (forall i: int:: i >= 0 && i < pl ==> ReadVec(pp, i) == ReadVec(cp, i)) &&
     (forall i: int:: i >= 0 && i < el ==> $EdgeMatches(ReadVec(cp, pl + i), ReadVec(hyper_edge, i)))
    )))))
}

function {:inline} $EdgeMatches(edge: int, edge_pattern: int): bool {
    edge_pattern == -1 // wildcard
    || edge_pattern == edge
}



function {:inline} $SameLocation<T1, T2>(m1: $Mutation T1, m2: $Mutation T2): bool {
    m1->l == m2->l
}

function {:inline} $HasGlobalLocation<T>(m: $Mutation T): bool {
    (m->l) is $Global
}

function {:inline} $HasLocalLocation<T>(m: $Mutation T, idx: int): bool {
    m->l == $Local(idx)
}

function {:inline} $GlobalLocationAddress<T>(m: $Mutation T): int {
    (m->l)->a
}



// Tests whether resource exists.
function {:inline} $ResourceExists<T>(m: $Memory T, addr: int): bool {
    m->domain[addr]
}

// Obtains Value of given resource.
function {:inline} $ResourceValue<T>(m: $Memory T, addr: int): T {
    m->contents[addr]
}

// Update resource.
function {:inline} $ResourceUpdate<T>(m: $Memory T, a: int, v: T): $Memory T {
    $Memory(m->domain[a := true], m->contents[a := v])
}

// Remove resource.
function {:inline} $ResourceRemove<T>(m: $Memory T, a: int): $Memory T {
    $Memory(m->domain[a := false], m->contents)
}

// Copies resource from memory s to m.
function {:inline} $ResourceCopy<T>(m: $Memory T, s: $Memory T, a: int): $Memory T {
    $Memory(m->domain[a := s->domain[a]],
            m->contents[a := s->contents[a]])
}

// ============================================================================================
// Abort Handling

var $abort_flag: bool;
var $abort_code: int;

function {:inline} $process_abort_code(code: int): int {
    code
}

const $EXEC_FAILURE_CODE: int;
axiom $EXEC_FAILURE_CODE == -1;

// TODO(wrwg): currently we map aborts of native functions like those for vectors also to
//   execution failure. This may need to be aligned with what the runtime actually does.

procedure {:inline 1} $ExecFailureAbort() {
    $abort_flag := true;
    $abort_code := $EXEC_FAILURE_CODE;
}

procedure {:inline 1} $Abort(code: int) {
    $abort_flag := true;
    $abort_code := code;
}

function {:inline} $StdError(cat: int, reason: int): int {
    reason * 256 + cat
}

procedure {:inline 1} $InitVerification() {
    // Set abort_flag to false, and havoc abort_code
    $abort_flag := false;
    havoc $abort_code;
    // Initialize event store
    call $InitEventStore();
}

// ============================================================================================
// Instructions


procedure {:inline 1} $CastU8(src: int) returns (dst: int)
{
    if (src > $MAX_U8) {
        call $ExecFailureAbort();
        return;
    }
    dst := src;
}

procedure {:inline 1} $CastU16(src: int) returns (dst: int)
{
    if (src > $MAX_U16) {
        call $ExecFailureAbort();
        return;
    }
    dst := src;
}

procedure {:inline 1} $CastU32(src: int) returns (dst: int)
{
    if (src > $MAX_U32) {
        call $ExecFailureAbort();
        return;
    }
    dst := src;
}

procedure {:inline 1} $CastU64(src: int) returns (dst: int)
{
    if (src > $MAX_U64) {
        call $ExecFailureAbort();
        return;
    }
    dst := src;
}

procedure {:inline 1} $CastU128(src: int) returns (dst: int)
{
    if (src > $MAX_U128) {
        call $ExecFailureAbort();
        return;
    }
    dst := src;
}

procedure {:inline 1} $CastU256(src: int) returns (dst: int)
{
    if (src > $MAX_U256) {
        call $ExecFailureAbort();
        return;
    }
    dst := src;
}

procedure {:inline 1} $AddU8(src1: int, src2: int) returns (dst: int)
{
    if (src1 + src2 > $MAX_U8) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 + src2;
}

procedure {:inline 1} $AddU16(src1: int, src2: int) returns (dst: int)
{
    if (src1 + src2 > $MAX_U16) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 + src2;
}

procedure {:inline 1} $AddU16_unchecked(src1: int, src2: int) returns (dst: int)
{
    dst := src1 + src2;
}

procedure {:inline 1} $AddU32(src1: int, src2: int) returns (dst: int)
{
    if (src1 + src2 > $MAX_U32) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 + src2;
}

procedure {:inline 1} $AddU32_unchecked(src1: int, src2: int) returns (dst: int)
{
    dst := src1 + src2;
}

procedure {:inline 1} $AddU64(src1: int, src2: int) returns (dst: int)
{
    if (src1 + src2 > $MAX_U64) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 + src2;
}

procedure {:inline 1} $AddU64_unchecked(src1: int, src2: int) returns (dst: int)
{
    dst := src1 + src2;
}

procedure {:inline 1} $AddU128(src1: int, src2: int) returns (dst: int)
{
    if (src1 + src2 > $MAX_U128) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 + src2;
}

procedure {:inline 1} $AddU128_unchecked(src1: int, src2: int) returns (dst: int)
{
    dst := src1 + src2;
}

procedure {:inline 1} $AddU256(src1: int, src2: int) returns (dst: int)
{
    if (src1 + src2 > $MAX_U256) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 + src2;
}

procedure {:inline 1} $AddU256_unchecked(src1: int, src2: int) returns (dst: int)
{
    dst := src1 + src2;
}

procedure {:inline 1} $Sub(src1: int, src2: int) returns (dst: int)
{
    if (src1 < src2) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 - src2;
}

// uninterpreted function to return an undefined value.
function $undefined_int(): int;

// Recursive exponentiation function
// Undefined unless e >=0.  $pow(0,0) is also undefined.
function $pow(n: int, e: int): int {
    if n != 0 && e == 0 then 1
    else if e > 0 then n * $pow(n, e - 1)
    else $undefined_int()
}

function $shl(src1: int, p: int): int {
    src1 * $pow(2, p)
}

function $shlU8(src1: int, p: int): int {
    (src1 * $pow(2, p)) mod 256
}

function $shlU16(src1: int, p: int): int {
    (src1 * $pow(2, p)) mod 65536
}

function $shlU32(src1: int, p: int): int {
    (src1 * $pow(2, p)) mod 4294967296
}

function $shlU64(src1: int, p: int): int {
    (src1 * $pow(2, p)) mod 18446744073709551616
}

function $shlU128(src1: int, p: int): int {
    (src1 * $pow(2, p)) mod 340282366920938463463374607431768211456
}

function $shlU256(src1: int, p: int): int {
    (src1 * $pow(2, p)) mod 115792089237316195423570985008687907853269984665640564039457584007913129639936
}

function $shr(src1: int, p: int): int {
    src1 div $pow(2, p)
}

// We need to know the size of the destination in order to drop bits
// that have been shifted left more than that, so we have $ShlU8/16/32/64/128/256
procedure {:inline 1} $ShlU8(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 8) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shlU8(src1, src2);
}

// Template for cast and shift operations of bitvector types

procedure {:inline 1} $CastBv8to8(src: bv8) returns (dst: bv8)
{
    dst := src;
}


function $castBv8to8(src: bv8) returns (bv8)
{
    src
}


function $shlBv8From8(src1: bv8, src2: bv8) returns (bv8)
{
    $Shl'Bv8'(src1, src2)
}

procedure {:inline 1} $ShlBv8From8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if ($Ge'Bv8'(src2, 8bv8)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv8'(src1, src2);
}

function $shrBv8From8(src1: bv8, src2: bv8) returns (bv8)
{
    $Shr'Bv8'(src1, src2)
}

procedure {:inline 1} $ShrBv8From8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if ($Ge'Bv8'(src2, 8bv8)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv8'(src1, src2);
}

procedure {:inline 1} $CastBv16to8(src: bv16) returns (dst: bv8)
{
    if ($Gt'Bv16'(src, 255bv16)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[8:0];
}



function $shlBv8From16(src1: bv8, src2: bv16) returns (bv8)
{
    $Shl'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShlBv8From16(src1: bv8, src2: bv16) returns (dst: bv8)
{
    if ($Ge'Bv16'(src2, 8bv16)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv8'(src1, src2[8:0]);
}

function $shrBv8From16(src1: bv8, src2: bv16) returns (bv8)
{
    $Shr'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShrBv8From16(src1: bv8, src2: bv16) returns (dst: bv8)
{
    if ($Ge'Bv16'(src2, 8bv16)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv8'(src1, src2[8:0]);
}

procedure {:inline 1} $CastBv32to8(src: bv32) returns (dst: bv8)
{
    if ($Gt'Bv32'(src, 255bv32)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[8:0];
}



function $shlBv8From32(src1: bv8, src2: bv32) returns (bv8)
{
    $Shl'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShlBv8From32(src1: bv8, src2: bv32) returns (dst: bv8)
{
    if ($Ge'Bv32'(src2, 8bv32)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv8'(src1, src2[8:0]);
}

function $shrBv8From32(src1: bv8, src2: bv32) returns (bv8)
{
    $Shr'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShrBv8From32(src1: bv8, src2: bv32) returns (dst: bv8)
{
    if ($Ge'Bv32'(src2, 8bv32)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv8'(src1, src2[8:0]);
}

procedure {:inline 1} $CastBv64to8(src: bv64) returns (dst: bv8)
{
    if ($Gt'Bv64'(src, 255bv64)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[8:0];
}


function $castBv64to8(src: bv64) returns (bv8)
{
    if ($Gt'Bv64'(src, 255bv64)) then
        $Arbitrary_value_of'bv8'()
    else
    src[8:0]
}


function $shlBv8From64(src1: bv8, src2: bv64) returns (bv8)
{
    $Shl'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShlBv8From64(src1: bv8, src2: bv64) returns (dst: bv8)
{
    if ($Ge'Bv64'(src2, 8bv64)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv8'(src1, src2[8:0]);
}

function $shrBv8From64(src1: bv8, src2: bv64) returns (bv8)
{
    $Shr'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShrBv8From64(src1: bv8, src2: bv64) returns (dst: bv8)
{
    if ($Ge'Bv64'(src2, 8bv64)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv8'(src1, src2[8:0]);
}

procedure {:inline 1} $CastBv128to8(src: bv128) returns (dst: bv8)
{
    if ($Gt'Bv128'(src, 255bv128)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[8:0];
}


function $castBv128to8(src: bv128) returns (bv8)
{
    if ($Gt'Bv128'(src, 255bv128)) then
        $Arbitrary_value_of'bv8'()
    else
    src[8:0]
}


function $shlBv8From128(src1: bv8, src2: bv128) returns (bv8)
{
    $Shl'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShlBv8From128(src1: bv8, src2: bv128) returns (dst: bv8)
{
    if ($Ge'Bv128'(src2, 8bv128)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv8'(src1, src2[8:0]);
}

function $shrBv8From128(src1: bv8, src2: bv128) returns (bv8)
{
    $Shr'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShrBv8From128(src1: bv8, src2: bv128) returns (dst: bv8)
{
    if ($Ge'Bv128'(src2, 8bv128)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv8'(src1, src2[8:0]);
}

procedure {:inline 1} $CastBv256to8(src: bv256) returns (dst: bv8)
{
    if ($Gt'Bv256'(src, 255bv256)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[8:0];
}


function $castBv256to8(src: bv256) returns (bv8)
{
    if ($Gt'Bv256'(src, 255bv256)) then
        $Arbitrary_value_of'bv8'()
    else
    src[8:0]
}


function $shlBv8From256(src1: bv8, src2: bv256) returns (bv8)
{
    $Shl'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShlBv8From256(src1: bv8, src2: bv256) returns (dst: bv8)
{
    if ($Ge'Bv256'(src2, 8bv256)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv8'(src1, src2[8:0]);
}

function $shrBv8From256(src1: bv8, src2: bv256) returns (bv8)
{
    $Shr'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShrBv8From256(src1: bv8, src2: bv256) returns (dst: bv8)
{
    if ($Ge'Bv256'(src2, 8bv256)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv8'(src1, src2[8:0]);
}

procedure {:inline 1} $CastBv8to16(src: bv8) returns (dst: bv16)
{
    dst := 0bv8 ++ src;
}



function $shlBv16From8(src1: bv16, src2: bv8) returns (bv16)
{
    $Shl'Bv16'(src1, 0bv8 ++ src2)
}

procedure {:inline 1} $ShlBv16From8(src1: bv16, src2: bv8) returns (dst: bv16)
{
    if ($Ge'Bv8'(src2, 16bv8)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv16'(src1, 0bv8 ++ src2);
}

function $shrBv16From8(src1: bv16, src2: bv8) returns (bv16)
{
    $Shr'Bv16'(src1, 0bv8 ++ src2)
}

procedure {:inline 1} $ShrBv16From8(src1: bv16, src2: bv8) returns (dst: bv16)
{
    if ($Ge'Bv8'(src2, 16bv8)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv16'(src1, 0bv8 ++ src2);
}

procedure {:inline 1} $CastBv16to16(src: bv16) returns (dst: bv16)
{
    dst := src;
}



function $shlBv16From16(src1: bv16, src2: bv16) returns (bv16)
{
    $Shl'Bv16'(src1, src2)
}

procedure {:inline 1} $ShlBv16From16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if ($Ge'Bv16'(src2, 16bv16)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv16'(src1, src2);
}

function $shrBv16From16(src1: bv16, src2: bv16) returns (bv16)
{
    $Shr'Bv16'(src1, src2)
}

procedure {:inline 1} $ShrBv16From16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if ($Ge'Bv16'(src2, 16bv16)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv16'(src1, src2);
}

procedure {:inline 1} $CastBv32to16(src: bv32) returns (dst: bv16)
{
    if ($Gt'Bv32'(src, 65535bv32)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[16:0];
}



function $shlBv16From32(src1: bv16, src2: bv32) returns (bv16)
{
    $Shl'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShlBv16From32(src1: bv16, src2: bv32) returns (dst: bv16)
{
    if ($Ge'Bv32'(src2, 16bv32)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv16'(src1, src2[16:0]);
}

function $shrBv16From32(src1: bv16, src2: bv32) returns (bv16)
{
    $Shr'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShrBv16From32(src1: bv16, src2: bv32) returns (dst: bv16)
{
    if ($Ge'Bv32'(src2, 16bv32)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv16'(src1, src2[16:0]);
}

procedure {:inline 1} $CastBv64to16(src: bv64) returns (dst: bv16)
{
    if ($Gt'Bv64'(src, 65535bv64)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[16:0];
}



function $shlBv16From64(src1: bv16, src2: bv64) returns (bv16)
{
    $Shl'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShlBv16From64(src1: bv16, src2: bv64) returns (dst: bv16)
{
    if ($Ge'Bv64'(src2, 16bv64)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv16'(src1, src2[16:0]);
}

function $shrBv16From64(src1: bv16, src2: bv64) returns (bv16)
{
    $Shr'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShrBv16From64(src1: bv16, src2: bv64) returns (dst: bv16)
{
    if ($Ge'Bv64'(src2, 16bv64)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv16'(src1, src2[16:0]);
}

procedure {:inline 1} $CastBv128to16(src: bv128) returns (dst: bv16)
{
    if ($Gt'Bv128'(src, 65535bv128)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[16:0];
}



function $shlBv16From128(src1: bv16, src2: bv128) returns (bv16)
{
    $Shl'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShlBv16From128(src1: bv16, src2: bv128) returns (dst: bv16)
{
    if ($Ge'Bv128'(src2, 16bv128)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv16'(src1, src2[16:0]);
}

function $shrBv16From128(src1: bv16, src2: bv128) returns (bv16)
{
    $Shr'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShrBv16From128(src1: bv16, src2: bv128) returns (dst: bv16)
{
    if ($Ge'Bv128'(src2, 16bv128)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv16'(src1, src2[16:0]);
}

procedure {:inline 1} $CastBv256to16(src: bv256) returns (dst: bv16)
{
    if ($Gt'Bv256'(src, 65535bv256)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[16:0];
}



function $shlBv16From256(src1: bv16, src2: bv256) returns (bv16)
{
    $Shl'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShlBv16From256(src1: bv16, src2: bv256) returns (dst: bv16)
{
    if ($Ge'Bv256'(src2, 16bv256)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv16'(src1, src2[16:0]);
}

function $shrBv16From256(src1: bv16, src2: bv256) returns (bv16)
{
    $Shr'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShrBv16From256(src1: bv16, src2: bv256) returns (dst: bv16)
{
    if ($Ge'Bv256'(src2, 16bv256)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv16'(src1, src2[16:0]);
}

procedure {:inline 1} $CastBv8to32(src: bv8) returns (dst: bv32)
{
    dst := 0bv24 ++ src;
}



function $shlBv32From8(src1: bv32, src2: bv8) returns (bv32)
{
    $Shl'Bv32'(src1, 0bv24 ++ src2)
}

procedure {:inline 1} $ShlBv32From8(src1: bv32, src2: bv8) returns (dst: bv32)
{
    if ($Ge'Bv8'(src2, 32bv8)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv32'(src1, 0bv24 ++ src2);
}

function $shrBv32From8(src1: bv32, src2: bv8) returns (bv32)
{
    $Shr'Bv32'(src1, 0bv24 ++ src2)
}

procedure {:inline 1} $ShrBv32From8(src1: bv32, src2: bv8) returns (dst: bv32)
{
    if ($Ge'Bv8'(src2, 32bv8)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv32'(src1, 0bv24 ++ src2);
}

procedure {:inline 1} $CastBv16to32(src: bv16) returns (dst: bv32)
{
    dst := 0bv16 ++ src;
}



function $shlBv32From16(src1: bv32, src2: bv16) returns (bv32)
{
    $Shl'Bv32'(src1, 0bv16 ++ src2)
}

procedure {:inline 1} $ShlBv32From16(src1: bv32, src2: bv16) returns (dst: bv32)
{
    if ($Ge'Bv16'(src2, 32bv16)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv32'(src1, 0bv16 ++ src2);
}

function $shrBv32From16(src1: bv32, src2: bv16) returns (bv32)
{
    $Shr'Bv32'(src1, 0bv16 ++ src2)
}

procedure {:inline 1} $ShrBv32From16(src1: bv32, src2: bv16) returns (dst: bv32)
{
    if ($Ge'Bv16'(src2, 32bv16)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv32'(src1, 0bv16 ++ src2);
}

procedure {:inline 1} $CastBv32to32(src: bv32) returns (dst: bv32)
{
    dst := src;
}



function $shlBv32From32(src1: bv32, src2: bv32) returns (bv32)
{
    $Shl'Bv32'(src1, src2)
}

procedure {:inline 1} $ShlBv32From32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if ($Ge'Bv32'(src2, 32bv32)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv32'(src1, src2);
}

function $shrBv32From32(src1: bv32, src2: bv32) returns (bv32)
{
    $Shr'Bv32'(src1, src2)
}

procedure {:inline 1} $ShrBv32From32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if ($Ge'Bv32'(src2, 32bv32)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv32'(src1, src2);
}

procedure {:inline 1} $CastBv64to32(src: bv64) returns (dst: bv32)
{
    if ($Gt'Bv64'(src, 2147483647bv64)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[32:0];
}



function $shlBv32From64(src1: bv32, src2: bv64) returns (bv32)
{
    $Shl'Bv32'(src1, src2[32:0])
}

procedure {:inline 1} $ShlBv32From64(src1: bv32, src2: bv64) returns (dst: bv32)
{
    if ($Ge'Bv64'(src2, 32bv64)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv32'(src1, src2[32:0]);
}

function $shrBv32From64(src1: bv32, src2: bv64) returns (bv32)
{
    $Shr'Bv32'(src1, src2[32:0])
}

procedure {:inline 1} $ShrBv32From64(src1: bv32, src2: bv64) returns (dst: bv32)
{
    if ($Ge'Bv64'(src2, 32bv64)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv32'(src1, src2[32:0]);
}

procedure {:inline 1} $CastBv128to32(src: bv128) returns (dst: bv32)
{
    if ($Gt'Bv128'(src, 2147483647bv128)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[32:0];
}



function $shlBv32From128(src1: bv32, src2: bv128) returns (bv32)
{
    $Shl'Bv32'(src1, src2[32:0])
}

procedure {:inline 1} $ShlBv32From128(src1: bv32, src2: bv128) returns (dst: bv32)
{
    if ($Ge'Bv128'(src2, 32bv128)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv32'(src1, src2[32:0]);
}

function $shrBv32From128(src1: bv32, src2: bv128) returns (bv32)
{
    $Shr'Bv32'(src1, src2[32:0])
}

procedure {:inline 1} $ShrBv32From128(src1: bv32, src2: bv128) returns (dst: bv32)
{
    if ($Ge'Bv128'(src2, 32bv128)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv32'(src1, src2[32:0]);
}

procedure {:inline 1} $CastBv256to32(src: bv256) returns (dst: bv32)
{
    if ($Gt'Bv256'(src, 2147483647bv256)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[32:0];
}



function $shlBv32From256(src1: bv32, src2: bv256) returns (bv32)
{
    $Shl'Bv32'(src1, src2[32:0])
}

procedure {:inline 1} $ShlBv32From256(src1: bv32, src2: bv256) returns (dst: bv32)
{
    if ($Ge'Bv256'(src2, 32bv256)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv32'(src1, src2[32:0]);
}

function $shrBv32From256(src1: bv32, src2: bv256) returns (bv32)
{
    $Shr'Bv32'(src1, src2[32:0])
}

procedure {:inline 1} $ShrBv32From256(src1: bv32, src2: bv256) returns (dst: bv32)
{
    if ($Ge'Bv256'(src2, 32bv256)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv32'(src1, src2[32:0]);
}

procedure {:inline 1} $CastBv8to64(src: bv8) returns (dst: bv64)
{
    dst := 0bv56 ++ src;
}


function $castBv8to64(src: bv8) returns (bv64)
{
    0bv56 ++ src
}


function $shlBv64From8(src1: bv64, src2: bv8) returns (bv64)
{
    $Shl'Bv64'(src1, 0bv56 ++ src2)
}

procedure {:inline 1} $ShlBv64From8(src1: bv64, src2: bv8) returns (dst: bv64)
{
    if ($Ge'Bv8'(src2, 64bv8)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv64'(src1, 0bv56 ++ src2);
}

function $shrBv64From8(src1: bv64, src2: bv8) returns (bv64)
{
    $Shr'Bv64'(src1, 0bv56 ++ src2)
}

procedure {:inline 1} $ShrBv64From8(src1: bv64, src2: bv8) returns (dst: bv64)
{
    if ($Ge'Bv8'(src2, 64bv8)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv64'(src1, 0bv56 ++ src2);
}

procedure {:inline 1} $CastBv16to64(src: bv16) returns (dst: bv64)
{
    dst := 0bv48 ++ src;
}



function $shlBv64From16(src1: bv64, src2: bv16) returns (bv64)
{
    $Shl'Bv64'(src1, 0bv48 ++ src2)
}

procedure {:inline 1} $ShlBv64From16(src1: bv64, src2: bv16) returns (dst: bv64)
{
    if ($Ge'Bv16'(src2, 64bv16)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv64'(src1, 0bv48 ++ src2);
}

function $shrBv64From16(src1: bv64, src2: bv16) returns (bv64)
{
    $Shr'Bv64'(src1, 0bv48 ++ src2)
}

procedure {:inline 1} $ShrBv64From16(src1: bv64, src2: bv16) returns (dst: bv64)
{
    if ($Ge'Bv16'(src2, 64bv16)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv64'(src1, 0bv48 ++ src2);
}

procedure {:inline 1} $CastBv32to64(src: bv32) returns (dst: bv64)
{
    dst := 0bv32 ++ src;
}



function $shlBv64From32(src1: bv64, src2: bv32) returns (bv64)
{
    $Shl'Bv64'(src1, 0bv32 ++ src2)
}

procedure {:inline 1} $ShlBv64From32(src1: bv64, src2: bv32) returns (dst: bv64)
{
    if ($Ge'Bv32'(src2, 64bv32)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv64'(src1, 0bv32 ++ src2);
}

function $shrBv64From32(src1: bv64, src2: bv32) returns (bv64)
{
    $Shr'Bv64'(src1, 0bv32 ++ src2)
}

procedure {:inline 1} $ShrBv64From32(src1: bv64, src2: bv32) returns (dst: bv64)
{
    if ($Ge'Bv32'(src2, 64bv32)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv64'(src1, 0bv32 ++ src2);
}

procedure {:inline 1} $CastBv64to64(src: bv64) returns (dst: bv64)
{
    dst := src;
}


function $castBv64to64(src: bv64) returns (bv64)
{
    src
}


function $shlBv64From64(src1: bv64, src2: bv64) returns (bv64)
{
    $Shl'Bv64'(src1, src2)
}

procedure {:inline 1} $ShlBv64From64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if ($Ge'Bv64'(src2, 64bv64)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv64'(src1, src2);
}

function $shrBv64From64(src1: bv64, src2: bv64) returns (bv64)
{
    $Shr'Bv64'(src1, src2)
}

procedure {:inline 1} $ShrBv64From64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if ($Ge'Bv64'(src2, 64bv64)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv64'(src1, src2);
}

procedure {:inline 1} $CastBv128to64(src: bv128) returns (dst: bv64)
{
    if ($Gt'Bv128'(src, 18446744073709551615bv128)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[64:0];
}


function $castBv128to64(src: bv128) returns (bv64)
{
    if ($Gt'Bv128'(src, 18446744073709551615bv128)) then
        $Arbitrary_value_of'bv64'()
    else
    src[64:0]
}


function $shlBv64From128(src1: bv64, src2: bv128) returns (bv64)
{
    $Shl'Bv64'(src1, src2[64:0])
}

procedure {:inline 1} $ShlBv64From128(src1: bv64, src2: bv128) returns (dst: bv64)
{
    if ($Ge'Bv128'(src2, 64bv128)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv64'(src1, src2[64:0]);
}

function $shrBv64From128(src1: bv64, src2: bv128) returns (bv64)
{
    $Shr'Bv64'(src1, src2[64:0])
}

procedure {:inline 1} $ShrBv64From128(src1: bv64, src2: bv128) returns (dst: bv64)
{
    if ($Ge'Bv128'(src2, 64bv128)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv64'(src1, src2[64:0]);
}

procedure {:inline 1} $CastBv256to64(src: bv256) returns (dst: bv64)
{
    if ($Gt'Bv256'(src, 18446744073709551615bv256)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[64:0];
}


function $castBv256to64(src: bv256) returns (bv64)
{
    if ($Gt'Bv256'(src, 18446744073709551615bv256)) then
        $Arbitrary_value_of'bv64'()
    else
    src[64:0]
}


function $shlBv64From256(src1: bv64, src2: bv256) returns (bv64)
{
    $Shl'Bv64'(src1, src2[64:0])
}

procedure {:inline 1} $ShlBv64From256(src1: bv64, src2: bv256) returns (dst: bv64)
{
    if ($Ge'Bv256'(src2, 64bv256)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv64'(src1, src2[64:0]);
}

function $shrBv64From256(src1: bv64, src2: bv256) returns (bv64)
{
    $Shr'Bv64'(src1, src2[64:0])
}

procedure {:inline 1} $ShrBv64From256(src1: bv64, src2: bv256) returns (dst: bv64)
{
    if ($Ge'Bv256'(src2, 64bv256)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv64'(src1, src2[64:0]);
}

procedure {:inline 1} $CastBv8to128(src: bv8) returns (dst: bv128)
{
    dst := 0bv120 ++ src;
}


function $castBv8to128(src: bv8) returns (bv128)
{
    0bv120 ++ src
}


function $shlBv128From8(src1: bv128, src2: bv8) returns (bv128)
{
    $Shl'Bv128'(src1, 0bv120 ++ src2)
}

procedure {:inline 1} $ShlBv128From8(src1: bv128, src2: bv8) returns (dst: bv128)
{
    if ($Ge'Bv8'(src2, 128bv8)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv128'(src1, 0bv120 ++ src2);
}

function $shrBv128From8(src1: bv128, src2: bv8) returns (bv128)
{
    $Shr'Bv128'(src1, 0bv120 ++ src2)
}

procedure {:inline 1} $ShrBv128From8(src1: bv128, src2: bv8) returns (dst: bv128)
{
    if ($Ge'Bv8'(src2, 128bv8)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv128'(src1, 0bv120 ++ src2);
}

procedure {:inline 1} $CastBv16to128(src: bv16) returns (dst: bv128)
{
    dst := 0bv112 ++ src;
}



function $shlBv128From16(src1: bv128, src2: bv16) returns (bv128)
{
    $Shl'Bv128'(src1, 0bv112 ++ src2)
}

procedure {:inline 1} $ShlBv128From16(src1: bv128, src2: bv16) returns (dst: bv128)
{
    if ($Ge'Bv16'(src2, 128bv16)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv128'(src1, 0bv112 ++ src2);
}

function $shrBv128From16(src1: bv128, src2: bv16) returns (bv128)
{
    $Shr'Bv128'(src1, 0bv112 ++ src2)
}

procedure {:inline 1} $ShrBv128From16(src1: bv128, src2: bv16) returns (dst: bv128)
{
    if ($Ge'Bv16'(src2, 128bv16)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv128'(src1, 0bv112 ++ src2);
}

procedure {:inline 1} $CastBv32to128(src: bv32) returns (dst: bv128)
{
    dst := 0bv96 ++ src;
}



function $shlBv128From32(src1: bv128, src2: bv32) returns (bv128)
{
    $Shl'Bv128'(src1, 0bv96 ++ src2)
}

procedure {:inline 1} $ShlBv128From32(src1: bv128, src2: bv32) returns (dst: bv128)
{
    if ($Ge'Bv32'(src2, 128bv32)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv128'(src1, 0bv96 ++ src2);
}

function $shrBv128From32(src1: bv128, src2: bv32) returns (bv128)
{
    $Shr'Bv128'(src1, 0bv96 ++ src2)
}

procedure {:inline 1} $ShrBv128From32(src1: bv128, src2: bv32) returns (dst: bv128)
{
    if ($Ge'Bv32'(src2, 128bv32)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv128'(src1, 0bv96 ++ src2);
}

procedure {:inline 1} $CastBv64to128(src: bv64) returns (dst: bv128)
{
    dst := 0bv64 ++ src;
}


function $castBv64to128(src: bv64) returns (bv128)
{
    0bv64 ++ src
}


function $shlBv128From64(src1: bv128, src2: bv64) returns (bv128)
{
    $Shl'Bv128'(src1, 0bv64 ++ src2)
}

procedure {:inline 1} $ShlBv128From64(src1: bv128, src2: bv64) returns (dst: bv128)
{
    if ($Ge'Bv64'(src2, 128bv64)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv128'(src1, 0bv64 ++ src2);
}

function $shrBv128From64(src1: bv128, src2: bv64) returns (bv128)
{
    $Shr'Bv128'(src1, 0bv64 ++ src2)
}

procedure {:inline 1} $ShrBv128From64(src1: bv128, src2: bv64) returns (dst: bv128)
{
    if ($Ge'Bv64'(src2, 128bv64)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv128'(src1, 0bv64 ++ src2);
}

procedure {:inline 1} $CastBv128to128(src: bv128) returns (dst: bv128)
{
    dst := src;
}


function $castBv128to128(src: bv128) returns (bv128)
{
    src
}


function $shlBv128From128(src1: bv128, src2: bv128) returns (bv128)
{
    $Shl'Bv128'(src1, src2)
}

procedure {:inline 1} $ShlBv128From128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if ($Ge'Bv128'(src2, 128bv128)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv128'(src1, src2);
}

function $shrBv128From128(src1: bv128, src2: bv128) returns (bv128)
{
    $Shr'Bv128'(src1, src2)
}

procedure {:inline 1} $ShrBv128From128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if ($Ge'Bv128'(src2, 128bv128)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv128'(src1, src2);
}

procedure {:inline 1} $CastBv256to128(src: bv256) returns (dst: bv128)
{
    if ($Gt'Bv256'(src, 340282366920938463463374607431768211455bv256)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[128:0];
}


function $castBv256to128(src: bv256) returns (bv128)
{
    if ($Gt'Bv256'(src, 340282366920938463463374607431768211455bv256)) then
        $Arbitrary_value_of'bv128'()
    else
    src[128:0]
}


function $shlBv128From256(src1: bv128, src2: bv256) returns (bv128)
{
    $Shl'Bv128'(src1, src2[128:0])
}

procedure {:inline 1} $ShlBv128From256(src1: bv128, src2: bv256) returns (dst: bv128)
{
    if ($Ge'Bv256'(src2, 128bv256)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv128'(src1, src2[128:0]);
}

function $shrBv128From256(src1: bv128, src2: bv256) returns (bv128)
{
    $Shr'Bv128'(src1, src2[128:0])
}

procedure {:inline 1} $ShrBv128From256(src1: bv128, src2: bv256) returns (dst: bv128)
{
    if ($Ge'Bv256'(src2, 128bv256)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv128'(src1, src2[128:0]);
}

procedure {:inline 1} $CastBv8to256(src: bv8) returns (dst: bv256)
{
    dst := 0bv248 ++ src;
}


function $castBv8to256(src: bv8) returns (bv256)
{
    0bv248 ++ src
}


function $shlBv256From8(src1: bv256, src2: bv8) returns (bv256)
{
    $Shl'Bv256'(src1, 0bv248 ++ src2)
}

procedure {:inline 1} $ShlBv256From8(src1: bv256, src2: bv8) returns (dst: bv256)
{
    assume $bv2int.8(src2) >= 0 && $bv2int.8(src2) < 256;
    dst := $Shl'Bv256'(src1, 0bv248 ++ src2);
}

function $shrBv256From8(src1: bv256, src2: bv8) returns (bv256)
{
    $Shr'Bv256'(src1, 0bv248 ++ src2)
}

procedure {:inline 1} $ShrBv256From8(src1: bv256, src2: bv8) returns (dst: bv256)
{
    assume $bv2int.8(src2) >= 0 && $bv2int.8(src2) < 256;
    dst := $Shr'Bv256'(src1, 0bv248 ++ src2);
}

procedure {:inline 1} $CastBv16to256(src: bv16) returns (dst: bv256)
{
    dst := 0bv240 ++ src;
}



function $shlBv256From16(src1: bv256, src2: bv16) returns (bv256)
{
    $Shl'Bv256'(src1, 0bv240 ++ src2)
}

procedure {:inline 1} $ShlBv256From16(src1: bv256, src2: bv16) returns (dst: bv256)
{
    if ($Ge'Bv16'(src2, 256bv16)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv256'(src1, 0bv240 ++ src2);
}

function $shrBv256From16(src1: bv256, src2: bv16) returns (bv256)
{
    $Shr'Bv256'(src1, 0bv240 ++ src2)
}

procedure {:inline 1} $ShrBv256From16(src1: bv256, src2: bv16) returns (dst: bv256)
{
    if ($Ge'Bv16'(src2, 256bv16)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv256'(src1, 0bv240 ++ src2);
}

procedure {:inline 1} $CastBv32to256(src: bv32) returns (dst: bv256)
{
    dst := 0bv224 ++ src;
}



function $shlBv256From32(src1: bv256, src2: bv32) returns (bv256)
{
    $Shl'Bv256'(src1, 0bv224 ++ src2)
}

procedure {:inline 1} $ShlBv256From32(src1: bv256, src2: bv32) returns (dst: bv256)
{
    if ($Ge'Bv32'(src2, 256bv32)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv256'(src1, 0bv224 ++ src2);
}

function $shrBv256From32(src1: bv256, src2: bv32) returns (bv256)
{
    $Shr'Bv256'(src1, 0bv224 ++ src2)
}

procedure {:inline 1} $ShrBv256From32(src1: bv256, src2: bv32) returns (dst: bv256)
{
    if ($Ge'Bv32'(src2, 256bv32)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv256'(src1, 0bv224 ++ src2);
}

procedure {:inline 1} $CastBv64to256(src: bv64) returns (dst: bv256)
{
    dst := 0bv192 ++ src;
}


function $castBv64to256(src: bv64) returns (bv256)
{
    0bv192 ++ src
}


function $shlBv256From64(src1: bv256, src2: bv64) returns (bv256)
{
    $Shl'Bv256'(src1, 0bv192 ++ src2)
}

procedure {:inline 1} $ShlBv256From64(src1: bv256, src2: bv64) returns (dst: bv256)
{
    if ($Ge'Bv64'(src2, 256bv64)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv256'(src1, 0bv192 ++ src2);
}

function $shrBv256From64(src1: bv256, src2: bv64) returns (bv256)
{
    $Shr'Bv256'(src1, 0bv192 ++ src2)
}

procedure {:inline 1} $ShrBv256From64(src1: bv256, src2: bv64) returns (dst: bv256)
{
    if ($Ge'Bv64'(src2, 256bv64)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv256'(src1, 0bv192 ++ src2);
}

procedure {:inline 1} $CastBv128to256(src: bv128) returns (dst: bv256)
{
    dst := 0bv128 ++ src;
}


function $castBv128to256(src: bv128) returns (bv256)
{
    0bv128 ++ src
}


function $shlBv256From128(src1: bv256, src2: bv128) returns (bv256)
{
    $Shl'Bv256'(src1, 0bv128 ++ src2)
}

procedure {:inline 1} $ShlBv256From128(src1: bv256, src2: bv128) returns (dst: bv256)
{
    if ($Ge'Bv128'(src2, 256bv128)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv256'(src1, 0bv128 ++ src2);
}

function $shrBv256From128(src1: bv256, src2: bv128) returns (bv256)
{
    $Shr'Bv256'(src1, 0bv128 ++ src2)
}

procedure {:inline 1} $ShrBv256From128(src1: bv256, src2: bv128) returns (dst: bv256)
{
    if ($Ge'Bv128'(src2, 256bv128)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv256'(src1, 0bv128 ++ src2);
}

procedure {:inline 1} $CastBv256to256(src: bv256) returns (dst: bv256)
{
    dst := src;
}


function $castBv256to256(src: bv256) returns (bv256)
{
    src
}


function $shlBv256From256(src1: bv256, src2: bv256) returns (bv256)
{
    $Shl'Bv256'(src1, src2)
}

procedure {:inline 1} $ShlBv256From256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if ($Ge'Bv256'(src2, 256bv256)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv256'(src1, src2);
}

function $shrBv256From256(src1: bv256, src2: bv256) returns (bv256)
{
    $Shr'Bv256'(src1, src2)
}

procedure {:inline 1} $ShrBv256From256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if ($Ge'Bv256'(src2, 256bv256)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv256'(src1, src2);
}

procedure {:inline 1} $ShlU16(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 16) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shlU16(src1, src2);
}

procedure {:inline 1} $ShlU32(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 32) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shlU32(src1, src2);
}

procedure {:inline 1} $ShlU64(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 64) {
       call $ExecFailureAbort();
       return;
    }
    dst := $shlU64(src1, src2);
}

procedure {:inline 1} $ShlU128(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 128) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shlU128(src1, src2);
}

procedure {:inline 1} $ShlU256(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    dst := $shlU256(src1, src2);
}

procedure {:inline 1} $Shr(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    dst := $shr(src1, src2);
}

procedure {:inline 1} $ShrU8(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 8) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shr(src1, src2);
}

procedure {:inline 1} $ShrU16(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 16) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shr(src1, src2);
}

procedure {:inline 1} $ShrU32(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 32) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shr(src1, src2);
}

procedure {:inline 1} $ShrU64(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 64) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shr(src1, src2);
}

procedure {:inline 1} $ShrU128(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 128) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shr(src1, src2);
}

procedure {:inline 1} $ShrU256(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    dst := $shr(src1, src2);
}

procedure {:inline 1} $MulU8(src1: int, src2: int) returns (dst: int)
{
    if (src1 * src2 > $MAX_U8) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 * src2;
}

procedure {:inline 1} $MulU16(src1: int, src2: int) returns (dst: int)
{
    if (src1 * src2 > $MAX_U16) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 * src2;
}

procedure {:inline 1} $MulU32(src1: int, src2: int) returns (dst: int)
{
    if (src1 * src2 > $MAX_U32) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 * src2;
}

procedure {:inline 1} $MulU64(src1: int, src2: int) returns (dst: int)
{
    if (src1 * src2 > $MAX_U64) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 * src2;
}

procedure {:inline 1} $MulU128(src1: int, src2: int) returns (dst: int)
{
    if (src1 * src2 > $MAX_U128) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 * src2;
}

procedure {:inline 1} $MulU256(src1: int, src2: int) returns (dst: int)
{
    if (src1 * src2 > $MAX_U256) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 * src2;
}

procedure {:inline 1} $Div(src1: int, src2: int) returns (dst: int)
{
    if (src2 == 0) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 div src2;
}

procedure {:inline 1} $Mod(src1: int, src2: int) returns (dst: int)
{
    if (src2 == 0) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 mod src2;
}

procedure {:inline 1} $ArithBinaryUnimplemented(src1: int, src2: int) returns (dst: int);

procedure {:inline 1} $Lt(src1: int, src2: int) returns (dst: bool)
{
    dst := src1 < src2;
}

procedure {:inline 1} $Gt(src1: int, src2: int) returns (dst: bool)
{
    dst := src1 > src2;
}

procedure {:inline 1} $Le(src1: int, src2: int) returns (dst: bool)
{
    dst := src1 <= src2;
}

procedure {:inline 1} $Ge(src1: int, src2: int) returns (dst: bool)
{
    dst := src1 >= src2;
}

procedure {:inline 1} $And(src1: bool, src2: bool) returns (dst: bool)
{
    dst := src1 && src2;
}

procedure {:inline 1} $Or(src1: bool, src2: bool) returns (dst: bool)
{
    dst := src1 || src2;
}

procedure {:inline 1} $Not(src: bool) returns (dst: bool)
{
    dst := !src;
}

// Pack and Unpack are auto-generated for each type T


// ==================================================================================
// Native Vector

function {:inline} $SliceVecByRange<T>(v: Vec T, r: $Range): Vec T {
    SliceVec(v, r->lb, r->ub)
}

// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `#0`

// Not inlined. It appears faster this way.
function $IsEqual'vec'#0''(v1: Vec (#0), v2: Vec (#0)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'#0'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'#0''(v: Vec (#0), prefix: Vec (#0)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'#0'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'#0''(v: Vec (#0), suffix: Vec (#0)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'#0'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'#0''(v: Vec (#0)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'#0'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'#0'(v: Vec (#0), e: #0): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'#0'(ReadVec(v, i), e))
}

function $IndexOfVec'#0'(v: Vec (#0), e: #0): int;
axiom (forall v: Vec (#0), e: #0:: {$IndexOfVec'#0'(v, e)}
    (var i := $IndexOfVec'#0'(v, e);
     if (!$ContainsVec'#0'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'#0'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'#0'(ReadVec(v, j), e))));


function {:inline} $RangeVec'#0'(v: Vec (#0)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'#0'(): Vec (#0) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'#0'() returns (v: Vec (#0)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'#0'(): Vec (#0) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'#0'(v: Vec (#0)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'#0'(m: $Mutation (Vec (#0)), val: #0) returns (m': $Mutation (Vec (#0))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'#0'(v: Vec (#0), val: #0): Vec (#0) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'#0'(m: $Mutation (Vec (#0))) returns (e: #0, m': $Mutation (Vec (#0))) {
    var v: Vec (#0);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'#0'(m: $Mutation (Vec (#0)), other: Vec (#0)) returns (m': $Mutation (Vec (#0))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'#0'(m: $Mutation (Vec (#0))) returns (m': $Mutation (Vec (#0))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'#0'(m: $Mutation (Vec (#0)), other: Vec (#0)) returns (m': $Mutation (Vec (#0))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'#0'(m: $Mutation (Vec (#0)), new_len: int) returns (v: (Vec (#0)), m': $Mutation (Vec (#0))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'#0'(m: $Mutation (Vec (#0)), new_len: int) returns (v: (Vec (#0)), m': $Mutation (Vec (#0))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'#0'(m: $Mutation (Vec (#0)), left: int, right: int) returns (m': $Mutation (Vec (#0))) {
    var left_vec: Vec (#0);
    var mid_vec: Vec (#0);
    var right_vec: Vec (#0);
    var v: Vec (#0);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'#0'(m: $Mutation (Vec (#0)), rot: int) returns (n: int, m': $Mutation (Vec (#0))) {
    var v: Vec (#0);
    var len: int;
    var left_vec: Vec (#0);
    var right_vec: Vec (#0);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'#0'(m: $Mutation (Vec (#0)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec (#0))) {
    var left_vec: Vec (#0);
    var mid_vec: Vec (#0);
    var right_vec: Vec (#0);
    var mid_left_vec: Vec (#0);
    var mid_right_vec: Vec (#0);
    var v: Vec (#0);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'#0'(m: $Mutation (Vec (#0)), i: int, e: #0) returns (m': $Mutation (Vec (#0))) {
    var left_vec: Vec (#0);
    var right_vec: Vec (#0);
    var v: Vec (#0);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'#0'(v: Vec (#0)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'#0'(v: Vec (#0)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'#0'(v: Vec (#0), i: int) returns (dst: #0) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'#0'(v: Vec (#0), i: int): #0 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'#0'(m: $Mutation (Vec (#0)), index: int)
returns (dst: $Mutation (#0), m': $Mutation (Vec (#0)))
{
    var v: Vec (#0);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'#0'(v: Vec (#0), i: int): #0 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'#0'(v: Vec (#0)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'#0'(m: $Mutation (Vec (#0)), i: int, j: int) returns (m': $Mutation (Vec (#0)))
{
    var v: Vec (#0);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'#0'(v: Vec (#0), i: int, j: int): Vec (#0) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'#0'(m: $Mutation (Vec (#0)), i: int) returns (e: #0, m': $Mutation (Vec (#0)))
{
    var v: Vec (#0);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'#0'(m: $Mutation (Vec (#0)), i: int) returns (e: #0, m': $Mutation (Vec (#0)))
{
    var len: int;
    var v: Vec (#0);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'#0'(v: Vec (#0), e: #0) returns (res: bool)  {
    res := $ContainsVec'#0'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'#0'(v: Vec (#0), e: #0) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'#0'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$1_aggregator_Aggregator`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$1_aggregator_Aggregator''(v1: Vec ($1_aggregator_Aggregator), v2: Vec ($1_aggregator_Aggregator)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$1_aggregator_Aggregator'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$1_aggregator_Aggregator''(v: Vec ($1_aggregator_Aggregator), prefix: Vec ($1_aggregator_Aggregator)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$1_aggregator_Aggregator'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$1_aggregator_Aggregator''(v: Vec ($1_aggregator_Aggregator), suffix: Vec ($1_aggregator_Aggregator)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$1_aggregator_Aggregator'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$1_aggregator_Aggregator''(v: Vec ($1_aggregator_Aggregator)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$1_aggregator_Aggregator'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), e: $1_aggregator_Aggregator): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_aggregator_Aggregator'(ReadVec(v, i), e))
}

function $IndexOfVec'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), e: $1_aggregator_Aggregator): int;
axiom (forall v: Vec ($1_aggregator_Aggregator), e: $1_aggregator_Aggregator:: {$IndexOfVec'$1_aggregator_Aggregator'(v, e)}
    (var i := $IndexOfVec'$1_aggregator_Aggregator'(v, e);
     if (!$ContainsVec'$1_aggregator_Aggregator'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_aggregator_Aggregator'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$1_aggregator_Aggregator'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$1_aggregator_Aggregator'(): Vec ($1_aggregator_Aggregator) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$1_aggregator_Aggregator'() returns (v: Vec ($1_aggregator_Aggregator)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$1_aggregator_Aggregator'(): Vec ($1_aggregator_Aggregator) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), val: $1_aggregator_Aggregator) returns (m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), val: $1_aggregator_Aggregator): Vec ($1_aggregator_Aggregator) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator))) returns (e: $1_aggregator_Aggregator, m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    var v: Vec ($1_aggregator_Aggregator);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), other: Vec ($1_aggregator_Aggregator)) returns (m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator))) returns (m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), other: Vec ($1_aggregator_Aggregator)) returns (m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), new_len: int) returns (v: (Vec ($1_aggregator_Aggregator)), m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), new_len: int) returns (v: (Vec ($1_aggregator_Aggregator)), m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), left: int, right: int) returns (m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    var left_vec: Vec ($1_aggregator_Aggregator);
    var mid_vec: Vec ($1_aggregator_Aggregator);
    var right_vec: Vec ($1_aggregator_Aggregator);
    var v: Vec ($1_aggregator_Aggregator);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), rot: int) returns (n: int, m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    var v: Vec ($1_aggregator_Aggregator);
    var len: int;
    var left_vec: Vec ($1_aggregator_Aggregator);
    var right_vec: Vec ($1_aggregator_Aggregator);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    var left_vec: Vec ($1_aggregator_Aggregator);
    var mid_vec: Vec ($1_aggregator_Aggregator);
    var right_vec: Vec ($1_aggregator_Aggregator);
    var mid_left_vec: Vec ($1_aggregator_Aggregator);
    var mid_right_vec: Vec ($1_aggregator_Aggregator);
    var v: Vec ($1_aggregator_Aggregator);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), i: int, e: $1_aggregator_Aggregator) returns (m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    var left_vec: Vec ($1_aggregator_Aggregator);
    var right_vec: Vec ($1_aggregator_Aggregator);
    var v: Vec ($1_aggregator_Aggregator);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), i: int) returns (dst: $1_aggregator_Aggregator) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), i: int): $1_aggregator_Aggregator {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), index: int)
returns (dst: $Mutation ($1_aggregator_Aggregator), m': $Mutation (Vec ($1_aggregator_Aggregator)))
{
    var v: Vec ($1_aggregator_Aggregator);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), i: int): $1_aggregator_Aggregator {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), i: int, j: int) returns (m': $Mutation (Vec ($1_aggregator_Aggregator)))
{
    var v: Vec ($1_aggregator_Aggregator);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), i: int, j: int): Vec ($1_aggregator_Aggregator) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), i: int) returns (e: $1_aggregator_Aggregator, m': $Mutation (Vec ($1_aggregator_Aggregator)))
{
    var v: Vec ($1_aggregator_Aggregator);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), i: int) returns (e: $1_aggregator_Aggregator, m': $Mutation (Vec ($1_aggregator_Aggregator)))
{
    var len: int;
    var v: Vec ($1_aggregator_Aggregator);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), e: $1_aggregator_Aggregator) returns (res: bool)  {
    res := $ContainsVec'$1_aggregator_Aggregator'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), e: $1_aggregator_Aggregator) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$1_aggregator_Aggregator'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$1_aptos_coin_AptosCoin`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$1_aptos_coin_AptosCoin''(v1: Vec ($1_aptos_coin_AptosCoin), v2: Vec ($1_aptos_coin_AptosCoin)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$1_aptos_coin_AptosCoin'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$1_aptos_coin_AptosCoin''(v: Vec ($1_aptos_coin_AptosCoin), prefix: Vec ($1_aptos_coin_AptosCoin)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$1_aptos_coin_AptosCoin'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$1_aptos_coin_AptosCoin''(v: Vec ($1_aptos_coin_AptosCoin), suffix: Vec ($1_aptos_coin_AptosCoin)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$1_aptos_coin_AptosCoin'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$1_aptos_coin_AptosCoin''(v: Vec ($1_aptos_coin_AptosCoin)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$1_aptos_coin_AptosCoin'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$1_aptos_coin_AptosCoin'(v: Vec ($1_aptos_coin_AptosCoin), e: $1_aptos_coin_AptosCoin): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_aptos_coin_AptosCoin'(ReadVec(v, i), e))
}

function $IndexOfVec'$1_aptos_coin_AptosCoin'(v: Vec ($1_aptos_coin_AptosCoin), e: $1_aptos_coin_AptosCoin): int;
axiom (forall v: Vec ($1_aptos_coin_AptosCoin), e: $1_aptos_coin_AptosCoin:: {$IndexOfVec'$1_aptos_coin_AptosCoin'(v, e)}
    (var i := $IndexOfVec'$1_aptos_coin_AptosCoin'(v, e);
     if (!$ContainsVec'$1_aptos_coin_AptosCoin'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_aptos_coin_AptosCoin'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$1_aptos_coin_AptosCoin'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$1_aptos_coin_AptosCoin'(v: Vec ($1_aptos_coin_AptosCoin)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$1_aptos_coin_AptosCoin'(): Vec ($1_aptos_coin_AptosCoin) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$1_aptos_coin_AptosCoin'() returns (v: Vec ($1_aptos_coin_AptosCoin)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$1_aptos_coin_AptosCoin'(): Vec ($1_aptos_coin_AptosCoin) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$1_aptos_coin_AptosCoin'(v: Vec ($1_aptos_coin_AptosCoin)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$1_aptos_coin_AptosCoin'(m: $Mutation (Vec ($1_aptos_coin_AptosCoin)), val: $1_aptos_coin_AptosCoin) returns (m': $Mutation (Vec ($1_aptos_coin_AptosCoin))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$1_aptos_coin_AptosCoin'(v: Vec ($1_aptos_coin_AptosCoin), val: $1_aptos_coin_AptosCoin): Vec ($1_aptos_coin_AptosCoin) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$1_aptos_coin_AptosCoin'(m: $Mutation (Vec ($1_aptos_coin_AptosCoin))) returns (e: $1_aptos_coin_AptosCoin, m': $Mutation (Vec ($1_aptos_coin_AptosCoin))) {
    var v: Vec ($1_aptos_coin_AptosCoin);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$1_aptos_coin_AptosCoin'(m: $Mutation (Vec ($1_aptos_coin_AptosCoin)), other: Vec ($1_aptos_coin_AptosCoin)) returns (m': $Mutation (Vec ($1_aptos_coin_AptosCoin))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$1_aptos_coin_AptosCoin'(m: $Mutation (Vec ($1_aptos_coin_AptosCoin))) returns (m': $Mutation (Vec ($1_aptos_coin_AptosCoin))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$1_aptos_coin_AptosCoin'(m: $Mutation (Vec ($1_aptos_coin_AptosCoin)), other: Vec ($1_aptos_coin_AptosCoin)) returns (m': $Mutation (Vec ($1_aptos_coin_AptosCoin))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$1_aptos_coin_AptosCoin'(m: $Mutation (Vec ($1_aptos_coin_AptosCoin)), new_len: int) returns (v: (Vec ($1_aptos_coin_AptosCoin)), m': $Mutation (Vec ($1_aptos_coin_AptosCoin))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$1_aptos_coin_AptosCoin'(m: $Mutation (Vec ($1_aptos_coin_AptosCoin)), new_len: int) returns (v: (Vec ($1_aptos_coin_AptosCoin)), m': $Mutation (Vec ($1_aptos_coin_AptosCoin))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$1_aptos_coin_AptosCoin'(m: $Mutation (Vec ($1_aptos_coin_AptosCoin)), left: int, right: int) returns (m': $Mutation (Vec ($1_aptos_coin_AptosCoin))) {
    var left_vec: Vec ($1_aptos_coin_AptosCoin);
    var mid_vec: Vec ($1_aptos_coin_AptosCoin);
    var right_vec: Vec ($1_aptos_coin_AptosCoin);
    var v: Vec ($1_aptos_coin_AptosCoin);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$1_aptos_coin_AptosCoin'(m: $Mutation (Vec ($1_aptos_coin_AptosCoin)), rot: int) returns (n: int, m': $Mutation (Vec ($1_aptos_coin_AptosCoin))) {
    var v: Vec ($1_aptos_coin_AptosCoin);
    var len: int;
    var left_vec: Vec ($1_aptos_coin_AptosCoin);
    var right_vec: Vec ($1_aptos_coin_AptosCoin);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$1_aptos_coin_AptosCoin'(m: $Mutation (Vec ($1_aptos_coin_AptosCoin)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($1_aptos_coin_AptosCoin))) {
    var left_vec: Vec ($1_aptos_coin_AptosCoin);
    var mid_vec: Vec ($1_aptos_coin_AptosCoin);
    var right_vec: Vec ($1_aptos_coin_AptosCoin);
    var mid_left_vec: Vec ($1_aptos_coin_AptosCoin);
    var mid_right_vec: Vec ($1_aptos_coin_AptosCoin);
    var v: Vec ($1_aptos_coin_AptosCoin);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$1_aptos_coin_AptosCoin'(m: $Mutation (Vec ($1_aptos_coin_AptosCoin)), i: int, e: $1_aptos_coin_AptosCoin) returns (m': $Mutation (Vec ($1_aptos_coin_AptosCoin))) {
    var left_vec: Vec ($1_aptos_coin_AptosCoin);
    var right_vec: Vec ($1_aptos_coin_AptosCoin);
    var v: Vec ($1_aptos_coin_AptosCoin);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$1_aptos_coin_AptosCoin'(v: Vec ($1_aptos_coin_AptosCoin)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$1_aptos_coin_AptosCoin'(v: Vec ($1_aptos_coin_AptosCoin)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$1_aptos_coin_AptosCoin'(v: Vec ($1_aptos_coin_AptosCoin), i: int) returns (dst: $1_aptos_coin_AptosCoin) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$1_aptos_coin_AptosCoin'(v: Vec ($1_aptos_coin_AptosCoin), i: int): $1_aptos_coin_AptosCoin {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$1_aptos_coin_AptosCoin'(m: $Mutation (Vec ($1_aptos_coin_AptosCoin)), index: int)
returns (dst: $Mutation ($1_aptos_coin_AptosCoin), m': $Mutation (Vec ($1_aptos_coin_AptosCoin)))
{
    var v: Vec ($1_aptos_coin_AptosCoin);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$1_aptos_coin_AptosCoin'(v: Vec ($1_aptos_coin_AptosCoin), i: int): $1_aptos_coin_AptosCoin {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$1_aptos_coin_AptosCoin'(v: Vec ($1_aptos_coin_AptosCoin)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$1_aptos_coin_AptosCoin'(m: $Mutation (Vec ($1_aptos_coin_AptosCoin)), i: int, j: int) returns (m': $Mutation (Vec ($1_aptos_coin_AptosCoin)))
{
    var v: Vec ($1_aptos_coin_AptosCoin);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$1_aptos_coin_AptosCoin'(v: Vec ($1_aptos_coin_AptosCoin), i: int, j: int): Vec ($1_aptos_coin_AptosCoin) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$1_aptos_coin_AptosCoin'(m: $Mutation (Vec ($1_aptos_coin_AptosCoin)), i: int) returns (e: $1_aptos_coin_AptosCoin, m': $Mutation (Vec ($1_aptos_coin_AptosCoin)))
{
    var v: Vec ($1_aptos_coin_AptosCoin);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$1_aptos_coin_AptosCoin'(m: $Mutation (Vec ($1_aptos_coin_AptosCoin)), i: int) returns (e: $1_aptos_coin_AptosCoin, m': $Mutation (Vec ($1_aptos_coin_AptosCoin)))
{
    var len: int;
    var v: Vec ($1_aptos_coin_AptosCoin);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$1_aptos_coin_AptosCoin'(v: Vec ($1_aptos_coin_AptosCoin), e: $1_aptos_coin_AptosCoin) returns (res: bool)  {
    res := $ContainsVec'$1_aptos_coin_AptosCoin'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$1_aptos_coin_AptosCoin'(v: Vec ($1_aptos_coin_AptosCoin), e: $1_aptos_coin_AptosCoin) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$1_aptos_coin_AptosCoin'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$1_function_info_FunctionInfo`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$1_function_info_FunctionInfo''(v1: Vec ($1_function_info_FunctionInfo), v2: Vec ($1_function_info_FunctionInfo)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$1_function_info_FunctionInfo'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$1_function_info_FunctionInfo''(v: Vec ($1_function_info_FunctionInfo), prefix: Vec ($1_function_info_FunctionInfo)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$1_function_info_FunctionInfo'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$1_function_info_FunctionInfo''(v: Vec ($1_function_info_FunctionInfo), suffix: Vec ($1_function_info_FunctionInfo)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$1_function_info_FunctionInfo'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$1_function_info_FunctionInfo''(v: Vec ($1_function_info_FunctionInfo)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$1_function_info_FunctionInfo'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$1_function_info_FunctionInfo'(v: Vec ($1_function_info_FunctionInfo), e: $1_function_info_FunctionInfo): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_function_info_FunctionInfo'(ReadVec(v, i), e))
}

function $IndexOfVec'$1_function_info_FunctionInfo'(v: Vec ($1_function_info_FunctionInfo), e: $1_function_info_FunctionInfo): int;
axiom (forall v: Vec ($1_function_info_FunctionInfo), e: $1_function_info_FunctionInfo:: {$IndexOfVec'$1_function_info_FunctionInfo'(v, e)}
    (var i := $IndexOfVec'$1_function_info_FunctionInfo'(v, e);
     if (!$ContainsVec'$1_function_info_FunctionInfo'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_function_info_FunctionInfo'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$1_function_info_FunctionInfo'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$1_function_info_FunctionInfo'(v: Vec ($1_function_info_FunctionInfo)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$1_function_info_FunctionInfo'(): Vec ($1_function_info_FunctionInfo) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$1_function_info_FunctionInfo'() returns (v: Vec ($1_function_info_FunctionInfo)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$1_function_info_FunctionInfo'(): Vec ($1_function_info_FunctionInfo) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$1_function_info_FunctionInfo'(v: Vec ($1_function_info_FunctionInfo)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$1_function_info_FunctionInfo'(m: $Mutation (Vec ($1_function_info_FunctionInfo)), val: $1_function_info_FunctionInfo) returns (m': $Mutation (Vec ($1_function_info_FunctionInfo))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$1_function_info_FunctionInfo'(v: Vec ($1_function_info_FunctionInfo), val: $1_function_info_FunctionInfo): Vec ($1_function_info_FunctionInfo) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$1_function_info_FunctionInfo'(m: $Mutation (Vec ($1_function_info_FunctionInfo))) returns (e: $1_function_info_FunctionInfo, m': $Mutation (Vec ($1_function_info_FunctionInfo))) {
    var v: Vec ($1_function_info_FunctionInfo);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$1_function_info_FunctionInfo'(m: $Mutation (Vec ($1_function_info_FunctionInfo)), other: Vec ($1_function_info_FunctionInfo)) returns (m': $Mutation (Vec ($1_function_info_FunctionInfo))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$1_function_info_FunctionInfo'(m: $Mutation (Vec ($1_function_info_FunctionInfo))) returns (m': $Mutation (Vec ($1_function_info_FunctionInfo))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$1_function_info_FunctionInfo'(m: $Mutation (Vec ($1_function_info_FunctionInfo)), other: Vec ($1_function_info_FunctionInfo)) returns (m': $Mutation (Vec ($1_function_info_FunctionInfo))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$1_function_info_FunctionInfo'(m: $Mutation (Vec ($1_function_info_FunctionInfo)), new_len: int) returns (v: (Vec ($1_function_info_FunctionInfo)), m': $Mutation (Vec ($1_function_info_FunctionInfo))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$1_function_info_FunctionInfo'(m: $Mutation (Vec ($1_function_info_FunctionInfo)), new_len: int) returns (v: (Vec ($1_function_info_FunctionInfo)), m': $Mutation (Vec ($1_function_info_FunctionInfo))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$1_function_info_FunctionInfo'(m: $Mutation (Vec ($1_function_info_FunctionInfo)), left: int, right: int) returns (m': $Mutation (Vec ($1_function_info_FunctionInfo))) {
    var left_vec: Vec ($1_function_info_FunctionInfo);
    var mid_vec: Vec ($1_function_info_FunctionInfo);
    var right_vec: Vec ($1_function_info_FunctionInfo);
    var v: Vec ($1_function_info_FunctionInfo);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$1_function_info_FunctionInfo'(m: $Mutation (Vec ($1_function_info_FunctionInfo)), rot: int) returns (n: int, m': $Mutation (Vec ($1_function_info_FunctionInfo))) {
    var v: Vec ($1_function_info_FunctionInfo);
    var len: int;
    var left_vec: Vec ($1_function_info_FunctionInfo);
    var right_vec: Vec ($1_function_info_FunctionInfo);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$1_function_info_FunctionInfo'(m: $Mutation (Vec ($1_function_info_FunctionInfo)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($1_function_info_FunctionInfo))) {
    var left_vec: Vec ($1_function_info_FunctionInfo);
    var mid_vec: Vec ($1_function_info_FunctionInfo);
    var right_vec: Vec ($1_function_info_FunctionInfo);
    var mid_left_vec: Vec ($1_function_info_FunctionInfo);
    var mid_right_vec: Vec ($1_function_info_FunctionInfo);
    var v: Vec ($1_function_info_FunctionInfo);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$1_function_info_FunctionInfo'(m: $Mutation (Vec ($1_function_info_FunctionInfo)), i: int, e: $1_function_info_FunctionInfo) returns (m': $Mutation (Vec ($1_function_info_FunctionInfo))) {
    var left_vec: Vec ($1_function_info_FunctionInfo);
    var right_vec: Vec ($1_function_info_FunctionInfo);
    var v: Vec ($1_function_info_FunctionInfo);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$1_function_info_FunctionInfo'(v: Vec ($1_function_info_FunctionInfo)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$1_function_info_FunctionInfo'(v: Vec ($1_function_info_FunctionInfo)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$1_function_info_FunctionInfo'(v: Vec ($1_function_info_FunctionInfo), i: int) returns (dst: $1_function_info_FunctionInfo) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$1_function_info_FunctionInfo'(v: Vec ($1_function_info_FunctionInfo), i: int): $1_function_info_FunctionInfo {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$1_function_info_FunctionInfo'(m: $Mutation (Vec ($1_function_info_FunctionInfo)), index: int)
returns (dst: $Mutation ($1_function_info_FunctionInfo), m': $Mutation (Vec ($1_function_info_FunctionInfo)))
{
    var v: Vec ($1_function_info_FunctionInfo);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$1_function_info_FunctionInfo'(v: Vec ($1_function_info_FunctionInfo), i: int): $1_function_info_FunctionInfo {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$1_function_info_FunctionInfo'(v: Vec ($1_function_info_FunctionInfo)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$1_function_info_FunctionInfo'(m: $Mutation (Vec ($1_function_info_FunctionInfo)), i: int, j: int) returns (m': $Mutation (Vec ($1_function_info_FunctionInfo)))
{
    var v: Vec ($1_function_info_FunctionInfo);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$1_function_info_FunctionInfo'(v: Vec ($1_function_info_FunctionInfo), i: int, j: int): Vec ($1_function_info_FunctionInfo) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$1_function_info_FunctionInfo'(m: $Mutation (Vec ($1_function_info_FunctionInfo)), i: int) returns (e: $1_function_info_FunctionInfo, m': $Mutation (Vec ($1_function_info_FunctionInfo)))
{
    var v: Vec ($1_function_info_FunctionInfo);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$1_function_info_FunctionInfo'(m: $Mutation (Vec ($1_function_info_FunctionInfo)), i: int) returns (e: $1_function_info_FunctionInfo, m': $Mutation (Vec ($1_function_info_FunctionInfo)))
{
    var len: int;
    var v: Vec ($1_function_info_FunctionInfo);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$1_function_info_FunctionInfo'(v: Vec ($1_function_info_FunctionInfo), e: $1_function_info_FunctionInfo) returns (res: bool)  {
    res := $ContainsVec'$1_function_info_FunctionInfo'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$1_function_info_FunctionInfo'(v: Vec ($1_function_info_FunctionInfo), e: $1_function_info_FunctionInfo) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$1_function_info_FunctionInfo'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$1_fungible_asset_BurnRef`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$1_fungible_asset_BurnRef''(v1: Vec ($1_fungible_asset_BurnRef), v2: Vec ($1_fungible_asset_BurnRef)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$1_fungible_asset_BurnRef'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$1_fungible_asset_BurnRef''(v: Vec ($1_fungible_asset_BurnRef), prefix: Vec ($1_fungible_asset_BurnRef)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$1_fungible_asset_BurnRef'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$1_fungible_asset_BurnRef''(v: Vec ($1_fungible_asset_BurnRef), suffix: Vec ($1_fungible_asset_BurnRef)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$1_fungible_asset_BurnRef'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$1_fungible_asset_BurnRef''(v: Vec ($1_fungible_asset_BurnRef)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$1_fungible_asset_BurnRef'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$1_fungible_asset_BurnRef'(v: Vec ($1_fungible_asset_BurnRef), e: $1_fungible_asset_BurnRef): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_fungible_asset_BurnRef'(ReadVec(v, i), e))
}

function $IndexOfVec'$1_fungible_asset_BurnRef'(v: Vec ($1_fungible_asset_BurnRef), e: $1_fungible_asset_BurnRef): int;
axiom (forall v: Vec ($1_fungible_asset_BurnRef), e: $1_fungible_asset_BurnRef:: {$IndexOfVec'$1_fungible_asset_BurnRef'(v, e)}
    (var i := $IndexOfVec'$1_fungible_asset_BurnRef'(v, e);
     if (!$ContainsVec'$1_fungible_asset_BurnRef'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_fungible_asset_BurnRef'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$1_fungible_asset_BurnRef'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$1_fungible_asset_BurnRef'(v: Vec ($1_fungible_asset_BurnRef)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$1_fungible_asset_BurnRef'(): Vec ($1_fungible_asset_BurnRef) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$1_fungible_asset_BurnRef'() returns (v: Vec ($1_fungible_asset_BurnRef)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$1_fungible_asset_BurnRef'(): Vec ($1_fungible_asset_BurnRef) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$1_fungible_asset_BurnRef'(v: Vec ($1_fungible_asset_BurnRef)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$1_fungible_asset_BurnRef'(m: $Mutation (Vec ($1_fungible_asset_BurnRef)), val: $1_fungible_asset_BurnRef) returns (m': $Mutation (Vec ($1_fungible_asset_BurnRef))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$1_fungible_asset_BurnRef'(v: Vec ($1_fungible_asset_BurnRef), val: $1_fungible_asset_BurnRef): Vec ($1_fungible_asset_BurnRef) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$1_fungible_asset_BurnRef'(m: $Mutation (Vec ($1_fungible_asset_BurnRef))) returns (e: $1_fungible_asset_BurnRef, m': $Mutation (Vec ($1_fungible_asset_BurnRef))) {
    var v: Vec ($1_fungible_asset_BurnRef);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$1_fungible_asset_BurnRef'(m: $Mutation (Vec ($1_fungible_asset_BurnRef)), other: Vec ($1_fungible_asset_BurnRef)) returns (m': $Mutation (Vec ($1_fungible_asset_BurnRef))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$1_fungible_asset_BurnRef'(m: $Mutation (Vec ($1_fungible_asset_BurnRef))) returns (m': $Mutation (Vec ($1_fungible_asset_BurnRef))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$1_fungible_asset_BurnRef'(m: $Mutation (Vec ($1_fungible_asset_BurnRef)), other: Vec ($1_fungible_asset_BurnRef)) returns (m': $Mutation (Vec ($1_fungible_asset_BurnRef))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$1_fungible_asset_BurnRef'(m: $Mutation (Vec ($1_fungible_asset_BurnRef)), new_len: int) returns (v: (Vec ($1_fungible_asset_BurnRef)), m': $Mutation (Vec ($1_fungible_asset_BurnRef))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$1_fungible_asset_BurnRef'(m: $Mutation (Vec ($1_fungible_asset_BurnRef)), new_len: int) returns (v: (Vec ($1_fungible_asset_BurnRef)), m': $Mutation (Vec ($1_fungible_asset_BurnRef))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$1_fungible_asset_BurnRef'(m: $Mutation (Vec ($1_fungible_asset_BurnRef)), left: int, right: int) returns (m': $Mutation (Vec ($1_fungible_asset_BurnRef))) {
    var left_vec: Vec ($1_fungible_asset_BurnRef);
    var mid_vec: Vec ($1_fungible_asset_BurnRef);
    var right_vec: Vec ($1_fungible_asset_BurnRef);
    var v: Vec ($1_fungible_asset_BurnRef);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$1_fungible_asset_BurnRef'(m: $Mutation (Vec ($1_fungible_asset_BurnRef)), rot: int) returns (n: int, m': $Mutation (Vec ($1_fungible_asset_BurnRef))) {
    var v: Vec ($1_fungible_asset_BurnRef);
    var len: int;
    var left_vec: Vec ($1_fungible_asset_BurnRef);
    var right_vec: Vec ($1_fungible_asset_BurnRef);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$1_fungible_asset_BurnRef'(m: $Mutation (Vec ($1_fungible_asset_BurnRef)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($1_fungible_asset_BurnRef))) {
    var left_vec: Vec ($1_fungible_asset_BurnRef);
    var mid_vec: Vec ($1_fungible_asset_BurnRef);
    var right_vec: Vec ($1_fungible_asset_BurnRef);
    var mid_left_vec: Vec ($1_fungible_asset_BurnRef);
    var mid_right_vec: Vec ($1_fungible_asset_BurnRef);
    var v: Vec ($1_fungible_asset_BurnRef);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$1_fungible_asset_BurnRef'(m: $Mutation (Vec ($1_fungible_asset_BurnRef)), i: int, e: $1_fungible_asset_BurnRef) returns (m': $Mutation (Vec ($1_fungible_asset_BurnRef))) {
    var left_vec: Vec ($1_fungible_asset_BurnRef);
    var right_vec: Vec ($1_fungible_asset_BurnRef);
    var v: Vec ($1_fungible_asset_BurnRef);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$1_fungible_asset_BurnRef'(v: Vec ($1_fungible_asset_BurnRef)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$1_fungible_asset_BurnRef'(v: Vec ($1_fungible_asset_BurnRef)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$1_fungible_asset_BurnRef'(v: Vec ($1_fungible_asset_BurnRef), i: int) returns (dst: $1_fungible_asset_BurnRef) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$1_fungible_asset_BurnRef'(v: Vec ($1_fungible_asset_BurnRef), i: int): $1_fungible_asset_BurnRef {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$1_fungible_asset_BurnRef'(m: $Mutation (Vec ($1_fungible_asset_BurnRef)), index: int)
returns (dst: $Mutation ($1_fungible_asset_BurnRef), m': $Mutation (Vec ($1_fungible_asset_BurnRef)))
{
    var v: Vec ($1_fungible_asset_BurnRef);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$1_fungible_asset_BurnRef'(v: Vec ($1_fungible_asset_BurnRef), i: int): $1_fungible_asset_BurnRef {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$1_fungible_asset_BurnRef'(v: Vec ($1_fungible_asset_BurnRef)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$1_fungible_asset_BurnRef'(m: $Mutation (Vec ($1_fungible_asset_BurnRef)), i: int, j: int) returns (m': $Mutation (Vec ($1_fungible_asset_BurnRef)))
{
    var v: Vec ($1_fungible_asset_BurnRef);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$1_fungible_asset_BurnRef'(v: Vec ($1_fungible_asset_BurnRef), i: int, j: int): Vec ($1_fungible_asset_BurnRef) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$1_fungible_asset_BurnRef'(m: $Mutation (Vec ($1_fungible_asset_BurnRef)), i: int) returns (e: $1_fungible_asset_BurnRef, m': $Mutation (Vec ($1_fungible_asset_BurnRef)))
{
    var v: Vec ($1_fungible_asset_BurnRef);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$1_fungible_asset_BurnRef'(m: $Mutation (Vec ($1_fungible_asset_BurnRef)), i: int) returns (e: $1_fungible_asset_BurnRef, m': $Mutation (Vec ($1_fungible_asset_BurnRef)))
{
    var len: int;
    var v: Vec ($1_fungible_asset_BurnRef);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$1_fungible_asset_BurnRef'(v: Vec ($1_fungible_asset_BurnRef), e: $1_fungible_asset_BurnRef) returns (res: bool)  {
    res := $ContainsVec'$1_fungible_asset_BurnRef'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$1_fungible_asset_BurnRef'(v: Vec ($1_fungible_asset_BurnRef), e: $1_fungible_asset_BurnRef) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$1_fungible_asset_BurnRef'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$1_fungible_asset_FungibleStore`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$1_fungible_asset_FungibleStore''(v1: Vec ($1_fungible_asset_FungibleStore), v2: Vec ($1_fungible_asset_FungibleStore)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$1_fungible_asset_FungibleStore'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$1_fungible_asset_FungibleStore''(v: Vec ($1_fungible_asset_FungibleStore), prefix: Vec ($1_fungible_asset_FungibleStore)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$1_fungible_asset_FungibleStore'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$1_fungible_asset_FungibleStore''(v: Vec ($1_fungible_asset_FungibleStore), suffix: Vec ($1_fungible_asset_FungibleStore)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$1_fungible_asset_FungibleStore'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$1_fungible_asset_FungibleStore''(v: Vec ($1_fungible_asset_FungibleStore)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$1_fungible_asset_FungibleStore'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$1_fungible_asset_FungibleStore'(v: Vec ($1_fungible_asset_FungibleStore), e: $1_fungible_asset_FungibleStore): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_fungible_asset_FungibleStore'(ReadVec(v, i), e))
}

function $IndexOfVec'$1_fungible_asset_FungibleStore'(v: Vec ($1_fungible_asset_FungibleStore), e: $1_fungible_asset_FungibleStore): int;
axiom (forall v: Vec ($1_fungible_asset_FungibleStore), e: $1_fungible_asset_FungibleStore:: {$IndexOfVec'$1_fungible_asset_FungibleStore'(v, e)}
    (var i := $IndexOfVec'$1_fungible_asset_FungibleStore'(v, e);
     if (!$ContainsVec'$1_fungible_asset_FungibleStore'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_fungible_asset_FungibleStore'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$1_fungible_asset_FungibleStore'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$1_fungible_asset_FungibleStore'(v: Vec ($1_fungible_asset_FungibleStore)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$1_fungible_asset_FungibleStore'(): Vec ($1_fungible_asset_FungibleStore) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$1_fungible_asset_FungibleStore'() returns (v: Vec ($1_fungible_asset_FungibleStore)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$1_fungible_asset_FungibleStore'(): Vec ($1_fungible_asset_FungibleStore) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$1_fungible_asset_FungibleStore'(v: Vec ($1_fungible_asset_FungibleStore)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$1_fungible_asset_FungibleStore'(m: $Mutation (Vec ($1_fungible_asset_FungibleStore)), val: $1_fungible_asset_FungibleStore) returns (m': $Mutation (Vec ($1_fungible_asset_FungibleStore))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$1_fungible_asset_FungibleStore'(v: Vec ($1_fungible_asset_FungibleStore), val: $1_fungible_asset_FungibleStore): Vec ($1_fungible_asset_FungibleStore) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$1_fungible_asset_FungibleStore'(m: $Mutation (Vec ($1_fungible_asset_FungibleStore))) returns (e: $1_fungible_asset_FungibleStore, m': $Mutation (Vec ($1_fungible_asset_FungibleStore))) {
    var v: Vec ($1_fungible_asset_FungibleStore);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$1_fungible_asset_FungibleStore'(m: $Mutation (Vec ($1_fungible_asset_FungibleStore)), other: Vec ($1_fungible_asset_FungibleStore)) returns (m': $Mutation (Vec ($1_fungible_asset_FungibleStore))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$1_fungible_asset_FungibleStore'(m: $Mutation (Vec ($1_fungible_asset_FungibleStore))) returns (m': $Mutation (Vec ($1_fungible_asset_FungibleStore))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$1_fungible_asset_FungibleStore'(m: $Mutation (Vec ($1_fungible_asset_FungibleStore)), other: Vec ($1_fungible_asset_FungibleStore)) returns (m': $Mutation (Vec ($1_fungible_asset_FungibleStore))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$1_fungible_asset_FungibleStore'(m: $Mutation (Vec ($1_fungible_asset_FungibleStore)), new_len: int) returns (v: (Vec ($1_fungible_asset_FungibleStore)), m': $Mutation (Vec ($1_fungible_asset_FungibleStore))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$1_fungible_asset_FungibleStore'(m: $Mutation (Vec ($1_fungible_asset_FungibleStore)), new_len: int) returns (v: (Vec ($1_fungible_asset_FungibleStore)), m': $Mutation (Vec ($1_fungible_asset_FungibleStore))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$1_fungible_asset_FungibleStore'(m: $Mutation (Vec ($1_fungible_asset_FungibleStore)), left: int, right: int) returns (m': $Mutation (Vec ($1_fungible_asset_FungibleStore))) {
    var left_vec: Vec ($1_fungible_asset_FungibleStore);
    var mid_vec: Vec ($1_fungible_asset_FungibleStore);
    var right_vec: Vec ($1_fungible_asset_FungibleStore);
    var v: Vec ($1_fungible_asset_FungibleStore);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$1_fungible_asset_FungibleStore'(m: $Mutation (Vec ($1_fungible_asset_FungibleStore)), rot: int) returns (n: int, m': $Mutation (Vec ($1_fungible_asset_FungibleStore))) {
    var v: Vec ($1_fungible_asset_FungibleStore);
    var len: int;
    var left_vec: Vec ($1_fungible_asset_FungibleStore);
    var right_vec: Vec ($1_fungible_asset_FungibleStore);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$1_fungible_asset_FungibleStore'(m: $Mutation (Vec ($1_fungible_asset_FungibleStore)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($1_fungible_asset_FungibleStore))) {
    var left_vec: Vec ($1_fungible_asset_FungibleStore);
    var mid_vec: Vec ($1_fungible_asset_FungibleStore);
    var right_vec: Vec ($1_fungible_asset_FungibleStore);
    var mid_left_vec: Vec ($1_fungible_asset_FungibleStore);
    var mid_right_vec: Vec ($1_fungible_asset_FungibleStore);
    var v: Vec ($1_fungible_asset_FungibleStore);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$1_fungible_asset_FungibleStore'(m: $Mutation (Vec ($1_fungible_asset_FungibleStore)), i: int, e: $1_fungible_asset_FungibleStore) returns (m': $Mutation (Vec ($1_fungible_asset_FungibleStore))) {
    var left_vec: Vec ($1_fungible_asset_FungibleStore);
    var right_vec: Vec ($1_fungible_asset_FungibleStore);
    var v: Vec ($1_fungible_asset_FungibleStore);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$1_fungible_asset_FungibleStore'(v: Vec ($1_fungible_asset_FungibleStore)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$1_fungible_asset_FungibleStore'(v: Vec ($1_fungible_asset_FungibleStore)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$1_fungible_asset_FungibleStore'(v: Vec ($1_fungible_asset_FungibleStore), i: int) returns (dst: $1_fungible_asset_FungibleStore) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$1_fungible_asset_FungibleStore'(v: Vec ($1_fungible_asset_FungibleStore), i: int): $1_fungible_asset_FungibleStore {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$1_fungible_asset_FungibleStore'(m: $Mutation (Vec ($1_fungible_asset_FungibleStore)), index: int)
returns (dst: $Mutation ($1_fungible_asset_FungibleStore), m': $Mutation (Vec ($1_fungible_asset_FungibleStore)))
{
    var v: Vec ($1_fungible_asset_FungibleStore);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$1_fungible_asset_FungibleStore'(v: Vec ($1_fungible_asset_FungibleStore), i: int): $1_fungible_asset_FungibleStore {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$1_fungible_asset_FungibleStore'(v: Vec ($1_fungible_asset_FungibleStore)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$1_fungible_asset_FungibleStore'(m: $Mutation (Vec ($1_fungible_asset_FungibleStore)), i: int, j: int) returns (m': $Mutation (Vec ($1_fungible_asset_FungibleStore)))
{
    var v: Vec ($1_fungible_asset_FungibleStore);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$1_fungible_asset_FungibleStore'(v: Vec ($1_fungible_asset_FungibleStore), i: int, j: int): Vec ($1_fungible_asset_FungibleStore) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$1_fungible_asset_FungibleStore'(m: $Mutation (Vec ($1_fungible_asset_FungibleStore)), i: int) returns (e: $1_fungible_asset_FungibleStore, m': $Mutation (Vec ($1_fungible_asset_FungibleStore)))
{
    var v: Vec ($1_fungible_asset_FungibleStore);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$1_fungible_asset_FungibleStore'(m: $Mutation (Vec ($1_fungible_asset_FungibleStore)), i: int) returns (e: $1_fungible_asset_FungibleStore, m': $Mutation (Vec ($1_fungible_asset_FungibleStore)))
{
    var len: int;
    var v: Vec ($1_fungible_asset_FungibleStore);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$1_fungible_asset_FungibleStore'(v: Vec ($1_fungible_asset_FungibleStore), e: $1_fungible_asset_FungibleStore) returns (res: bool)  {
    res := $ContainsVec'$1_fungible_asset_FungibleStore'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$1_fungible_asset_FungibleStore'(v: Vec ($1_fungible_asset_FungibleStore), e: $1_fungible_asset_FungibleStore) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$1_fungible_asset_FungibleStore'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$1_fungible_asset_MintRef`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$1_fungible_asset_MintRef''(v1: Vec ($1_fungible_asset_MintRef), v2: Vec ($1_fungible_asset_MintRef)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$1_fungible_asset_MintRef'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$1_fungible_asset_MintRef''(v: Vec ($1_fungible_asset_MintRef), prefix: Vec ($1_fungible_asset_MintRef)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$1_fungible_asset_MintRef'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$1_fungible_asset_MintRef''(v: Vec ($1_fungible_asset_MintRef), suffix: Vec ($1_fungible_asset_MintRef)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$1_fungible_asset_MintRef'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$1_fungible_asset_MintRef''(v: Vec ($1_fungible_asset_MintRef)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$1_fungible_asset_MintRef'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$1_fungible_asset_MintRef'(v: Vec ($1_fungible_asset_MintRef), e: $1_fungible_asset_MintRef): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_fungible_asset_MintRef'(ReadVec(v, i), e))
}

function $IndexOfVec'$1_fungible_asset_MintRef'(v: Vec ($1_fungible_asset_MintRef), e: $1_fungible_asset_MintRef): int;
axiom (forall v: Vec ($1_fungible_asset_MintRef), e: $1_fungible_asset_MintRef:: {$IndexOfVec'$1_fungible_asset_MintRef'(v, e)}
    (var i := $IndexOfVec'$1_fungible_asset_MintRef'(v, e);
     if (!$ContainsVec'$1_fungible_asset_MintRef'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_fungible_asset_MintRef'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$1_fungible_asset_MintRef'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$1_fungible_asset_MintRef'(v: Vec ($1_fungible_asset_MintRef)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$1_fungible_asset_MintRef'(): Vec ($1_fungible_asset_MintRef) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$1_fungible_asset_MintRef'() returns (v: Vec ($1_fungible_asset_MintRef)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$1_fungible_asset_MintRef'(): Vec ($1_fungible_asset_MintRef) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$1_fungible_asset_MintRef'(v: Vec ($1_fungible_asset_MintRef)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$1_fungible_asset_MintRef'(m: $Mutation (Vec ($1_fungible_asset_MintRef)), val: $1_fungible_asset_MintRef) returns (m': $Mutation (Vec ($1_fungible_asset_MintRef))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$1_fungible_asset_MintRef'(v: Vec ($1_fungible_asset_MintRef), val: $1_fungible_asset_MintRef): Vec ($1_fungible_asset_MintRef) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$1_fungible_asset_MintRef'(m: $Mutation (Vec ($1_fungible_asset_MintRef))) returns (e: $1_fungible_asset_MintRef, m': $Mutation (Vec ($1_fungible_asset_MintRef))) {
    var v: Vec ($1_fungible_asset_MintRef);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$1_fungible_asset_MintRef'(m: $Mutation (Vec ($1_fungible_asset_MintRef)), other: Vec ($1_fungible_asset_MintRef)) returns (m': $Mutation (Vec ($1_fungible_asset_MintRef))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$1_fungible_asset_MintRef'(m: $Mutation (Vec ($1_fungible_asset_MintRef))) returns (m': $Mutation (Vec ($1_fungible_asset_MintRef))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$1_fungible_asset_MintRef'(m: $Mutation (Vec ($1_fungible_asset_MintRef)), other: Vec ($1_fungible_asset_MintRef)) returns (m': $Mutation (Vec ($1_fungible_asset_MintRef))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$1_fungible_asset_MintRef'(m: $Mutation (Vec ($1_fungible_asset_MintRef)), new_len: int) returns (v: (Vec ($1_fungible_asset_MintRef)), m': $Mutation (Vec ($1_fungible_asset_MintRef))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$1_fungible_asset_MintRef'(m: $Mutation (Vec ($1_fungible_asset_MintRef)), new_len: int) returns (v: (Vec ($1_fungible_asset_MintRef)), m': $Mutation (Vec ($1_fungible_asset_MintRef))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$1_fungible_asset_MintRef'(m: $Mutation (Vec ($1_fungible_asset_MintRef)), left: int, right: int) returns (m': $Mutation (Vec ($1_fungible_asset_MintRef))) {
    var left_vec: Vec ($1_fungible_asset_MintRef);
    var mid_vec: Vec ($1_fungible_asset_MintRef);
    var right_vec: Vec ($1_fungible_asset_MintRef);
    var v: Vec ($1_fungible_asset_MintRef);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$1_fungible_asset_MintRef'(m: $Mutation (Vec ($1_fungible_asset_MintRef)), rot: int) returns (n: int, m': $Mutation (Vec ($1_fungible_asset_MintRef))) {
    var v: Vec ($1_fungible_asset_MintRef);
    var len: int;
    var left_vec: Vec ($1_fungible_asset_MintRef);
    var right_vec: Vec ($1_fungible_asset_MintRef);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$1_fungible_asset_MintRef'(m: $Mutation (Vec ($1_fungible_asset_MintRef)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($1_fungible_asset_MintRef))) {
    var left_vec: Vec ($1_fungible_asset_MintRef);
    var mid_vec: Vec ($1_fungible_asset_MintRef);
    var right_vec: Vec ($1_fungible_asset_MintRef);
    var mid_left_vec: Vec ($1_fungible_asset_MintRef);
    var mid_right_vec: Vec ($1_fungible_asset_MintRef);
    var v: Vec ($1_fungible_asset_MintRef);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$1_fungible_asset_MintRef'(m: $Mutation (Vec ($1_fungible_asset_MintRef)), i: int, e: $1_fungible_asset_MintRef) returns (m': $Mutation (Vec ($1_fungible_asset_MintRef))) {
    var left_vec: Vec ($1_fungible_asset_MintRef);
    var right_vec: Vec ($1_fungible_asset_MintRef);
    var v: Vec ($1_fungible_asset_MintRef);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$1_fungible_asset_MintRef'(v: Vec ($1_fungible_asset_MintRef)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$1_fungible_asset_MintRef'(v: Vec ($1_fungible_asset_MintRef)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$1_fungible_asset_MintRef'(v: Vec ($1_fungible_asset_MintRef), i: int) returns (dst: $1_fungible_asset_MintRef) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$1_fungible_asset_MintRef'(v: Vec ($1_fungible_asset_MintRef), i: int): $1_fungible_asset_MintRef {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$1_fungible_asset_MintRef'(m: $Mutation (Vec ($1_fungible_asset_MintRef)), index: int)
returns (dst: $Mutation ($1_fungible_asset_MintRef), m': $Mutation (Vec ($1_fungible_asset_MintRef)))
{
    var v: Vec ($1_fungible_asset_MintRef);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$1_fungible_asset_MintRef'(v: Vec ($1_fungible_asset_MintRef), i: int): $1_fungible_asset_MintRef {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$1_fungible_asset_MintRef'(v: Vec ($1_fungible_asset_MintRef)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$1_fungible_asset_MintRef'(m: $Mutation (Vec ($1_fungible_asset_MintRef)), i: int, j: int) returns (m': $Mutation (Vec ($1_fungible_asset_MintRef)))
{
    var v: Vec ($1_fungible_asset_MintRef);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$1_fungible_asset_MintRef'(v: Vec ($1_fungible_asset_MintRef), i: int, j: int): Vec ($1_fungible_asset_MintRef) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$1_fungible_asset_MintRef'(m: $Mutation (Vec ($1_fungible_asset_MintRef)), i: int) returns (e: $1_fungible_asset_MintRef, m': $Mutation (Vec ($1_fungible_asset_MintRef)))
{
    var v: Vec ($1_fungible_asset_MintRef);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$1_fungible_asset_MintRef'(m: $Mutation (Vec ($1_fungible_asset_MintRef)), i: int) returns (e: $1_fungible_asset_MintRef, m': $Mutation (Vec ($1_fungible_asset_MintRef)))
{
    var len: int;
    var v: Vec ($1_fungible_asset_MintRef);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$1_fungible_asset_MintRef'(v: Vec ($1_fungible_asset_MintRef), e: $1_fungible_asset_MintRef) returns (res: bool)  {
    res := $ContainsVec'$1_fungible_asset_MintRef'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$1_fungible_asset_MintRef'(v: Vec ($1_fungible_asset_MintRef), e: $1_fungible_asset_MintRef) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$1_fungible_asset_MintRef'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$1_fungible_asset_TransferRef`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$1_fungible_asset_TransferRef''(v1: Vec ($1_fungible_asset_TransferRef), v2: Vec ($1_fungible_asset_TransferRef)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$1_fungible_asset_TransferRef'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$1_fungible_asset_TransferRef''(v: Vec ($1_fungible_asset_TransferRef), prefix: Vec ($1_fungible_asset_TransferRef)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$1_fungible_asset_TransferRef'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$1_fungible_asset_TransferRef''(v: Vec ($1_fungible_asset_TransferRef), suffix: Vec ($1_fungible_asset_TransferRef)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$1_fungible_asset_TransferRef'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$1_fungible_asset_TransferRef''(v: Vec ($1_fungible_asset_TransferRef)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$1_fungible_asset_TransferRef'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$1_fungible_asset_TransferRef'(v: Vec ($1_fungible_asset_TransferRef), e: $1_fungible_asset_TransferRef): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_fungible_asset_TransferRef'(ReadVec(v, i), e))
}

function $IndexOfVec'$1_fungible_asset_TransferRef'(v: Vec ($1_fungible_asset_TransferRef), e: $1_fungible_asset_TransferRef): int;
axiom (forall v: Vec ($1_fungible_asset_TransferRef), e: $1_fungible_asset_TransferRef:: {$IndexOfVec'$1_fungible_asset_TransferRef'(v, e)}
    (var i := $IndexOfVec'$1_fungible_asset_TransferRef'(v, e);
     if (!$ContainsVec'$1_fungible_asset_TransferRef'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_fungible_asset_TransferRef'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$1_fungible_asset_TransferRef'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$1_fungible_asset_TransferRef'(v: Vec ($1_fungible_asset_TransferRef)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$1_fungible_asset_TransferRef'(): Vec ($1_fungible_asset_TransferRef) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$1_fungible_asset_TransferRef'() returns (v: Vec ($1_fungible_asset_TransferRef)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$1_fungible_asset_TransferRef'(): Vec ($1_fungible_asset_TransferRef) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$1_fungible_asset_TransferRef'(v: Vec ($1_fungible_asset_TransferRef)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$1_fungible_asset_TransferRef'(m: $Mutation (Vec ($1_fungible_asset_TransferRef)), val: $1_fungible_asset_TransferRef) returns (m': $Mutation (Vec ($1_fungible_asset_TransferRef))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$1_fungible_asset_TransferRef'(v: Vec ($1_fungible_asset_TransferRef), val: $1_fungible_asset_TransferRef): Vec ($1_fungible_asset_TransferRef) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$1_fungible_asset_TransferRef'(m: $Mutation (Vec ($1_fungible_asset_TransferRef))) returns (e: $1_fungible_asset_TransferRef, m': $Mutation (Vec ($1_fungible_asset_TransferRef))) {
    var v: Vec ($1_fungible_asset_TransferRef);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$1_fungible_asset_TransferRef'(m: $Mutation (Vec ($1_fungible_asset_TransferRef)), other: Vec ($1_fungible_asset_TransferRef)) returns (m': $Mutation (Vec ($1_fungible_asset_TransferRef))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$1_fungible_asset_TransferRef'(m: $Mutation (Vec ($1_fungible_asset_TransferRef))) returns (m': $Mutation (Vec ($1_fungible_asset_TransferRef))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$1_fungible_asset_TransferRef'(m: $Mutation (Vec ($1_fungible_asset_TransferRef)), other: Vec ($1_fungible_asset_TransferRef)) returns (m': $Mutation (Vec ($1_fungible_asset_TransferRef))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$1_fungible_asset_TransferRef'(m: $Mutation (Vec ($1_fungible_asset_TransferRef)), new_len: int) returns (v: (Vec ($1_fungible_asset_TransferRef)), m': $Mutation (Vec ($1_fungible_asset_TransferRef))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$1_fungible_asset_TransferRef'(m: $Mutation (Vec ($1_fungible_asset_TransferRef)), new_len: int) returns (v: (Vec ($1_fungible_asset_TransferRef)), m': $Mutation (Vec ($1_fungible_asset_TransferRef))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$1_fungible_asset_TransferRef'(m: $Mutation (Vec ($1_fungible_asset_TransferRef)), left: int, right: int) returns (m': $Mutation (Vec ($1_fungible_asset_TransferRef))) {
    var left_vec: Vec ($1_fungible_asset_TransferRef);
    var mid_vec: Vec ($1_fungible_asset_TransferRef);
    var right_vec: Vec ($1_fungible_asset_TransferRef);
    var v: Vec ($1_fungible_asset_TransferRef);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$1_fungible_asset_TransferRef'(m: $Mutation (Vec ($1_fungible_asset_TransferRef)), rot: int) returns (n: int, m': $Mutation (Vec ($1_fungible_asset_TransferRef))) {
    var v: Vec ($1_fungible_asset_TransferRef);
    var len: int;
    var left_vec: Vec ($1_fungible_asset_TransferRef);
    var right_vec: Vec ($1_fungible_asset_TransferRef);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$1_fungible_asset_TransferRef'(m: $Mutation (Vec ($1_fungible_asset_TransferRef)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($1_fungible_asset_TransferRef))) {
    var left_vec: Vec ($1_fungible_asset_TransferRef);
    var mid_vec: Vec ($1_fungible_asset_TransferRef);
    var right_vec: Vec ($1_fungible_asset_TransferRef);
    var mid_left_vec: Vec ($1_fungible_asset_TransferRef);
    var mid_right_vec: Vec ($1_fungible_asset_TransferRef);
    var v: Vec ($1_fungible_asset_TransferRef);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$1_fungible_asset_TransferRef'(m: $Mutation (Vec ($1_fungible_asset_TransferRef)), i: int, e: $1_fungible_asset_TransferRef) returns (m': $Mutation (Vec ($1_fungible_asset_TransferRef))) {
    var left_vec: Vec ($1_fungible_asset_TransferRef);
    var right_vec: Vec ($1_fungible_asset_TransferRef);
    var v: Vec ($1_fungible_asset_TransferRef);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$1_fungible_asset_TransferRef'(v: Vec ($1_fungible_asset_TransferRef)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$1_fungible_asset_TransferRef'(v: Vec ($1_fungible_asset_TransferRef)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$1_fungible_asset_TransferRef'(v: Vec ($1_fungible_asset_TransferRef), i: int) returns (dst: $1_fungible_asset_TransferRef) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$1_fungible_asset_TransferRef'(v: Vec ($1_fungible_asset_TransferRef), i: int): $1_fungible_asset_TransferRef {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$1_fungible_asset_TransferRef'(m: $Mutation (Vec ($1_fungible_asset_TransferRef)), index: int)
returns (dst: $Mutation ($1_fungible_asset_TransferRef), m': $Mutation (Vec ($1_fungible_asset_TransferRef)))
{
    var v: Vec ($1_fungible_asset_TransferRef);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$1_fungible_asset_TransferRef'(v: Vec ($1_fungible_asset_TransferRef), i: int): $1_fungible_asset_TransferRef {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$1_fungible_asset_TransferRef'(v: Vec ($1_fungible_asset_TransferRef)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$1_fungible_asset_TransferRef'(m: $Mutation (Vec ($1_fungible_asset_TransferRef)), i: int, j: int) returns (m': $Mutation (Vec ($1_fungible_asset_TransferRef)))
{
    var v: Vec ($1_fungible_asset_TransferRef);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$1_fungible_asset_TransferRef'(v: Vec ($1_fungible_asset_TransferRef), i: int, j: int): Vec ($1_fungible_asset_TransferRef) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$1_fungible_asset_TransferRef'(m: $Mutation (Vec ($1_fungible_asset_TransferRef)), i: int) returns (e: $1_fungible_asset_TransferRef, m': $Mutation (Vec ($1_fungible_asset_TransferRef)))
{
    var v: Vec ($1_fungible_asset_TransferRef);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$1_fungible_asset_TransferRef'(m: $Mutation (Vec ($1_fungible_asset_TransferRef)), i: int) returns (e: $1_fungible_asset_TransferRef, m': $Mutation (Vec ($1_fungible_asset_TransferRef)))
{
    var len: int;
    var v: Vec ($1_fungible_asset_TransferRef);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$1_fungible_asset_TransferRef'(v: Vec ($1_fungible_asset_TransferRef), e: $1_fungible_asset_TransferRef) returns (res: bool)  {
    res := $ContainsVec'$1_fungible_asset_TransferRef'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$1_fungible_asset_TransferRef'(v: Vec ($1_fungible_asset_TransferRef), e: $1_fungible_asset_TransferRef) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$1_fungible_asset_TransferRef'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$1_object_Object'$1_fungible_asset_Metadata'`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$1_object_Object'$1_fungible_asset_Metadata'''(v1: Vec ($1_object_Object'$1_fungible_asset_Metadata'), v2: Vec ($1_object_Object'$1_fungible_asset_Metadata')): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$1_object_Object'$1_fungible_asset_Metadata''(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$1_object_Object'$1_fungible_asset_Metadata'''(v: Vec ($1_object_Object'$1_fungible_asset_Metadata'), prefix: Vec ($1_object_Object'$1_fungible_asset_Metadata')): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$1_object_Object'$1_fungible_asset_Metadata''(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$1_object_Object'$1_fungible_asset_Metadata'''(v: Vec ($1_object_Object'$1_fungible_asset_Metadata'), suffix: Vec ($1_object_Object'$1_fungible_asset_Metadata')): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$1_object_Object'$1_fungible_asset_Metadata''(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$1_object_Object'$1_fungible_asset_Metadata'''(v: Vec ($1_object_Object'$1_fungible_asset_Metadata')): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$1_object_Object'$1_fungible_asset_Metadata''(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$1_object_Object'$1_fungible_asset_Metadata''(v: Vec ($1_object_Object'$1_fungible_asset_Metadata'), e: $1_object_Object'$1_fungible_asset_Metadata'): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_object_Object'$1_fungible_asset_Metadata''(ReadVec(v, i), e))
}

function $IndexOfVec'$1_object_Object'$1_fungible_asset_Metadata''(v: Vec ($1_object_Object'$1_fungible_asset_Metadata'), e: $1_object_Object'$1_fungible_asset_Metadata'): int;
axiom (forall v: Vec ($1_object_Object'$1_fungible_asset_Metadata'), e: $1_object_Object'$1_fungible_asset_Metadata':: {$IndexOfVec'$1_object_Object'$1_fungible_asset_Metadata''(v, e)}
    (var i := $IndexOfVec'$1_object_Object'$1_fungible_asset_Metadata''(v, e);
     if (!$ContainsVec'$1_object_Object'$1_fungible_asset_Metadata''(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_object_Object'$1_fungible_asset_Metadata''(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$1_object_Object'$1_fungible_asset_Metadata''(ReadVec(v, j), e))));


function {:inline} $RangeVec'$1_object_Object'$1_fungible_asset_Metadata''(v: Vec ($1_object_Object'$1_fungible_asset_Metadata')): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$1_object_Object'$1_fungible_asset_Metadata''(): Vec ($1_object_Object'$1_fungible_asset_Metadata') {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$1_object_Object'$1_fungible_asset_Metadata''() returns (v: Vec ($1_object_Object'$1_fungible_asset_Metadata')) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$1_object_Object'$1_fungible_asset_Metadata''(): Vec ($1_object_Object'$1_fungible_asset_Metadata') {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$1_object_Object'$1_fungible_asset_Metadata''(v: Vec ($1_object_Object'$1_fungible_asset_Metadata')) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$1_object_Object'$1_fungible_asset_Metadata''(m: $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata')), val: $1_object_Object'$1_fungible_asset_Metadata') returns (m': $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata'))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$1_object_Object'$1_fungible_asset_Metadata''(v: Vec ($1_object_Object'$1_fungible_asset_Metadata'), val: $1_object_Object'$1_fungible_asset_Metadata'): Vec ($1_object_Object'$1_fungible_asset_Metadata') {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$1_object_Object'$1_fungible_asset_Metadata''(m: $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata'))) returns (e: $1_object_Object'$1_fungible_asset_Metadata', m': $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata'))) {
    var v: Vec ($1_object_Object'$1_fungible_asset_Metadata');
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$1_object_Object'$1_fungible_asset_Metadata''(m: $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata')), other: Vec ($1_object_Object'$1_fungible_asset_Metadata')) returns (m': $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata'))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$1_object_Object'$1_fungible_asset_Metadata''(m: $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata'))) returns (m': $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata'))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$1_object_Object'$1_fungible_asset_Metadata''(m: $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata')), other: Vec ($1_object_Object'$1_fungible_asset_Metadata')) returns (m': $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata'))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$1_object_Object'$1_fungible_asset_Metadata''(m: $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata')), new_len: int) returns (v: (Vec ($1_object_Object'$1_fungible_asset_Metadata')), m': $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata'))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$1_object_Object'$1_fungible_asset_Metadata''(m: $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata')), new_len: int) returns (v: (Vec ($1_object_Object'$1_fungible_asset_Metadata')), m': $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata'))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$1_object_Object'$1_fungible_asset_Metadata''(m: $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata')), left: int, right: int) returns (m': $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata'))) {
    var left_vec: Vec ($1_object_Object'$1_fungible_asset_Metadata');
    var mid_vec: Vec ($1_object_Object'$1_fungible_asset_Metadata');
    var right_vec: Vec ($1_object_Object'$1_fungible_asset_Metadata');
    var v: Vec ($1_object_Object'$1_fungible_asset_Metadata');
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$1_object_Object'$1_fungible_asset_Metadata''(m: $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata')), rot: int) returns (n: int, m': $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata'))) {
    var v: Vec ($1_object_Object'$1_fungible_asset_Metadata');
    var len: int;
    var left_vec: Vec ($1_object_Object'$1_fungible_asset_Metadata');
    var right_vec: Vec ($1_object_Object'$1_fungible_asset_Metadata');
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$1_object_Object'$1_fungible_asset_Metadata''(m: $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata')), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata'))) {
    var left_vec: Vec ($1_object_Object'$1_fungible_asset_Metadata');
    var mid_vec: Vec ($1_object_Object'$1_fungible_asset_Metadata');
    var right_vec: Vec ($1_object_Object'$1_fungible_asset_Metadata');
    var mid_left_vec: Vec ($1_object_Object'$1_fungible_asset_Metadata');
    var mid_right_vec: Vec ($1_object_Object'$1_fungible_asset_Metadata');
    var v: Vec ($1_object_Object'$1_fungible_asset_Metadata');
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$1_object_Object'$1_fungible_asset_Metadata''(m: $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata')), i: int, e: $1_object_Object'$1_fungible_asset_Metadata') returns (m': $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata'))) {
    var left_vec: Vec ($1_object_Object'$1_fungible_asset_Metadata');
    var right_vec: Vec ($1_object_Object'$1_fungible_asset_Metadata');
    var v: Vec ($1_object_Object'$1_fungible_asset_Metadata');
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$1_object_Object'$1_fungible_asset_Metadata''(v: Vec ($1_object_Object'$1_fungible_asset_Metadata')) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$1_object_Object'$1_fungible_asset_Metadata''(v: Vec ($1_object_Object'$1_fungible_asset_Metadata')): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$1_object_Object'$1_fungible_asset_Metadata''(v: Vec ($1_object_Object'$1_fungible_asset_Metadata'), i: int) returns (dst: $1_object_Object'$1_fungible_asset_Metadata') {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$1_object_Object'$1_fungible_asset_Metadata''(v: Vec ($1_object_Object'$1_fungible_asset_Metadata'), i: int): $1_object_Object'$1_fungible_asset_Metadata' {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$1_object_Object'$1_fungible_asset_Metadata''(m: $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata')), index: int)
returns (dst: $Mutation ($1_object_Object'$1_fungible_asset_Metadata'), m': $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata')))
{
    var v: Vec ($1_object_Object'$1_fungible_asset_Metadata');
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$1_object_Object'$1_fungible_asset_Metadata''(v: Vec ($1_object_Object'$1_fungible_asset_Metadata'), i: int): $1_object_Object'$1_fungible_asset_Metadata' {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$1_object_Object'$1_fungible_asset_Metadata''(v: Vec ($1_object_Object'$1_fungible_asset_Metadata')) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$1_object_Object'$1_fungible_asset_Metadata''(m: $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata')), i: int, j: int) returns (m': $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata')))
{
    var v: Vec ($1_object_Object'$1_fungible_asset_Metadata');
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$1_object_Object'$1_fungible_asset_Metadata''(v: Vec ($1_object_Object'$1_fungible_asset_Metadata'), i: int, j: int): Vec ($1_object_Object'$1_fungible_asset_Metadata') {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$1_object_Object'$1_fungible_asset_Metadata''(m: $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata')), i: int) returns (e: $1_object_Object'$1_fungible_asset_Metadata', m': $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata')))
{
    var v: Vec ($1_object_Object'$1_fungible_asset_Metadata');

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$1_object_Object'$1_fungible_asset_Metadata''(m: $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata')), i: int) returns (e: $1_object_Object'$1_fungible_asset_Metadata', m': $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata')))
{
    var len: int;
    var v: Vec ($1_object_Object'$1_fungible_asset_Metadata');

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$1_object_Object'$1_fungible_asset_Metadata''(v: Vec ($1_object_Object'$1_fungible_asset_Metadata'), e: $1_object_Object'$1_fungible_asset_Metadata') returns (res: bool)  {
    res := $ContainsVec'$1_object_Object'$1_fungible_asset_Metadata''(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$1_object_Object'$1_fungible_asset_Metadata''(v: Vec ($1_object_Object'$1_fungible_asset_Metadata'), e: $1_object_Object'$1_fungible_asset_Metadata') returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$1_object_Object'$1_fungible_asset_Metadata''(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$1_optional_aggregator_Integer`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$1_optional_aggregator_Integer''(v1: Vec ($1_optional_aggregator_Integer), v2: Vec ($1_optional_aggregator_Integer)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$1_optional_aggregator_Integer'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$1_optional_aggregator_Integer''(v: Vec ($1_optional_aggregator_Integer), prefix: Vec ($1_optional_aggregator_Integer)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$1_optional_aggregator_Integer'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$1_optional_aggregator_Integer''(v: Vec ($1_optional_aggregator_Integer), suffix: Vec ($1_optional_aggregator_Integer)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$1_optional_aggregator_Integer'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$1_optional_aggregator_Integer''(v: Vec ($1_optional_aggregator_Integer)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$1_optional_aggregator_Integer'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), e: $1_optional_aggregator_Integer): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_optional_aggregator_Integer'(ReadVec(v, i), e))
}

function $IndexOfVec'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), e: $1_optional_aggregator_Integer): int;
axiom (forall v: Vec ($1_optional_aggregator_Integer), e: $1_optional_aggregator_Integer:: {$IndexOfVec'$1_optional_aggregator_Integer'(v, e)}
    (var i := $IndexOfVec'$1_optional_aggregator_Integer'(v, e);
     if (!$ContainsVec'$1_optional_aggregator_Integer'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_optional_aggregator_Integer'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$1_optional_aggregator_Integer'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$1_optional_aggregator_Integer'(): Vec ($1_optional_aggregator_Integer) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$1_optional_aggregator_Integer'() returns (v: Vec ($1_optional_aggregator_Integer)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$1_optional_aggregator_Integer'(): Vec ($1_optional_aggregator_Integer) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), val: $1_optional_aggregator_Integer) returns (m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), val: $1_optional_aggregator_Integer): Vec ($1_optional_aggregator_Integer) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer))) returns (e: $1_optional_aggregator_Integer, m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    var v: Vec ($1_optional_aggregator_Integer);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), other: Vec ($1_optional_aggregator_Integer)) returns (m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer))) returns (m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), other: Vec ($1_optional_aggregator_Integer)) returns (m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), new_len: int) returns (v: (Vec ($1_optional_aggregator_Integer)), m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), new_len: int) returns (v: (Vec ($1_optional_aggregator_Integer)), m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), left: int, right: int) returns (m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    var left_vec: Vec ($1_optional_aggregator_Integer);
    var mid_vec: Vec ($1_optional_aggregator_Integer);
    var right_vec: Vec ($1_optional_aggregator_Integer);
    var v: Vec ($1_optional_aggregator_Integer);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), rot: int) returns (n: int, m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    var v: Vec ($1_optional_aggregator_Integer);
    var len: int;
    var left_vec: Vec ($1_optional_aggregator_Integer);
    var right_vec: Vec ($1_optional_aggregator_Integer);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    var left_vec: Vec ($1_optional_aggregator_Integer);
    var mid_vec: Vec ($1_optional_aggregator_Integer);
    var right_vec: Vec ($1_optional_aggregator_Integer);
    var mid_left_vec: Vec ($1_optional_aggregator_Integer);
    var mid_right_vec: Vec ($1_optional_aggregator_Integer);
    var v: Vec ($1_optional_aggregator_Integer);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), i: int, e: $1_optional_aggregator_Integer) returns (m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    var left_vec: Vec ($1_optional_aggregator_Integer);
    var right_vec: Vec ($1_optional_aggregator_Integer);
    var v: Vec ($1_optional_aggregator_Integer);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), i: int) returns (dst: $1_optional_aggregator_Integer) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), i: int): $1_optional_aggregator_Integer {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), index: int)
returns (dst: $Mutation ($1_optional_aggregator_Integer), m': $Mutation (Vec ($1_optional_aggregator_Integer)))
{
    var v: Vec ($1_optional_aggregator_Integer);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), i: int): $1_optional_aggregator_Integer {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), i: int, j: int) returns (m': $Mutation (Vec ($1_optional_aggregator_Integer)))
{
    var v: Vec ($1_optional_aggregator_Integer);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), i: int, j: int): Vec ($1_optional_aggregator_Integer) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), i: int) returns (e: $1_optional_aggregator_Integer, m': $Mutation (Vec ($1_optional_aggregator_Integer)))
{
    var v: Vec ($1_optional_aggregator_Integer);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), i: int) returns (e: $1_optional_aggregator_Integer, m': $Mutation (Vec ($1_optional_aggregator_Integer)))
{
    var len: int;
    var v: Vec ($1_optional_aggregator_Integer);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), e: $1_optional_aggregator_Integer) returns (res: bool)  {
    res := $ContainsVec'$1_optional_aggregator_Integer'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), e: $1_optional_aggregator_Integer) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$1_optional_aggregator_Integer'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$1_optional_aggregator_OptionalAggregator`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$1_optional_aggregator_OptionalAggregator''(v1: Vec ($1_optional_aggregator_OptionalAggregator), v2: Vec ($1_optional_aggregator_OptionalAggregator)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$1_optional_aggregator_OptionalAggregator'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$1_optional_aggregator_OptionalAggregator''(v: Vec ($1_optional_aggregator_OptionalAggregator), prefix: Vec ($1_optional_aggregator_OptionalAggregator)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$1_optional_aggregator_OptionalAggregator'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$1_optional_aggregator_OptionalAggregator''(v: Vec ($1_optional_aggregator_OptionalAggregator), suffix: Vec ($1_optional_aggregator_OptionalAggregator)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$1_optional_aggregator_OptionalAggregator'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$1_optional_aggregator_OptionalAggregator''(v: Vec ($1_optional_aggregator_OptionalAggregator)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$1_optional_aggregator_OptionalAggregator'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), e: $1_optional_aggregator_OptionalAggregator): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_optional_aggregator_OptionalAggregator'(ReadVec(v, i), e))
}

function $IndexOfVec'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), e: $1_optional_aggregator_OptionalAggregator): int;
axiom (forall v: Vec ($1_optional_aggregator_OptionalAggregator), e: $1_optional_aggregator_OptionalAggregator:: {$IndexOfVec'$1_optional_aggregator_OptionalAggregator'(v, e)}
    (var i := $IndexOfVec'$1_optional_aggregator_OptionalAggregator'(v, e);
     if (!$ContainsVec'$1_optional_aggregator_OptionalAggregator'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_optional_aggregator_OptionalAggregator'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$1_optional_aggregator_OptionalAggregator'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$1_optional_aggregator_OptionalAggregator'(): Vec ($1_optional_aggregator_OptionalAggregator) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$1_optional_aggregator_OptionalAggregator'() returns (v: Vec ($1_optional_aggregator_OptionalAggregator)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$1_optional_aggregator_OptionalAggregator'(): Vec ($1_optional_aggregator_OptionalAggregator) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), val: $1_optional_aggregator_OptionalAggregator) returns (m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), val: $1_optional_aggregator_OptionalAggregator): Vec ($1_optional_aggregator_OptionalAggregator) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) returns (e: $1_optional_aggregator_OptionalAggregator, m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    var v: Vec ($1_optional_aggregator_OptionalAggregator);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), other: Vec ($1_optional_aggregator_OptionalAggregator)) returns (m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) returns (m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), other: Vec ($1_optional_aggregator_OptionalAggregator)) returns (m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), new_len: int) returns (v: (Vec ($1_optional_aggregator_OptionalAggregator)), m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), new_len: int) returns (v: (Vec ($1_optional_aggregator_OptionalAggregator)), m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), left: int, right: int) returns (m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    var left_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var mid_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var right_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var v: Vec ($1_optional_aggregator_OptionalAggregator);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), rot: int) returns (n: int, m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    var v: Vec ($1_optional_aggregator_OptionalAggregator);
    var len: int;
    var left_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var right_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    var left_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var mid_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var right_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var mid_left_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var mid_right_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var v: Vec ($1_optional_aggregator_OptionalAggregator);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), i: int, e: $1_optional_aggregator_OptionalAggregator) returns (m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    var left_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var right_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var v: Vec ($1_optional_aggregator_OptionalAggregator);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), i: int) returns (dst: $1_optional_aggregator_OptionalAggregator) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), i: int): $1_optional_aggregator_OptionalAggregator {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), index: int)
returns (dst: $Mutation ($1_optional_aggregator_OptionalAggregator), m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)))
{
    var v: Vec ($1_optional_aggregator_OptionalAggregator);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), i: int): $1_optional_aggregator_OptionalAggregator {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), i: int, j: int) returns (m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)))
{
    var v: Vec ($1_optional_aggregator_OptionalAggregator);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), i: int, j: int): Vec ($1_optional_aggregator_OptionalAggregator) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), i: int) returns (e: $1_optional_aggregator_OptionalAggregator, m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)))
{
    var v: Vec ($1_optional_aggregator_OptionalAggregator);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), i: int) returns (e: $1_optional_aggregator_OptionalAggregator, m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)))
{
    var len: int;
    var v: Vec ($1_optional_aggregator_OptionalAggregator);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), e: $1_optional_aggregator_OptionalAggregator) returns (res: bool)  {
    res := $ContainsVec'$1_optional_aggregator_OptionalAggregator'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), e: $1_optional_aggregator_OptionalAggregator) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$1_optional_aggregator_OptionalAggregator'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `address`

// Not inlined. It appears faster this way.
function $IsEqual'vec'address''(v1: Vec (int), v2: Vec (int)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'address'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'address''(v: Vec (int), prefix: Vec (int)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'address'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'address''(v: Vec (int), suffix: Vec (int)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'address'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'address''(v: Vec (int)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'address'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'address'(v: Vec (int), e: int): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'address'(ReadVec(v, i), e))
}

function $IndexOfVec'address'(v: Vec (int), e: int): int;
axiom (forall v: Vec (int), e: int:: {$IndexOfVec'address'(v, e)}
    (var i := $IndexOfVec'address'(v, e);
     if (!$ContainsVec'address'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'address'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'address'(ReadVec(v, j), e))));


function {:inline} $RangeVec'address'(v: Vec (int)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'address'(): Vec (int) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'address'() returns (v: Vec (int)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'address'(): Vec (int) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'address'(v: Vec (int)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'address'(m: $Mutation (Vec (int)), val: int) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'address'(v: Vec (int), val: int): Vec (int) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'address'(m: $Mutation (Vec (int))) returns (e: int, m': $Mutation (Vec (int))) {
    var v: Vec (int);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'address'(m: $Mutation (Vec (int)), other: Vec (int)) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'address'(m: $Mutation (Vec (int))) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'address'(m: $Mutation (Vec (int)), other: Vec (int)) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'address'(m: $Mutation (Vec (int)), new_len: int) returns (v: (Vec (int)), m': $Mutation (Vec (int))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'address'(m: $Mutation (Vec (int)), new_len: int) returns (v: (Vec (int)), m': $Mutation (Vec (int))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'address'(m: $Mutation (Vec (int)), left: int, right: int) returns (m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var mid_vec: Vec (int);
    var right_vec: Vec (int);
    var v: Vec (int);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'address'(m: $Mutation (Vec (int)), rot: int) returns (n: int, m': $Mutation (Vec (int))) {
    var v: Vec (int);
    var len: int;
    var left_vec: Vec (int);
    var right_vec: Vec (int);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'address'(m: $Mutation (Vec (int)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var mid_vec: Vec (int);
    var right_vec: Vec (int);
    var mid_left_vec: Vec (int);
    var mid_right_vec: Vec (int);
    var v: Vec (int);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'address'(m: $Mutation (Vec (int)), i: int, e: int) returns (m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var right_vec: Vec (int);
    var v: Vec (int);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'address'(v: Vec (int)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'address'(v: Vec (int)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'address'(v: Vec (int), i: int) returns (dst: int) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'address'(v: Vec (int), i: int): int {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'address'(m: $Mutation (Vec (int)), index: int)
returns (dst: $Mutation (int), m': $Mutation (Vec (int)))
{
    var v: Vec (int);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'address'(v: Vec (int), i: int): int {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'address'(v: Vec (int)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'address'(m: $Mutation (Vec (int)), i: int, j: int) returns (m': $Mutation (Vec (int)))
{
    var v: Vec (int);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'address'(v: Vec (int), i: int, j: int): Vec (int) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'address'(m: $Mutation (Vec (int)), i: int) returns (e: int, m': $Mutation (Vec (int)))
{
    var v: Vec (int);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'address'(m: $Mutation (Vec (int)), i: int) returns (e: int, m': $Mutation (Vec (int)))
{
    var len: int;
    var v: Vec (int);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'address'(v: Vec (int), e: int) returns (res: bool)  {
    res := $ContainsVec'address'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'address'(v: Vec (int), e: int) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'address'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `u128`

// Not inlined. It appears faster this way.
function $IsEqual'vec'u128''(v1: Vec (int), v2: Vec (int)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'u128'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'u128''(v: Vec (int), prefix: Vec (int)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'u128'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'u128''(v: Vec (int), suffix: Vec (int)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'u128'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'u128''(v: Vec (int)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'u128'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'u128'(v: Vec (int), e: int): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'u128'(ReadVec(v, i), e))
}

function $IndexOfVec'u128'(v: Vec (int), e: int): int;
axiom (forall v: Vec (int), e: int:: {$IndexOfVec'u128'(v, e)}
    (var i := $IndexOfVec'u128'(v, e);
     if (!$ContainsVec'u128'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'u128'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'u128'(ReadVec(v, j), e))));


function {:inline} $RangeVec'u128'(v: Vec (int)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'u128'(): Vec (int) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'u128'() returns (v: Vec (int)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'u128'(): Vec (int) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'u128'(v: Vec (int)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'u128'(m: $Mutation (Vec (int)), val: int) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'u128'(v: Vec (int), val: int): Vec (int) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'u128'(m: $Mutation (Vec (int))) returns (e: int, m': $Mutation (Vec (int))) {
    var v: Vec (int);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'u128'(m: $Mutation (Vec (int)), other: Vec (int)) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'u128'(m: $Mutation (Vec (int))) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'u128'(m: $Mutation (Vec (int)), other: Vec (int)) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'u128'(m: $Mutation (Vec (int)), new_len: int) returns (v: (Vec (int)), m': $Mutation (Vec (int))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'u128'(m: $Mutation (Vec (int)), new_len: int) returns (v: (Vec (int)), m': $Mutation (Vec (int))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'u128'(m: $Mutation (Vec (int)), left: int, right: int) returns (m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var mid_vec: Vec (int);
    var right_vec: Vec (int);
    var v: Vec (int);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'u128'(m: $Mutation (Vec (int)), rot: int) returns (n: int, m': $Mutation (Vec (int))) {
    var v: Vec (int);
    var len: int;
    var left_vec: Vec (int);
    var right_vec: Vec (int);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'u128'(m: $Mutation (Vec (int)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var mid_vec: Vec (int);
    var right_vec: Vec (int);
    var mid_left_vec: Vec (int);
    var mid_right_vec: Vec (int);
    var v: Vec (int);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'u128'(m: $Mutation (Vec (int)), i: int, e: int) returns (m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var right_vec: Vec (int);
    var v: Vec (int);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'u128'(v: Vec (int)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'u128'(v: Vec (int)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'u128'(v: Vec (int), i: int) returns (dst: int) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'u128'(v: Vec (int), i: int): int {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'u128'(m: $Mutation (Vec (int)), index: int)
returns (dst: $Mutation (int), m': $Mutation (Vec (int)))
{
    var v: Vec (int);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'u128'(v: Vec (int), i: int): int {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'u128'(v: Vec (int)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'u128'(m: $Mutation (Vec (int)), i: int, j: int) returns (m': $Mutation (Vec (int)))
{
    var v: Vec (int);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'u128'(v: Vec (int), i: int, j: int): Vec (int) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'u128'(m: $Mutation (Vec (int)), i: int) returns (e: int, m': $Mutation (Vec (int)))
{
    var v: Vec (int);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'u128'(m: $Mutation (Vec (int)), i: int) returns (e: int, m': $Mutation (Vec (int)))
{
    var len: int;
    var v: Vec (int);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'u128'(v: Vec (int), e: int) returns (res: bool)  {
    res := $ContainsVec'u128'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'u128'(v: Vec (int), e: int) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'u128'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `u8`

// Not inlined. It appears faster this way.
function $IsEqual'vec'u8''(v1: Vec (int), v2: Vec (int)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'u8'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'u8''(v: Vec (int), prefix: Vec (int)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'u8'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'u8''(v: Vec (int), suffix: Vec (int)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'u8'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'u8''(v: Vec (int)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'u8'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'u8'(v: Vec (int), e: int): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'u8'(ReadVec(v, i), e))
}

function $IndexOfVec'u8'(v: Vec (int), e: int): int;
axiom (forall v: Vec (int), e: int:: {$IndexOfVec'u8'(v, e)}
    (var i := $IndexOfVec'u8'(v, e);
     if (!$ContainsVec'u8'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'u8'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'u8'(ReadVec(v, j), e))));


function {:inline} $RangeVec'u8'(v: Vec (int)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'u8'(): Vec (int) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'u8'() returns (v: Vec (int)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'u8'(): Vec (int) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'u8'(v: Vec (int)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'u8'(m: $Mutation (Vec (int)), val: int) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'u8'(v: Vec (int), val: int): Vec (int) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'u8'(m: $Mutation (Vec (int))) returns (e: int, m': $Mutation (Vec (int))) {
    var v: Vec (int);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'u8'(m: $Mutation (Vec (int)), other: Vec (int)) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'u8'(m: $Mutation (Vec (int))) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'u8'(m: $Mutation (Vec (int)), other: Vec (int)) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'u8'(m: $Mutation (Vec (int)), new_len: int) returns (v: (Vec (int)), m': $Mutation (Vec (int))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'u8'(m: $Mutation (Vec (int)), new_len: int) returns (v: (Vec (int)), m': $Mutation (Vec (int))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'u8'(m: $Mutation (Vec (int)), left: int, right: int) returns (m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var mid_vec: Vec (int);
    var right_vec: Vec (int);
    var v: Vec (int);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'u8'(m: $Mutation (Vec (int)), rot: int) returns (n: int, m': $Mutation (Vec (int))) {
    var v: Vec (int);
    var len: int;
    var left_vec: Vec (int);
    var right_vec: Vec (int);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'u8'(m: $Mutation (Vec (int)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var mid_vec: Vec (int);
    var right_vec: Vec (int);
    var mid_left_vec: Vec (int);
    var mid_right_vec: Vec (int);
    var v: Vec (int);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'u8'(m: $Mutation (Vec (int)), i: int, e: int) returns (m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var right_vec: Vec (int);
    var v: Vec (int);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'u8'(v: Vec (int)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'u8'(v: Vec (int)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'u8'(v: Vec (int), i: int) returns (dst: int) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'u8'(v: Vec (int), i: int): int {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'u8'(m: $Mutation (Vec (int)), index: int)
returns (dst: $Mutation (int), m': $Mutation (Vec (int)))
{
    var v: Vec (int);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'u8'(v: Vec (int), i: int): int {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'u8'(v: Vec (int)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'u8'(m: $Mutation (Vec (int)), i: int, j: int) returns (m': $Mutation (Vec (int)))
{
    var v: Vec (int);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'u8'(v: Vec (int), i: int, j: int): Vec (int) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'u8'(m: $Mutation (Vec (int)), i: int) returns (e: int, m': $Mutation (Vec (int)))
{
    var v: Vec (int);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'u8'(m: $Mutation (Vec (int)), i: int) returns (e: int, m': $Mutation (Vec (int)))
{
    var len: int;
    var v: Vec (int);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'u8'(v: Vec (int), e: int) returns (res: bool)  {
    res := $ContainsVec'u8'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'u8'(v: Vec (int), e: int) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'u8'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `bv128`

// Not inlined. It appears faster this way.
function $IsEqual'vec'bv128''(v1: Vec (bv128), v2: Vec (bv128)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'bv128'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'bv128''(v: Vec (bv128), prefix: Vec (bv128)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'bv128'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'bv128''(v: Vec (bv128), suffix: Vec (bv128)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'bv128'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'bv128''(v: Vec (bv128)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'bv128'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'bv128'(v: Vec (bv128), e: bv128): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'bv128'(ReadVec(v, i), e))
}

function $IndexOfVec'bv128'(v: Vec (bv128), e: bv128): int;
axiom (forall v: Vec (bv128), e: bv128:: {$IndexOfVec'bv128'(v, e)}
    (var i := $IndexOfVec'bv128'(v, e);
     if (!$ContainsVec'bv128'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'bv128'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'bv128'(ReadVec(v, j), e))));


function {:inline} $RangeVec'bv128'(v: Vec (bv128)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'bv128'(): Vec (bv128) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'bv128'() returns (v: Vec (bv128)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'bv128'(): Vec (bv128) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'bv128'(v: Vec (bv128)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'bv128'(m: $Mutation (Vec (bv128)), val: bv128) returns (m': $Mutation (Vec (bv128))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'bv128'(v: Vec (bv128), val: bv128): Vec (bv128) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'bv128'(m: $Mutation (Vec (bv128))) returns (e: bv128, m': $Mutation (Vec (bv128))) {
    var v: Vec (bv128);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'bv128'(m: $Mutation (Vec (bv128)), other: Vec (bv128)) returns (m': $Mutation (Vec (bv128))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'bv128'(m: $Mutation (Vec (bv128))) returns (m': $Mutation (Vec (bv128))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'bv128'(m: $Mutation (Vec (bv128)), other: Vec (bv128)) returns (m': $Mutation (Vec (bv128))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'bv128'(m: $Mutation (Vec (bv128)), new_len: int) returns (v: (Vec (bv128)), m': $Mutation (Vec (bv128))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'bv128'(m: $Mutation (Vec (bv128)), new_len: int) returns (v: (Vec (bv128)), m': $Mutation (Vec (bv128))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'bv128'(m: $Mutation (Vec (bv128)), left: int, right: int) returns (m': $Mutation (Vec (bv128))) {
    var left_vec: Vec (bv128);
    var mid_vec: Vec (bv128);
    var right_vec: Vec (bv128);
    var v: Vec (bv128);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'bv128'(m: $Mutation (Vec (bv128)), rot: int) returns (n: int, m': $Mutation (Vec (bv128))) {
    var v: Vec (bv128);
    var len: int;
    var left_vec: Vec (bv128);
    var right_vec: Vec (bv128);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'bv128'(m: $Mutation (Vec (bv128)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec (bv128))) {
    var left_vec: Vec (bv128);
    var mid_vec: Vec (bv128);
    var right_vec: Vec (bv128);
    var mid_left_vec: Vec (bv128);
    var mid_right_vec: Vec (bv128);
    var v: Vec (bv128);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'bv128'(m: $Mutation (Vec (bv128)), i: int, e: bv128) returns (m': $Mutation (Vec (bv128))) {
    var left_vec: Vec (bv128);
    var right_vec: Vec (bv128);
    var v: Vec (bv128);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'bv128'(v: Vec (bv128)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'bv128'(v: Vec (bv128)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'bv128'(v: Vec (bv128), i: int) returns (dst: bv128) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'bv128'(v: Vec (bv128), i: int): bv128 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'bv128'(m: $Mutation (Vec (bv128)), index: int)
returns (dst: $Mutation (bv128), m': $Mutation (Vec (bv128)))
{
    var v: Vec (bv128);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'bv128'(v: Vec (bv128), i: int): bv128 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'bv128'(v: Vec (bv128)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'bv128'(m: $Mutation (Vec (bv128)), i: int, j: int) returns (m': $Mutation (Vec (bv128)))
{
    var v: Vec (bv128);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'bv128'(v: Vec (bv128), i: int, j: int): Vec (bv128) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'bv128'(m: $Mutation (Vec (bv128)), i: int) returns (e: bv128, m': $Mutation (Vec (bv128)))
{
    var v: Vec (bv128);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'bv128'(m: $Mutation (Vec (bv128)), i: int) returns (e: bv128, m': $Mutation (Vec (bv128)))
{
    var len: int;
    var v: Vec (bv128);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'bv128'(v: Vec (bv128), e: bv128) returns (res: bool)  {
    res := $ContainsVec'bv128'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'bv128'(v: Vec (bv128), e: bv128) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'bv128'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `bv8`

// Not inlined. It appears faster this way.
function $IsEqual'vec'bv8''(v1: Vec (bv8), v2: Vec (bv8)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'bv8'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'bv8''(v: Vec (bv8), prefix: Vec (bv8)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'bv8'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'bv8''(v: Vec (bv8), suffix: Vec (bv8)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'bv8'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'bv8''(v: Vec (bv8)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'bv8'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'bv8'(v: Vec (bv8), e: bv8): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'bv8'(ReadVec(v, i), e))
}

function $IndexOfVec'bv8'(v: Vec (bv8), e: bv8): int;
axiom (forall v: Vec (bv8), e: bv8:: {$IndexOfVec'bv8'(v, e)}
    (var i := $IndexOfVec'bv8'(v, e);
     if (!$ContainsVec'bv8'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'bv8'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'bv8'(ReadVec(v, j), e))));


function {:inline} $RangeVec'bv8'(v: Vec (bv8)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'bv8'(): Vec (bv8) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'bv8'() returns (v: Vec (bv8)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'bv8'(): Vec (bv8) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'bv8'(v: Vec (bv8)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'bv8'(m: $Mutation (Vec (bv8)), val: bv8) returns (m': $Mutation (Vec (bv8))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'bv8'(v: Vec (bv8), val: bv8): Vec (bv8) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'bv8'(m: $Mutation (Vec (bv8))) returns (e: bv8, m': $Mutation (Vec (bv8))) {
    var v: Vec (bv8);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'bv8'(m: $Mutation (Vec (bv8)), other: Vec (bv8)) returns (m': $Mutation (Vec (bv8))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'bv8'(m: $Mutation (Vec (bv8))) returns (m': $Mutation (Vec (bv8))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'bv8'(m: $Mutation (Vec (bv8)), other: Vec (bv8)) returns (m': $Mutation (Vec (bv8))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'bv8'(m: $Mutation (Vec (bv8)), new_len: int) returns (v: (Vec (bv8)), m': $Mutation (Vec (bv8))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'bv8'(m: $Mutation (Vec (bv8)), new_len: int) returns (v: (Vec (bv8)), m': $Mutation (Vec (bv8))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'bv8'(m: $Mutation (Vec (bv8)), left: int, right: int) returns (m': $Mutation (Vec (bv8))) {
    var left_vec: Vec (bv8);
    var mid_vec: Vec (bv8);
    var right_vec: Vec (bv8);
    var v: Vec (bv8);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'bv8'(m: $Mutation (Vec (bv8)), rot: int) returns (n: int, m': $Mutation (Vec (bv8))) {
    var v: Vec (bv8);
    var len: int;
    var left_vec: Vec (bv8);
    var right_vec: Vec (bv8);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'bv8'(m: $Mutation (Vec (bv8)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec (bv8))) {
    var left_vec: Vec (bv8);
    var mid_vec: Vec (bv8);
    var right_vec: Vec (bv8);
    var mid_left_vec: Vec (bv8);
    var mid_right_vec: Vec (bv8);
    var v: Vec (bv8);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'bv8'(m: $Mutation (Vec (bv8)), i: int, e: bv8) returns (m': $Mutation (Vec (bv8))) {
    var left_vec: Vec (bv8);
    var right_vec: Vec (bv8);
    var v: Vec (bv8);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'bv8'(v: Vec (bv8)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'bv8'(v: Vec (bv8)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'bv8'(v: Vec (bv8), i: int) returns (dst: bv8) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'bv8'(v: Vec (bv8), i: int): bv8 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'bv8'(m: $Mutation (Vec (bv8)), index: int)
returns (dst: $Mutation (bv8), m': $Mutation (Vec (bv8)))
{
    var v: Vec (bv8);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'bv8'(v: Vec (bv8), i: int): bv8 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'bv8'(v: Vec (bv8)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'bv8'(m: $Mutation (Vec (bv8)), i: int, j: int) returns (m': $Mutation (Vec (bv8)))
{
    var v: Vec (bv8);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'bv8'(v: Vec (bv8), i: int, j: int): Vec (bv8) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'bv8'(m: $Mutation (Vec (bv8)), i: int) returns (e: bv8, m': $Mutation (Vec (bv8)))
{
    var v: Vec (bv8);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'bv8'(m: $Mutation (Vec (bv8)), i: int) returns (e: bv8, m': $Mutation (Vec (bv8)))
{
    var len: int;
    var v: Vec (bv8);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'bv8'(v: Vec (bv8), e: bv8) returns (res: bool)  {
    res := $ContainsVec'bv8'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'bv8'(v: Vec (bv8), e: bv8) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'bv8'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ==================================================================================
// Native Table

// ----------------------------------------------------------------------------------
// Native Table key encoding for type `$1_string_String`

function $EncodeKey'$1_string_String'(k: $1_string_String): int;
axiom (
  forall k1, k2: $1_string_String :: {$EncodeKey'$1_string_String'(k1), $EncodeKey'$1_string_String'(k2)}
    $IsEqual'$1_string_String'(k1, k2) <==> $EncodeKey'$1_string_String'(k1) == $EncodeKey'$1_string_String'(k2)
);


// ----------------------------------------------------------------------------------
// Native Table key encoding for type `$1_type_info_TypeInfo`

function $EncodeKey'$1_type_info_TypeInfo'(k: $1_type_info_TypeInfo): int;
axiom (
  forall k1, k2: $1_type_info_TypeInfo :: {$EncodeKey'$1_type_info_TypeInfo'(k1), $EncodeKey'$1_type_info_TypeInfo'(k2)}
    $IsEqual'$1_type_info_TypeInfo'(k1, k2) <==> $EncodeKey'$1_type_info_TypeInfo'(k1) == $EncodeKey'$1_type_info_TypeInfo'(k2)
);


// ----------------------------------------------------------------------------------
// Native Table key encoding for type `$1_copyable_any_Any`

function $EncodeKey'$1_copyable_any_Any'(k: $1_copyable_any_Any): int;
axiom (
  forall k1, k2: $1_copyable_any_Any :: {$EncodeKey'$1_copyable_any_Any'(k1), $EncodeKey'$1_copyable_any_Any'(k2)}
    $IsEqual'$1_copyable_any_Any'(k1, k2) <==> $EncodeKey'$1_copyable_any_Any'(k1) == $EncodeKey'$1_copyable_any_Any'(k2)
);


// ----------------------------------------------------------------------------------
// Native Table implementation for type `($1_string_String,$1_paymentv1_TransferLink'#0')`

function $IsEqual'$1_table_Table'$1_string_String_$1_paymentv1_TransferLink'#0'''(t1: Table int ($1_paymentv1_TransferLink'#0'), t2: Table int ($1_paymentv1_TransferLink'#0')): bool {
    LenTable(t1) == LenTable(t2) &&
    (forall k: int :: ContainsTable(t1, k) <==> ContainsTable(t2, k)) &&
    (forall k: int :: ContainsTable(t1, k) ==> GetTable(t1, k) == GetTable(t2, k)) &&
    (forall k: int :: ContainsTable(t2, k) ==> GetTable(t1, k) == GetTable(t2, k))
}

// Not inlined.
function $IsValid'$1_table_Table'$1_string_String_$1_paymentv1_TransferLink'#0'''(t: Table int ($1_paymentv1_TransferLink'#0')): bool {
    $IsValid'u64'(LenTable(t)) &&
    (forall i: int:: ContainsTable(t, i) ==> $IsValid'$1_paymentv1_TransferLink'#0''(GetTable(t, i)))
}
procedure {:inline 2} $1_table_new'$1_string_String_$1_paymentv1_TransferLink'#0''() returns (v: Table int ($1_paymentv1_TransferLink'#0')) {
    v := EmptyTable();
}
procedure {:inline 2} $1_table_destroy_known_empty_unsafe'$1_string_String_$1_paymentv1_TransferLink'#0''(t: Table int ($1_paymentv1_TransferLink'#0')) {
    if (LenTable(t) != 0) {
        call $Abort($StdError(1/*INVALID_STATE*/, 102/*ENOT_EMPTY*/));
    }
}
procedure {:inline 2} $1_table_contains'$1_string_String_$1_paymentv1_TransferLink'#0''(t: (Table int ($1_paymentv1_TransferLink'#0')), k: $1_string_String) returns (r: bool) {
    r := ContainsTable(t, $EncodeKey'$1_string_String'(k));
}
procedure {:inline 2} $1_table_add'$1_string_String_$1_paymentv1_TransferLink'#0''(m: $Mutation (Table int ($1_paymentv1_TransferLink'#0')), k: $1_string_String, v: $1_paymentv1_TransferLink'#0') returns (m': $Mutation(Table int ($1_paymentv1_TransferLink'#0'))) {
    var enc_k: int;
    var t: Table int ($1_paymentv1_TransferLink'#0');
    enc_k := $EncodeKey'$1_string_String'(k);
    t := $Dereference(m);
    if (ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 100/*EALREADY_EXISTS*/));
    } else {
        m' := $UpdateMutation(m, AddTable(t, enc_k, v));
    }
}
procedure {:inline 2} $1_table_upsert'$1_string_String_$1_paymentv1_TransferLink'#0''(m: $Mutation (Table int ($1_paymentv1_TransferLink'#0')), k: $1_string_String, v: $1_paymentv1_TransferLink'#0') returns (m': $Mutation(Table int ($1_paymentv1_TransferLink'#0'))) {
    var enc_k: int;
    var t: Table int ($1_paymentv1_TransferLink'#0');
    enc_k := $EncodeKey'$1_string_String'(k);
    t := $Dereference(m);
    if (ContainsTable(t, enc_k)) {
        m' := $UpdateMutation(m, UpdateTable(t, enc_k, v));
    } else {
        m' := $UpdateMutation(m, AddTable(t, enc_k, v));
    }
}
procedure {:inline 2} $1_table_remove'$1_string_String_$1_paymentv1_TransferLink'#0''(m: $Mutation (Table int ($1_paymentv1_TransferLink'#0')), k: $1_string_String)
returns (v: $1_paymentv1_TransferLink'#0', m': $Mutation(Table int ($1_paymentv1_TransferLink'#0'))) {
    var enc_k: int;
    var t: Table int ($1_paymentv1_TransferLink'#0');
    enc_k := $EncodeKey'$1_string_String'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        v := GetTable(t, enc_k);
        m' := $UpdateMutation(m, RemoveTable(t, enc_k));
    }
}
procedure {:inline 2} $1_table_borrow'$1_string_String_$1_paymentv1_TransferLink'#0''(t: Table int ($1_paymentv1_TransferLink'#0'), k: $1_string_String) returns (v: $1_paymentv1_TransferLink'#0') {
    var enc_k: int;
    enc_k := $EncodeKey'$1_string_String'(k);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        v := GetTable(t, $EncodeKey'$1_string_String'(k));
    }
}
procedure {:inline 2} $1_table_borrow_mut'$1_string_String_$1_paymentv1_TransferLink'#0''(m: $Mutation (Table int ($1_paymentv1_TransferLink'#0')), k: $1_string_String)
returns (dst: $Mutation ($1_paymentv1_TransferLink'#0'), m': $Mutation (Table int ($1_paymentv1_TransferLink'#0'))) {
    var enc_k: int;
    var t: Table int ($1_paymentv1_TransferLink'#0');
    enc_k := $EncodeKey'$1_string_String'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        dst := $Mutation(m->l, ExtendVec(m->p, enc_k), GetTable(t, enc_k));
        m' := m;
    }
}
procedure {:inline 2} $1_table_borrow_mut_with_default'$1_string_String_$1_paymentv1_TransferLink'#0''(m: $Mutation (Table int ($1_paymentv1_TransferLink'#0')), k: $1_string_String, default: $1_paymentv1_TransferLink'#0')
returns (dst: $Mutation ($1_paymentv1_TransferLink'#0'), m': $Mutation (Table int ($1_paymentv1_TransferLink'#0'))) {
    var enc_k: int;
    var t: Table int ($1_paymentv1_TransferLink'#0');
    var t': Table int ($1_paymentv1_TransferLink'#0');
    enc_k := $EncodeKey'$1_string_String'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        m' := $UpdateMutation(m, AddTable(t, enc_k, default));
        t' := $Dereference(m');
        dst := $Mutation(m'->l, ExtendVec(m'->p, enc_k), GetTable(t', enc_k));
    } else {
        dst := $Mutation(m->l, ExtendVec(m->p, enc_k), GetTable(t, enc_k));
        m' := m;
    }
}
procedure {:inline 2} $1_table_borrow_with_default'$1_string_String_$1_paymentv1_TransferLink'#0''(t: Table int ($1_paymentv1_TransferLink'#0'), k: $1_string_String, default: $1_paymentv1_TransferLink'#0') returns (v: $1_paymentv1_TransferLink'#0') {
    var enc_k: int;
    enc_k := $EncodeKey'$1_string_String'(k);
    if (!ContainsTable(t, enc_k)) {
        v := default;
    } else {
        v := GetTable(t, $EncodeKey'$1_string_String'(k));
    }
}
function {:inline} $1_table_spec_contains'$1_string_String_$1_paymentv1_TransferLink'#0''(t: (Table int ($1_paymentv1_TransferLink'#0')), k: $1_string_String): bool {
    ContainsTable(t, $EncodeKey'$1_string_String'(k))
}
function {:inline} $1_table_spec_set'$1_string_String_$1_paymentv1_TransferLink'#0''(t: Table int ($1_paymentv1_TransferLink'#0'), k: $1_string_String, v: $1_paymentv1_TransferLink'#0'): Table int ($1_paymentv1_TransferLink'#0') {
    (var enc_k := $EncodeKey'$1_string_String'(k);
    if (ContainsTable(t, enc_k)) then
        UpdateTable(t, enc_k, v)
    else
        AddTable(t, enc_k, v))
}
function {:inline} $1_table_spec_remove'$1_string_String_$1_paymentv1_TransferLink'#0''(t: Table int ($1_paymentv1_TransferLink'#0'), k: $1_string_String): Table int ($1_paymentv1_TransferLink'#0') {
    RemoveTable(t, $EncodeKey'$1_string_String'(k))
}
function {:inline} $1_table_spec_get'$1_string_String_$1_paymentv1_TransferLink'#0''(t: Table int ($1_paymentv1_TransferLink'#0'), k: $1_string_String): $1_paymentv1_TransferLink'#0' {
    GetTable(t, $EncodeKey'$1_string_String'(k))
}



// ----------------------------------------------------------------------------------
// Native Table implementation for type `($1_type_info_TypeInfo,bool)`

function $IsEqual'$1_table_Table'$1_type_info_TypeInfo_bool''(t1: Table int (bool), t2: Table int (bool)): bool {
    LenTable(t1) == LenTable(t2) &&
    (forall k: int :: ContainsTable(t1, k) <==> ContainsTable(t2, k)) &&
    (forall k: int :: ContainsTable(t1, k) ==> GetTable(t1, k) == GetTable(t2, k)) &&
    (forall k: int :: ContainsTable(t2, k) ==> GetTable(t1, k) == GetTable(t2, k))
}

// Not inlined.
function $IsValid'$1_table_Table'$1_type_info_TypeInfo_bool''(t: Table int (bool)): bool {
    $IsValid'u64'(LenTable(t)) &&
    (forall i: int:: ContainsTable(t, i) ==> $IsValid'bool'(GetTable(t, i)))
}
procedure {:inline 2} $1_table_new'$1_type_info_TypeInfo_bool'() returns (v: Table int (bool)) {
    v := EmptyTable();
}
procedure {:inline 2} $1_table_destroy_known_empty_unsafe'$1_type_info_TypeInfo_bool'(t: Table int (bool)) {
    if (LenTable(t) != 0) {
        call $Abort($StdError(1/*INVALID_STATE*/, 102/*ENOT_EMPTY*/));
    }
}
procedure {:inline 2} $1_table_contains'$1_type_info_TypeInfo_bool'(t: (Table int (bool)), k: $1_type_info_TypeInfo) returns (r: bool) {
    r := ContainsTable(t, $EncodeKey'$1_type_info_TypeInfo'(k));
}
procedure {:inline 2} $1_table_add'$1_type_info_TypeInfo_bool'(m: $Mutation (Table int (bool)), k: $1_type_info_TypeInfo, v: bool) returns (m': $Mutation(Table int (bool))) {
    var enc_k: int;
    var t: Table int (bool);
    enc_k := $EncodeKey'$1_type_info_TypeInfo'(k);
    t := $Dereference(m);
    if (ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 100/*EALREADY_EXISTS*/));
    } else {
        m' := $UpdateMutation(m, AddTable(t, enc_k, v));
    }
}
procedure {:inline 2} $1_table_upsert'$1_type_info_TypeInfo_bool'(m: $Mutation (Table int (bool)), k: $1_type_info_TypeInfo, v: bool) returns (m': $Mutation(Table int (bool))) {
    var enc_k: int;
    var t: Table int (bool);
    enc_k := $EncodeKey'$1_type_info_TypeInfo'(k);
    t := $Dereference(m);
    if (ContainsTable(t, enc_k)) {
        m' := $UpdateMutation(m, UpdateTable(t, enc_k, v));
    } else {
        m' := $UpdateMutation(m, AddTable(t, enc_k, v));
    }
}
procedure {:inline 2} $1_table_remove'$1_type_info_TypeInfo_bool'(m: $Mutation (Table int (bool)), k: $1_type_info_TypeInfo)
returns (v: bool, m': $Mutation(Table int (bool))) {
    var enc_k: int;
    var t: Table int (bool);
    enc_k := $EncodeKey'$1_type_info_TypeInfo'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        v := GetTable(t, enc_k);
        m' := $UpdateMutation(m, RemoveTable(t, enc_k));
    }
}
procedure {:inline 2} $1_table_borrow'$1_type_info_TypeInfo_bool'(t: Table int (bool), k: $1_type_info_TypeInfo) returns (v: bool) {
    var enc_k: int;
    enc_k := $EncodeKey'$1_type_info_TypeInfo'(k);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        v := GetTable(t, $EncodeKey'$1_type_info_TypeInfo'(k));
    }
}
procedure {:inline 2} $1_table_borrow_mut'$1_type_info_TypeInfo_bool'(m: $Mutation (Table int (bool)), k: $1_type_info_TypeInfo)
returns (dst: $Mutation (bool), m': $Mutation (Table int (bool))) {
    var enc_k: int;
    var t: Table int (bool);
    enc_k := $EncodeKey'$1_type_info_TypeInfo'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        dst := $Mutation(m->l, ExtendVec(m->p, enc_k), GetTable(t, enc_k));
        m' := m;
    }
}
procedure {:inline 2} $1_table_borrow_mut_with_default'$1_type_info_TypeInfo_bool'(m: $Mutation (Table int (bool)), k: $1_type_info_TypeInfo, default: bool)
returns (dst: $Mutation (bool), m': $Mutation (Table int (bool))) {
    var enc_k: int;
    var t: Table int (bool);
    var t': Table int (bool);
    enc_k := $EncodeKey'$1_type_info_TypeInfo'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        m' := $UpdateMutation(m, AddTable(t, enc_k, default));
        t' := $Dereference(m');
        dst := $Mutation(m'->l, ExtendVec(m'->p, enc_k), GetTable(t', enc_k));
    } else {
        dst := $Mutation(m->l, ExtendVec(m->p, enc_k), GetTable(t, enc_k));
        m' := m;
    }
}
procedure {:inline 2} $1_table_borrow_with_default'$1_type_info_TypeInfo_bool'(t: Table int (bool), k: $1_type_info_TypeInfo, default: bool) returns (v: bool) {
    var enc_k: int;
    enc_k := $EncodeKey'$1_type_info_TypeInfo'(k);
    if (!ContainsTable(t, enc_k)) {
        v := default;
    } else {
        v := GetTable(t, $EncodeKey'$1_type_info_TypeInfo'(k));
    }
}
function {:inline} $1_table_spec_contains'$1_type_info_TypeInfo_bool'(t: (Table int (bool)), k: $1_type_info_TypeInfo): bool {
    ContainsTable(t, $EncodeKey'$1_type_info_TypeInfo'(k))
}
function {:inline} $1_table_spec_set'$1_type_info_TypeInfo_bool'(t: Table int (bool), k: $1_type_info_TypeInfo, v: bool): Table int (bool) {
    (var enc_k := $EncodeKey'$1_type_info_TypeInfo'(k);
    if (ContainsTable(t, enc_k)) then
        UpdateTable(t, enc_k, v)
    else
        AddTable(t, enc_k, v))
}
function {:inline} $1_table_spec_remove'$1_type_info_TypeInfo_bool'(t: Table int (bool), k: $1_type_info_TypeInfo): Table int (bool) {
    RemoveTable(t, $EncodeKey'$1_type_info_TypeInfo'(k))
}
function {:inline} $1_table_spec_get'$1_type_info_TypeInfo_bool'(t: Table int (bool), k: $1_type_info_TypeInfo): bool {
    GetTable(t, $EncodeKey'$1_type_info_TypeInfo'(k))
}



// ----------------------------------------------------------------------------------
// Native Table implementation for type `($1_type_info_TypeInfo,$1_object_Object'$1_fungible_asset_Metadata')`

function $IsEqual'$1_table_Table'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata'''(t1: Table int ($1_object_Object'$1_fungible_asset_Metadata'), t2: Table int ($1_object_Object'$1_fungible_asset_Metadata')): bool {
    LenTable(t1) == LenTable(t2) &&
    (forall k: int :: ContainsTable(t1, k) <==> ContainsTable(t2, k)) &&
    (forall k: int :: ContainsTable(t1, k) ==> GetTable(t1, k) == GetTable(t2, k)) &&
    (forall k: int :: ContainsTable(t2, k) ==> GetTable(t1, k) == GetTable(t2, k))
}

// Not inlined.
function $IsValid'$1_table_Table'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata'''(t: Table int ($1_object_Object'$1_fungible_asset_Metadata')): bool {
    $IsValid'u64'(LenTable(t)) &&
    (forall i: int:: ContainsTable(t, i) ==> $IsValid'$1_object_Object'$1_fungible_asset_Metadata''(GetTable(t, i)))
}
procedure {:inline 2} $1_table_new'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata''() returns (v: Table int ($1_object_Object'$1_fungible_asset_Metadata')) {
    v := EmptyTable();
}
procedure {:inline 2} $1_table_destroy_known_empty_unsafe'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata''(t: Table int ($1_object_Object'$1_fungible_asset_Metadata')) {
    if (LenTable(t) != 0) {
        call $Abort($StdError(1/*INVALID_STATE*/, 102/*ENOT_EMPTY*/));
    }
}
procedure {:inline 2} $1_table_contains'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata''(t: (Table int ($1_object_Object'$1_fungible_asset_Metadata')), k: $1_type_info_TypeInfo) returns (r: bool) {
    r := ContainsTable(t, $EncodeKey'$1_type_info_TypeInfo'(k));
}
procedure {:inline 2} $1_table_add'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata''(m: $Mutation (Table int ($1_object_Object'$1_fungible_asset_Metadata')), k: $1_type_info_TypeInfo, v: $1_object_Object'$1_fungible_asset_Metadata') returns (m': $Mutation(Table int ($1_object_Object'$1_fungible_asset_Metadata'))) {
    var enc_k: int;
    var t: Table int ($1_object_Object'$1_fungible_asset_Metadata');
    enc_k := $EncodeKey'$1_type_info_TypeInfo'(k);
    t := $Dereference(m);
    if (ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 100/*EALREADY_EXISTS*/));
    } else {
        m' := $UpdateMutation(m, AddTable(t, enc_k, v));
    }
}
procedure {:inline 2} $1_table_upsert'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata''(m: $Mutation (Table int ($1_object_Object'$1_fungible_asset_Metadata')), k: $1_type_info_TypeInfo, v: $1_object_Object'$1_fungible_asset_Metadata') returns (m': $Mutation(Table int ($1_object_Object'$1_fungible_asset_Metadata'))) {
    var enc_k: int;
    var t: Table int ($1_object_Object'$1_fungible_asset_Metadata');
    enc_k := $EncodeKey'$1_type_info_TypeInfo'(k);
    t := $Dereference(m);
    if (ContainsTable(t, enc_k)) {
        m' := $UpdateMutation(m, UpdateTable(t, enc_k, v));
    } else {
        m' := $UpdateMutation(m, AddTable(t, enc_k, v));
    }
}
procedure {:inline 2} $1_table_remove'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata''(m: $Mutation (Table int ($1_object_Object'$1_fungible_asset_Metadata')), k: $1_type_info_TypeInfo)
returns (v: $1_object_Object'$1_fungible_asset_Metadata', m': $Mutation(Table int ($1_object_Object'$1_fungible_asset_Metadata'))) {
    var enc_k: int;
    var t: Table int ($1_object_Object'$1_fungible_asset_Metadata');
    enc_k := $EncodeKey'$1_type_info_TypeInfo'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        v := GetTable(t, enc_k);
        m' := $UpdateMutation(m, RemoveTable(t, enc_k));
    }
}
procedure {:inline 2} $1_table_borrow'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata''(t: Table int ($1_object_Object'$1_fungible_asset_Metadata'), k: $1_type_info_TypeInfo) returns (v: $1_object_Object'$1_fungible_asset_Metadata') {
    var enc_k: int;
    enc_k := $EncodeKey'$1_type_info_TypeInfo'(k);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        v := GetTable(t, $EncodeKey'$1_type_info_TypeInfo'(k));
    }
}
procedure {:inline 2} $1_table_borrow_mut'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata''(m: $Mutation (Table int ($1_object_Object'$1_fungible_asset_Metadata')), k: $1_type_info_TypeInfo)
returns (dst: $Mutation ($1_object_Object'$1_fungible_asset_Metadata'), m': $Mutation (Table int ($1_object_Object'$1_fungible_asset_Metadata'))) {
    var enc_k: int;
    var t: Table int ($1_object_Object'$1_fungible_asset_Metadata');
    enc_k := $EncodeKey'$1_type_info_TypeInfo'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        dst := $Mutation(m->l, ExtendVec(m->p, enc_k), GetTable(t, enc_k));
        m' := m;
    }
}
procedure {:inline 2} $1_table_borrow_mut_with_default'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata''(m: $Mutation (Table int ($1_object_Object'$1_fungible_asset_Metadata')), k: $1_type_info_TypeInfo, default: $1_object_Object'$1_fungible_asset_Metadata')
returns (dst: $Mutation ($1_object_Object'$1_fungible_asset_Metadata'), m': $Mutation (Table int ($1_object_Object'$1_fungible_asset_Metadata'))) {
    var enc_k: int;
    var t: Table int ($1_object_Object'$1_fungible_asset_Metadata');
    var t': Table int ($1_object_Object'$1_fungible_asset_Metadata');
    enc_k := $EncodeKey'$1_type_info_TypeInfo'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        m' := $UpdateMutation(m, AddTable(t, enc_k, default));
        t' := $Dereference(m');
        dst := $Mutation(m'->l, ExtendVec(m'->p, enc_k), GetTable(t', enc_k));
    } else {
        dst := $Mutation(m->l, ExtendVec(m->p, enc_k), GetTable(t, enc_k));
        m' := m;
    }
}
procedure {:inline 2} $1_table_borrow_with_default'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata''(t: Table int ($1_object_Object'$1_fungible_asset_Metadata'), k: $1_type_info_TypeInfo, default: $1_object_Object'$1_fungible_asset_Metadata') returns (v: $1_object_Object'$1_fungible_asset_Metadata') {
    var enc_k: int;
    enc_k := $EncodeKey'$1_type_info_TypeInfo'(k);
    if (!ContainsTable(t, enc_k)) {
        v := default;
    } else {
        v := GetTable(t, $EncodeKey'$1_type_info_TypeInfo'(k));
    }
}
function {:inline} $1_table_spec_contains'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata''(t: (Table int ($1_object_Object'$1_fungible_asset_Metadata')), k: $1_type_info_TypeInfo): bool {
    ContainsTable(t, $EncodeKey'$1_type_info_TypeInfo'(k))
}
function {:inline} $1_table_spec_set'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata''(t: Table int ($1_object_Object'$1_fungible_asset_Metadata'), k: $1_type_info_TypeInfo, v: $1_object_Object'$1_fungible_asset_Metadata'): Table int ($1_object_Object'$1_fungible_asset_Metadata') {
    (var enc_k := $EncodeKey'$1_type_info_TypeInfo'(k);
    if (ContainsTable(t, enc_k)) then
        UpdateTable(t, enc_k, v)
    else
        AddTable(t, enc_k, v))
}
function {:inline} $1_table_spec_remove'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata''(t: Table int ($1_object_Object'$1_fungible_asset_Metadata'), k: $1_type_info_TypeInfo): Table int ($1_object_Object'$1_fungible_asset_Metadata') {
    RemoveTable(t, $EncodeKey'$1_type_info_TypeInfo'(k))
}
function {:inline} $1_table_spec_get'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata''(t: Table int ($1_object_Object'$1_fungible_asset_Metadata'), k: $1_type_info_TypeInfo): $1_object_Object'$1_fungible_asset_Metadata' {
    GetTable(t, $EncodeKey'$1_type_info_TypeInfo'(k))
}



// ----------------------------------------------------------------------------------
// Native Table implementation for type `($1_copyable_any_Any,$1_permissioned_signer_StoredPermission)`

function $IsEqual'$1_big_ordered_map_BigOrderedMap'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission''(t1: Table int ($1_permissioned_signer_StoredPermission), t2: Table int ($1_permissioned_signer_StoredPermission)): bool {
    LenTable(t1) == LenTable(t2) &&
    (forall k: int :: ContainsTable(t1, k) <==> ContainsTable(t2, k)) &&
    (forall k: int :: ContainsTable(t1, k) ==> GetTable(t1, k) == GetTable(t2, k)) &&
    (forall k: int :: ContainsTable(t2, k) ==> GetTable(t1, k) == GetTable(t2, k))
}

// Not inlined.
function $IsValid'$1_big_ordered_map_BigOrderedMap'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission''(t: Table int ($1_permissioned_signer_StoredPermission)): bool {
    $IsValid'u64'(LenTable(t)) &&
    (forall i: int:: ContainsTable(t, i) ==> $IsValid'$1_permissioned_signer_StoredPermission'(GetTable(t, i)))
}
procedure {:inline 2} $1_big_ordered_map_new'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission'() returns (v: Table int ($1_permissioned_signer_StoredPermission)) {
    v := EmptyTable();
}
procedure {:inline 2} $1_big_ordered_map_destroy_empty'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission'(t: Table int ($1_permissioned_signer_StoredPermission)) {
    if (LenTable(t) != 0) {
        call $Abort($StdError(1/*INVALID_STATE*/, 102/*ENOT_EMPTY*/));
    }
}
procedure {:inline 2} $1_big_ordered_map_is_empty'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission'(t: (Table int ($1_permissioned_signer_StoredPermission))) returns (r: bool) {
    r := LenTable(t) == 0;
}
procedure {:inline 2} $1_big_ordered_map_contains'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission'(t: (Table int ($1_permissioned_signer_StoredPermission)), k: $1_copyable_any_Any) returns (r: bool) {
    r := ContainsTable(t, $EncodeKey'$1_copyable_any_Any'(k));
}
procedure {:inline 2} $1_big_ordered_map_add'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission'(m: $Mutation (Table int ($1_permissioned_signer_StoredPermission)), k: $1_copyable_any_Any, v: $1_permissioned_signer_StoredPermission) returns (m': $Mutation(Table int ($1_permissioned_signer_StoredPermission))) {
    var enc_k: int;
    var t: Table int ($1_permissioned_signer_StoredPermission);
    enc_k := $EncodeKey'$1_copyable_any_Any'(k);
    t := $Dereference(m);
    if (ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 100/*EALREADY_EXISTS*/));
    } else {
        m' := $UpdateMutation(m, AddTable(t, enc_k, v));
    }
}
procedure {:inline 2} $1_big_ordered_map_borrow'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission'(t: Table int ($1_permissioned_signer_StoredPermission), k: $1_copyable_any_Any) returns (v: $1_permissioned_signer_StoredPermission) {
    var enc_k: int;
    enc_k := $EncodeKey'$1_copyable_any_Any'(k);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        v := GetTable(t, $EncodeKey'$1_copyable_any_Any'(k));
    }
}
procedure {:inline 2} $1_big_ordered_map_borrow_mut'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission'(m: $Mutation (Table int ($1_permissioned_signer_StoredPermission)), k: $1_copyable_any_Any)
returns (dst: $Mutation ($1_permissioned_signer_StoredPermission), m': $Mutation (Table int ($1_permissioned_signer_StoredPermission))) {
    var enc_k: int;
    var t: Table int ($1_permissioned_signer_StoredPermission);
    enc_k := $EncodeKey'$1_copyable_any_Any'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        dst := $Mutation(m->l, ExtendVec(m->p, enc_k), GetTable(t, enc_k));
        m' := m;
    }
}
function {:inline} $1_big_ordered_map_spec_len'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission'(t: (Table int ($1_permissioned_signer_StoredPermission))): int {
    LenTable(t)
}
function {:inline} $1_big_ordered_map_spec_contains_key'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission'(t: (Table int ($1_permissioned_signer_StoredPermission)), k: $1_copyable_any_Any): bool {
    ContainsTable(t, $EncodeKey'$1_copyable_any_Any'(k))
}
function {:inline} $1_big_ordered_map_spec_set'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission'(t: Table int ($1_permissioned_signer_StoredPermission), k: $1_copyable_any_Any, v: $1_permissioned_signer_StoredPermission): Table int ($1_permissioned_signer_StoredPermission) {
    (var enc_k := $EncodeKey'$1_copyable_any_Any'(k);
    if (ContainsTable(t, enc_k)) then
        UpdateTable(t, enc_k, v)
    else
        AddTable(t, enc_k, v))
}
function {:inline} $1_big_ordered_map_spec_remove'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission'(t: Table int ($1_permissioned_signer_StoredPermission), k: $1_copyable_any_Any): Table int ($1_permissioned_signer_StoredPermission) {
    RemoveTable(t, $EncodeKey'$1_copyable_any_Any'(k))
}
function {:inline} $1_big_ordered_map_spec_get'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission'(t: Table int ($1_permissioned_signer_StoredPermission), k: $1_copyable_any_Any): $1_permissioned_signer_StoredPermission {
    GetTable(t, $EncodeKey'$1_copyable_any_Any'(k))
}



// ==================================================================================
// Native Hash

// Hash is modeled as an otherwise uninterpreted injection.
// In truth, it is not an injection since the domain has greater cardinality
// (arbitrary length vectors) than the co-domain (vectors of length 32).  But it is
// common to assume in code there are no hash collisions in practice.  Fortunately,
// Boogie is not smart enough to recognized that there is an inconsistency.
// FIXME: If we were using a reliable extensional theory of arrays, and if we could use ==
// instead of $IsEqual, we might be able to avoid so many quantified formulas by
// using a sha2_inverse function in the ensures conditions of Hash_sha2_256 to
// assert that sha2/3 are injections without using global quantified axioms.


function $1_hash_sha2(val: Vec int): Vec int;

// This says that Hash_sha2 is bijective.
axiom (forall v1,v2: Vec int :: {$1_hash_sha2(v1), $1_hash_sha2(v2)}
       $IsEqual'vec'u8''(v1, v2) <==> $IsEqual'vec'u8''($1_hash_sha2(v1), $1_hash_sha2(v2)));

procedure $1_hash_sha2_256(val: Vec int) returns (res: Vec int);
ensures res == $1_hash_sha2(val);     // returns Hash_sha2 Value
ensures $IsValid'vec'u8''(res);    // result is a legal vector of U8s.
ensures LenVec(res) == 32;               // result is 32 bytes.

// Spec version of Move native function.
function {:inline} $1_hash_$sha2_256(val: Vec int): Vec int {
    $1_hash_sha2(val)
}

// similarly for Hash_sha3
function $1_hash_sha3(val: Vec int): Vec int;

axiom (forall v1,v2: Vec int :: {$1_hash_sha3(v1), $1_hash_sha3(v2)}
       $IsEqual'vec'u8''(v1, v2) <==> $IsEqual'vec'u8''($1_hash_sha3(v1), $1_hash_sha3(v2)));

procedure $1_hash_sha3_256(val: Vec int) returns (res: Vec int);
ensures res == $1_hash_sha3(val);     // returns Hash_sha3 Value
ensures $IsValid'vec'u8''(res);    // result is a legal vector of U8s.
ensures LenVec(res) == 32;               // result is 32 bytes.

// Spec version of Move native function.
function {:inline} $1_hash_$sha3_256(val: Vec int): Vec int {
    $1_hash_sha3(val)
}

// ==================================================================================
// Native string

// TODO: correct implementation of strings

procedure {:inline 1} $1_string_internal_check_utf8(x: Vec int) returns (r: bool) {
}

procedure {:inline 1} $1_string_internal_sub_string(x: Vec int, i: int, j: int) returns (r: Vec int) {
}

procedure {:inline 1} $1_string_internal_index_of(x: Vec int, y: Vec int) returns (r: int) {
}

procedure {:inline 1} $1_string_internal_is_char_boundary(x: Vec int, i: int) returns (r: bool) {
}




// ==================================================================================
// Native diem_account

procedure {:inline 1} $1_DiemAccount_create_signer(
  addr: int
) returns (signer: $signer) {
    // A signer is currently identical to an address.
    signer := $signer(addr);
}

procedure {:inline 1} $1_DiemAccount_destroy_signer(
  signer: $signer
) {
  return;
}

// ==================================================================================
// Native account

procedure {:inline 1} $1_Account_create_signer(
  addr: int
) returns (signer: $signer) {
    // A signer is currently identical to an address.
    signer := $signer(addr);
}

// ==================================================================================
// Native Signer

datatype $signer {
    $signer($addr: int),
    $permissioned_signer($addr: int, $permission_addr: int)
}

function {:inline} $IsValid'signer'(s: $signer): bool {
    if s is $signer then
        $IsValid'address'(s->$addr)
    else
        $IsValid'address'(s->$addr) &&
        $IsValid'address'(s->$permission_addr)
}

function {:inline} $IsEqual'signer'(s1: $signer, s2: $signer): bool {
    if s1 is $signer && s2 is $signer then
        s1 == s2
    else if s1 is $permissioned_signer && s2 is $permissioned_signer then
        s1 == s2
    else
        false
}

procedure {:inline 1} $1_signer_borrow_address(signer: $signer) returns (res: int) {
    res := signer->$addr;
}

function {:inline} $1_signer_$borrow_address(signer: $signer): int
{
    signer->$addr
}

function $1_signer_is_txn_signer(s: $signer): bool;

function $1_signer_is_txn_signer_addr(a: int): bool;


// ==================================================================================
// Native signature

// Signature related functionality is handled via uninterpreted functions. This is sound
// currently because we verify every code path based on signature verification with
// an arbitrary interpretation.

function $1_Signature_$ed25519_validate_pubkey(public_key: Vec int): bool;
function $1_Signature_$ed25519_verify(signature: Vec int, public_key: Vec int, message: Vec int): bool;

// Needed because we do not have extensional equality:
axiom (forall k1, k2: Vec int ::
    {$1_Signature_$ed25519_validate_pubkey(k1), $1_Signature_$ed25519_validate_pubkey(k2)}
    $IsEqual'vec'u8''(k1, k2) ==> $1_Signature_$ed25519_validate_pubkey(k1) == $1_Signature_$ed25519_validate_pubkey(k2));
axiom (forall s1, s2, k1, k2, m1, m2: Vec int ::
    {$1_Signature_$ed25519_verify(s1, k1, m1), $1_Signature_$ed25519_verify(s2, k2, m2)}
    $IsEqual'vec'u8''(s1, s2) && $IsEqual'vec'u8''(k1, k2) && $IsEqual'vec'u8''(m1, m2)
    ==> $1_Signature_$ed25519_verify(s1, k1, m1) == $1_Signature_$ed25519_verify(s2, k2, m2));


procedure {:inline 1} $1_Signature_ed25519_validate_pubkey(public_key: Vec int) returns (res: bool) {
    res := $1_Signature_$ed25519_validate_pubkey(public_key);
}

procedure {:inline 1} $1_Signature_ed25519_verify(
        signature: Vec int, public_key: Vec int, message: Vec int) returns (res: bool) {
    res := $1_Signature_$ed25519_verify(signature, public_key, message);
}


// ==================================================================================
// Native bcs::serialize

// ----------------------------------------------------------------------------------
// Native BCS implementation for element type `address`

// Serialize is modeled as an uninterpreted function, with an additional
// axiom to say it's an injection.

function $1_bcs_serialize'address'(v: int): Vec int;

axiom (forall v1, v2: int :: {$1_bcs_serialize'address'(v1), $1_bcs_serialize'address'(v2)}
   $IsEqual'address'(v1, v2) <==> $IsEqual'vec'u8''($1_bcs_serialize'address'(v1), $1_bcs_serialize'address'(v2)));

// This says that serialize returns a non-empty vec<u8>

axiom (forall v: int :: {$1_bcs_serialize'address'(v)}
     ( var r := $1_bcs_serialize'address'(v); $IsValid'vec'u8''(r) && LenVec(r) > 0 ));


procedure $1_bcs_to_bytes'address'(v: int) returns (res: Vec int);
ensures res == $1_bcs_serialize'address'(v);

function {:inline} $1_bcs_$to_bytes'address'(v: int): Vec int {
    $1_bcs_serialize'address'(v)
}

// Serialized addresses should have the same length.
const $serialized_address_len: int;
// Serialized addresses should have the same length
axiom (forall v: int :: {$1_bcs_serialize'address'(v)}
     ( var r := $1_bcs_serialize'address'(v); LenVec(r) == $serialized_address_len));




// ==================================================================================
// Native from_bcs::from_bytes


// ==================================================================================
// Native Event module



procedure {:inline 1} $InitEventStore() {
}

// ============================================================================================
// Type Reflection on Type Parameters

datatype $TypeParamInfo {
    $TypeParamBool(),
    $TypeParamU8(),
    $TypeParamU16(),
    $TypeParamU32(),
    $TypeParamU64(),
    $TypeParamU128(),
    $TypeParamU256(),
    $TypeParamAddress(),
    $TypeParamSigner(),
    $TypeParamVector(e: $TypeParamInfo),
    $TypeParamStruct(a: int, m: Vec int, s: Vec int)
}



//==================================
// Begin Translation

function $TypeName(t: $TypeParamInfo): Vec int;
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamBool ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 98][1 := 111][2 := 111][3 := 108], 4)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 98][1 := 111][2 := 111][3 := 108], 4)) ==> t is $TypeParamBool);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamU8 ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 56], 2)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 56], 2)) ==> t is $TypeParamU8);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamU16 ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 49][2 := 54], 3)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 49][2 := 54], 3)) ==> t is $TypeParamU16);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamU32 ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 51][2 := 50], 3)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 51][2 := 50], 3)) ==> t is $TypeParamU32);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamU64 ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 54][2 := 52], 3)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 54][2 := 52], 3)) ==> t is $TypeParamU64);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamU128 ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 49][2 := 50][3 := 56], 4)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 49][2 := 50][3 := 56], 4)) ==> t is $TypeParamU128);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamU256 ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 50][2 := 53][3 := 54], 4)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 50][2 := 53][3 := 54], 4)) ==> t is $TypeParamU256);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamAddress ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 97][1 := 100][2 := 100][3 := 114][4 := 101][5 := 115][6 := 115], 7)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 97][1 := 100][2 := 100][3 := 114][4 := 101][5 := 115][6 := 115], 7)) ==> t is $TypeParamAddress);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamSigner ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 115][1 := 105][2 := 103][3 := 110][4 := 101][5 := 114], 6)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 115][1 := 105][2 := 103][3 := 110][4 := 101][5 := 114], 6)) ==> t is $TypeParamSigner);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamVector ==> $IsEqual'vec'u8''($TypeName(t), ConcatVec(ConcatVec(Vec(DefaultVecMap()[0 := 118][1 := 101][2 := 99][3 := 116][4 := 111][5 := 114][6 := 60], 7), $TypeName(t->e)), Vec(DefaultVecMap()[0 := 62], 1))));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} ($IsPrefix'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 118][1 := 101][2 := 99][3 := 116][4 := 111][5 := 114][6 := 60], 7)) && $IsSuffix'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 62], 1))) ==> t is $TypeParamVector);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamStruct ==> $IsEqual'vec'u8''($TypeName(t), ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(Vec(DefaultVecMap()[0 := 48][1 := 120], 2), MakeVec1(t->a)), Vec(DefaultVecMap()[0 := 58][1 := 58], 2)), t->m), Vec(DefaultVecMap()[0 := 58][1 := 58], 2)), t->s)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsPrefix'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 48][1 := 120], 2)) ==> t is $TypeParamVector);


// Given Types for Type Parameters

type #0;
function {:inline} $IsEqual'#0'(x1: #0, x2: #0): bool { x1 == x2 }
function {:inline} $IsValid'#0'(x: #0): bool { true }
var #0_info: $TypeParamInfo;
var #0_$memory: $Memory #0;
function {:inline} $1_cmp_$compare'#0'(v1: #0, v2: #0): $1_cmp_Ordering {
    if $IsEqual'#0'(v1, v2) then $1_cmp_Ordering_Equal()
    else $Arbitrary_value_of'$1_cmp_Ordering'()
}
procedure {:inline 1} $1_cmp_compare'#0'(v1: #0, v2: #0) returns ($ret0: $1_cmp_Ordering) {
    $ret0 := $1_cmp_$compare'#0'(v1, v2);
}

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <bool>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'bool'(b1), $1_from_bcs_deserializable'bool'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <u8>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'u8'(b1), $1_from_bcs_deserializable'u8'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <u64>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'u64'(b1), $1_from_bcs_deserializable'u64'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <u128>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'u128'(b1), $1_from_bcs_deserializable'u128'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <u256>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'u256'(b1), $1_from_bcs_deserializable'u256'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <address>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'address'(b1), $1_from_bcs_deserializable'address'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <signer>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'signer'(b1), $1_from_bcs_deserializable'signer'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <vector<u8>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'u8''(b1), $1_from_bcs_deserializable'vec'u8''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <vector<u128>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'u128''(b1), $1_from_bcs_deserializable'vec'u128''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <vector<address>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'address''(b1), $1_from_bcs_deserializable'vec'address''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <vector<0x1::object::Object<0x1::fungible_asset::Metadata>>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$1_object_Object'$1_fungible_asset_Metadata'''(b1), $1_from_bcs_deserializable'vec'$1_object_Object'$1_fungible_asset_Metadata'''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <vector<0x1::function_info::FunctionInfo>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$1_function_info_FunctionInfo''(b1), $1_from_bcs_deserializable'vec'$1_function_info_FunctionInfo''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <vector<0x1::aggregator::Aggregator>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$1_aggregator_Aggregator''(b1), $1_from_bcs_deserializable'vec'$1_aggregator_Aggregator''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <vector<0x1::optional_aggregator::Integer>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$1_optional_aggregator_Integer''(b1), $1_from_bcs_deserializable'vec'$1_optional_aggregator_Integer''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <vector<0x1::optional_aggregator::OptionalAggregator>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$1_optional_aggregator_OptionalAggregator''(b1), $1_from_bcs_deserializable'vec'$1_optional_aggregator_OptionalAggregator''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <vector<0x1::fungible_asset::TransferRef>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$1_fungible_asset_TransferRef''(b1), $1_from_bcs_deserializable'vec'$1_fungible_asset_TransferRef''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <vector<0x1::fungible_asset::BurnRef>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$1_fungible_asset_BurnRef''(b1), $1_from_bcs_deserializable'vec'$1_fungible_asset_BurnRef''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <vector<0x1::fungible_asset::FungibleStore>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$1_fungible_asset_FungibleStore''(b1), $1_from_bcs_deserializable'vec'$1_fungible_asset_FungibleStore''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <vector<0x1::fungible_asset::MintRef>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$1_fungible_asset_MintRef''(b1), $1_from_bcs_deserializable'vec'$1_fungible_asset_MintRef''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <vector<0x1::aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserializable'vec'$1_aptos_coin_AptosCoin''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <vector<#0>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'#0''(b1), $1_from_bcs_deserializable'vec'#0''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::option::Option<u128>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'u128''(b1), $1_from_bcs_deserializable'$1_option_Option'u128''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::option::Option<address>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'address''(b1), $1_from_bcs_deserializable'$1_option_Option'address''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::option::Option<0x1::object::Object<0x1::fungible_asset::Metadata>>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'''(b1), $1_from_bcs_deserializable'$1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::option::Option<0x1::function_info::FunctionInfo>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'$1_function_info_FunctionInfo''(b1), $1_from_bcs_deserializable'$1_option_Option'$1_function_info_FunctionInfo''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::option::Option<0x1::aggregator::Aggregator>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'$1_aggregator_Aggregator''(b1), $1_from_bcs_deserializable'$1_option_Option'$1_aggregator_Aggregator''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::option::Option<0x1::optional_aggregator::Integer>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'$1_optional_aggregator_Integer''(b1), $1_from_bcs_deserializable'$1_option_Option'$1_optional_aggregator_Integer''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::option::Option<0x1::optional_aggregator::OptionalAggregator>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(b1), $1_from_bcs_deserializable'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::option::Option<0x1::fungible_asset::TransferRef>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'$1_fungible_asset_TransferRef''(b1), $1_from_bcs_deserializable'$1_option_Option'$1_fungible_asset_TransferRef''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::option::Option<0x1::fungible_asset::BurnRef>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'$1_fungible_asset_BurnRef''(b1), $1_from_bcs_deserializable'$1_option_Option'$1_fungible_asset_BurnRef''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::option::Option<0x1::fungible_asset::MintRef>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'$1_fungible_asset_MintRef''(b1), $1_from_bcs_deserializable'$1_option_Option'$1_fungible_asset_MintRef''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::string::String>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_string_String'(b1), $1_from_bcs_deserializable'$1_string_String'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::features::Features>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_features_Features'(b1), $1_from_bcs_deserializable'$1_features_Features'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::type_info::TypeInfo>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_type_info_TypeInfo'(b1), $1_from_bcs_deserializable'$1_type_info_TypeInfo'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::table::Table<0x1::string::String, 0x1::paymentv1::TransferLink<#0>>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_table_Table'$1_string_String_$1_paymentv1_TransferLink'#0'''(b1), $1_from_bcs_deserializable'$1_table_Table'$1_string_String_$1_paymentv1_TransferLink'#0'''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::table::Table<0x1::type_info::TypeInfo, bool>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_table_Table'$1_type_info_TypeInfo_bool''(b1), $1_from_bcs_deserializable'$1_table_Table'$1_type_info_TypeInfo_bool''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::table::Table<0x1::type_info::TypeInfo, 0x1::object::Object<0x1::fungible_asset::Metadata>>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_table_Table'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata'''(b1), $1_from_bcs_deserializable'$1_table_Table'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata'''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::chain_status::GenesisEndMarker>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_chain_status_GenesisEndMarker'(b1), $1_from_bcs_deserializable'$1_chain_status_GenesisEndMarker'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::timestamp::CurrentTimeMicroseconds>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_timestamp_CurrentTimeMicroseconds'(b1), $1_from_bcs_deserializable'$1_timestamp_CurrentTimeMicroseconds'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::big_ordered_map::BigOrderedMap<0x1::copyable_any::Any, 0x1::permissioned_signer::StoredPermission>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_big_ordered_map_BigOrderedMap'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission''(b1), $1_from_bcs_deserializable'$1_big_ordered_map_BigOrderedMap'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::permissioned_signer::GrantedPermissionHandles>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_permissioned_signer_GrantedPermissionHandles'(b1), $1_from_bcs_deserializable'$1_permissioned_signer_GrantedPermissionHandles'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::permissioned_signer::PermissionStorage>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_permissioned_signer_PermissionStorage'(b1), $1_from_bcs_deserializable'$1_permissioned_signer_PermissionStorage'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::guid::GUID>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_guid_GUID'(b1), $1_from_bcs_deserializable'$1_guid_GUID'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::guid::ID>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_guid_ID'(b1), $1_from_bcs_deserializable'$1_guid_ID'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::event::EventHandle<0x1::account::CoinRegisterEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_account_CoinRegisterEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_account_CoinRegisterEvent''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::event::EventHandle<0x1::account::KeyRotationEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_account_KeyRotationEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_account_KeyRotationEvent''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::event::EventHandle<0x1::object::TransferEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_object_TransferEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_object_TransferEvent''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::event::EventHandle<0x1::coin::DepositEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_coin_DepositEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_coin_DepositEvent''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::event::EventHandle<0x1::coin::WithdrawEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_coin_WithdrawEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_coin_WithdrawEvent''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::event::EventHandle<0x1::reconfiguration::NewEpochEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::account::Account>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_account_Account'(b1), $1_from_bcs_deserializable'$1_account_Account'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::account::AccountPermission>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_account_AccountPermission'(b1), $1_from_bcs_deserializable'$1_account_AccountPermission'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::account::CapabilityOffer<0x1::account::RotationCapability>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_RotationCapability''(b1), $1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_RotationCapability''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::account::CapabilityOffer<0x1::account::SignerCapability>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_SignerCapability''(b1), $1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_SignerCapability''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::account::CoinRegister>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_account_CoinRegister'(b1), $1_from_bcs_deserializable'$1_account_CoinRegister'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::account::CoinRegisterEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_account_CoinRegisterEvent'(b1), $1_from_bcs_deserializable'$1_account_CoinRegisterEvent'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::account::SignerCapability>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_account_SignerCapability'(b1), $1_from_bcs_deserializable'$1_account_SignerCapability'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::object::ConstructorRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_ConstructorRef'(b1), $1_from_bcs_deserializable'$1_object_ConstructorRef'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::object::DeriveRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_DeriveRef'(b1), $1_from_bcs_deserializable'$1_object_DeriveRef'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::object::Object<0x1::fungible_asset::FungibleStore>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_Object'$1_fungible_asset_FungibleStore''(b1), $1_from_bcs_deserializable'$1_object_Object'$1_fungible_asset_FungibleStore''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::object::Object<0x1::fungible_asset::Metadata>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_Object'$1_fungible_asset_Metadata''(b1), $1_from_bcs_deserializable'$1_object_Object'$1_fungible_asset_Metadata''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::object::ObjectCore>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_ObjectCore'(b1), $1_from_bcs_deserializable'$1_object_ObjectCore'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::object::TombStone>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_TombStone'(b1), $1_from_bcs_deserializable'$1_object_TombStone'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::object::Transfer>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_Transfer'(b1), $1_from_bcs_deserializable'$1_object_Transfer'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::object::TransferEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_TransferEvent'(b1), $1_from_bcs_deserializable'$1_object_TransferEvent'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::object::TransferPermission>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_TransferPermission'(b1), $1_from_bcs_deserializable'$1_object_TransferPermission'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::object::TransferRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_TransferRef'(b1), $1_from_bcs_deserializable'$1_object_TransferRef'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::object::Untransferable>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_Untransferable'(b1), $1_from_bcs_deserializable'$1_object_Untransferable'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::function_info::FunctionInfo>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_function_info_FunctionInfo'(b1), $1_from_bcs_deserializable'$1_function_info_FunctionInfo'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::aggregator::Aggregator>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_aggregator_Aggregator'(b1), $1_from_bcs_deserializable'$1_aggregator_Aggregator'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::aggregator_v2::Aggregator<u64>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_aggregator_v2_Aggregator'u64''(b1), $1_from_bcs_deserializable'$1_aggregator_v2_Aggregator'u64''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::aggregator_v2::Aggregator<u128>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_aggregator_v2_Aggregator'u128''(b1), $1_from_bcs_deserializable'$1_aggregator_v2_Aggregator'u128''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::optional_aggregator::Integer>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_optional_aggregator_Integer'(b1), $1_from_bcs_deserializable'$1_optional_aggregator_Integer'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::optional_aggregator::OptionalAggregator>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_optional_aggregator_OptionalAggregator'(b1), $1_from_bcs_deserializable'$1_optional_aggregator_OptionalAggregator'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::fungible_asset::TransferRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_fungible_asset_TransferRef'(b1), $1_from_bcs_deserializable'$1_fungible_asset_TransferRef'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::fungible_asset::Untransferable>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_fungible_asset_Untransferable'(b1), $1_from_bcs_deserializable'$1_fungible_asset_Untransferable'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::fungible_asset::BurnRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_fungible_asset_BurnRef'(b1), $1_from_bcs_deserializable'$1_fungible_asset_BurnRef'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::fungible_asset::ConcurrentFungibleBalance>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_fungible_asset_ConcurrentFungibleBalance'(b1), $1_from_bcs_deserializable'$1_fungible_asset_ConcurrentFungibleBalance'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::fungible_asset::ConcurrentSupply>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_fungible_asset_ConcurrentSupply'(b1), $1_from_bcs_deserializable'$1_fungible_asset_ConcurrentSupply'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::fungible_asset::Deposit>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_fungible_asset_Deposit'(b1), $1_from_bcs_deserializable'$1_fungible_asset_Deposit'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::fungible_asset::DispatchFunctionStore>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_fungible_asset_DispatchFunctionStore'(b1), $1_from_bcs_deserializable'$1_fungible_asset_DispatchFunctionStore'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::fungible_asset::FungibleAsset>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_fungible_asset_FungibleAsset'(b1), $1_from_bcs_deserializable'$1_fungible_asset_FungibleAsset'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::fungible_asset::FungibleStore>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_fungible_asset_FungibleStore'(b1), $1_from_bcs_deserializable'$1_fungible_asset_FungibleStore'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::fungible_asset::Metadata>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_fungible_asset_Metadata'(b1), $1_from_bcs_deserializable'$1_fungible_asset_Metadata'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::fungible_asset::MintRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_fungible_asset_MintRef'(b1), $1_from_bcs_deserializable'$1_fungible_asset_MintRef'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::fungible_asset::Supply>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_fungible_asset_Supply'(b1), $1_from_bcs_deserializable'$1_fungible_asset_Supply'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::fungible_asset::Withdraw>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_fungible_asset_Withdraw'(b1), $1_from_bcs_deserializable'$1_fungible_asset_Withdraw'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::fungible_asset::WithdrawPermission>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_fungible_asset_WithdrawPermission'(b1), $1_from_bcs_deserializable'$1_fungible_asset_WithdrawPermission'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::dispatchable_fungible_asset::TransferRefStore>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_dispatchable_fungible_asset_TransferRefStore'(b1), $1_from_bcs_deserializable'$1_dispatchable_fungible_asset_TransferRefStore'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::primary_fungible_store::DeriveRefPod>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_primary_fungible_store_DeriveRefPod'(b1), $1_from_bcs_deserializable'$1_primary_fungible_store_DeriveRefPod'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::coin::DepositEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_coin_DepositEvent'(b1), $1_from_bcs_deserializable'$1_coin_DepositEvent'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::coin::WithdrawEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_coin_WithdrawEvent'(b1), $1_from_bcs_deserializable'$1_coin_WithdrawEvent'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::coin::Coin<0x1::aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_coin_Coin'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserializable'$1_coin_Coin'$1_aptos_coin_AptosCoin''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::coin::Coin<#0>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_coin_Coin'#0''(b1), $1_from_bcs_deserializable'$1_coin_Coin'#0''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::coin::CoinConversionMap>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_coin_CoinConversionMap'(b1), $1_from_bcs_deserializable'$1_coin_CoinConversionMap'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::coin::CoinInfo<0x1::aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserializable'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::coin::CoinInfo<#0>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_coin_CoinInfo'#0''(b1), $1_from_bcs_deserializable'$1_coin_CoinInfo'#0''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::coin::CoinStore<0x1::aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserializable'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::coin::CoinStore<#0>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_coin_CoinStore'#0''(b1), $1_from_bcs_deserializable'$1_coin_CoinStore'#0''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::coin::PairCreation>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_coin_PairCreation'(b1), $1_from_bcs_deserializable'$1_coin_PairCreation'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::coin::PairedCoinType>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_coin_PairedCoinType'(b1), $1_from_bcs_deserializable'$1_coin_PairedCoinType'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::coin::PairedFungibleAssetRefs>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_coin_PairedFungibleAssetRefs'(b1), $1_from_bcs_deserializable'$1_coin_PairedFungibleAssetRefs'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::coin::Ghost$supply<0x1::aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserializable'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::coin::Ghost$supply<#0>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_coin_Ghost$supply'#0''(b1), $1_from_bcs_deserializable'$1_coin_Ghost$supply'#0''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::coin::Ghost$aggregate_supply<0x1::aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserializable'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::coin::Ghost$aggregate_supply<#0>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_coin_Ghost$aggregate_supply'#0''(b1), $1_from_bcs_deserializable'$1_coin_Ghost$aggregate_supply'#0''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::aptos_coin::AptosCoin>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_aptos_coin_AptosCoin'(b1), $1_from_bcs_deserializable'$1_aptos_coin_AptosCoin'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::reconfiguration::Configuration>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_reconfiguration_Configuration'(b1), $1_from_bcs_deserializable'$1_reconfiguration_Configuration'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::supported_tokens::SupportedTokens>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_supported_tokens_SupportedTokens'(b1), $1_from_bcs_deserializable'$1_supported_tokens_SupportedTokens'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::paymentv1::EscrowCapability>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_paymentv1_EscrowCapability'(b1), $1_from_bcs_deserializable'$1_paymentv1_EscrowCapability'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::paymentv1::PaymentProcessed>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_paymentv1_PaymentProcessed'(b1), $1_from_bcs_deserializable'$1_paymentv1_PaymentProcessed'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::paymentv1::TransferClaimed>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_paymentv1_TransferClaimed'(b1), $1_from_bcs_deserializable'$1_paymentv1_TransferClaimed'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::paymentv1::TransferLink<#0>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_paymentv1_TransferLink'#0''(b1), $1_from_bcs_deserializable'$1_paymentv1_TransferLink'#0''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::paymentv1::TransferLinkCreated>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_paymentv1_TransferLinkCreated'(b1), $1_from_bcs_deserializable'$1_paymentv1_TransferLinkCreated'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <0x1::paymentv1::TransferLinkStore<#0>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_paymentv1_TransferLinkStore'#0''(b1), $1_from_bcs_deserializable'$1_paymentv1_TransferLinkStore'#0''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+125, instance <#0>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'#0'(b1), $1_from_bcs_deserializable'#0'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <bool>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserialize'bool'(b1), $1_from_bcs_deserialize'bool'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <u8>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'u8'($1_from_bcs_deserialize'u8'(b1), $1_from_bcs_deserialize'u8'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <u64>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'u64'($1_from_bcs_deserialize'u64'(b1), $1_from_bcs_deserialize'u64'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <u128>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'u128'($1_from_bcs_deserialize'u128'(b1), $1_from_bcs_deserialize'u128'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <u256>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'u256'($1_from_bcs_deserialize'u256'(b1), $1_from_bcs_deserialize'u256'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <address>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'address'($1_from_bcs_deserialize'address'(b1), $1_from_bcs_deserialize'address'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <signer>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'signer'($1_from_bcs_deserialize'signer'(b1), $1_from_bcs_deserialize'signer'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <vector<u8>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'u8''($1_from_bcs_deserialize'vec'u8''(b1), $1_from_bcs_deserialize'vec'u8''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <vector<u128>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'u128''($1_from_bcs_deserialize'vec'u128''(b1), $1_from_bcs_deserialize'vec'u128''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <vector<address>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'address''($1_from_bcs_deserialize'vec'address''(b1), $1_from_bcs_deserialize'vec'address''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <vector<0x1::object::Object<0x1::fungible_asset::Metadata>>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$1_object_Object'$1_fungible_asset_Metadata'''($1_from_bcs_deserialize'vec'$1_object_Object'$1_fungible_asset_Metadata'''(b1), $1_from_bcs_deserialize'vec'$1_object_Object'$1_fungible_asset_Metadata'''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <vector<0x1::function_info::FunctionInfo>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$1_function_info_FunctionInfo''($1_from_bcs_deserialize'vec'$1_function_info_FunctionInfo''(b1), $1_from_bcs_deserialize'vec'$1_function_info_FunctionInfo''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <vector<0x1::aggregator::Aggregator>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$1_aggregator_Aggregator''($1_from_bcs_deserialize'vec'$1_aggregator_Aggregator''(b1), $1_from_bcs_deserialize'vec'$1_aggregator_Aggregator''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <vector<0x1::optional_aggregator::Integer>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$1_optional_aggregator_Integer''($1_from_bcs_deserialize'vec'$1_optional_aggregator_Integer''(b1), $1_from_bcs_deserialize'vec'$1_optional_aggregator_Integer''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <vector<0x1::optional_aggregator::OptionalAggregator>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$1_optional_aggregator_OptionalAggregator''($1_from_bcs_deserialize'vec'$1_optional_aggregator_OptionalAggregator''(b1), $1_from_bcs_deserialize'vec'$1_optional_aggregator_OptionalAggregator''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <vector<0x1::fungible_asset::TransferRef>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$1_fungible_asset_TransferRef''($1_from_bcs_deserialize'vec'$1_fungible_asset_TransferRef''(b1), $1_from_bcs_deserialize'vec'$1_fungible_asset_TransferRef''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <vector<0x1::fungible_asset::BurnRef>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$1_fungible_asset_BurnRef''($1_from_bcs_deserialize'vec'$1_fungible_asset_BurnRef''(b1), $1_from_bcs_deserialize'vec'$1_fungible_asset_BurnRef''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <vector<0x1::fungible_asset::FungibleStore>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$1_fungible_asset_FungibleStore''($1_from_bcs_deserialize'vec'$1_fungible_asset_FungibleStore''(b1), $1_from_bcs_deserialize'vec'$1_fungible_asset_FungibleStore''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <vector<0x1::fungible_asset::MintRef>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$1_fungible_asset_MintRef''($1_from_bcs_deserialize'vec'$1_fungible_asset_MintRef''(b1), $1_from_bcs_deserialize'vec'$1_fungible_asset_MintRef''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <vector<0x1::aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$1_aptos_coin_AptosCoin''($1_from_bcs_deserialize'vec'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserialize'vec'$1_aptos_coin_AptosCoin''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <vector<#0>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'#0''($1_from_bcs_deserialize'vec'#0''(b1), $1_from_bcs_deserialize'vec'#0''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::option::Option<u128>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'u128''($1_from_bcs_deserialize'$1_option_Option'u128''(b1), $1_from_bcs_deserialize'$1_option_Option'u128''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::option::Option<address>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'address''($1_from_bcs_deserialize'$1_option_Option'address''(b1), $1_from_bcs_deserialize'$1_option_Option'address''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::option::Option<0x1::object::Object<0x1::fungible_asset::Metadata>>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'''($1_from_bcs_deserialize'$1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'''(b1), $1_from_bcs_deserialize'$1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::option::Option<0x1::function_info::FunctionInfo>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'$1_function_info_FunctionInfo''($1_from_bcs_deserialize'$1_option_Option'$1_function_info_FunctionInfo''(b1), $1_from_bcs_deserialize'$1_option_Option'$1_function_info_FunctionInfo''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::option::Option<0x1::aggregator::Aggregator>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'$1_aggregator_Aggregator''($1_from_bcs_deserialize'$1_option_Option'$1_aggregator_Aggregator''(b1), $1_from_bcs_deserialize'$1_option_Option'$1_aggregator_Aggregator''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::option::Option<0x1::optional_aggregator::Integer>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'$1_optional_aggregator_Integer''($1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_Integer''(b1), $1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_Integer''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::option::Option<0x1::optional_aggregator::OptionalAggregator>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'$1_optional_aggregator_OptionalAggregator''($1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(b1), $1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::option::Option<0x1::fungible_asset::TransferRef>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'$1_fungible_asset_TransferRef''($1_from_bcs_deserialize'$1_option_Option'$1_fungible_asset_TransferRef''(b1), $1_from_bcs_deserialize'$1_option_Option'$1_fungible_asset_TransferRef''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::option::Option<0x1::fungible_asset::BurnRef>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'$1_fungible_asset_BurnRef''($1_from_bcs_deserialize'$1_option_Option'$1_fungible_asset_BurnRef''(b1), $1_from_bcs_deserialize'$1_option_Option'$1_fungible_asset_BurnRef''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::option::Option<0x1::fungible_asset::MintRef>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'$1_fungible_asset_MintRef''($1_from_bcs_deserialize'$1_option_Option'$1_fungible_asset_MintRef''(b1), $1_from_bcs_deserialize'$1_option_Option'$1_fungible_asset_MintRef''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::string::String>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_string_String'($1_from_bcs_deserialize'$1_string_String'(b1), $1_from_bcs_deserialize'$1_string_String'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::features::Features>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_features_Features'($1_from_bcs_deserialize'$1_features_Features'(b1), $1_from_bcs_deserialize'$1_features_Features'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::type_info::TypeInfo>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_type_info_TypeInfo'($1_from_bcs_deserialize'$1_type_info_TypeInfo'(b1), $1_from_bcs_deserialize'$1_type_info_TypeInfo'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::table::Table<0x1::string::String, 0x1::paymentv1::TransferLink<#0>>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_table_Table'$1_string_String_$1_paymentv1_TransferLink'#0'''($1_from_bcs_deserialize'$1_table_Table'$1_string_String_$1_paymentv1_TransferLink'#0'''(b1), $1_from_bcs_deserialize'$1_table_Table'$1_string_String_$1_paymentv1_TransferLink'#0'''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::table::Table<0x1::type_info::TypeInfo, bool>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_table_Table'$1_type_info_TypeInfo_bool''($1_from_bcs_deserialize'$1_table_Table'$1_type_info_TypeInfo_bool''(b1), $1_from_bcs_deserialize'$1_table_Table'$1_type_info_TypeInfo_bool''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::table::Table<0x1::type_info::TypeInfo, 0x1::object::Object<0x1::fungible_asset::Metadata>>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_table_Table'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata'''($1_from_bcs_deserialize'$1_table_Table'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata'''(b1), $1_from_bcs_deserialize'$1_table_Table'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata'''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::chain_status::GenesisEndMarker>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_chain_status_GenesisEndMarker'($1_from_bcs_deserialize'$1_chain_status_GenesisEndMarker'(b1), $1_from_bcs_deserialize'$1_chain_status_GenesisEndMarker'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::timestamp::CurrentTimeMicroseconds>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_timestamp_CurrentTimeMicroseconds'($1_from_bcs_deserialize'$1_timestamp_CurrentTimeMicroseconds'(b1), $1_from_bcs_deserialize'$1_timestamp_CurrentTimeMicroseconds'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::big_ordered_map::BigOrderedMap<0x1::copyable_any::Any, 0x1::permissioned_signer::StoredPermission>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_big_ordered_map_BigOrderedMap'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission''($1_from_bcs_deserialize'$1_big_ordered_map_BigOrderedMap'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission''(b1), $1_from_bcs_deserialize'$1_big_ordered_map_BigOrderedMap'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::permissioned_signer::GrantedPermissionHandles>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_permissioned_signer_GrantedPermissionHandles'($1_from_bcs_deserialize'$1_permissioned_signer_GrantedPermissionHandles'(b1), $1_from_bcs_deserialize'$1_permissioned_signer_GrantedPermissionHandles'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::permissioned_signer::PermissionStorage>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_permissioned_signer_PermissionStorage'($1_from_bcs_deserialize'$1_permissioned_signer_PermissionStorage'(b1), $1_from_bcs_deserialize'$1_permissioned_signer_PermissionStorage'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::guid::GUID>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_guid_GUID'($1_from_bcs_deserialize'$1_guid_GUID'(b1), $1_from_bcs_deserialize'$1_guid_GUID'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::guid::ID>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_guid_ID'($1_from_bcs_deserialize'$1_guid_ID'(b1), $1_from_bcs_deserialize'$1_guid_ID'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::event::EventHandle<0x1::account::CoinRegisterEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_account_CoinRegisterEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_account_CoinRegisterEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_account_CoinRegisterEvent''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::event::EventHandle<0x1::account::KeyRotationEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_account_KeyRotationEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_account_KeyRotationEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_account_KeyRotationEvent''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::event::EventHandle<0x1::object::TransferEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_object_TransferEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_object_TransferEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_object_TransferEvent''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::event::EventHandle<0x1::coin::DepositEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_coin_DepositEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_DepositEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_DepositEvent''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::event::EventHandle<0x1::coin::WithdrawEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_coin_WithdrawEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_WithdrawEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_WithdrawEvent''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::event::EventHandle<0x1::reconfiguration::NewEpochEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::account::Account>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_account_Account'($1_from_bcs_deserialize'$1_account_Account'(b1), $1_from_bcs_deserialize'$1_account_Account'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::account::AccountPermission>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_account_AccountPermission'($1_from_bcs_deserialize'$1_account_AccountPermission'(b1), $1_from_bcs_deserialize'$1_account_AccountPermission'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::account::CapabilityOffer<0x1::account::RotationCapability>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_account_CapabilityOffer'$1_account_RotationCapability''($1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_RotationCapability''(b1), $1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_RotationCapability''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::account::CapabilityOffer<0x1::account::SignerCapability>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_account_CapabilityOffer'$1_account_SignerCapability''($1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_SignerCapability''(b1), $1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_SignerCapability''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::account::CoinRegister>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_account_CoinRegister'($1_from_bcs_deserialize'$1_account_CoinRegister'(b1), $1_from_bcs_deserialize'$1_account_CoinRegister'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::account::CoinRegisterEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_account_CoinRegisterEvent'($1_from_bcs_deserialize'$1_account_CoinRegisterEvent'(b1), $1_from_bcs_deserialize'$1_account_CoinRegisterEvent'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::account::SignerCapability>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_account_SignerCapability'($1_from_bcs_deserialize'$1_account_SignerCapability'(b1), $1_from_bcs_deserialize'$1_account_SignerCapability'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::object::ConstructorRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_ConstructorRef'($1_from_bcs_deserialize'$1_object_ConstructorRef'(b1), $1_from_bcs_deserialize'$1_object_ConstructorRef'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::object::DeriveRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_DeriveRef'($1_from_bcs_deserialize'$1_object_DeriveRef'(b1), $1_from_bcs_deserialize'$1_object_DeriveRef'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::object::Object<0x1::fungible_asset::FungibleStore>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_Object'$1_fungible_asset_FungibleStore''($1_from_bcs_deserialize'$1_object_Object'$1_fungible_asset_FungibleStore''(b1), $1_from_bcs_deserialize'$1_object_Object'$1_fungible_asset_FungibleStore''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::object::Object<0x1::fungible_asset::Metadata>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_Object'$1_fungible_asset_Metadata''($1_from_bcs_deserialize'$1_object_Object'$1_fungible_asset_Metadata''(b1), $1_from_bcs_deserialize'$1_object_Object'$1_fungible_asset_Metadata''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::object::ObjectCore>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_ObjectCore'($1_from_bcs_deserialize'$1_object_ObjectCore'(b1), $1_from_bcs_deserialize'$1_object_ObjectCore'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::object::TombStone>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_TombStone'($1_from_bcs_deserialize'$1_object_TombStone'(b1), $1_from_bcs_deserialize'$1_object_TombStone'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::object::Transfer>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_Transfer'($1_from_bcs_deserialize'$1_object_Transfer'(b1), $1_from_bcs_deserialize'$1_object_Transfer'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::object::TransferEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_TransferEvent'($1_from_bcs_deserialize'$1_object_TransferEvent'(b1), $1_from_bcs_deserialize'$1_object_TransferEvent'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::object::TransferPermission>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_TransferPermission'($1_from_bcs_deserialize'$1_object_TransferPermission'(b1), $1_from_bcs_deserialize'$1_object_TransferPermission'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::object::TransferRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_TransferRef'($1_from_bcs_deserialize'$1_object_TransferRef'(b1), $1_from_bcs_deserialize'$1_object_TransferRef'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::object::Untransferable>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_Untransferable'($1_from_bcs_deserialize'$1_object_Untransferable'(b1), $1_from_bcs_deserialize'$1_object_Untransferable'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::function_info::FunctionInfo>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_function_info_FunctionInfo'($1_from_bcs_deserialize'$1_function_info_FunctionInfo'(b1), $1_from_bcs_deserialize'$1_function_info_FunctionInfo'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::aggregator::Aggregator>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_aggregator_Aggregator'($1_from_bcs_deserialize'$1_aggregator_Aggregator'(b1), $1_from_bcs_deserialize'$1_aggregator_Aggregator'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::aggregator_v2::Aggregator<u64>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_aggregator_v2_Aggregator'u64''($1_from_bcs_deserialize'$1_aggregator_v2_Aggregator'u64''(b1), $1_from_bcs_deserialize'$1_aggregator_v2_Aggregator'u64''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::aggregator_v2::Aggregator<u128>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_aggregator_v2_Aggregator'u128''($1_from_bcs_deserialize'$1_aggregator_v2_Aggregator'u128''(b1), $1_from_bcs_deserialize'$1_aggregator_v2_Aggregator'u128''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::optional_aggregator::Integer>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_optional_aggregator_Integer'($1_from_bcs_deserialize'$1_optional_aggregator_Integer'(b1), $1_from_bcs_deserialize'$1_optional_aggregator_Integer'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::optional_aggregator::OptionalAggregator>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_optional_aggregator_OptionalAggregator'($1_from_bcs_deserialize'$1_optional_aggregator_OptionalAggregator'(b1), $1_from_bcs_deserialize'$1_optional_aggregator_OptionalAggregator'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::fungible_asset::TransferRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_fungible_asset_TransferRef'($1_from_bcs_deserialize'$1_fungible_asset_TransferRef'(b1), $1_from_bcs_deserialize'$1_fungible_asset_TransferRef'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::fungible_asset::Untransferable>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_fungible_asset_Untransferable'($1_from_bcs_deserialize'$1_fungible_asset_Untransferable'(b1), $1_from_bcs_deserialize'$1_fungible_asset_Untransferable'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::fungible_asset::BurnRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_fungible_asset_BurnRef'($1_from_bcs_deserialize'$1_fungible_asset_BurnRef'(b1), $1_from_bcs_deserialize'$1_fungible_asset_BurnRef'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::fungible_asset::ConcurrentFungibleBalance>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_fungible_asset_ConcurrentFungibleBalance'($1_from_bcs_deserialize'$1_fungible_asset_ConcurrentFungibleBalance'(b1), $1_from_bcs_deserialize'$1_fungible_asset_ConcurrentFungibleBalance'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::fungible_asset::ConcurrentSupply>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_fungible_asset_ConcurrentSupply'($1_from_bcs_deserialize'$1_fungible_asset_ConcurrentSupply'(b1), $1_from_bcs_deserialize'$1_fungible_asset_ConcurrentSupply'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::fungible_asset::Deposit>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_fungible_asset_Deposit'($1_from_bcs_deserialize'$1_fungible_asset_Deposit'(b1), $1_from_bcs_deserialize'$1_fungible_asset_Deposit'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::fungible_asset::DispatchFunctionStore>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_fungible_asset_DispatchFunctionStore'($1_from_bcs_deserialize'$1_fungible_asset_DispatchFunctionStore'(b1), $1_from_bcs_deserialize'$1_fungible_asset_DispatchFunctionStore'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::fungible_asset::FungibleAsset>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_fungible_asset_FungibleAsset'($1_from_bcs_deserialize'$1_fungible_asset_FungibleAsset'(b1), $1_from_bcs_deserialize'$1_fungible_asset_FungibleAsset'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::fungible_asset::FungibleStore>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_fungible_asset_FungibleStore'($1_from_bcs_deserialize'$1_fungible_asset_FungibleStore'(b1), $1_from_bcs_deserialize'$1_fungible_asset_FungibleStore'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::fungible_asset::Metadata>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_fungible_asset_Metadata'($1_from_bcs_deserialize'$1_fungible_asset_Metadata'(b1), $1_from_bcs_deserialize'$1_fungible_asset_Metadata'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::fungible_asset::MintRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_fungible_asset_MintRef'($1_from_bcs_deserialize'$1_fungible_asset_MintRef'(b1), $1_from_bcs_deserialize'$1_fungible_asset_MintRef'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::fungible_asset::Supply>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_fungible_asset_Supply'($1_from_bcs_deserialize'$1_fungible_asset_Supply'(b1), $1_from_bcs_deserialize'$1_fungible_asset_Supply'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::fungible_asset::Withdraw>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_fungible_asset_Withdraw'($1_from_bcs_deserialize'$1_fungible_asset_Withdraw'(b1), $1_from_bcs_deserialize'$1_fungible_asset_Withdraw'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::fungible_asset::WithdrawPermission>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_fungible_asset_WithdrawPermission'($1_from_bcs_deserialize'$1_fungible_asset_WithdrawPermission'(b1), $1_from_bcs_deserialize'$1_fungible_asset_WithdrawPermission'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::dispatchable_fungible_asset::TransferRefStore>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_dispatchable_fungible_asset_TransferRefStore'($1_from_bcs_deserialize'$1_dispatchable_fungible_asset_TransferRefStore'(b1), $1_from_bcs_deserialize'$1_dispatchable_fungible_asset_TransferRefStore'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::primary_fungible_store::DeriveRefPod>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_primary_fungible_store_DeriveRefPod'($1_from_bcs_deserialize'$1_primary_fungible_store_DeriveRefPod'(b1), $1_from_bcs_deserialize'$1_primary_fungible_store_DeriveRefPod'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::coin::DepositEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_coin_DepositEvent'($1_from_bcs_deserialize'$1_coin_DepositEvent'(b1), $1_from_bcs_deserialize'$1_coin_DepositEvent'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::coin::WithdrawEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_coin_WithdrawEvent'($1_from_bcs_deserialize'$1_coin_WithdrawEvent'(b1), $1_from_bcs_deserialize'$1_coin_WithdrawEvent'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::coin::Coin<0x1::aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_coin_Coin'$1_aptos_coin_AptosCoin''($1_from_bcs_deserialize'$1_coin_Coin'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserialize'$1_coin_Coin'$1_aptos_coin_AptosCoin''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::coin::Coin<#0>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_coin_Coin'#0''($1_from_bcs_deserialize'$1_coin_Coin'#0''(b1), $1_from_bcs_deserialize'$1_coin_Coin'#0''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::coin::CoinConversionMap>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_coin_CoinConversionMap'($1_from_bcs_deserialize'$1_coin_CoinConversionMap'(b1), $1_from_bcs_deserialize'$1_coin_CoinConversionMap'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::coin::CoinInfo<0x1::aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''($1_from_bcs_deserialize'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserialize'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::coin::CoinInfo<#0>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_coin_CoinInfo'#0''($1_from_bcs_deserialize'$1_coin_CoinInfo'#0''(b1), $1_from_bcs_deserialize'$1_coin_CoinInfo'#0''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::coin::CoinStore<0x1::aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''($1_from_bcs_deserialize'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserialize'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::coin::CoinStore<#0>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_coin_CoinStore'#0''($1_from_bcs_deserialize'$1_coin_CoinStore'#0''(b1), $1_from_bcs_deserialize'$1_coin_CoinStore'#0''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::coin::PairCreation>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_coin_PairCreation'($1_from_bcs_deserialize'$1_coin_PairCreation'(b1), $1_from_bcs_deserialize'$1_coin_PairCreation'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::coin::PairedCoinType>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_coin_PairedCoinType'($1_from_bcs_deserialize'$1_coin_PairedCoinType'(b1), $1_from_bcs_deserialize'$1_coin_PairedCoinType'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::coin::PairedFungibleAssetRefs>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_coin_PairedFungibleAssetRefs'($1_from_bcs_deserialize'$1_coin_PairedFungibleAssetRefs'(b1), $1_from_bcs_deserialize'$1_coin_PairedFungibleAssetRefs'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::coin::Ghost$supply<0x1::aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''($1_from_bcs_deserialize'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserialize'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::coin::Ghost$supply<#0>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_coin_Ghost$supply'#0''($1_from_bcs_deserialize'$1_coin_Ghost$supply'#0''(b1), $1_from_bcs_deserialize'$1_coin_Ghost$supply'#0''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::coin::Ghost$aggregate_supply<0x1::aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''($1_from_bcs_deserialize'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserialize'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::coin::Ghost$aggregate_supply<#0>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_coin_Ghost$aggregate_supply'#0''($1_from_bcs_deserialize'$1_coin_Ghost$aggregate_supply'#0''(b1), $1_from_bcs_deserialize'$1_coin_Ghost$aggregate_supply'#0''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::aptos_coin::AptosCoin>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_aptos_coin_AptosCoin'($1_from_bcs_deserialize'$1_aptos_coin_AptosCoin'(b1), $1_from_bcs_deserialize'$1_aptos_coin_AptosCoin'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::reconfiguration::Configuration>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_reconfiguration_Configuration'($1_from_bcs_deserialize'$1_reconfiguration_Configuration'(b1), $1_from_bcs_deserialize'$1_reconfiguration_Configuration'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::supported_tokens::SupportedTokens>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_supported_tokens_SupportedTokens'($1_from_bcs_deserialize'$1_supported_tokens_SupportedTokens'(b1), $1_from_bcs_deserialize'$1_supported_tokens_SupportedTokens'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::paymentv1::EscrowCapability>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_paymentv1_EscrowCapability'($1_from_bcs_deserialize'$1_paymentv1_EscrowCapability'(b1), $1_from_bcs_deserialize'$1_paymentv1_EscrowCapability'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::paymentv1::PaymentProcessed>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_paymentv1_PaymentProcessed'($1_from_bcs_deserialize'$1_paymentv1_PaymentProcessed'(b1), $1_from_bcs_deserialize'$1_paymentv1_PaymentProcessed'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::paymentv1::TransferClaimed>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_paymentv1_TransferClaimed'($1_from_bcs_deserialize'$1_paymentv1_TransferClaimed'(b1), $1_from_bcs_deserialize'$1_paymentv1_TransferClaimed'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::paymentv1::TransferLink<#0>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_paymentv1_TransferLink'#0''($1_from_bcs_deserialize'$1_paymentv1_TransferLink'#0''(b1), $1_from_bcs_deserialize'$1_paymentv1_TransferLink'#0''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::paymentv1::TransferLinkCreated>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_paymentv1_TransferLinkCreated'($1_from_bcs_deserialize'$1_paymentv1_TransferLinkCreated'(b1), $1_from_bcs_deserialize'$1_paymentv1_TransferLinkCreated'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <0x1::paymentv1::TransferLinkStore<#0>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_paymentv1_TransferLinkStore'#0''($1_from_bcs_deserialize'$1_paymentv1_TransferLinkStore'#0''(b1), $1_from_bcs_deserialize'$1_paymentv1_TransferLinkStore'#0''(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+119, instance <#0>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'#0'($1_from_bcs_deserialize'#0'(b1), $1_from_bcs_deserialize'#0'(b2)))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\permissioned_signer.spec.move:5:9+294
axiom (forall a: $1_permissioned_signer_GrantedPermissionHandles :: $IsValid'$1_permissioned_signer_GrantedPermissionHandles'(a) ==> ((var $range_0 := $Range(0, LenVec(a->$active_handles)); (forall $i_1: int :: $InRange($range_0, $i_1) ==> (var i := $i_1;
((var $range_2 := $Range(0, LenVec(a->$active_handles)); (forall $i_3: int :: $InRange($range_2, $i_3) ==> (var j := $i_3;
((!$IsEqual'num'(i, j) ==> !$IsEqual'address'(ReadVec(a->$active_handles, i), ReadVec(a->$active_handles, j)))))))))))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\hash.spec.move:8:9+114
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''($1_aptos_hash_spec_keccak256(b1), $1_aptos_hash_spec_keccak256(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\hash.spec.move:13:9+130
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''($1_aptos_hash_spec_sha2_512_internal(b1), $1_aptos_hash_spec_sha2_512_internal(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\hash.spec.move:18:9+130
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''($1_aptos_hash_spec_sha3_512_internal(b1), $1_aptos_hash_spec_sha3_512_internal(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\hash.spec.move:23:9+132
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''($1_aptos_hash_spec_ripemd160_internal(b1), $1_aptos_hash_spec_ripemd160_internal(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\hash.spec.move:28:9+136
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''($1_aptos_hash_spec_blake2b_256_internal(b1), $1_aptos_hash_spec_blake2b_256_internal(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\vector.move:199:5+95
function {:inline} $1_vector_$is_empty'u128'(self: Vec (int)): bool {
    $IsEqual'u64'($1_vector_$length'u128'(self), 0)
}

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\vector.move:199:5+95
function {:inline} $1_vector_$is_empty'address'(self: Vec (int)): bool {
    $IsEqual'u64'($1_vector_$length'address'(self), 0)
}

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\vector.move:199:5+95
function {:inline} $1_vector_$is_empty'$1_object_Object'$1_fungible_asset_Metadata''(self: Vec ($1_object_Object'$1_fungible_asset_Metadata')): bool {
    $IsEqual'u64'($1_vector_$length'$1_object_Object'$1_fungible_asset_Metadata''(self), 0)
}

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\vector.move:199:5+95
function {:inline} $1_vector_$is_empty'$1_function_info_FunctionInfo'(self: Vec ($1_function_info_FunctionInfo)): bool {
    $IsEqual'u64'($1_vector_$length'$1_function_info_FunctionInfo'(self), 0)
}

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\vector.move:199:5+95
function {:inline} $1_vector_$is_empty'$1_aggregator_Aggregator'(self: Vec ($1_aggregator_Aggregator)): bool {
    $IsEqual'u64'($1_vector_$length'$1_aggregator_Aggregator'(self), 0)
}

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\vector.move:199:5+95
function {:inline} $1_vector_$is_empty'$1_optional_aggregator_Integer'(self: Vec ($1_optional_aggregator_Integer)): bool {
    $IsEqual'u64'($1_vector_$length'$1_optional_aggregator_Integer'(self), 0)
}

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\vector.move:199:5+95
function {:inline} $1_vector_$is_empty'$1_optional_aggregator_OptionalAggregator'(self: Vec ($1_optional_aggregator_OptionalAggregator)): bool {
    $IsEqual'u64'($1_vector_$length'$1_optional_aggregator_OptionalAggregator'(self), 0)
}

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:34:10+83
function {:inline} $1_option_spec_none'u128'(): $1_option_Option'u128' {
    $1_option_Option'u128'($EmptyVec'u128'())
}

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:34:10+83
function {:inline} $1_option_spec_none'$1_object_Object'$1_fungible_asset_Metadata''(): $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'' {
    $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata''($EmptyVec'$1_object_Object'$1_fungible_asset_Metadata''())
}

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:34:10+83
function {:inline} $1_option_spec_none'$1_function_info_FunctionInfo'(): $1_option_Option'$1_function_info_FunctionInfo' {
    $1_option_Option'$1_function_info_FunctionInfo'($EmptyVec'$1_function_info_FunctionInfo'())
}

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:47:10+91
function {:inline} $1_option_spec_some'address'(e: int): $1_option_Option'address' {
    $1_option_Option'address'(MakeVec1(e))
}

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:47:10+91
function {:inline} $1_option_spec_some'$1_object_Object'$1_fungible_asset_Metadata''(e: $1_object_Object'$1_fungible_asset_Metadata'): $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'' {
    $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata''(MakeVec1(e))
}

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:47:10+91
function {:inline} $1_option_spec_some'$1_fungible_asset_TransferRef'(e: $1_fungible_asset_TransferRef): $1_option_Option'$1_fungible_asset_TransferRef' {
    $1_option_Option'$1_fungible_asset_TransferRef'(MakeVec1(e))
}

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:47:10+91
function {:inline} $1_option_spec_some'$1_fungible_asset_BurnRef'(e: $1_fungible_asset_BurnRef): $1_option_Option'$1_fungible_asset_BurnRef' {
    $1_option_Option'$1_fungible_asset_BurnRef'(MakeVec1(e))
}

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:47:10+91
function {:inline} $1_option_spec_some'$1_fungible_asset_MintRef'(e: $1_fungible_asset_MintRef): $1_option_Option'$1_fungible_asset_MintRef' {
    $1_option_Option'$1_fungible_asset_MintRef'(MakeVec1(e))
}

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:69:10+92
function {:inline} $1_option_spec_is_none'u128'(self: $1_option_Option'u128'): bool {
    $1_vector_$is_empty'u128'(self->$vec)
}

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:69:10+92
function {:inline} $1_option_spec_is_none'address'(self: $1_option_Option'address'): bool {
    $1_vector_$is_empty'address'(self->$vec)
}

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:69:10+92
function {:inline} $1_option_spec_is_none'$1_object_Object'$1_fungible_asset_Metadata''(self: $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata''): bool {
    $1_vector_$is_empty'$1_object_Object'$1_fungible_asset_Metadata''(self->$vec)
}

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:69:10+92
function {:inline} $1_option_spec_is_none'$1_function_info_FunctionInfo'(self: $1_option_Option'$1_function_info_FunctionInfo'): bool {
    $1_vector_$is_empty'$1_function_info_FunctionInfo'(self->$vec)
}

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:82:10+93
function {:inline} $1_option_spec_is_some'u128'(self: $1_option_Option'u128'): bool {
    !$1_vector_$is_empty'u128'(self->$vec)
}

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:82:10+93
function {:inline} $1_option_spec_is_some'$1_object_Object'$1_fungible_asset_Metadata''(self: $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata''): bool {
    !$1_vector_$is_empty'$1_object_Object'$1_fungible_asset_Metadata''(self->$vec)
}

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:82:10+93
function {:inline} $1_option_spec_is_some'$1_function_info_FunctionInfo'(self: $1_option_Option'$1_function_info_FunctionInfo'): bool {
    !$1_vector_$is_empty'$1_function_info_FunctionInfo'(self->$vec)
}

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:82:10+93
function {:inline} $1_option_spec_is_some'$1_aggregator_Aggregator'(self: $1_option_Option'$1_aggregator_Aggregator'): bool {
    !$1_vector_$is_empty'$1_aggregator_Aggregator'(self->$vec)
}

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:82:10+93
function {:inline} $1_option_spec_is_some'$1_optional_aggregator_Integer'(self: $1_option_Option'$1_optional_aggregator_Integer'): bool {
    !$1_vector_$is_empty'$1_optional_aggregator_Integer'(self->$vec)
}

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:82:10+93
function {:inline} $1_option_spec_is_some'$1_optional_aggregator_OptionalAggregator'(self: $1_option_Option'$1_optional_aggregator_OptionalAggregator'): bool {
    !$1_vector_$is_empty'$1_optional_aggregator_OptionalAggregator'(self->$vec)
}

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:111:10+86
function {:inline} $1_option_spec_borrow'u128'(self: $1_option_Option'u128'): int {
    ReadVec(self->$vec, 0)
}

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:111:10+86
function {:inline} $1_option_spec_borrow'$1_object_Object'$1_fungible_asset_Metadata''(self: $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata''): $1_object_Object'$1_fungible_asset_Metadata' {
    ReadVec(self->$vec, 0)
}

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:111:10+86
function {:inline} $1_option_spec_borrow'$1_function_info_FunctionInfo'(self: $1_option_Option'$1_function_info_FunctionInfo'): $1_function_info_FunctionInfo {
    ReadVec(self->$vec, 0)
}

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:111:10+86
function {:inline} $1_option_spec_borrow'$1_optional_aggregator_OptionalAggregator'(self: $1_option_Option'$1_optional_aggregator_OptionalAggregator'): $1_optional_aggregator_OptionalAggregator {
    ReadVec(self->$vec, 0)
}

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:102:5+142
function {:inline} $1_option_$borrow'$1_aggregator_Aggregator'(self: $1_option_Option'$1_aggregator_Aggregator'): $1_aggregator_Aggregator {
    $1_vector_$borrow'$1_aggregator_Aggregator'(self->$vec, 0)
}

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:102:5+142
function {:inline} $1_option_$borrow'$1_optional_aggregator_Integer'(self: $1_option_Option'$1_optional_aggregator_Integer'): $1_optional_aggregator_Integer {
    $1_vector_$borrow'$1_optional_aggregator_Integer'(self->$vec, 0)
}

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:61:5+95
function {:inline} $1_option_$is_none'$1_aggregator_Aggregator'(self: $1_option_Option'$1_aggregator_Aggregator'): bool {
    $1_vector_$is_empty'$1_aggregator_Aggregator'(self->$vec)
}

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:61:5+95
function {:inline} $1_option_$is_none'$1_optional_aggregator_Integer'(self: $1_option_Option'$1_optional_aggregator_Integer'): bool {
    $1_vector_$is_empty'$1_optional_aggregator_Integer'(self->$vec)
}

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:74:5+96
function {:inline} $1_option_$is_some'$1_aggregator_Aggregator'(self: $1_option_Option'$1_aggregator_Aggregator'): bool {
    !$1_vector_$is_empty'$1_aggregator_Aggregator'(self->$vec)
}

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:74:5+96
function {:inline} $1_option_$is_some'$1_optional_aggregator_Integer'(self: $1_option_Option'$1_optional_aggregator_Integer'): bool {
    !$1_vector_$is_empty'$1_optional_aggregator_Integer'(self->$vec)
}

// struct option::Option<u128> at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:7:5+83
datatype $1_option_Option'u128' {
    $1_option_Option'u128'($vec: Vec (int))
}
function {:inline} $Update'$1_option_Option'u128''_vec(s: $1_option_Option'u128', x: Vec (int)): $1_option_Option'u128' {
    $1_option_Option'u128'(x)
}
function $IsValid'$1_option_Option'u128''(s: $1_option_Option'u128'): bool {
    $IsValid'vec'u128''(s->$vec)
}
function {:inline} $IsEqual'$1_option_Option'u128''(s1: $1_option_Option'u128', s2: $1_option_Option'u128'): bool {
    $IsEqual'vec'u128''(s1->$vec, s2->$vec)}

// struct option::Option<address> at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:7:5+83
datatype $1_option_Option'address' {
    $1_option_Option'address'($vec: Vec (int))
}
function {:inline} $Update'$1_option_Option'address''_vec(s: $1_option_Option'address', x: Vec (int)): $1_option_Option'address' {
    $1_option_Option'address'(x)
}
function $IsValid'$1_option_Option'address''(s: $1_option_Option'address'): bool {
    $IsValid'vec'address''(s->$vec)
}
function {:inline} $IsEqual'$1_option_Option'address''(s1: $1_option_Option'address', s2: $1_option_Option'address'): bool {
    $IsEqual'vec'address''(s1->$vec, s2->$vec)}

// struct option::Option<0x1::object::Object<0x1::fungible_asset::Metadata>> at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:7:5+83
datatype $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'' {
    $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata''($vec: Vec ($1_object_Object'$1_fungible_asset_Metadata'))
}
function {:inline} $Update'$1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'''_vec(s: $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'', x: Vec ($1_object_Object'$1_fungible_asset_Metadata')): $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'' {
    $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata''(x)
}
function $IsValid'$1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'''(s: $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata''): bool {
    $IsValid'vec'$1_object_Object'$1_fungible_asset_Metadata'''(s->$vec)
}
function {:inline} $IsEqual'$1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'''(s1: $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'', s2: $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata''): bool {
    $IsEqual'vec'$1_object_Object'$1_fungible_asset_Metadata'''(s1->$vec, s2->$vec)}

// struct option::Option<0x1::function_info::FunctionInfo> at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:7:5+83
datatype $1_option_Option'$1_function_info_FunctionInfo' {
    $1_option_Option'$1_function_info_FunctionInfo'($vec: Vec ($1_function_info_FunctionInfo))
}
function {:inline} $Update'$1_option_Option'$1_function_info_FunctionInfo''_vec(s: $1_option_Option'$1_function_info_FunctionInfo', x: Vec ($1_function_info_FunctionInfo)): $1_option_Option'$1_function_info_FunctionInfo' {
    $1_option_Option'$1_function_info_FunctionInfo'(x)
}
function $IsValid'$1_option_Option'$1_function_info_FunctionInfo''(s: $1_option_Option'$1_function_info_FunctionInfo'): bool {
    $IsValid'vec'$1_function_info_FunctionInfo''(s->$vec)
}
function {:inline} $IsEqual'$1_option_Option'$1_function_info_FunctionInfo''(s1: $1_option_Option'$1_function_info_FunctionInfo', s2: $1_option_Option'$1_function_info_FunctionInfo'): bool {
    $IsEqual'vec'$1_function_info_FunctionInfo''(s1->$vec, s2->$vec)}

// struct option::Option<0x1::aggregator::Aggregator> at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:7:5+83
datatype $1_option_Option'$1_aggregator_Aggregator' {
    $1_option_Option'$1_aggregator_Aggregator'($vec: Vec ($1_aggregator_Aggregator))
}
function {:inline} $Update'$1_option_Option'$1_aggregator_Aggregator''_vec(s: $1_option_Option'$1_aggregator_Aggregator', x: Vec ($1_aggregator_Aggregator)): $1_option_Option'$1_aggregator_Aggregator' {
    $1_option_Option'$1_aggregator_Aggregator'(x)
}
function $IsValid'$1_option_Option'$1_aggregator_Aggregator''(s: $1_option_Option'$1_aggregator_Aggregator'): bool {
    $IsValid'vec'$1_aggregator_Aggregator''(s->$vec)
}
function {:inline} $IsEqual'$1_option_Option'$1_aggregator_Aggregator''(s1: $1_option_Option'$1_aggregator_Aggregator', s2: $1_option_Option'$1_aggregator_Aggregator'): bool {
    $IsEqual'vec'$1_aggregator_Aggregator''(s1->$vec, s2->$vec)}

// struct option::Option<0x1::optional_aggregator::Integer> at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:7:5+83
datatype $1_option_Option'$1_optional_aggregator_Integer' {
    $1_option_Option'$1_optional_aggregator_Integer'($vec: Vec ($1_optional_aggregator_Integer))
}
function {:inline} $Update'$1_option_Option'$1_optional_aggregator_Integer''_vec(s: $1_option_Option'$1_optional_aggregator_Integer', x: Vec ($1_optional_aggregator_Integer)): $1_option_Option'$1_optional_aggregator_Integer' {
    $1_option_Option'$1_optional_aggregator_Integer'(x)
}
function $IsValid'$1_option_Option'$1_optional_aggregator_Integer''(s: $1_option_Option'$1_optional_aggregator_Integer'): bool {
    $IsValid'vec'$1_optional_aggregator_Integer''(s->$vec)
}
function {:inline} $IsEqual'$1_option_Option'$1_optional_aggregator_Integer''(s1: $1_option_Option'$1_optional_aggregator_Integer', s2: $1_option_Option'$1_optional_aggregator_Integer'): bool {
    $IsEqual'vec'$1_optional_aggregator_Integer''(s1->$vec, s2->$vec)}

// struct option::Option<0x1::optional_aggregator::OptionalAggregator> at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:7:5+83
datatype $1_option_Option'$1_optional_aggregator_OptionalAggregator' {
    $1_option_Option'$1_optional_aggregator_OptionalAggregator'($vec: Vec ($1_optional_aggregator_OptionalAggregator))
}
function {:inline} $Update'$1_option_Option'$1_optional_aggregator_OptionalAggregator''_vec(s: $1_option_Option'$1_optional_aggregator_OptionalAggregator', x: Vec ($1_optional_aggregator_OptionalAggregator)): $1_option_Option'$1_optional_aggregator_OptionalAggregator' {
    $1_option_Option'$1_optional_aggregator_OptionalAggregator'(x)
}
function $IsValid'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(s: $1_option_Option'$1_optional_aggregator_OptionalAggregator'): bool {
    $IsValid'vec'$1_optional_aggregator_OptionalAggregator''(s->$vec)
}
function {:inline} $IsEqual'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(s1: $1_option_Option'$1_optional_aggregator_OptionalAggregator', s2: $1_option_Option'$1_optional_aggregator_OptionalAggregator'): bool {
    $IsEqual'vec'$1_optional_aggregator_OptionalAggregator''(s1->$vec, s2->$vec)}

// struct option::Option<0x1::fungible_asset::TransferRef> at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:7:5+83
datatype $1_option_Option'$1_fungible_asset_TransferRef' {
    $1_option_Option'$1_fungible_asset_TransferRef'($vec: Vec ($1_fungible_asset_TransferRef))
}
function {:inline} $Update'$1_option_Option'$1_fungible_asset_TransferRef''_vec(s: $1_option_Option'$1_fungible_asset_TransferRef', x: Vec ($1_fungible_asset_TransferRef)): $1_option_Option'$1_fungible_asset_TransferRef' {
    $1_option_Option'$1_fungible_asset_TransferRef'(x)
}
function $IsValid'$1_option_Option'$1_fungible_asset_TransferRef''(s: $1_option_Option'$1_fungible_asset_TransferRef'): bool {
    $IsValid'vec'$1_fungible_asset_TransferRef''(s->$vec)
}
function {:inline} $IsEqual'$1_option_Option'$1_fungible_asset_TransferRef''(s1: $1_option_Option'$1_fungible_asset_TransferRef', s2: $1_option_Option'$1_fungible_asset_TransferRef'): bool {
    $IsEqual'vec'$1_fungible_asset_TransferRef''(s1->$vec, s2->$vec)}

// struct option::Option<0x1::fungible_asset::BurnRef> at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:7:5+83
datatype $1_option_Option'$1_fungible_asset_BurnRef' {
    $1_option_Option'$1_fungible_asset_BurnRef'($vec: Vec ($1_fungible_asset_BurnRef))
}
function {:inline} $Update'$1_option_Option'$1_fungible_asset_BurnRef''_vec(s: $1_option_Option'$1_fungible_asset_BurnRef', x: Vec ($1_fungible_asset_BurnRef)): $1_option_Option'$1_fungible_asset_BurnRef' {
    $1_option_Option'$1_fungible_asset_BurnRef'(x)
}
function $IsValid'$1_option_Option'$1_fungible_asset_BurnRef''(s: $1_option_Option'$1_fungible_asset_BurnRef'): bool {
    $IsValid'vec'$1_fungible_asset_BurnRef''(s->$vec)
}
function {:inline} $IsEqual'$1_option_Option'$1_fungible_asset_BurnRef''(s1: $1_option_Option'$1_fungible_asset_BurnRef', s2: $1_option_Option'$1_fungible_asset_BurnRef'): bool {
    $IsEqual'vec'$1_fungible_asset_BurnRef''(s1->$vec, s2->$vec)}

// struct option::Option<0x1::fungible_asset::MintRef> at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:7:5+83
datatype $1_option_Option'$1_fungible_asset_MintRef' {
    $1_option_Option'$1_fungible_asset_MintRef'($vec: Vec ($1_fungible_asset_MintRef))
}
function {:inline} $Update'$1_option_Option'$1_fungible_asset_MintRef''_vec(s: $1_option_Option'$1_fungible_asset_MintRef', x: Vec ($1_fungible_asset_MintRef)): $1_option_Option'$1_fungible_asset_MintRef' {
    $1_option_Option'$1_fungible_asset_MintRef'(x)
}
function $IsValid'$1_option_Option'$1_fungible_asset_MintRef''(s: $1_option_Option'$1_fungible_asset_MintRef'): bool {
    $IsValid'vec'$1_fungible_asset_MintRef''(s->$vec)
}
function {:inline} $IsEqual'$1_option_Option'$1_fungible_asset_MintRef''(s1: $1_option_Option'$1_fungible_asset_MintRef', s2: $1_option_Option'$1_fungible_asset_MintRef'): bool {
    $IsEqual'vec'$1_fungible_asset_MintRef''(s1->$vec, s2->$vec)}

// fun option::borrow_mut<u128> [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:173:5+164
procedure {:inline 1} $1_option_borrow_mut'u128'(_$t0: $Mutation ($1_option_Option'u128')) returns ($ret0: $Mutation (int), $ret1: $Mutation ($1_option_Option'u128'))
{
    // declare local variables
    var $t1: $1_option_Option'u128';
    var $t2: bool;
    var $t3: $Mutation (Vec (int));
    var $t4: int;
    var $t5: $Mutation (int);
    var $t6: int;
    var $t7: int;
    var $t0: $Mutation ($1_option_Option'u128');
    var $temp_0'$1_option_Option'u128'': $1_option_Option'u128';
    var $temp_0'u128': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[self]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:173:5+1
    assume {:print "$at(15,5967,5968)"} true;
    $temp_0'$1_option_Option'u128'' := $Dereference($t0);
    assume {:print "$track_local(3,3,0):", $temp_0'$1_option_Option'u128''} $temp_0'$1_option_Option'u128'' == $temp_0'$1_option_Option'u128'';

    // $t1 := read_ref($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:174:17+4
    assume {:print "$at(15,6059,6063)"} true;
    $t1 := $Dereference($t0);

    // $t2 := opaque begin: option::is_some<#0>($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:174:17+14

    // assume WellFormed($t2) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:174:17+14
    assume $IsValid'bool'($t2);

    // assume Eq<bool>($t2, option::spec_is_some<#0>($t1)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:174:17+14
    assume $IsEqual'bool'($t2, $1_option_spec_is_some'u128'($t1));

    // $t2 := opaque end: option::is_some<#0>($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:174:17+14

    // if ($t2) goto L1 else goto L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:174:9+6
    if ($t2) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:175:9+22
    assume {:print "$at(15,6102,6124)"} true;
L1:

    // $t3 := borrow_field<0x1::option::Option<#0>>.vec($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:175:9+22
    assume {:print "$at(15,6102,6124)"} true;
    $t3 := $ChildMutation($t0, 0, $Dereference($t0)->$vec);

    // $t4 := 0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:175:29+1
    $t4 := 0;
    assume $IsValid'u64'($t4);

    // $t5 := vector::borrow_mut<#0>($t3, $t4) on_abort goto L3 with $t6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:175:9+22
    call $t5,$t3 := $1_vector_borrow_mut'u128'($t3, $t4);
    if ($abort_flag) {
        assume {:print "$at(15,6102,6124)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(3,3):", $t6} $t6 == $t6;
        goto L3;
    }

    // trace_return[0]($t5) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:173:78+91
    assume {:print "$at(15,6040,6131)"} true;
    $temp_0'u128' := $Dereference($t5);
    assume {:print "$track_return(3,3,0):", $temp_0'u128'} $temp_0'u128' == $temp_0'u128';

    // trace_local[self]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:173:78+91
    $temp_0'$1_option_Option'u128'' := $Dereference($t0);
    assume {:print "$track_local(3,3,0):", $temp_0'$1_option_Option'u128''} $temp_0'$1_option_Option'u128'' == $temp_0'$1_option_Option'u128'';

    // trace_local[self]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:173:78+91
    $temp_0'$1_option_Option'u128'' := $Dereference($t0);
    assume {:print "$track_local(3,3,0):", $temp_0'$1_option_Option'u128''} $temp_0'$1_option_Option'u128'' == $temp_0'$1_option_Option'u128'';

    // goto L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:173:78+91
    goto L2;

    // label L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:174:9+6
    assume {:print "$at(15,6051,6057)"} true;
L0:

    // pack_ref_deep($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:174:9+6
    assume {:print "$at(15,6051,6057)"} true;

    // drop($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:174:9+6

    // $t7 := 262145 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:174:33+15
    $t7 := 262145;
    assume $IsValid'u64'($t7);

    // trace_abort($t7) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:174:9+6
    assume {:print "$at(15,6051,6057)"} true;
    assume {:print "$track_abort(3,3):", $t7} $t7 == $t7;

    // $t6 := move($t7) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:174:9+6
    $t6 := $t7;

    // goto L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:174:9+6
    goto L3;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:176:5+1
    assume {:print "$at(15,6130,6131)"} true;
L2:

    // return $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:176:5+1
    assume {:print "$at(15,6130,6131)"} true;
    $ret0 := $t5;
    $ret1 := $t0;
    return;

    // label L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:176:5+1
L3:

    // abort($t6) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:176:5+1
    assume {:print "$at(15,6130,6131)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}

// fun option::borrow_mut<0x1::aggregator::Aggregator> [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:173:5+164
procedure {:inline 1} $1_option_borrow_mut'$1_aggregator_Aggregator'(_$t0: $Mutation ($1_option_Option'$1_aggregator_Aggregator')) returns ($ret0: $Mutation ($1_aggregator_Aggregator), $ret1: $Mutation ($1_option_Option'$1_aggregator_Aggregator'))
{
    // declare local variables
    var $t1: $1_option_Option'$1_aggregator_Aggregator';
    var $t2: bool;
    var $t3: $Mutation (Vec ($1_aggregator_Aggregator));
    var $t4: int;
    var $t5: $Mutation ($1_aggregator_Aggregator);
    var $t6: int;
    var $t7: int;
    var $t0: $Mutation ($1_option_Option'$1_aggregator_Aggregator');
    var $temp_0'$1_aggregator_Aggregator': $1_aggregator_Aggregator;
    var $temp_0'$1_option_Option'$1_aggregator_Aggregator'': $1_option_Option'$1_aggregator_Aggregator';
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[self]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:173:5+1
    assume {:print "$at(15,5967,5968)"} true;
    $temp_0'$1_option_Option'$1_aggregator_Aggregator'' := $Dereference($t0);
    assume {:print "$track_local(3,3,0):", $temp_0'$1_option_Option'$1_aggregator_Aggregator''} $temp_0'$1_option_Option'$1_aggregator_Aggregator'' == $temp_0'$1_option_Option'$1_aggregator_Aggregator'';

    // $t1 := read_ref($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:174:17+4
    assume {:print "$at(15,6059,6063)"} true;
    $t1 := $Dereference($t0);

    // $t2 := opaque begin: option::is_some<#0>($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:174:17+14

    // assume WellFormed($t2) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:174:17+14
    assume $IsValid'bool'($t2);

    // assume Eq<bool>($t2, option::spec_is_some<#0>($t1)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:174:17+14
    assume $IsEqual'bool'($t2, $1_option_spec_is_some'$1_aggregator_Aggregator'($t1));

    // $t2 := opaque end: option::is_some<#0>($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:174:17+14

    // if ($t2) goto L1 else goto L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:174:9+6
    if ($t2) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:175:9+22
    assume {:print "$at(15,6102,6124)"} true;
L1:

    // $t3 := borrow_field<0x1::option::Option<#0>>.vec($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:175:9+22
    assume {:print "$at(15,6102,6124)"} true;
    $t3 := $ChildMutation($t0, 0, $Dereference($t0)->$vec);

    // $t4 := 0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:175:29+1
    $t4 := 0;
    assume $IsValid'u64'($t4);

    // $t5 := vector::borrow_mut<#0>($t3, $t4) on_abort goto L3 with $t6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:175:9+22
    call $t5,$t3 := $1_vector_borrow_mut'$1_aggregator_Aggregator'($t3, $t4);
    if ($abort_flag) {
        assume {:print "$at(15,6102,6124)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(3,3):", $t6} $t6 == $t6;
        goto L3;
    }

    // trace_return[0]($t5) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:173:78+91
    assume {:print "$at(15,6040,6131)"} true;
    $temp_0'$1_aggregator_Aggregator' := $Dereference($t5);
    assume {:print "$track_return(3,3,0):", $temp_0'$1_aggregator_Aggregator'} $temp_0'$1_aggregator_Aggregator' == $temp_0'$1_aggregator_Aggregator';

    // trace_local[self]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:173:78+91
    $temp_0'$1_option_Option'$1_aggregator_Aggregator'' := $Dereference($t0);
    assume {:print "$track_local(3,3,0):", $temp_0'$1_option_Option'$1_aggregator_Aggregator''} $temp_0'$1_option_Option'$1_aggregator_Aggregator'' == $temp_0'$1_option_Option'$1_aggregator_Aggregator'';

    // trace_local[self]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:173:78+91
    $temp_0'$1_option_Option'$1_aggregator_Aggregator'' := $Dereference($t0);
    assume {:print "$track_local(3,3,0):", $temp_0'$1_option_Option'$1_aggregator_Aggregator''} $temp_0'$1_option_Option'$1_aggregator_Aggregator'' == $temp_0'$1_option_Option'$1_aggregator_Aggregator'';

    // goto L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:173:78+91
    goto L2;

    // label L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:174:9+6
    assume {:print "$at(15,6051,6057)"} true;
L0:

    // pack_ref_deep($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:174:9+6
    assume {:print "$at(15,6051,6057)"} true;

    // drop($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:174:9+6

    // $t7 := 262145 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:174:33+15
    $t7 := 262145;
    assume $IsValid'u64'($t7);

    // trace_abort($t7) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:174:9+6
    assume {:print "$at(15,6051,6057)"} true;
    assume {:print "$track_abort(3,3):", $t7} $t7 == $t7;

    // $t6 := move($t7) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:174:9+6
    $t6 := $t7;

    // goto L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:174:9+6
    goto L3;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:176:5+1
    assume {:print "$at(15,6130,6131)"} true;
L2:

    // return $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:176:5+1
    assume {:print "$at(15,6130,6131)"} true;
    $ret0 := $t5;
    $ret1 := $t0;
    return;

    // label L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:176:5+1
L3:

    // abort($t6) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:176:5+1
    assume {:print "$at(15,6130,6131)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}

// fun option::borrow_mut<0x1::optional_aggregator::Integer> [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:173:5+164
procedure {:inline 1} $1_option_borrow_mut'$1_optional_aggregator_Integer'(_$t0: $Mutation ($1_option_Option'$1_optional_aggregator_Integer')) returns ($ret0: $Mutation ($1_optional_aggregator_Integer), $ret1: $Mutation ($1_option_Option'$1_optional_aggregator_Integer'))
{
    // declare local variables
    var $t1: $1_option_Option'$1_optional_aggregator_Integer';
    var $t2: bool;
    var $t3: $Mutation (Vec ($1_optional_aggregator_Integer));
    var $t4: int;
    var $t5: $Mutation ($1_optional_aggregator_Integer);
    var $t6: int;
    var $t7: int;
    var $t0: $Mutation ($1_option_Option'$1_optional_aggregator_Integer');
    var $temp_0'$1_option_Option'$1_optional_aggregator_Integer'': $1_option_Option'$1_optional_aggregator_Integer';
    var $temp_0'$1_optional_aggregator_Integer': $1_optional_aggregator_Integer;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[self]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:173:5+1
    assume {:print "$at(15,5967,5968)"} true;
    $temp_0'$1_option_Option'$1_optional_aggregator_Integer'' := $Dereference($t0);
    assume {:print "$track_local(3,3,0):", $temp_0'$1_option_Option'$1_optional_aggregator_Integer''} $temp_0'$1_option_Option'$1_optional_aggregator_Integer'' == $temp_0'$1_option_Option'$1_optional_aggregator_Integer'';

    // $t1 := read_ref($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:174:17+4
    assume {:print "$at(15,6059,6063)"} true;
    $t1 := $Dereference($t0);

    // $t2 := opaque begin: option::is_some<#0>($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:174:17+14

    // assume WellFormed($t2) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:174:17+14
    assume $IsValid'bool'($t2);

    // assume Eq<bool>($t2, option::spec_is_some<#0>($t1)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:174:17+14
    assume $IsEqual'bool'($t2, $1_option_spec_is_some'$1_optional_aggregator_Integer'($t1));

    // $t2 := opaque end: option::is_some<#0>($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:174:17+14

    // if ($t2) goto L1 else goto L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:174:9+6
    if ($t2) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:175:9+22
    assume {:print "$at(15,6102,6124)"} true;
L1:

    // $t3 := borrow_field<0x1::option::Option<#0>>.vec($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:175:9+22
    assume {:print "$at(15,6102,6124)"} true;
    $t3 := $ChildMutation($t0, 0, $Dereference($t0)->$vec);

    // $t4 := 0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:175:29+1
    $t4 := 0;
    assume $IsValid'u64'($t4);

    // $t5 := vector::borrow_mut<#0>($t3, $t4) on_abort goto L3 with $t6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:175:9+22
    call $t5,$t3 := $1_vector_borrow_mut'$1_optional_aggregator_Integer'($t3, $t4);
    if ($abort_flag) {
        assume {:print "$at(15,6102,6124)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(3,3):", $t6} $t6 == $t6;
        goto L3;
    }

    // trace_return[0]($t5) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:173:78+91
    assume {:print "$at(15,6040,6131)"} true;
    $temp_0'$1_optional_aggregator_Integer' := $Dereference($t5);
    assume {:print "$track_return(3,3,0):", $temp_0'$1_optional_aggregator_Integer'} $temp_0'$1_optional_aggregator_Integer' == $temp_0'$1_optional_aggregator_Integer';

    // trace_local[self]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:173:78+91
    $temp_0'$1_option_Option'$1_optional_aggregator_Integer'' := $Dereference($t0);
    assume {:print "$track_local(3,3,0):", $temp_0'$1_option_Option'$1_optional_aggregator_Integer''} $temp_0'$1_option_Option'$1_optional_aggregator_Integer'' == $temp_0'$1_option_Option'$1_optional_aggregator_Integer'';

    // trace_local[self]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:173:78+91
    $temp_0'$1_option_Option'$1_optional_aggregator_Integer'' := $Dereference($t0);
    assume {:print "$track_local(3,3,0):", $temp_0'$1_option_Option'$1_optional_aggregator_Integer''} $temp_0'$1_option_Option'$1_optional_aggregator_Integer'' == $temp_0'$1_option_Option'$1_optional_aggregator_Integer'';

    // goto L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:173:78+91
    goto L2;

    // label L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:174:9+6
    assume {:print "$at(15,6051,6057)"} true;
L0:

    // pack_ref_deep($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:174:9+6
    assume {:print "$at(15,6051,6057)"} true;

    // drop($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:174:9+6

    // $t7 := 262145 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:174:33+15
    $t7 := 262145;
    assume $IsValid'u64'($t7);

    // trace_abort($t7) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:174:9+6
    assume {:print "$at(15,6051,6057)"} true;
    assume {:print "$track_abort(3,3):", $t7} $t7 == $t7;

    // $t6 := move($t7) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:174:9+6
    $t6 := $t7;

    // goto L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:174:9+6
    goto L3;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:176:5+1
    assume {:print "$at(15,6130,6131)"} true;
L2:

    // return $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:176:5+1
    assume {:print "$at(15,6130,6131)"} true;
    $ret0 := $t5;
    $ret1 := $t0;
    return;

    // label L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:176:5+1
L3:

    // abort($t6) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:176:5+1
    assume {:print "$at(15,6130,6131)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}

// fun option::borrow_mut<0x1::optional_aggregator::OptionalAggregator> [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:173:5+164
procedure {:inline 1} $1_option_borrow_mut'$1_optional_aggregator_OptionalAggregator'(_$t0: $Mutation ($1_option_Option'$1_optional_aggregator_OptionalAggregator')) returns ($ret0: $Mutation ($1_optional_aggregator_OptionalAggregator), $ret1: $Mutation ($1_option_Option'$1_optional_aggregator_OptionalAggregator'))
{
    // declare local variables
    var $t1: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t2: bool;
    var $t3: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator));
    var $t4: int;
    var $t5: $Mutation ($1_optional_aggregator_OptionalAggregator);
    var $t6: int;
    var $t7: int;
    var $t0: $Mutation ($1_option_Option'$1_optional_aggregator_OptionalAggregator');
    var $temp_0'$1_option_Option'$1_optional_aggregator_OptionalAggregator'': $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $temp_0'$1_optional_aggregator_OptionalAggregator': $1_optional_aggregator_OptionalAggregator;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[self]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:173:5+1
    assume {:print "$at(15,5967,5968)"} true;
    $temp_0'$1_option_Option'$1_optional_aggregator_OptionalAggregator'' := $Dereference($t0);
    assume {:print "$track_local(3,3,0):", $temp_0'$1_option_Option'$1_optional_aggregator_OptionalAggregator''} $temp_0'$1_option_Option'$1_optional_aggregator_OptionalAggregator'' == $temp_0'$1_option_Option'$1_optional_aggregator_OptionalAggregator'';

    // $t1 := read_ref($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:174:17+4
    assume {:print "$at(15,6059,6063)"} true;
    $t1 := $Dereference($t0);

    // $t2 := opaque begin: option::is_some<#0>($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:174:17+14

    // assume WellFormed($t2) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:174:17+14
    assume $IsValid'bool'($t2);

    // assume Eq<bool>($t2, option::spec_is_some<#0>($t1)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:174:17+14
    assume $IsEqual'bool'($t2, $1_option_spec_is_some'$1_optional_aggregator_OptionalAggregator'($t1));

    // $t2 := opaque end: option::is_some<#0>($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:174:17+14

    // if ($t2) goto L1 else goto L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:174:9+6
    if ($t2) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:175:9+22
    assume {:print "$at(15,6102,6124)"} true;
L1:

    // $t3 := borrow_field<0x1::option::Option<#0>>.vec($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:175:9+22
    assume {:print "$at(15,6102,6124)"} true;
    $t3 := $ChildMutation($t0, 0, $Dereference($t0)->$vec);

    // $t4 := 0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:175:29+1
    $t4 := 0;
    assume $IsValid'u64'($t4);

    // $t5 := vector::borrow_mut<#0>($t3, $t4) on_abort goto L3 with $t6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:175:9+22
    call $t5,$t3 := $1_vector_borrow_mut'$1_optional_aggregator_OptionalAggregator'($t3, $t4);
    if ($abort_flag) {
        assume {:print "$at(15,6102,6124)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(3,3):", $t6} $t6 == $t6;
        goto L3;
    }

    // trace_return[0]($t5) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:173:78+91
    assume {:print "$at(15,6040,6131)"} true;
    $temp_0'$1_optional_aggregator_OptionalAggregator' := $Dereference($t5);
    assume {:print "$track_return(3,3,0):", $temp_0'$1_optional_aggregator_OptionalAggregator'} $temp_0'$1_optional_aggregator_OptionalAggregator' == $temp_0'$1_optional_aggregator_OptionalAggregator';

    // trace_local[self]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:173:78+91
    $temp_0'$1_option_Option'$1_optional_aggregator_OptionalAggregator'' := $Dereference($t0);
    assume {:print "$track_local(3,3,0):", $temp_0'$1_option_Option'$1_optional_aggregator_OptionalAggregator''} $temp_0'$1_option_Option'$1_optional_aggregator_OptionalAggregator'' == $temp_0'$1_option_Option'$1_optional_aggregator_OptionalAggregator'';

    // trace_local[self]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:173:78+91
    $temp_0'$1_option_Option'$1_optional_aggregator_OptionalAggregator'' := $Dereference($t0);
    assume {:print "$track_local(3,3,0):", $temp_0'$1_option_Option'$1_optional_aggregator_OptionalAggregator''} $temp_0'$1_option_Option'$1_optional_aggregator_OptionalAggregator'' == $temp_0'$1_option_Option'$1_optional_aggregator_OptionalAggregator'';

    // goto L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:173:78+91
    goto L2;

    // label L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:174:9+6
    assume {:print "$at(15,6051,6057)"} true;
L0:

    // pack_ref_deep($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:174:9+6
    assume {:print "$at(15,6051,6057)"} true;

    // drop($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:174:9+6

    // $t7 := 262145 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:174:33+15
    $t7 := 262145;
    assume $IsValid'u64'($t7);

    // trace_abort($t7) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:174:9+6
    assume {:print "$at(15,6051,6057)"} true;
    assume {:print "$track_abort(3,3):", $t7} $t7 == $t7;

    // $t6 := move($t7) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:174:9+6
    $t6 := $t7;

    // goto L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:174:9+6
    goto L3;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:176:5+1
    assume {:print "$at(15,6130,6131)"} true;
L2:

    // return $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:176:5+1
    assume {:print "$at(15,6130,6131)"} true;
    $ret0 := $t5;
    $ret1 := $t0;
    return;

    // label L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:176:5+1
L3:

    // abort($t6) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:176:5+1
    assume {:print "$at(15,6130,6131)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.spec.move:28:9+50
function  $1_string_spec_internal_check_utf8(v: Vec (int)): bool;
axiom (forall v: Vec (int) ::
(var $$res := $1_string_spec_internal_check_utf8(v);
$IsValid'bool'($$res)));

// struct string::String at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:12:5+72
datatype $1_string_String {
    $1_string_String($bytes: Vec (int))
}
function {:inline} $Update'$1_string_String'_bytes(s: $1_string_String, x: Vec (int)): $1_string_String {
    $1_string_String(x)
}
function $IsValid'$1_string_String'(s: $1_string_String): bool {
    $IsValid'vec'u8''(s->$bytes)
}
function {:inline} $IsEqual'$1_string_String'(s1: $1_string_String, s2: $1_string_String): bool {
    $IsEqual'vec'u8''(s1->$bytes, s2->$bytes)}

// fun string::length [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:42:5+75
procedure {:inline 1} $1_string_length(_$t0: $1_string_String) returns ($ret0: int)
{
    // declare local variables
    var $t1: Vec (int);
    var $t2: int;
    var $t3: int;
    var $t0: $1_string_String;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[self]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:42:5+1
    assume {:print "$at(17,1319,1320)"} true;
    assume {:print "$track_local(4,4,0):", $t0} $t0 == $t0;

    // $t1 := get_field<0x1::string::String>.bytes($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:43:9+19
    assume {:print "$at(17,1368,1387)"} true;
    $t1 := $t0->$bytes;

    // $t2 := vector::length<u8>($t1) on_abort goto L2 with $t3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:43:9+19
    call $t2 := $1_vector_length'u8'($t1);
    if ($abort_flag) {
        assume {:print "$at(17,1368,1387)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(4,4):", $t3} $t3 == $t3;
        goto L2;
    }

    // trace_return[0]($t2) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:43:9+19
    assume {:print "$track_return(4,4,0):", $t2} $t2 == $t2;

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:44:5+1
    assume {:print "$at(17,1393,1394)"} true;
L1:

    // return $t2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:44:5+1
    assume {:print "$at(17,1393,1394)"} true;
    $ret0 := $t2;
    return;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:44:5+1
L2:

    // abort($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:44:5+1
    assume {:print "$at(17,1393,1394)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun string::bytes [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:32:5+74
procedure {:inline 1} $1_string_bytes(_$t0: $1_string_String) returns ($ret0: Vec (int))
{
    // declare local variables
    var $t1: Vec (int);
    var $t0: $1_string_String;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[self]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:32:5+1
    assume {:print "$at(17,1049,1050)"} true;
    assume {:print "$track_local(4,6,0):", $t0} $t0 == $t0;

    // $t1 := get_field<0x1::string::String>.bytes($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:33:9+11
    assume {:print "$at(17,1105,1116)"} true;
    $t1 := $t0->$bytes;

    // trace_return[0]($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:33:9+11
    assume {:print "$track_return(4,6,0):", $t1} $t1 == $t1;

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:34:5+1
    assume {:print "$at(17,1122,1123)"} true;
L1:

    // return $t1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:34:5+1
    assume {:print "$at(17,1122,1123)"} true;
    $ret0 := $t1;
    return;

}

// fun string::utf8 [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:17:5+136
procedure {:inline 1} $1_string_utf8(_$t0: Vec (int)) returns ($ret0: $1_string_String)
{
    // declare local variables
    var $t1: bool;
    var $t2: $1_string_String;
    var $t3: int;
    var $t0: Vec (int);
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[bytes]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:17:5+1
    assume {:print "$at(17,568,569)"} true;
    assume {:print "$track_local(4,13,0):", $t0} $t0 == $t0;

    // $t1 := opaque begin: string::internal_check_utf8($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:18:17+27
    assume {:print "$at(17,630,657)"} true;

    // assume WellFormed($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:18:17+27
    assume $IsValid'bool'($t1);

    // assume Eq<bool>($t1, string::spec_internal_check_utf8($t0)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:18:17+27
    assume $IsEqual'bool'($t1, $1_string_spec_internal_check_utf8($t0));

    // $t1 := opaque end: string::internal_check_utf8($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:18:17+27

    // if ($t1) goto L1 else goto L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:18:9+6
    if ($t1) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:19:9+13
    assume {:print "$at(17,684,697)"} true;
L1:

    // $t2 := pack 0x1::string::String($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:19:9+13
    assume {:print "$at(17,684,697)"} true;
    $t2 := $1_string_String($t0);

    // trace_return[0]($t2) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:17:48+93
    assume {:print "$at(17,611,704)"} true;
    assume {:print "$track_return(4,13,0):", $t2} $t2 == $t2;

    // goto L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:17:48+93
    goto L2;

    // label L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:18:46+13
    assume {:print "$at(17,659,672)"} true;
L0:

    // $t3 := 1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:18:46+13
    assume {:print "$at(17,659,672)"} true;
    $t3 := 1;
    assume $IsValid'u64'($t3);

    // trace_abort($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:18:9+6
    assume {:print "$at(17,622,628)"} true;
    assume {:print "$track_abort(4,13):", $t3} $t3 == $t3;

    // goto L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:18:9+6
    goto L3;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:20:5+1
    assume {:print "$at(17,703,704)"} true;
L2:

    // return $t2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:20:5+1
    assume {:print "$at(17,703,704)"} true;
    $ret0 := $t2;
    return;

    // label L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:20:5+1
L3:

    // abort($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:20:5+1
    assume {:print "$at(17,703,704)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\signer.move:26:5+79
function {:inline} $1_signer_$address_of(s: $signer): int {
    $1_signer_$borrow_address(s)
}

// fun signer::address_of [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\signer.move:26:5+79
procedure {:inline 1} $1_signer_address_of(_$t0: $signer) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t0: $signer;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[s]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\signer.move:26:5+1
    assume {:print "$at(16,819,820)"} true;
    assume {:print "$track_local(5,0,0):", $t0} $t0 == $t0;

    // $t1 := signer::borrow_address($t0) on_abort goto L2 with $t2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\signer.move:27:10+17
    assume {:print "$at(16,874,891)"} true;
    call $t1 := $1_signer_borrow_address($t0);
    if ($abort_flag) {
        assume {:print "$at(16,874,891)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(5,0):", $t2} $t2 == $t2;
        goto L2;
    }

    // trace_return[0]($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\signer.move:27:9+18
    assume {:print "$track_return(5,0,0):", $t1} $t1 == $t1;

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\signer.move:28:5+1
    assume {:print "$at(16,897,898)"} true;
L1:

    // return $t1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\signer.move:28:5+1
    assume {:print "$at(16,897,898)"} true;
    $ret0 := $t1;
    return;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\signer.move:28:5+1
L2:

    // abort($t2) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\signer.move:28:5+1
    assume {:print "$at(16,897,898)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun error::aborted [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:82:3+57
procedure {:inline 1} $1_error_aborted(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t0: int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[r]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:82:3+1
    assume {:print "$at(11,3606,3607)"} true;
    assume {:print "$track_local(6,0,0):", $t0} $t0 == $t0;

    // $t1 := 7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:82:47+7
    $t1 := 7;
    assume $IsValid'u64'($t1);

    // assume Identical($t2, Shl($t1, 16)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:69:5+29
    assume {:print "$at(11,2912,2941)"} true;
    assume ($t2 == $shlU64($t1, 16));

    // $t3 := opaque begin: error::canonical($t1, $t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:82:37+21
    assume {:print "$at(11,3640,3661)"} true;

    // assume WellFormed($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:82:37+21
    assume $IsValid'u64'($t3);

    // assume Eq<u64>($t3, $t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:82:37+21
    assume $IsEqual'u64'($t3, $t1);

    // $t3 := opaque end: error::canonical($t1, $t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:82:37+21

    // trace_return[0]($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:82:37+21
    assume {:print "$track_return(6,0,0):", $t3} $t3 == $t3;

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:82:59+1
L1:

    // return $t3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:82:59+1
    assume {:print "$at(11,3662,3663)"} true;
    $ret0 := $t3;
    return;

}

// fun error::already_exists [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:83:3+71
procedure {:inline 1} $1_error_already_exists(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t0: int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[r]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:83:3+1
    assume {:print "$at(11,3667,3668)"} true;
    assume {:print "$track_local(6,1,0):", $t0} $t0 == $t0;

    // $t1 := 8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:83:54+14
    $t1 := 8;
    assume $IsValid'u64'($t1);

    // assume Identical($t2, Shl($t1, 16)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:69:5+29
    assume {:print "$at(11,2912,2941)"} true;
    assume ($t2 == $shlU64($t1, 16));

    // $t3 := opaque begin: error::canonical($t1, $t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:83:44+28
    assume {:print "$at(11,3708,3736)"} true;

    // assume WellFormed($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:83:44+28
    assume $IsValid'u64'($t3);

    // assume Eq<u64>($t3, $t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:83:44+28
    assume $IsEqual'u64'($t3, $t1);

    // $t3 := opaque end: error::canonical($t1, $t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:83:44+28

    // trace_return[0]($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:83:44+28
    assume {:print "$track_return(6,1,0):", $t3} $t3 == $t3;

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:83:73+1
L1:

    // return $t3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:83:73+1
    assume {:print "$at(11,3737,3738)"} true;
    $ret0 := $t3;
    return;

}

// fun error::invalid_argument [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:76:3+76
procedure {:inline 1} $1_error_invalid_argument(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t0: int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[r]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:76:3+1
    assume {:print "$at(11,3157,3158)"} true;
    assume {:print "$track_local(6,4,0):", $t0} $t0 == $t0;

    // $t1 := 1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:76:57+16
    $t1 := 1;
    assume $IsValid'u64'($t1);

    // assume Identical($t2, Shl($t1, 16)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:69:5+29
    assume {:print "$at(11,2912,2941)"} true;
    assume ($t2 == $shlU64($t1, 16));

    // $t3 := opaque begin: error::canonical($t1, $t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:76:47+30
    assume {:print "$at(11,3201,3231)"} true;

    // assume WellFormed($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:76:47+30
    assume $IsValid'u64'($t3);

    // assume Eq<u64>($t3, $t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:76:47+30
    assume $IsEqual'u64'($t3, $t1);

    // $t3 := opaque end: error::canonical($t1, $t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:76:47+30

    // trace_return[0]($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:76:47+30
    assume {:print "$track_return(6,4,0):", $t3} $t3 == $t3;

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:76:78+1
L1:

    // return $t3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:76:78+1
    assume {:print "$at(11,3232,3233)"} true;
    $ret0 := $t3;
    return;

}

// fun error::invalid_state [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:78:3+70
procedure {:inline 1} $1_error_invalid_state(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t0: int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[r]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:78:3+1
    assume {:print "$at(11,3309,3310)"} true;
    assume {:print "$track_local(6,5,0):", $t0} $t0 == $t0;

    // $t1 := 3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:78:54+13
    $t1 := 3;
    assume $IsValid'u64'($t1);

    // assume Identical($t2, Shl($t1, 16)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:69:5+29
    assume {:print "$at(11,2912,2941)"} true;
    assume ($t2 == $shlU64($t1, 16));

    // $t3 := opaque begin: error::canonical($t1, $t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:78:44+27
    assume {:print "$at(11,3350,3377)"} true;

    // assume WellFormed($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:78:44+27
    assume $IsValid'u64'($t3);

    // assume Eq<u64>($t3, $t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:78:44+27
    assume $IsEqual'u64'($t3, $t1);

    // $t3 := opaque end: error::canonical($t1, $t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:78:44+27

    // trace_return[0]($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:78:44+27
    assume {:print "$track_return(6,5,0):", $t3} $t3 == $t3;

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:78:72+1
L1:

    // return $t3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:78:72+1
    assume {:print "$at(11,3378,3379)"} true;
    $ret0 := $t3;
    return;

}

// fun error::not_found [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:81:3+61
procedure {:inline 1} $1_error_not_found(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t0: int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[r]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:81:3+1
    assume {:print "$at(11,3541,3542)"} true;
    assume {:print "$track_local(6,6,0):", $t0} $t0 == $t0;

    // $t1 := 6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:81:49+9
    $t1 := 6;
    assume $IsValid'u64'($t1);

    // assume Identical($t2, Shl($t1, 16)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:69:5+29
    assume {:print "$at(11,2912,2941)"} true;
    assume ($t2 == $shlU64($t1, 16));

    // $t3 := opaque begin: error::canonical($t1, $t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:81:39+23
    assume {:print "$at(11,3577,3600)"} true;

    // assume WellFormed($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:81:39+23
    assume $IsValid'u64'($t3);

    // assume Eq<u64>($t3, $t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:81:39+23
    assume $IsEqual'u64'($t3, $t1);

    // $t3 := opaque end: error::canonical($t1, $t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:81:39+23

    // trace_return[0]($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:81:39+23
    assume {:print "$track_return(6,6,0):", $t3} $t3 == $t3;

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:81:63+1
L1:

    // return $t3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:81:63+1
    assume {:print "$at(11,3601,3602)"} true;
    $ret0 := $t3;
    return;

}

// fun error::out_of_range [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:77:3+68
procedure {:inline 1} $1_error_out_of_range(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t0: int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[r]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:77:3+1
    assume {:print "$at(11,3237,3238)"} true;
    assume {:print "$track_local(6,8,0):", $t0} $t0 == $t0;

    // $t1 := 2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:77:53+12
    $t1 := 2;
    assume $IsValid'u64'($t1);

    // assume Identical($t2, Shl($t1, 16)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:69:5+29
    assume {:print "$at(11,2912,2941)"} true;
    assume ($t2 == $shlU64($t1, 16));

    // $t3 := opaque begin: error::canonical($t1, $t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:77:43+26
    assume {:print "$at(11,3277,3303)"} true;

    // assume WellFormed($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:77:43+26
    assume $IsValid'u64'($t3);

    // assume Eq<u64>($t3, $t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:77:43+26
    assume $IsEqual'u64'($t3, $t1);

    // $t3 := opaque end: error::canonical($t1, $t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:77:43+26

    // trace_return[0]($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:77:43+26
    assume {:print "$track_return(6,8,0):", $t3} $t3 == $t3;

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:77:70+1
L1:

    // return $t3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:77:70+1
    assume {:print "$at(11,3304,3305)"} true;
    $ret0 := $t3;
    return;

}

// fun error::permission_denied [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:80:3+77
procedure {:inline 1} $1_error_permission_denied(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t0: int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[r]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:80:3+1
    assume {:print "$at(11,3460,3461)"} true;
    assume {:print "$track_local(6,9,0):", $t0} $t0 == $t0;

    // $t1 := 5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:80:57+17
    $t1 := 5;
    assume $IsValid'u64'($t1);

    // assume Identical($t2, Shl($t1, 16)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:69:5+29
    assume {:print "$at(11,2912,2941)"} true;
    assume ($t2 == $shlU64($t1, 16));

    // $t3 := opaque begin: error::canonical($t1, $t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:80:47+31
    assume {:print "$at(11,3504,3535)"} true;

    // assume WellFormed($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:80:47+31
    assume $IsValid'u64'($t3);

    // assume Eq<u64>($t3, $t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:80:47+31
    assume $IsEqual'u64'($t3, $t1);

    // $t3 := opaque end: error::canonical($t1, $t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:80:47+31

    // trace_return[0]($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:80:47+31
    assume {:print "$track_return(6,9,0):", $t3} $t3 == $t3;

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:80:79+1
L1:

    // return $t3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:80:79+1
    assume {:print "$at(11,3536,3537)"} true;
    $ret0 := $t3;
    return;

}

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.spec.move:61:10+40
function  $1_features_spec_is_enabled(feature: int): bool;
axiom (forall feature: int ::
(var $$res := $1_features_spec_is_enabled(feature);
$IsValid'bool'($$res)));

// struct features::Features at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:742:5+63
datatype $1_features_Features {
    $1_features_Features($features: Vec (bv8))
}
function {:inline} $Update'$1_features_Features'_features(s: $1_features_Features, x: Vec (bv8)): $1_features_Features {
    $1_features_Features(x)
}
function $IsValid'$1_features_Features'(s: $1_features_Features): bool {
    $IsValid'vec'bv8''(s->$features)
}
function {:inline} $IsEqual'$1_features_Features'(s1: $1_features_Features, s2: $1_features_Features): bool {
    $IsEqual'vec'bv8''(s1->$features, s2->$features)}
var $1_features_Features_$memory: $Memory $1_features_Features;

// fun features::coin_to_fungible_asset_migration_feature_enabled [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:495:5+148
procedure {:inline 1} $1_features_coin_to_fungible_asset_migration_feature_enabled() returns ($ret0: bool)
{
    // declare local variables
    var $t0: int;
    var $t1: bool;
    var $temp_0'bool': bool;

    // bytecode translation starts here
    // $t0 := 60 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:496:20+32
    assume {:print "$at(9,18431,18463)"} true;
    $t0 := 60;
    assume $IsValid'u64'($t0);

    // $t1 := opaque begin: features::is_enabled($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:496:9+44

    // assume WellFormed($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:496:9+44
    assume $IsValid'bool'($t1);

    // assume Eq<bool>($t1, features::spec_is_enabled($t0)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:496:9+44
    assume $IsEqual'bool'($t1, $1_features_spec_is_enabled($t0));

    // $t1 := opaque end: features::is_enabled($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:496:9+44

    // trace_return[0]($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:496:9+44
    assume {:print "$track_return(7,19,0):", $t1} $t1 == $t1;

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:497:5+1
    assume {:print "$at(9,18470,18471)"} true;
L1:

    // return $t1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:497:5+1
    assume {:print "$at(9,18470,18471)"} true;
    $ret0 := $t1;
    return;

}

// fun features::concurrent_fungible_assets_enabled [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:413:5+128
procedure {:inline 1} $1_features_concurrent_fungible_assets_enabled() returns ($ret0: bool)
{
    // declare local variables
    var $t0: int;
    var $t1: bool;
    var $temp_0'bool': bool;

    // bytecode translation starts here
    // $t0 := 50 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:414:20+26
    assume {:print "$at(9,15336,15362)"} true;
    $t0 := 50;
    assume $IsValid'u64'($t0);

    // $t1 := opaque begin: features::is_enabled($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:414:9+38

    // assume WellFormed($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:414:9+38
    assume $IsValid'bool'($t1);

    // assume Eq<bool>($t1, features::spec_is_enabled($t0)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:414:9+38
    assume $IsEqual'bool'($t1, $1_features_spec_is_enabled($t0));

    // $t1 := opaque end: features::is_enabled($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:414:9+38

    // trace_return[0]($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:414:9+38
    assume {:print "$track_return(7,23,0):", $t1} $t1 == $t1;

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:415:5+1
    assume {:print "$at(9,15369,15370)"} true;
L1:

    // return $t1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:415:5+1
    assume {:print "$at(9,15369,15370)"} true;
    $ret0 := $t1;
    return;

}

// fun features::default_to_concurrent_fungible_balance_enabled [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:573:5+152
procedure {:inline 1} $1_features_default_to_concurrent_fungible_balance_enabled() returns ($ret0: bool)
{
    // declare local variables
    var $t0: int;
    var $t1: bool;
    var $temp_0'bool': bool;

    // bytecode translation starts here
    // $t0 := 68 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:574:20+38
    assume {:print "$at(9,21425,21463)"} true;
    $t0 := 68;
    assume $IsValid'u64'($t0);

    // $t1 := opaque begin: features::is_enabled($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:574:9+50

    // assume WellFormed($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:574:9+50
    assume $IsValid'bool'($t1);

    // assume Eq<bool>($t1, features::spec_is_enabled($t0)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:574:9+50
    assume $IsEqual'bool'($t1, $1_features_spec_is_enabled($t0));

    // $t1 := opaque end: features::is_enabled($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:574:9+50

    // trace_return[0]($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:574:9+50
    assume {:print "$track_return(7,27,0):", $t1} $t1 == $t1;

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:575:5+1
    assume {:print "$at(9,21470,21471)"} true;
L1:

    // return $t1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:575:5+1
    assume {:print "$at(9,21470,21471)"} true;
    $ret0 := $t1;
    return;

}

// fun features::dispatchable_fungible_asset_enabled [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:534:5+130
procedure {:inline 1} $1_features_dispatchable_fungible_asset_enabled() returns ($ret0: bool)
{
    // declare local variables
    var $t0: int;
    var $t1: bool;
    var $temp_0'bool': bool;

    // bytecode translation starts here
    // $t0 := 63 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:535:20+27
    assume {:print "$at(9,19854,19881)"} true;
    $t0 := 63;
    assume $IsValid'u64'($t0);

    // $t1 := opaque begin: features::is_enabled($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:535:9+39

    // assume WellFormed($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:535:9+39
    assume $IsValid'bool'($t1);

    // assume Eq<bool>($t1, features::spec_is_enabled($t0)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:535:9+39
    assume $IsEqual'bool'($t1, $1_features_spec_is_enabled($t0));

    // $t1 := opaque end: features::is_enabled($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:535:9+39

    // trace_return[0]($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:535:9+39
    assume {:print "$track_return(7,31,0):", $t1} $t1 == $t1;

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:536:5+1
    assume {:print "$at(9,19888,19889)"} true;
L1:

    // return $t1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:536:5+1
    assume {:print "$at(9,19888,19889)"} true;
    $ret0 := $t1;
    return;

}

// fun features::module_event_migration_enabled [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:472:5+120
procedure {:inline 1} $1_features_module_event_migration_enabled() returns ($ret0: bool)
{
    // declare local variables
    var $t0: int;
    var $t1: bool;
    var $temp_0'bool': bool;

    // bytecode translation starts here
    // $t0 := 57 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:473:20+22
    assume {:print "$at(9,17486,17508)"} true;
    $t0 := 57;
    assume $IsValid'u64'($t0);

    // $t1 := opaque begin: features::is_enabled($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:473:9+34

    // assume WellFormed($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:473:9+34
    assume $IsValid'bool'($t1);

    // assume Eq<bool>($t1, features::spec_is_enabled($t0)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:473:9+34
    assume $IsEqual'bool'($t1, $1_features_spec_is_enabled($t0));

    // $t1 := opaque end: features::is_enabled($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:473:9+34

    // trace_return[0]($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:473:9+34
    assume {:print "$track_return(7,109,0):", $t1} $t1 == $t1;

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:474:5+1
    assume {:print "$at(9,17515,17516)"} true;
L1:

    // return $t1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:474:5+1
    assume {:print "$at(9,17515,17516)"} true;
    $ret0 := $t1;
    return;

}

// fun features::new_accounts_default_to_fa_apt_store_enabled [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:543:5+148
procedure {:inline 1} $1_features_new_accounts_default_to_fa_apt_store_enabled() returns ($ret0: bool)
{
    // declare local variables
    var $t0: int;
    var $t1: bool;
    var $temp_0'bool': bool;

    // bytecode translation starts here
    // $t0 := 64 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:544:20+36
    assume {:print "$at(9,20206,20242)"} true;
    $t0 := 64;
    assume $IsValid'u64'($t0);

    // $t1 := opaque begin: features::is_enabled($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:544:9+48

    // assume WellFormed($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:544:9+48
    assume $IsValid'bool'($t1);

    // assume Eq<bool>($t1, features::spec_is_enabled($t0)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:544:9+48
    assume $IsEqual'bool'($t1, $1_features_spec_is_enabled($t0));

    // $t1 := opaque end: features::is_enabled($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:544:9+48

    // trace_return[0]($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:544:9+48
    assume {:print "$track_return(7,114,0):", $t1} $t1 == $t1;

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:545:5+1
    assume {:print "$at(9,20249,20250)"} true;
L1:

    // return $t1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:545:5+1
    assume {:print "$at(9,20249,20250)"} true;
    $ret0 := $t1;
    return;

}

// fun features::new_accounts_default_to_fa_store_enabled [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:679:5+140
procedure {:inline 1} $1_features_new_accounts_default_to_fa_store_enabled() returns ($ret0: bool)
{
    // declare local variables
    var $t0: int;
    var $t1: bool;
    var $temp_0'bool': bool;

    // bytecode translation starts here
    // $t0 := 90 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:680:20+32
    assume {:print "$at(9,25407,25439)"} true;
    $t0 := 90;
    assume $IsValid'u64'($t0);

    // $t1 := opaque begin: features::is_enabled($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:680:9+44

    // assume WellFormed($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:680:9+44
    assume $IsValid'bool'($t1);

    // assume Eq<bool>($t1, features::spec_is_enabled($t0)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:680:9+44
    assume $IsEqual'bool'($t1, $1_features_spec_is_enabled($t0));

    // $t1 := opaque end: features::is_enabled($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:680:9+44

    // trace_return[0]($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:680:9+44
    assume {:print "$track_return(7,115,0):", $t1} $t1 == $t1;

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:681:5+1
    assume {:print "$at(9,25446,25447)"} true;
L1:

    // return $t1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:681:5+1
    assume {:print "$at(9,25446,25447)"} true;
    $ret0 := $t1;
    return;

}

// struct type_info::TypeInfo at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\type_info.move:19:5+149
datatype $1_type_info_TypeInfo {
    $1_type_info_TypeInfo($account_address: int, $module_name: Vec (int), $struct_name: Vec (int))
}
function {:inline} $Update'$1_type_info_TypeInfo'_account_address(s: $1_type_info_TypeInfo, x: int): $1_type_info_TypeInfo {
    $1_type_info_TypeInfo(x, s->$module_name, s->$struct_name)
}
function {:inline} $Update'$1_type_info_TypeInfo'_module_name(s: $1_type_info_TypeInfo, x: Vec (int)): $1_type_info_TypeInfo {
    $1_type_info_TypeInfo(s->$account_address, x, s->$struct_name)
}
function {:inline} $Update'$1_type_info_TypeInfo'_struct_name(s: $1_type_info_TypeInfo, x: Vec (int)): $1_type_info_TypeInfo {
    $1_type_info_TypeInfo(s->$account_address, s->$module_name, x)
}
function $IsValid'$1_type_info_TypeInfo'(s: $1_type_info_TypeInfo): bool {
    $IsValid'address'(s->$account_address)
      && $IsValid'vec'u8''(s->$module_name)
      && $IsValid'vec'u8''(s->$struct_name)
}
function {:inline} $IsEqual'$1_type_info_TypeInfo'(s1: $1_type_info_TypeInfo, s2: $1_type_info_TypeInfo): bool {
    $IsEqual'address'(s1->$account_address, s2->$account_address)
    && $IsEqual'vec'u8''(s1->$module_name, s2->$module_name)
    && $IsEqual'vec'u8''(s1->$struct_name, s2->$struct_name)}

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'bool'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'bool'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'u8'(bytes: Vec (int)): int;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'u8'(bytes);
$IsValid'u8'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'u64'(bytes: Vec (int)): int;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'u64'(bytes);
$IsValid'u64'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'u128'(bytes: Vec (int)): int;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'u128'(bytes);
$IsValid'u128'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'u256'(bytes: Vec (int)): int;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'u256'(bytes);
$IsValid'u256'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'address'(bytes: Vec (int)): int;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'address'(bytes);
$IsValid'address'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'signer'(bytes: Vec (int)): $signer;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'signer'(bytes);
$IsValid'signer'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'u8''(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'u8''(bytes);
$IsValid'vec'u8''($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'u128''(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'u128''(bytes);
$IsValid'vec'u128''($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'address''(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'address''(bytes);
$IsValid'vec'address''($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$1_object_Object'$1_fungible_asset_Metadata'''(bytes: Vec (int)): Vec ($1_object_Object'$1_fungible_asset_Metadata');
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$1_object_Object'$1_fungible_asset_Metadata'''(bytes);
$IsValid'vec'$1_object_Object'$1_fungible_asset_Metadata'''($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$1_function_info_FunctionInfo''(bytes: Vec (int)): Vec ($1_function_info_FunctionInfo);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$1_function_info_FunctionInfo''(bytes);
$IsValid'vec'$1_function_info_FunctionInfo''($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$1_aggregator_Aggregator''(bytes: Vec (int)): Vec ($1_aggregator_Aggregator);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$1_aggregator_Aggregator''(bytes);
$IsValid'vec'$1_aggregator_Aggregator''($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$1_optional_aggregator_Integer''(bytes: Vec (int)): Vec ($1_optional_aggregator_Integer);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$1_optional_aggregator_Integer''(bytes);
$IsValid'vec'$1_optional_aggregator_Integer''($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$1_optional_aggregator_OptionalAggregator''(bytes: Vec (int)): Vec ($1_optional_aggregator_OptionalAggregator);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$1_optional_aggregator_OptionalAggregator''(bytes);
$IsValid'vec'$1_optional_aggregator_OptionalAggregator''($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$1_fungible_asset_TransferRef''(bytes: Vec (int)): Vec ($1_fungible_asset_TransferRef);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$1_fungible_asset_TransferRef''(bytes);
$IsValid'vec'$1_fungible_asset_TransferRef''($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$1_fungible_asset_BurnRef''(bytes: Vec (int)): Vec ($1_fungible_asset_BurnRef);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$1_fungible_asset_BurnRef''(bytes);
$IsValid'vec'$1_fungible_asset_BurnRef''($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$1_fungible_asset_FungibleStore''(bytes: Vec (int)): Vec ($1_fungible_asset_FungibleStore);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$1_fungible_asset_FungibleStore''(bytes);
$IsValid'vec'$1_fungible_asset_FungibleStore''($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$1_fungible_asset_MintRef''(bytes: Vec (int)): Vec ($1_fungible_asset_MintRef);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$1_fungible_asset_MintRef''(bytes);
$IsValid'vec'$1_fungible_asset_MintRef''($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$1_aptos_coin_AptosCoin''(bytes: Vec (int)): Vec ($1_aptos_coin_AptosCoin);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$1_aptos_coin_AptosCoin''(bytes);
$IsValid'vec'$1_aptos_coin_AptosCoin''($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'#0''(bytes: Vec (int)): Vec (#0);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'#0''(bytes);
$IsValid'vec'#0''($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'u128''(bytes: Vec (int)): $1_option_Option'u128';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'u128''(bytes);
$IsValid'$1_option_Option'u128''($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'address''(bytes: Vec (int)): $1_option_Option'address';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'address''(bytes);
$IsValid'$1_option_Option'address''($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'''(bytes: Vec (int)): $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'''(bytes);
$IsValid'$1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'''($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'$1_function_info_FunctionInfo''(bytes: Vec (int)): $1_option_Option'$1_function_info_FunctionInfo';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'$1_function_info_FunctionInfo''(bytes);
$IsValid'$1_option_Option'$1_function_info_FunctionInfo''($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'$1_aggregator_Aggregator''(bytes: Vec (int)): $1_option_Option'$1_aggregator_Aggregator';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'$1_aggregator_Aggregator''(bytes);
$IsValid'$1_option_Option'$1_aggregator_Aggregator''($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_Integer''(bytes: Vec (int)): $1_option_Option'$1_optional_aggregator_Integer';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_Integer''(bytes);
$IsValid'$1_option_Option'$1_optional_aggregator_Integer''($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(bytes: Vec (int)): $1_option_Option'$1_optional_aggregator_OptionalAggregator';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(bytes);
$IsValid'$1_option_Option'$1_optional_aggregator_OptionalAggregator''($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'$1_fungible_asset_TransferRef''(bytes: Vec (int)): $1_option_Option'$1_fungible_asset_TransferRef';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'$1_fungible_asset_TransferRef''(bytes);
$IsValid'$1_option_Option'$1_fungible_asset_TransferRef''($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'$1_fungible_asset_BurnRef''(bytes: Vec (int)): $1_option_Option'$1_fungible_asset_BurnRef';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'$1_fungible_asset_BurnRef''(bytes);
$IsValid'$1_option_Option'$1_fungible_asset_BurnRef''($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'$1_fungible_asset_MintRef''(bytes: Vec (int)): $1_option_Option'$1_fungible_asset_MintRef';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'$1_fungible_asset_MintRef''(bytes);
$IsValid'$1_option_Option'$1_fungible_asset_MintRef''($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_string_String'(bytes: Vec (int)): $1_string_String;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_string_String'(bytes);
$IsValid'$1_string_String'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_features_Features'(bytes: Vec (int)): $1_features_Features;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_features_Features'(bytes);
$IsValid'$1_features_Features'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_type_info_TypeInfo'(bytes: Vec (int)): $1_type_info_TypeInfo;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_type_info_TypeInfo'(bytes);
$IsValid'$1_type_info_TypeInfo'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_table_Table'$1_string_String_$1_paymentv1_TransferLink'#0'''(bytes: Vec (int)): Table int ($1_paymentv1_TransferLink'#0');
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_table_Table'$1_string_String_$1_paymentv1_TransferLink'#0'''(bytes);
$IsValid'$1_table_Table'$1_string_String_$1_paymentv1_TransferLink'#0'''($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_table_Table'$1_type_info_TypeInfo_bool''(bytes: Vec (int)): Table int (bool);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_table_Table'$1_type_info_TypeInfo_bool''(bytes);
$IsValid'$1_table_Table'$1_type_info_TypeInfo_bool''($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_table_Table'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata'''(bytes: Vec (int)): Table int ($1_object_Object'$1_fungible_asset_Metadata');
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_table_Table'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata'''(bytes);
$IsValid'$1_table_Table'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata'''($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_chain_status_GenesisEndMarker'(bytes: Vec (int)): $1_chain_status_GenesisEndMarker;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_chain_status_GenesisEndMarker'(bytes);
$IsValid'$1_chain_status_GenesisEndMarker'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_timestamp_CurrentTimeMicroseconds'(bytes: Vec (int)): $1_timestamp_CurrentTimeMicroseconds;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_timestamp_CurrentTimeMicroseconds'(bytes);
$IsValid'$1_timestamp_CurrentTimeMicroseconds'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_big_ordered_map_BigOrderedMap'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission''(bytes: Vec (int)): Table int ($1_permissioned_signer_StoredPermission);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_big_ordered_map_BigOrderedMap'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission''(bytes);
$IsValid'$1_big_ordered_map_BigOrderedMap'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission''($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_permissioned_signer_GrantedPermissionHandles'(bytes: Vec (int)): $1_permissioned_signer_GrantedPermissionHandles;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_permissioned_signer_GrantedPermissionHandles'(bytes);
$IsValid'$1_permissioned_signer_GrantedPermissionHandles'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_permissioned_signer_PermissionStorage'(bytes: Vec (int)): $1_permissioned_signer_PermissionStorage;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_permissioned_signer_PermissionStorage'(bytes);
$IsValid'$1_permissioned_signer_PermissionStorage'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_guid_GUID'(bytes: Vec (int)): $1_guid_GUID;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_guid_GUID'(bytes);
$IsValid'$1_guid_GUID'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_guid_ID'(bytes: Vec (int)): $1_guid_ID;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_guid_ID'(bytes);
$IsValid'$1_guid_ID'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_account_CoinRegisterEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_account_CoinRegisterEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_account_CoinRegisterEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_account_CoinRegisterEvent''($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_account_KeyRotationEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_account_KeyRotationEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_account_KeyRotationEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_account_KeyRotationEvent''($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_object_TransferEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_object_TransferEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_object_TransferEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_object_TransferEvent''($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_DepositEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_coin_DepositEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_DepositEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_coin_DepositEvent''($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_WithdrawEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_coin_WithdrawEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_WithdrawEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_coin_WithdrawEvent''($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_reconfiguration_NewEpochEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_account_Account'(bytes: Vec (int)): $1_account_Account;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_account_Account'(bytes);
$IsValid'$1_account_Account'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_account_AccountPermission'(bytes: Vec (int)): $1_account_AccountPermission;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_account_AccountPermission'(bytes);
$IsValid'$1_account_AccountPermission'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_RotationCapability''(bytes: Vec (int)): $1_account_CapabilityOffer'$1_account_RotationCapability';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_RotationCapability''(bytes);
$IsValid'$1_account_CapabilityOffer'$1_account_RotationCapability''($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_SignerCapability''(bytes: Vec (int)): $1_account_CapabilityOffer'$1_account_SignerCapability';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_SignerCapability''(bytes);
$IsValid'$1_account_CapabilityOffer'$1_account_SignerCapability''($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_account_CoinRegister'(bytes: Vec (int)): $1_account_CoinRegister;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_account_CoinRegister'(bytes);
$IsValid'$1_account_CoinRegister'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_account_CoinRegisterEvent'(bytes: Vec (int)): $1_account_CoinRegisterEvent;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_account_CoinRegisterEvent'(bytes);
$IsValid'$1_account_CoinRegisterEvent'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_account_SignerCapability'(bytes: Vec (int)): $1_account_SignerCapability;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_account_SignerCapability'(bytes);
$IsValid'$1_account_SignerCapability'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_ConstructorRef'(bytes: Vec (int)): $1_object_ConstructorRef;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_ConstructorRef'(bytes);
$IsValid'$1_object_ConstructorRef'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_DeriveRef'(bytes: Vec (int)): $1_object_DeriveRef;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_DeriveRef'(bytes);
$IsValid'$1_object_DeriveRef'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_Object'$1_fungible_asset_FungibleStore''(bytes: Vec (int)): $1_object_Object'$1_fungible_asset_FungibleStore';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_Object'$1_fungible_asset_FungibleStore''(bytes);
$IsValid'$1_object_Object'$1_fungible_asset_FungibleStore''($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_Object'$1_fungible_asset_Metadata''(bytes: Vec (int)): $1_object_Object'$1_fungible_asset_Metadata';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_Object'$1_fungible_asset_Metadata''(bytes);
$IsValid'$1_object_Object'$1_fungible_asset_Metadata''($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_ObjectCore'(bytes: Vec (int)): $1_object_ObjectCore;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_ObjectCore'(bytes);
$IsValid'$1_object_ObjectCore'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_TombStone'(bytes: Vec (int)): $1_object_TombStone;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_TombStone'(bytes);
$IsValid'$1_object_TombStone'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_Transfer'(bytes: Vec (int)): $1_object_Transfer;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_Transfer'(bytes);
$IsValid'$1_object_Transfer'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_TransferEvent'(bytes: Vec (int)): $1_object_TransferEvent;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_TransferEvent'(bytes);
$IsValid'$1_object_TransferEvent'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_TransferPermission'(bytes: Vec (int)): $1_object_TransferPermission;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_TransferPermission'(bytes);
$IsValid'$1_object_TransferPermission'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_TransferRef'(bytes: Vec (int)): $1_object_TransferRef;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_TransferRef'(bytes);
$IsValid'$1_object_TransferRef'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_Untransferable'(bytes: Vec (int)): $1_object_Untransferable;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_Untransferable'(bytes);
$IsValid'$1_object_Untransferable'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_function_info_FunctionInfo'(bytes: Vec (int)): $1_function_info_FunctionInfo;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_function_info_FunctionInfo'(bytes);
$IsValid'$1_function_info_FunctionInfo'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_aggregator_Aggregator'(bytes: Vec (int)): $1_aggregator_Aggregator;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_aggregator_Aggregator'(bytes);
$IsValid'$1_aggregator_Aggregator'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_aggregator_v2_Aggregator'u64''(bytes: Vec (int)): $1_aggregator_v2_Aggregator'u64';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_aggregator_v2_Aggregator'u64''(bytes);
$IsValid'$1_aggregator_v2_Aggregator'u64''($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_aggregator_v2_Aggregator'u128''(bytes: Vec (int)): $1_aggregator_v2_Aggregator'u128';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_aggregator_v2_Aggregator'u128''(bytes);
$IsValid'$1_aggregator_v2_Aggregator'u128''($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_optional_aggregator_Integer'(bytes: Vec (int)): $1_optional_aggregator_Integer;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_optional_aggregator_Integer'(bytes);
$IsValid'$1_optional_aggregator_Integer'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_optional_aggregator_OptionalAggregator'(bytes: Vec (int)): $1_optional_aggregator_OptionalAggregator;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_optional_aggregator_OptionalAggregator'(bytes);
$IsValid'$1_optional_aggregator_OptionalAggregator'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_fungible_asset_TransferRef'(bytes: Vec (int)): $1_fungible_asset_TransferRef;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_fungible_asset_TransferRef'(bytes);
$IsValid'$1_fungible_asset_TransferRef'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_fungible_asset_Untransferable'(bytes: Vec (int)): $1_fungible_asset_Untransferable;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_fungible_asset_Untransferable'(bytes);
$IsValid'$1_fungible_asset_Untransferable'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_fungible_asset_BurnRef'(bytes: Vec (int)): $1_fungible_asset_BurnRef;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_fungible_asset_BurnRef'(bytes);
$IsValid'$1_fungible_asset_BurnRef'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_fungible_asset_ConcurrentFungibleBalance'(bytes: Vec (int)): $1_fungible_asset_ConcurrentFungibleBalance;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_fungible_asset_ConcurrentFungibleBalance'(bytes);
$IsValid'$1_fungible_asset_ConcurrentFungibleBalance'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_fungible_asset_ConcurrentSupply'(bytes: Vec (int)): $1_fungible_asset_ConcurrentSupply;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_fungible_asset_ConcurrentSupply'(bytes);
$IsValid'$1_fungible_asset_ConcurrentSupply'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_fungible_asset_Deposit'(bytes: Vec (int)): $1_fungible_asset_Deposit;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_fungible_asset_Deposit'(bytes);
$IsValid'$1_fungible_asset_Deposit'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_fungible_asset_DispatchFunctionStore'(bytes: Vec (int)): $1_fungible_asset_DispatchFunctionStore;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_fungible_asset_DispatchFunctionStore'(bytes);
$IsValid'$1_fungible_asset_DispatchFunctionStore'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_fungible_asset_FungibleAsset'(bytes: Vec (int)): $1_fungible_asset_FungibleAsset;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_fungible_asset_FungibleAsset'(bytes);
$IsValid'$1_fungible_asset_FungibleAsset'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_fungible_asset_FungibleStore'(bytes: Vec (int)): $1_fungible_asset_FungibleStore;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_fungible_asset_FungibleStore'(bytes);
$IsValid'$1_fungible_asset_FungibleStore'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_fungible_asset_Metadata'(bytes: Vec (int)): $1_fungible_asset_Metadata;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_fungible_asset_Metadata'(bytes);
$IsValid'$1_fungible_asset_Metadata'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_fungible_asset_MintRef'(bytes: Vec (int)): $1_fungible_asset_MintRef;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_fungible_asset_MintRef'(bytes);
$IsValid'$1_fungible_asset_MintRef'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_fungible_asset_Supply'(bytes: Vec (int)): $1_fungible_asset_Supply;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_fungible_asset_Supply'(bytes);
$IsValid'$1_fungible_asset_Supply'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_fungible_asset_Withdraw'(bytes: Vec (int)): $1_fungible_asset_Withdraw;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_fungible_asset_Withdraw'(bytes);
$IsValid'$1_fungible_asset_Withdraw'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_fungible_asset_WithdrawPermission'(bytes: Vec (int)): $1_fungible_asset_WithdrawPermission;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_fungible_asset_WithdrawPermission'(bytes);
$IsValid'$1_fungible_asset_WithdrawPermission'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_dispatchable_fungible_asset_TransferRefStore'(bytes: Vec (int)): $1_dispatchable_fungible_asset_TransferRefStore;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_dispatchable_fungible_asset_TransferRefStore'(bytes);
$IsValid'$1_dispatchable_fungible_asset_TransferRefStore'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_primary_fungible_store_DeriveRefPod'(bytes: Vec (int)): $1_primary_fungible_store_DeriveRefPod;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_primary_fungible_store_DeriveRefPod'(bytes);
$IsValid'$1_primary_fungible_store_DeriveRefPod'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_DepositEvent'(bytes: Vec (int)): $1_coin_DepositEvent;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_DepositEvent'(bytes);
$IsValid'$1_coin_DepositEvent'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_WithdrawEvent'(bytes: Vec (int)): $1_coin_WithdrawEvent;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_WithdrawEvent'(bytes);
$IsValid'$1_coin_WithdrawEvent'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_Coin'$1_aptos_coin_AptosCoin''(bytes: Vec (int)): $1_coin_Coin'$1_aptos_coin_AptosCoin';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_Coin'$1_aptos_coin_AptosCoin''(bytes);
$IsValid'$1_coin_Coin'$1_aptos_coin_AptosCoin''($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_Coin'#0''(bytes: Vec (int)): $1_coin_Coin'#0';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_Coin'#0''(bytes);
$IsValid'$1_coin_Coin'#0''($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_CoinConversionMap'(bytes: Vec (int)): $1_coin_CoinConversionMap;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_CoinConversionMap'(bytes);
$IsValid'$1_coin_CoinConversionMap'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''(bytes: Vec (int)): $1_coin_CoinInfo'$1_aptos_coin_AptosCoin';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''(bytes);
$IsValid'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_CoinInfo'#0''(bytes: Vec (int)): $1_coin_CoinInfo'#0';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_CoinInfo'#0''(bytes);
$IsValid'$1_coin_CoinInfo'#0''($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''(bytes: Vec (int)): $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''(bytes);
$IsValid'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_CoinStore'#0''(bytes: Vec (int)): $1_coin_CoinStore'#0';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_CoinStore'#0''(bytes);
$IsValid'$1_coin_CoinStore'#0''($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_PairCreation'(bytes: Vec (int)): $1_coin_PairCreation;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_PairCreation'(bytes);
$IsValid'$1_coin_PairCreation'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_PairedCoinType'(bytes: Vec (int)): $1_coin_PairedCoinType;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_PairedCoinType'(bytes);
$IsValid'$1_coin_PairedCoinType'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_PairedFungibleAssetRefs'(bytes: Vec (int)): $1_coin_PairedFungibleAssetRefs;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_PairedFungibleAssetRefs'(bytes);
$IsValid'$1_coin_PairedFungibleAssetRefs'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''(bytes: Vec (int)): $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''(bytes);
$IsValid'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_Ghost$supply'#0''(bytes: Vec (int)): $1_coin_Ghost$supply'#0';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_Ghost$supply'#0''(bytes);
$IsValid'$1_coin_Ghost$supply'#0''($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''(bytes: Vec (int)): $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''(bytes);
$IsValid'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_Ghost$aggregate_supply'#0''(bytes: Vec (int)): $1_coin_Ghost$aggregate_supply'#0';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_Ghost$aggregate_supply'#0''(bytes);
$IsValid'$1_coin_Ghost$aggregate_supply'#0''($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_aptos_coin_AptosCoin'(bytes: Vec (int)): $1_aptos_coin_AptosCoin;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_aptos_coin_AptosCoin'(bytes);
$IsValid'$1_aptos_coin_AptosCoin'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_reconfiguration_Configuration'(bytes: Vec (int)): $1_reconfiguration_Configuration;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_reconfiguration_Configuration'(bytes);
$IsValid'$1_reconfiguration_Configuration'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_supported_tokens_SupportedTokens'(bytes: Vec (int)): $1_supported_tokens_SupportedTokens;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_supported_tokens_SupportedTokens'(bytes);
$IsValid'$1_supported_tokens_SupportedTokens'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_paymentv1_EscrowCapability'(bytes: Vec (int)): $1_paymentv1_EscrowCapability;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_paymentv1_EscrowCapability'(bytes);
$IsValid'$1_paymentv1_EscrowCapability'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_paymentv1_PaymentProcessed'(bytes: Vec (int)): $1_paymentv1_PaymentProcessed;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_paymentv1_PaymentProcessed'(bytes);
$IsValid'$1_paymentv1_PaymentProcessed'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_paymentv1_TransferClaimed'(bytes: Vec (int)): $1_paymentv1_TransferClaimed;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_paymentv1_TransferClaimed'(bytes);
$IsValid'$1_paymentv1_TransferClaimed'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_paymentv1_TransferLink'#0''(bytes: Vec (int)): $1_paymentv1_TransferLink'#0';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_paymentv1_TransferLink'#0''(bytes);
$IsValid'$1_paymentv1_TransferLink'#0''($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_paymentv1_TransferLinkCreated'(bytes: Vec (int)): $1_paymentv1_TransferLinkCreated;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_paymentv1_TransferLinkCreated'(bytes);
$IsValid'$1_paymentv1_TransferLinkCreated'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_paymentv1_TransferLinkStore'#0''(bytes: Vec (int)): $1_paymentv1_TransferLinkStore'#0';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_paymentv1_TransferLinkStore'#0''(bytes);
$IsValid'$1_paymentv1_TransferLinkStore'#0''($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'#0'(bytes: Vec (int)): #0;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'#0'(bytes);
$IsValid'#0'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'bool'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'bool'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'u8'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'u8'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'u64'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'u64'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'u128'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'u128'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'u256'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'u256'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'address'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'address'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'signer'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'signer'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'u8''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'u8''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'u128''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'u128''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'address''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'address''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$1_object_Object'$1_fungible_asset_Metadata'''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$1_object_Object'$1_fungible_asset_Metadata'''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$1_function_info_FunctionInfo''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$1_function_info_FunctionInfo''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$1_aggregator_Aggregator''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$1_aggregator_Aggregator''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$1_optional_aggregator_Integer''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$1_optional_aggregator_Integer''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$1_optional_aggregator_OptionalAggregator''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$1_optional_aggregator_OptionalAggregator''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$1_fungible_asset_TransferRef''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$1_fungible_asset_TransferRef''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$1_fungible_asset_BurnRef''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$1_fungible_asset_BurnRef''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$1_fungible_asset_FungibleStore''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$1_fungible_asset_FungibleStore''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$1_fungible_asset_MintRef''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$1_fungible_asset_MintRef''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$1_aptos_coin_AptosCoin''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$1_aptos_coin_AptosCoin''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'#0''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'#0''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'u128''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'u128''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'address''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'address''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'$1_function_info_FunctionInfo''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'$1_function_info_FunctionInfo''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'$1_aggregator_Aggregator''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'$1_aggregator_Aggregator''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'$1_optional_aggregator_Integer''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'$1_optional_aggregator_Integer''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'$1_fungible_asset_TransferRef''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'$1_fungible_asset_TransferRef''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'$1_fungible_asset_BurnRef''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'$1_fungible_asset_BurnRef''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'$1_fungible_asset_MintRef''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'$1_fungible_asset_MintRef''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_string_String'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_string_String'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_features_Features'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_features_Features'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_type_info_TypeInfo'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_type_info_TypeInfo'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_table_Table'$1_string_String_$1_paymentv1_TransferLink'#0'''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_table_Table'$1_string_String_$1_paymentv1_TransferLink'#0'''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_table_Table'$1_type_info_TypeInfo_bool''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_table_Table'$1_type_info_TypeInfo_bool''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_table_Table'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata'''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_table_Table'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata'''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_chain_status_GenesisEndMarker'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_chain_status_GenesisEndMarker'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_timestamp_CurrentTimeMicroseconds'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_timestamp_CurrentTimeMicroseconds'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_big_ordered_map_BigOrderedMap'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_big_ordered_map_BigOrderedMap'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_permissioned_signer_GrantedPermissionHandles'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_permissioned_signer_GrantedPermissionHandles'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_permissioned_signer_PermissionStorage'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_permissioned_signer_PermissionStorage'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_guid_GUID'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_guid_GUID'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_guid_ID'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_guid_ID'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_account_CoinRegisterEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_account_CoinRegisterEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_account_KeyRotationEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_account_KeyRotationEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_object_TransferEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_object_TransferEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_coin_DepositEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_coin_DepositEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_coin_WithdrawEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_coin_WithdrawEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_account_Account'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_account_Account'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_account_AccountPermission'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_account_AccountPermission'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_RotationCapability''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_RotationCapability''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_SignerCapability''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_SignerCapability''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_account_CoinRegister'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_account_CoinRegister'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_account_CoinRegisterEvent'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_account_CoinRegisterEvent'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_account_SignerCapability'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_account_SignerCapability'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_ConstructorRef'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_ConstructorRef'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_DeriveRef'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_DeriveRef'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_Object'$1_fungible_asset_FungibleStore''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_Object'$1_fungible_asset_FungibleStore''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_Object'$1_fungible_asset_Metadata''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_Object'$1_fungible_asset_Metadata''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_ObjectCore'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_ObjectCore'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_TombStone'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_TombStone'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_Transfer'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_Transfer'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_TransferEvent'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_TransferEvent'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_TransferPermission'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_TransferPermission'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_TransferRef'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_TransferRef'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_Untransferable'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_Untransferable'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_function_info_FunctionInfo'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_function_info_FunctionInfo'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_aggregator_Aggregator'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_aggregator_Aggregator'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_aggregator_v2_Aggregator'u64''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_aggregator_v2_Aggregator'u64''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_aggregator_v2_Aggregator'u128''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_aggregator_v2_Aggregator'u128''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_optional_aggregator_Integer'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_optional_aggregator_Integer'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_optional_aggregator_OptionalAggregator'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_optional_aggregator_OptionalAggregator'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_fungible_asset_TransferRef'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_fungible_asset_TransferRef'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_fungible_asset_Untransferable'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_fungible_asset_Untransferable'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_fungible_asset_BurnRef'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_fungible_asset_BurnRef'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_fungible_asset_ConcurrentFungibleBalance'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_fungible_asset_ConcurrentFungibleBalance'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_fungible_asset_ConcurrentSupply'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_fungible_asset_ConcurrentSupply'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_fungible_asset_Deposit'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_fungible_asset_Deposit'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_fungible_asset_DispatchFunctionStore'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_fungible_asset_DispatchFunctionStore'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_fungible_asset_FungibleAsset'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_fungible_asset_FungibleAsset'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_fungible_asset_FungibleStore'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_fungible_asset_FungibleStore'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_fungible_asset_Metadata'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_fungible_asset_Metadata'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_fungible_asset_MintRef'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_fungible_asset_MintRef'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_fungible_asset_Supply'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_fungible_asset_Supply'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_fungible_asset_Withdraw'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_fungible_asset_Withdraw'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_fungible_asset_WithdrawPermission'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_fungible_asset_WithdrawPermission'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_dispatchable_fungible_asset_TransferRefStore'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_dispatchable_fungible_asset_TransferRefStore'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_primary_fungible_store_DeriveRefPod'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_primary_fungible_store_DeriveRefPod'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_coin_DepositEvent'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_coin_DepositEvent'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_coin_WithdrawEvent'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_coin_WithdrawEvent'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_coin_Coin'$1_aptos_coin_AptosCoin''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_coin_Coin'$1_aptos_coin_AptosCoin''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_coin_Coin'#0''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_coin_Coin'#0''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_coin_CoinConversionMap'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_coin_CoinConversionMap'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_coin_CoinInfo'#0''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_coin_CoinInfo'#0''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_coin_CoinStore'#0''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_coin_CoinStore'#0''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_coin_PairCreation'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_coin_PairCreation'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_coin_PairedCoinType'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_coin_PairedCoinType'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_coin_PairedFungibleAssetRefs'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_coin_PairedFungibleAssetRefs'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_coin_Ghost$supply'#0''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_coin_Ghost$supply'#0''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_coin_Ghost$aggregate_supply'#0''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_coin_Ghost$aggregate_supply'#0''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_aptos_coin_AptosCoin'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_aptos_coin_AptosCoin'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_reconfiguration_Configuration'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_reconfiguration_Configuration'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_supported_tokens_SupportedTokens'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_supported_tokens_SupportedTokens'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_paymentv1_EscrowCapability'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_paymentv1_EscrowCapability'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_paymentv1_PaymentProcessed'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_paymentv1_PaymentProcessed'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_paymentv1_TransferClaimed'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_paymentv1_TransferClaimed'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_paymentv1_TransferLink'#0''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_paymentv1_TransferLink'#0''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_paymentv1_TransferLinkCreated'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_paymentv1_TransferLinkCreated'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_paymentv1_TransferLinkStore'#0''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_paymentv1_TransferLinkStore'#0''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'#0'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'#0'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\chain_status.move:35:5+92
function {:inline} $1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory: $Memory $1_chain_status_GenesisEndMarker): bool {
    $ResourceExists($1_chain_status_GenesisEndMarker_$memory, 1)
}

// struct chain_status::GenesisEndMarker at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\chain_status.move:12:5+34
datatype $1_chain_status_GenesisEndMarker {
    $1_chain_status_GenesisEndMarker($dummy_field: bool)
}
function {:inline} $Update'$1_chain_status_GenesisEndMarker'_dummy_field(s: $1_chain_status_GenesisEndMarker, x: bool): $1_chain_status_GenesisEndMarker {
    $1_chain_status_GenesisEndMarker(x)
}
function $IsValid'$1_chain_status_GenesisEndMarker'(s: $1_chain_status_GenesisEndMarker): bool {
    $IsValid'bool'(s->$dummy_field)
}
function {:inline} $IsEqual'$1_chain_status_GenesisEndMarker'(s1: $1_chain_status_GenesisEndMarker, s2: $1_chain_status_GenesisEndMarker): bool {
    s1 == s2
}
var $1_chain_status_GenesisEndMarker_$memory: $Memory $1_chain_status_GenesisEndMarker;

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\timestamp.spec.move:57:10+113
function {:inline} $1_timestamp_spec_now_microseconds($1_timestamp_CurrentTimeMicroseconds_$memory: $Memory $1_timestamp_CurrentTimeMicroseconds): int {
    $ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, 1)->$microseconds
}

// struct timestamp::CurrentTimeMicroseconds at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\timestamp.move:12:5+75
datatype $1_timestamp_CurrentTimeMicroseconds {
    $1_timestamp_CurrentTimeMicroseconds($microseconds: int)
}
function {:inline} $Update'$1_timestamp_CurrentTimeMicroseconds'_microseconds(s: $1_timestamp_CurrentTimeMicroseconds, x: int): $1_timestamp_CurrentTimeMicroseconds {
    $1_timestamp_CurrentTimeMicroseconds(x)
}
function $IsValid'$1_timestamp_CurrentTimeMicroseconds'(s: $1_timestamp_CurrentTimeMicroseconds): bool {
    $IsValid'u64'(s->$microseconds)
}
function {:inline} $IsEqual'$1_timestamp_CurrentTimeMicroseconds'(s1: $1_timestamp_CurrentTimeMicroseconds, s2: $1_timestamp_CurrentTimeMicroseconds): bool {
    s1 == s2
}
var $1_timestamp_CurrentTimeMicroseconds_$memory: $Memory $1_timestamp_CurrentTimeMicroseconds;

// fun timestamp::now_microseconds [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\timestamp.move:61:5+155
procedure {:inline 1} $1_timestamp_now_microseconds() returns ($ret0: int)
{
    // declare local variables
    var $t0: int;
    var $t1: $1_timestamp_CurrentTimeMicroseconds;
    var $t2: int;
    var $t3: int;
    var $temp_0'u64': int;

    // bytecode translation starts here
    // $t0 := 0x1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\timestamp.move:62:48+16
    assume {:print "$at(215,2572,2588)"} true;
    $t0 := 1;
    assume $IsValid'address'($t0);

    // $t1 := get_global<0x1::timestamp::CurrentTimeMicroseconds>($t0) on_abort goto L2 with $t2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\timestamp.move:62:9+56
    if (!$ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t1 := $ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $t0);
    }
    if ($abort_flag) {
        assume {:print "$at(215,2533,2589)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(23,0):", $t2} $t2 == $t2;
        goto L2;
    }

    // $t3 := get_field<0x1::timestamp::CurrentTimeMicroseconds>.microseconds($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\timestamp.move:62:9+69
    $t3 := $t1->$microseconds;

    // trace_return[0]($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\timestamp.move:62:9+69
    assume {:print "$track_return(23,0,0):", $t3} $t3 == $t3;

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\timestamp.move:63:5+1
    assume {:print "$at(215,2608,2609)"} true;
L1:

    // return $t3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\timestamp.move:63:5+1
    assume {:print "$at(215,2608,2609)"} true;
    $ret0 := $t3;
    return;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\timestamp.move:63:5+1
L2:

    // abort($t2) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\timestamp.move:63:5+1
    assume {:print "$at(215,2608,2609)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun timestamp::now_seconds [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\timestamp.move:67:5+125
procedure {:inline 1} $1_timestamp_now_seconds() returns ($ret0: int)
{
    // declare local variables
    var $t0: int;
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $temp_0'u64': int;

    // bytecode translation starts here
    // $t0 := timestamp::now_microseconds() on_abort goto L2 with $t1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\timestamp.move:68:9+18
    assume {:print "$at(215,2747,2765)"} true;
    call $t0 := $1_timestamp_now_microseconds();
    if ($abort_flag) {
        assume {:print "$at(215,2747,2765)"} true;
        $t1 := $abort_code;
        assume {:print "$track_abort(23,1):", $t1} $t1 == $t1;
        goto L2;
    }

    // $t2 := 1000000 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\timestamp.move:68:30+23
    $t2 := 1000000;
    assume $IsValid'u64'($t2);

    // $t3 := /($t0, $t2) on_abort goto L2 with $t1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\timestamp.move:68:9+44
    call $t3 := $Div($t0, $t2);
    if ($abort_flag) {
        assume {:print "$at(215,2747,2791)"} true;
        $t1 := $abort_code;
        assume {:print "$track_abort(23,1):", $t1} $t1 == $t1;
        goto L2;
    }

    // trace_return[0]($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\timestamp.move:68:9+44
    assume {:print "$track_return(23,1,0):", $t3} $t3 == $t3;

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\timestamp.move:69:5+1
    assume {:print "$at(215,2797,2798)"} true;
L1:

    // return $t3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\timestamp.move:69:5+1
    assume {:print "$at(215,2797,2798)"} true;
    $ret0 := $t3;
    return;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\timestamp.move:69:5+1
L2:

    // abort($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\timestamp.move:69:5+1
    assume {:print "$at(215,2797,2798)"} true;
    $abort_code := $t1;
    $abort_flag := true;
    return;

}

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\create_signer.spec.move:47:10+46
function  $1_create_signer_spec_create_signer(addr: int): $signer;
axiom (forall addr: int ::
(var $$res := $1_create_signer_spec_create_signer(addr);
$IsValid'signer'($$res)));

// struct copyable_any::Any at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\copyable_any.move:12:5+95
datatype $1_copyable_any_Any {
    $1_copyable_any_Any($type_name: $1_string_String, $data: Vec (int))
}
function {:inline} $Update'$1_copyable_any_Any'_type_name(s: $1_copyable_any_Any, x: $1_string_String): $1_copyable_any_Any {
    $1_copyable_any_Any(x, s->$data)
}
function {:inline} $Update'$1_copyable_any_Any'_data(s: $1_copyable_any_Any, x: Vec (int)): $1_copyable_any_Any {
    $1_copyable_any_Any(s->$type_name, x)
}
function $IsValid'$1_copyable_any_Any'(s: $1_copyable_any_Any): bool {
    $IsValid'$1_string_String'(s->$type_name)
      && $IsValid'vec'u8''(s->$data)
}
function {:inline} $IsEqual'$1_copyable_any_Any'(s1: $1_copyable_any_Any, s2: $1_copyable_any_Any): bool {
    $IsEqual'$1_string_String'(s1->$type_name, s2->$type_name)
    && $IsEqual'vec'u8''(s1->$data, s2->$data)}

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\permissioned_signer.spec.move:14:10+54
function  $1_permissioned_signer_spec_is_permissioned_signer_impl(s: $signer): bool;
axiom (forall s: $signer ::
(var $$res := $1_permissioned_signer_spec_is_permissioned_signer_impl(s);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\permissioned_signer.spec.move:21:10+295
function {:inline} $1_permissioned_signer_spec_is_permissioned_signer(s: $signer): bool {
    (if (!$1_features_spec_is_enabled(84)) then (false) else ($1_permissioned_signer_spec_is_permissioned_signer_impl(s)))
}

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\permissioned_signer.spec.move:37:10+48
function  $1_permissioned_signer_spec_permission_address(s: $signer): int;
axiom (forall s: $signer ::
(var $$res := $1_permissioned_signer_spec_permission_address(s);
$IsValid'address'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\permissioned_signer.spec.move:121:10+95
function  $1_permissioned_signer_spec_check_permission_exists'$1_account_AccountPermission'(s: $signer, perm: $1_account_AccountPermission): bool;
axiom (forall s: $signer, perm: $1_account_AccountPermission ::
(var $$res := $1_permissioned_signer_spec_check_permission_exists'$1_account_AccountPermission'(s, perm);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\permissioned_signer.spec.move:121:10+95
function  $1_permissioned_signer_spec_check_permission_exists'$1_object_TransferPermission'(s: $signer, perm: $1_object_TransferPermission): bool;
axiom (forall s: $signer, perm: $1_object_TransferPermission ::
(var $$res := $1_permissioned_signer_spec_check_permission_exists'$1_object_TransferPermission'(s, perm);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\permissioned_signer.spec.move:162:10+113
function  $1_permissioned_signer_spec_check_permission_consume'$1_fungible_asset_WithdrawPermission'(s: $signer, threshold: int, perm: $1_fungible_asset_WithdrawPermission): bool;
axiom (forall s: $signer, threshold: int, perm: $1_fungible_asset_WithdrawPermission ::
(var $$res := $1_permissioned_signer_spec_check_permission_consume'$1_fungible_asset_WithdrawPermission'(s, threshold, perm);
$IsValid'bool'($$res)));

// struct permissioned_signer::GrantedPermissionHandles at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\permissioned_signer.move:64:5+191
datatype $1_permissioned_signer_GrantedPermissionHandles {
    $1_permissioned_signer_GrantedPermissionHandles($active_handles: Vec (int))
}
function {:inline} $Update'$1_permissioned_signer_GrantedPermissionHandles'_active_handles(s: $1_permissioned_signer_GrantedPermissionHandles, x: Vec (int)): $1_permissioned_signer_GrantedPermissionHandles {
    $1_permissioned_signer_GrantedPermissionHandles(x)
}
function $IsValid'$1_permissioned_signer_GrantedPermissionHandles'(s: $1_permissioned_signer_GrantedPermissionHandles): bool {
    $IsValid'vec'address''(s->$active_handles)
}
function {:inline} $IsEqual'$1_permissioned_signer_GrantedPermissionHandles'(s1: $1_permissioned_signer_GrantedPermissionHandles, s2: $1_permissioned_signer_GrantedPermissionHandles): bool {
    $IsEqual'vec'address''(s1->$active_handles, s2->$active_handles)}
var $1_permissioned_signer_GrantedPermissionHandles_$memory: $Memory $1_permissioned_signer_GrantedPermissionHandles;

// enum permissioned_signer::PermissionStorage at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\permissioned_signer.move:99:5+263
datatype $1_permissioned_signer_PermissionStorage {
    $1_permissioned_signer_PermissionStorage_V1($perms_V1: Table int ($1_permissioned_signer_StoredPermission))
}
function {:inline} $Update'$1_permissioned_signer_PermissionStorage_V1'_perms(s: $1_permissioned_signer_PermissionStorage, x: Table int ($1_permissioned_signer_StoredPermission)): $1_permissioned_signer_PermissionStorage {
    $1_permissioned_signer_PermissionStorage_V1(x)
}
function $IsValid'$1_permissioned_signer_PermissionStorage_V1'(s: $1_permissioned_signer_PermissionStorage): bool {
    if s is $1_permissioned_signer_PermissionStorage_V1 then
    $IsValid'$1_big_ordered_map_BigOrderedMap'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission''(s->$perms_V1)
    else false
}
function {:inline} $Update'$1_permissioned_signer_PermissionStorage'_Table_int_$1_permissioned_signer_StoredPermission_perms(s: $1_permissioned_signer_PermissionStorage, x: Table int ($1_permissioned_signer_StoredPermission)): $1_permissioned_signer_PermissionStorage {
     if s is $1_permissioned_signer_PermissionStorage_V1 then
    $Update'$1_permissioned_signer_PermissionStorage_V1'_perms(s, x)
    else s
}
function $IsValid'$1_permissioned_signer_PermissionStorage'(s: $1_permissioned_signer_PermissionStorage): bool {
     if s is $1_permissioned_signer_PermissionStorage_V1 then
    $IsValid'$1_permissioned_signer_PermissionStorage_V1'(s)
    else false
}
function {:inline} $IsEqual'$1_permissioned_signer_PermissionStorage'(s1: $1_permissioned_signer_PermissionStorage, s2: $1_permissioned_signer_PermissionStorage): bool {
     if s1 is $1_permissioned_signer_PermissionStorage_V1 && s2 is $1_permissioned_signer_PermissionStorage_V1 then
    $IsEqual'$1_big_ordered_map_BigOrderedMap'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission''(s1->$perms_V1, s2->$perms_V1)
    else false
}
var $1_permissioned_signer_PermissionStorage_$memory: $Memory $1_permissioned_signer_PermissionStorage;

// enum permissioned_signer::StoredPermission at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\permissioned_signer.move:108:5+201
datatype $1_permissioned_signer_StoredPermission {
    $1_permissioned_signer_StoredPermission_Unlimited(),
    $1_permissioned_signer_StoredPermission_Capacity($0_Capacity: int)
}
function $IsValid'$1_permissioned_signer_StoredPermission_Unlimited'(s: $1_permissioned_signer_StoredPermission): bool {
    true
}
function {:inline} $Update'$1_permissioned_signer_StoredPermission_Capacity'_0(s: $1_permissioned_signer_StoredPermission, x: int): $1_permissioned_signer_StoredPermission {
    $1_permissioned_signer_StoredPermission_Capacity(x)
}
function $IsValid'$1_permissioned_signer_StoredPermission_Capacity'(s: $1_permissioned_signer_StoredPermission): bool {
    if s is $1_permissioned_signer_StoredPermission_Capacity then
    $IsValid'u256'(s->$0_Capacity)
    else false
}
function {:inline} $Update'$1_permissioned_signer_StoredPermission'_int_0(s: $1_permissioned_signer_StoredPermission, x: int): $1_permissioned_signer_StoredPermission {
     if s is $1_permissioned_signer_StoredPermission_Capacity then
    $Update'$1_permissioned_signer_StoredPermission_Capacity'_0(s, x)
    else s
}
function $IsValid'$1_permissioned_signer_StoredPermission'(s: $1_permissioned_signer_StoredPermission): bool {
     if s is $1_permissioned_signer_StoredPermission_Unlimited then
    $IsValid'$1_permissioned_signer_StoredPermission_Unlimited'(s)
    else if s is $1_permissioned_signer_StoredPermission_Capacity then
    $IsValid'$1_permissioned_signer_StoredPermission_Capacity'(s)
    else false
}
function {:inline} $IsEqual'$1_permissioned_signer_StoredPermission'(s1: $1_permissioned_signer_StoredPermission, s2: $1_permissioned_signer_StoredPermission): bool {
    s1 == s2
}

// struct guid::GUID at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\guid.move:7:5+52
datatype $1_guid_GUID {
    $1_guid_GUID($id: $1_guid_ID)
}
function {:inline} $Update'$1_guid_GUID'_id(s: $1_guid_GUID, x: $1_guid_ID): $1_guid_GUID {
    $1_guid_GUID(x)
}
function $IsValid'$1_guid_GUID'(s: $1_guid_GUID): bool {
    $IsValid'$1_guid_ID'(s->$id)
}
function {:inline} $IsEqual'$1_guid_GUID'(s1: $1_guid_GUID, s2: $1_guid_GUID): bool {
    s1 == s2
}

// struct guid::ID at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\guid.move:12:5+214
datatype $1_guid_ID {
    $1_guid_ID($creation_num: int, $addr: int)
}
function {:inline} $Update'$1_guid_ID'_creation_num(s: $1_guid_ID, x: int): $1_guid_ID {
    $1_guid_ID(x, s->$addr)
}
function {:inline} $Update'$1_guid_ID'_addr(s: $1_guid_ID, x: int): $1_guid_ID {
    $1_guid_ID(s->$creation_num, x)
}
function $IsValid'$1_guid_ID'(s: $1_guid_ID): bool {
    $IsValid'u64'(s->$creation_num)
      && $IsValid'address'(s->$addr)
}
function {:inline} $IsEqual'$1_guid_ID'(s1: $1_guid_ID, s2: $1_guid_ID): bool {
    s1 == s2
}

// fun guid::create [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\guid.move:23:5+295
procedure {:inline 1} $1_guid_create(_$t0: int, _$t1: $Mutation (int)) returns ($ret0: $1_guid_GUID, $ret1: $Mutation (int))
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: $1_guid_ID;
    var $t8: $1_guid_GUID;
    var $t0: int;
    var $t1: $Mutation (int);
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[addr]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\guid.move:23:5+1
    assume {:print "$at(175,858,859)"} true;
    assume {:print "$track_local(36,0,0):", $t0} $t0 == $t0;

    // trace_local[creation_num_ref]($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\guid.move:23:5+1
    $temp_0'u64' := $Dereference($t1);
    assume {:print "$track_local(36,0,1):", $temp_0'u64'} $temp_0'u64' == $temp_0'u64';

    // $t3 := read_ref($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\guid.move:24:28+17
    assume {:print "$at(175,963,980)"} true;
    $t3 := $Dereference($t1);

    // trace_local[creation_num]($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\guid.move:24:28+17
    assume {:print "$track_local(36,0,2):", $t3} $t3 == $t3;

    // $t4 := 1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\guid.move:25:44+1
    assume {:print "$at(175,1026,1027)"} true;
    $t4 := 1;
    assume $IsValid'u64'($t4);

    // $t5 := +($t3, $t4) on_abort goto L2 with $t6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\guid.move:25:29+16
    call $t5 := $AddU64($t3, $t4);
    if ($abort_flag) {
        assume {:print "$at(175,1011,1027)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(36,0):", $t6} $t6 == $t6;
        goto L2;
    }

    // write_ref($t1, $t5) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\guid.move:25:9+36
    $t1 := $UpdateMutation($t1, $t5);

    // $t7 := pack 0x1::guid::ID($t3, $t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\guid.move:27:17+73
    assume {:print "$at(175,1062,1135)"} true;
    $t7 := $1_guid_ID($t3, $t0);

    // $t8 := pack 0x1::guid::GUID($t7) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\guid.move:26:9+108
    assume {:print "$at(175,1038,1146)"} true;
    $t8 := $1_guid_GUID($t7);

    // trace_return[0]($t8) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\guid.move:23:80+220
    assume {:print "$at(175,933,1153)"} true;
    assume {:print "$track_return(36,0,0):", $t8} $t8 == $t8;

    // trace_local[creation_num_ref]($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\guid.move:23:80+220
    $temp_0'u64' := $Dereference($t1);
    assume {:print "$track_local(36,0,1):", $temp_0'u64'} $temp_0'u64' == $temp_0'u64';

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\guid.move:32:5+1
    assume {:print "$at(175,1152,1153)"} true;
L1:

    // return $t8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\guid.move:32:5+1
    assume {:print "$at(175,1152,1153)"} true;
    $ret0 := $t8;
    $ret1 := $t1;
    return;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\guid.move:32:5+1
L2:

    // abort($t6) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\guid.move:32:5+1
    assume {:print "$at(175,1152,1153)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}

// struct event::EventHandle<0x1::account::CoinRegisterEvent> at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\event.move:37:5+229
datatype $1_event_EventHandle'$1_account_CoinRegisterEvent' {
    $1_event_EventHandle'$1_account_CoinRegisterEvent'($counter: int, $guid: $1_guid_GUID)
}
function {:inline} $Update'$1_event_EventHandle'$1_account_CoinRegisterEvent''_counter(s: $1_event_EventHandle'$1_account_CoinRegisterEvent', x: int): $1_event_EventHandle'$1_account_CoinRegisterEvent' {
    $1_event_EventHandle'$1_account_CoinRegisterEvent'(x, s->$guid)
}
function {:inline} $Update'$1_event_EventHandle'$1_account_CoinRegisterEvent''_guid(s: $1_event_EventHandle'$1_account_CoinRegisterEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_account_CoinRegisterEvent' {
    $1_event_EventHandle'$1_account_CoinRegisterEvent'(s->$counter, x)
}
function $IsValid'$1_event_EventHandle'$1_account_CoinRegisterEvent''(s: $1_event_EventHandle'$1_account_CoinRegisterEvent'): bool {
    $IsValid'u64'(s->$counter)
      && $IsValid'$1_guid_GUID'(s->$guid)
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_account_CoinRegisterEvent''(s1: $1_event_EventHandle'$1_account_CoinRegisterEvent', s2: $1_event_EventHandle'$1_account_CoinRegisterEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<0x1::account::KeyRotationEvent> at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\event.move:37:5+229
datatype $1_event_EventHandle'$1_account_KeyRotationEvent' {
    $1_event_EventHandle'$1_account_KeyRotationEvent'($counter: int, $guid: $1_guid_GUID)
}
function {:inline} $Update'$1_event_EventHandle'$1_account_KeyRotationEvent''_counter(s: $1_event_EventHandle'$1_account_KeyRotationEvent', x: int): $1_event_EventHandle'$1_account_KeyRotationEvent' {
    $1_event_EventHandle'$1_account_KeyRotationEvent'(x, s->$guid)
}
function {:inline} $Update'$1_event_EventHandle'$1_account_KeyRotationEvent''_guid(s: $1_event_EventHandle'$1_account_KeyRotationEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_account_KeyRotationEvent' {
    $1_event_EventHandle'$1_account_KeyRotationEvent'(s->$counter, x)
}
function $IsValid'$1_event_EventHandle'$1_account_KeyRotationEvent''(s: $1_event_EventHandle'$1_account_KeyRotationEvent'): bool {
    $IsValid'u64'(s->$counter)
      && $IsValid'$1_guid_GUID'(s->$guid)
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_account_KeyRotationEvent''(s1: $1_event_EventHandle'$1_account_KeyRotationEvent', s2: $1_event_EventHandle'$1_account_KeyRotationEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<0x1::object::TransferEvent> at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\event.move:37:5+229
datatype $1_event_EventHandle'$1_object_TransferEvent' {
    $1_event_EventHandle'$1_object_TransferEvent'($counter: int, $guid: $1_guid_GUID)
}
function {:inline} $Update'$1_event_EventHandle'$1_object_TransferEvent''_counter(s: $1_event_EventHandle'$1_object_TransferEvent', x: int): $1_event_EventHandle'$1_object_TransferEvent' {
    $1_event_EventHandle'$1_object_TransferEvent'(x, s->$guid)
}
function {:inline} $Update'$1_event_EventHandle'$1_object_TransferEvent''_guid(s: $1_event_EventHandle'$1_object_TransferEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_object_TransferEvent' {
    $1_event_EventHandle'$1_object_TransferEvent'(s->$counter, x)
}
function $IsValid'$1_event_EventHandle'$1_object_TransferEvent''(s: $1_event_EventHandle'$1_object_TransferEvent'): bool {
    $IsValid'u64'(s->$counter)
      && $IsValid'$1_guid_GUID'(s->$guid)
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_object_TransferEvent''(s1: $1_event_EventHandle'$1_object_TransferEvent', s2: $1_event_EventHandle'$1_object_TransferEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<0x1::coin::DepositEvent> at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\event.move:37:5+229
datatype $1_event_EventHandle'$1_coin_DepositEvent' {
    $1_event_EventHandle'$1_coin_DepositEvent'($counter: int, $guid: $1_guid_GUID)
}
function {:inline} $Update'$1_event_EventHandle'$1_coin_DepositEvent''_counter(s: $1_event_EventHandle'$1_coin_DepositEvent', x: int): $1_event_EventHandle'$1_coin_DepositEvent' {
    $1_event_EventHandle'$1_coin_DepositEvent'(x, s->$guid)
}
function {:inline} $Update'$1_event_EventHandle'$1_coin_DepositEvent''_guid(s: $1_event_EventHandle'$1_coin_DepositEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_coin_DepositEvent' {
    $1_event_EventHandle'$1_coin_DepositEvent'(s->$counter, x)
}
function $IsValid'$1_event_EventHandle'$1_coin_DepositEvent''(s: $1_event_EventHandle'$1_coin_DepositEvent'): bool {
    $IsValid'u64'(s->$counter)
      && $IsValid'$1_guid_GUID'(s->$guid)
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_coin_DepositEvent''(s1: $1_event_EventHandle'$1_coin_DepositEvent', s2: $1_event_EventHandle'$1_coin_DepositEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<0x1::coin::WithdrawEvent> at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\event.move:37:5+229
datatype $1_event_EventHandle'$1_coin_WithdrawEvent' {
    $1_event_EventHandle'$1_coin_WithdrawEvent'($counter: int, $guid: $1_guid_GUID)
}
function {:inline} $Update'$1_event_EventHandle'$1_coin_WithdrawEvent''_counter(s: $1_event_EventHandle'$1_coin_WithdrawEvent', x: int): $1_event_EventHandle'$1_coin_WithdrawEvent' {
    $1_event_EventHandle'$1_coin_WithdrawEvent'(x, s->$guid)
}
function {:inline} $Update'$1_event_EventHandle'$1_coin_WithdrawEvent''_guid(s: $1_event_EventHandle'$1_coin_WithdrawEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_coin_WithdrawEvent' {
    $1_event_EventHandle'$1_coin_WithdrawEvent'(s->$counter, x)
}
function $IsValid'$1_event_EventHandle'$1_coin_WithdrawEvent''(s: $1_event_EventHandle'$1_coin_WithdrawEvent'): bool {
    $IsValid'u64'(s->$counter)
      && $IsValid'$1_guid_GUID'(s->$guid)
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_coin_WithdrawEvent''(s1: $1_event_EventHandle'$1_coin_WithdrawEvent', s2: $1_event_EventHandle'$1_coin_WithdrawEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<0x1::reconfiguration::NewEpochEvent> at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\event.move:37:5+229
datatype $1_event_EventHandle'$1_reconfiguration_NewEpochEvent' {
    $1_event_EventHandle'$1_reconfiguration_NewEpochEvent'($counter: int, $guid: $1_guid_GUID)
}
function {:inline} $Update'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''_counter(s: $1_event_EventHandle'$1_reconfiguration_NewEpochEvent', x: int): $1_event_EventHandle'$1_reconfiguration_NewEpochEvent' {
    $1_event_EventHandle'$1_reconfiguration_NewEpochEvent'(x, s->$guid)
}
function {:inline} $Update'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''_guid(s: $1_event_EventHandle'$1_reconfiguration_NewEpochEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_reconfiguration_NewEpochEvent' {
    $1_event_EventHandle'$1_reconfiguration_NewEpochEvent'(s->$counter, x)
}
function $IsValid'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(s: $1_event_EventHandle'$1_reconfiguration_NewEpochEvent'): bool {
    $IsValid'u64'(s->$counter)
      && $IsValid'$1_guid_GUID'(s->$guid)
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(s1: $1_event_EventHandle'$1_reconfiguration_NewEpochEvent', s2: $1_event_EventHandle'$1_reconfiguration_NewEpochEvent'): bool {
    s1 == s2
}

// fun event::new_event_handle<0x1::object::TransferEvent> [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\event.move:46:5+170
procedure {:inline 1} $1_event_new_event_handle'$1_object_TransferEvent'(_$t0: $1_guid_GUID) returns ($ret0: $1_event_EventHandle'$1_object_TransferEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_event_EventHandle'$1_object_TransferEvent';
    var $t0: $1_guid_GUID;
    var $temp_0'$1_event_EventHandle'$1_object_TransferEvent'': $1_event_EventHandle'$1_object_TransferEvent';
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[guid]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\event.move:46:5+1
    assume {:print "$at(165,1776,1777)"} true;
    assume {:print "$track_local(37,5,0):", $t0} $t0 == $t0;

    // $t1 := 0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\event.move:48:22+1
    assume {:print "$at(165,1907,1908)"} true;
    $t1 := 0;
    assume $IsValid'u64'($t1);

    // $t2 := pack 0x1::event::EventHandle<#0>($t1, $t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\event.move:47:9+71
    assume {:print "$at(165,1868,1939)"} true;
    $t2 := $1_event_EventHandle'$1_object_TransferEvent'($t1, $t0);

    // trace_return[0]($t2) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\event.move:47:9+71
    assume {:print "$track_return(37,5,0):", $t2} $t2 == $t2;

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\event.move:51:5+1
    assume {:print "$at(165,1945,1946)"} true;
L1:

    // return $t2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\event.move:51:5+1
    assume {:print "$at(165,1945,1946)"} true;
    $ret0 := $t2;
    return;

}

// fun event::new_event_handle<0x1::coin::DepositEvent> [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\event.move:46:5+170
procedure {:inline 1} $1_event_new_event_handle'$1_coin_DepositEvent'(_$t0: $1_guid_GUID) returns ($ret0: $1_event_EventHandle'$1_coin_DepositEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_event_EventHandle'$1_coin_DepositEvent';
    var $t0: $1_guid_GUID;
    var $temp_0'$1_event_EventHandle'$1_coin_DepositEvent'': $1_event_EventHandle'$1_coin_DepositEvent';
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[guid]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\event.move:46:5+1
    assume {:print "$at(165,1776,1777)"} true;
    assume {:print "$track_local(37,5,0):", $t0} $t0 == $t0;

    // $t1 := 0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\event.move:48:22+1
    assume {:print "$at(165,1907,1908)"} true;
    $t1 := 0;
    assume $IsValid'u64'($t1);

    // $t2 := pack 0x1::event::EventHandle<#0>($t1, $t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\event.move:47:9+71
    assume {:print "$at(165,1868,1939)"} true;
    $t2 := $1_event_EventHandle'$1_coin_DepositEvent'($t1, $t0);

    // trace_return[0]($t2) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\event.move:47:9+71
    assume {:print "$track_return(37,5,0):", $t2} $t2 == $t2;

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\event.move:51:5+1
    assume {:print "$at(165,1945,1946)"} true;
L1:

    // return $t2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\event.move:51:5+1
    assume {:print "$at(165,1945,1946)"} true;
    $ret0 := $t2;
    return;

}

// fun event::new_event_handle<0x1::coin::WithdrawEvent> [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\event.move:46:5+170
procedure {:inline 1} $1_event_new_event_handle'$1_coin_WithdrawEvent'(_$t0: $1_guid_GUID) returns ($ret0: $1_event_EventHandle'$1_coin_WithdrawEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_event_EventHandle'$1_coin_WithdrawEvent';
    var $t0: $1_guid_GUID;
    var $temp_0'$1_event_EventHandle'$1_coin_WithdrawEvent'': $1_event_EventHandle'$1_coin_WithdrawEvent';
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[guid]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\event.move:46:5+1
    assume {:print "$at(165,1776,1777)"} true;
    assume {:print "$track_local(37,5,0):", $t0} $t0 == $t0;

    // $t1 := 0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\event.move:48:22+1
    assume {:print "$at(165,1907,1908)"} true;
    $t1 := 0;
    assume $IsValid'u64'($t1);

    // $t2 := pack 0x1::event::EventHandle<#0>($t1, $t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\event.move:47:9+71
    assume {:print "$at(165,1868,1939)"} true;
    $t2 := $1_event_EventHandle'$1_coin_WithdrawEvent'($t1, $t0);

    // trace_return[0]($t2) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\event.move:47:9+71
    assume {:print "$track_return(37,5,0):", $t2} $t2 == $t2;

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\event.move:51:5+1
    assume {:print "$at(165,1945,1946)"} true;
L1:

    // return $t2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\event.move:51:5+1
    assume {:print "$at(165,1945,1946)"} true;
    $ret0 := $t2;
    return;

}

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.spec.move:162:10+216
function {:inline} $1_account_spec_exists_at($1_account_Account_$memory: $Memory $1_account_Account, addr: int): bool {
    ($1_features_spec_is_enabled(91) || $ResourceExists($1_account_Account_$memory, addr))
}

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.spec.move:598:10+77
function  $1_account_spec_create_resource_address(source: int, seed: Vec (int)): int;
axiom (forall source: int, seed: Vec (int) ::
(var $$res := $1_account_spec_create_resource_address(source, seed);
$IsValid'address'($$res)));

// struct account::Account at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:61:5+409
datatype $1_account_Account {
    $1_account_Account($authentication_key: Vec (int), $sequence_number: int, $guid_creation_num: int, $coin_register_events: $1_event_EventHandle'$1_account_CoinRegisterEvent', $key_rotation_events: $1_event_EventHandle'$1_account_KeyRotationEvent', $rotation_capability_offer: $1_account_CapabilityOffer'$1_account_RotationCapability', $signer_capability_offer: $1_account_CapabilityOffer'$1_account_SignerCapability')
}
function {:inline} $Update'$1_account_Account'_authentication_key(s: $1_account_Account, x: Vec (int)): $1_account_Account {
    $1_account_Account(x, s->$sequence_number, s->$guid_creation_num, s->$coin_register_events, s->$key_rotation_events, s->$rotation_capability_offer, s->$signer_capability_offer)
}
function {:inline} $Update'$1_account_Account'_sequence_number(s: $1_account_Account, x: int): $1_account_Account {
    $1_account_Account(s->$authentication_key, x, s->$guid_creation_num, s->$coin_register_events, s->$key_rotation_events, s->$rotation_capability_offer, s->$signer_capability_offer)
}
function {:inline} $Update'$1_account_Account'_guid_creation_num(s: $1_account_Account, x: int): $1_account_Account {
    $1_account_Account(s->$authentication_key, s->$sequence_number, x, s->$coin_register_events, s->$key_rotation_events, s->$rotation_capability_offer, s->$signer_capability_offer)
}
function {:inline} $Update'$1_account_Account'_coin_register_events(s: $1_account_Account, x: $1_event_EventHandle'$1_account_CoinRegisterEvent'): $1_account_Account {
    $1_account_Account(s->$authentication_key, s->$sequence_number, s->$guid_creation_num, x, s->$key_rotation_events, s->$rotation_capability_offer, s->$signer_capability_offer)
}
function {:inline} $Update'$1_account_Account'_key_rotation_events(s: $1_account_Account, x: $1_event_EventHandle'$1_account_KeyRotationEvent'): $1_account_Account {
    $1_account_Account(s->$authentication_key, s->$sequence_number, s->$guid_creation_num, s->$coin_register_events, x, s->$rotation_capability_offer, s->$signer_capability_offer)
}
function {:inline} $Update'$1_account_Account'_rotation_capability_offer(s: $1_account_Account, x: $1_account_CapabilityOffer'$1_account_RotationCapability'): $1_account_Account {
    $1_account_Account(s->$authentication_key, s->$sequence_number, s->$guid_creation_num, s->$coin_register_events, s->$key_rotation_events, x, s->$signer_capability_offer)
}
function {:inline} $Update'$1_account_Account'_signer_capability_offer(s: $1_account_Account, x: $1_account_CapabilityOffer'$1_account_SignerCapability'): $1_account_Account {
    $1_account_Account(s->$authentication_key, s->$sequence_number, s->$guid_creation_num, s->$coin_register_events, s->$key_rotation_events, s->$rotation_capability_offer, x)
}
function $IsValid'$1_account_Account'(s: $1_account_Account): bool {
    $IsValid'vec'u8''(s->$authentication_key)
      && $IsValid'u64'(s->$sequence_number)
      && $IsValid'u64'(s->$guid_creation_num)
      && $IsValid'$1_event_EventHandle'$1_account_CoinRegisterEvent''(s->$coin_register_events)
      && $IsValid'$1_event_EventHandle'$1_account_KeyRotationEvent''(s->$key_rotation_events)
      && $IsValid'$1_account_CapabilityOffer'$1_account_RotationCapability''(s->$rotation_capability_offer)
      && $IsValid'$1_account_CapabilityOffer'$1_account_SignerCapability''(s->$signer_capability_offer)
}
function {:inline} $IsEqual'$1_account_Account'(s1: $1_account_Account, s2: $1_account_Account): bool {
    $IsEqual'vec'u8''(s1->$authentication_key, s2->$authentication_key)
    && $IsEqual'u64'(s1->$sequence_number, s2->$sequence_number)
    && $IsEqual'u64'(s1->$guid_creation_num, s2->$guid_creation_num)
    && $IsEqual'$1_event_EventHandle'$1_account_CoinRegisterEvent''(s1->$coin_register_events, s2->$coin_register_events)
    && $IsEqual'$1_event_EventHandle'$1_account_KeyRotationEvent''(s1->$key_rotation_events, s2->$key_rotation_events)
    && $IsEqual'$1_account_CapabilityOffer'$1_account_RotationCapability''(s1->$rotation_capability_offer, s2->$rotation_capability_offer)
    && $IsEqual'$1_account_CapabilityOffer'$1_account_SignerCapability''(s1->$signer_capability_offer, s2->$signer_capability_offer)}
var $1_account_Account_$memory: $Memory $1_account_Account;

// enum account::AccountPermission at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:231:5+209
datatype $1_account_AccountPermission {
    $1_account_AccountPermission_KeyRotation(),
    $1_account_AccountPermission_Offering()
}
function $IsValid'$1_account_AccountPermission_KeyRotation'(s: $1_account_AccountPermission): bool {
    true
}
function $IsValid'$1_account_AccountPermission_Offering'(s: $1_account_AccountPermission): bool {
    true
}
function $IsValid'$1_account_AccountPermission'(s: $1_account_AccountPermission): bool {
    true
}
function {:inline} $IsEqual'$1_account_AccountPermission'(s1: $1_account_AccountPermission, s2: $1_account_AccountPermission): bool {
    s1 == s2
}

// struct account::CapabilityOffer<0x1::account::RotationCapability> at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:86:5+68
datatype $1_account_CapabilityOffer'$1_account_RotationCapability' {
    $1_account_CapabilityOffer'$1_account_RotationCapability'($for: $1_option_Option'address')
}
function {:inline} $Update'$1_account_CapabilityOffer'$1_account_RotationCapability''_for(s: $1_account_CapabilityOffer'$1_account_RotationCapability', x: $1_option_Option'address'): $1_account_CapabilityOffer'$1_account_RotationCapability' {
    $1_account_CapabilityOffer'$1_account_RotationCapability'(x)
}
function $IsValid'$1_account_CapabilityOffer'$1_account_RotationCapability''(s: $1_account_CapabilityOffer'$1_account_RotationCapability'): bool {
    $IsValid'$1_option_Option'address''(s->$for)
}
function {:inline} $IsEqual'$1_account_CapabilityOffer'$1_account_RotationCapability''(s1: $1_account_CapabilityOffer'$1_account_RotationCapability', s2: $1_account_CapabilityOffer'$1_account_RotationCapability'): bool {
    $IsEqual'$1_option_Option'address''(s1->$for, s2->$for)}

// struct account::CapabilityOffer<0x1::account::SignerCapability> at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:86:5+68
datatype $1_account_CapabilityOffer'$1_account_SignerCapability' {
    $1_account_CapabilityOffer'$1_account_SignerCapability'($for: $1_option_Option'address')
}
function {:inline} $Update'$1_account_CapabilityOffer'$1_account_SignerCapability''_for(s: $1_account_CapabilityOffer'$1_account_SignerCapability', x: $1_option_Option'address'): $1_account_CapabilityOffer'$1_account_SignerCapability' {
    $1_account_CapabilityOffer'$1_account_SignerCapability'(x)
}
function $IsValid'$1_account_CapabilityOffer'$1_account_SignerCapability''(s: $1_account_CapabilityOffer'$1_account_SignerCapability'): bool {
    $IsValid'$1_option_Option'address''(s->$for)
}
function {:inline} $IsEqual'$1_account_CapabilityOffer'$1_account_SignerCapability''(s1: $1_account_CapabilityOffer'$1_account_SignerCapability', s2: $1_account_CapabilityOffer'$1_account_SignerCapability'): bool {
    $IsEqual'$1_option_Option'address''(s1->$for, s2->$for)}

// struct account::CoinRegister at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:81:5+101
datatype $1_account_CoinRegister {
    $1_account_CoinRegister($account: int, $type_info: $1_type_info_TypeInfo)
}
function {:inline} $Update'$1_account_CoinRegister'_account(s: $1_account_CoinRegister, x: int): $1_account_CoinRegister {
    $1_account_CoinRegister(x, s->$type_info)
}
function {:inline} $Update'$1_account_CoinRegister'_type_info(s: $1_account_CoinRegister, x: $1_type_info_TypeInfo): $1_account_CoinRegister {
    $1_account_CoinRegister(s->$account, x)
}
function $IsValid'$1_account_CoinRegister'(s: $1_account_CoinRegister): bool {
    $IsValid'address'(s->$account)
      && $IsValid'$1_type_info_TypeInfo'(s->$type_info)
}
function {:inline} $IsEqual'$1_account_CoinRegister'(s1: $1_account_CoinRegister, s2: $1_account_CoinRegister): bool {
    $IsEqual'address'(s1->$account, s2->$account)
    && $IsEqual'$1_type_info_TypeInfo'(s1->$type_info, s2->$type_info)}

// struct account::CoinRegisterEvent at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:76:5+79
datatype $1_account_CoinRegisterEvent {
    $1_account_CoinRegisterEvent($type_info: $1_type_info_TypeInfo)
}
function {:inline} $Update'$1_account_CoinRegisterEvent'_type_info(s: $1_account_CoinRegisterEvent, x: $1_type_info_TypeInfo): $1_account_CoinRegisterEvent {
    $1_account_CoinRegisterEvent(x)
}
function $IsValid'$1_account_CoinRegisterEvent'(s: $1_account_CoinRegisterEvent): bool {
    $IsValid'$1_type_info_TypeInfo'(s->$type_info)
}
function {:inline} $IsEqual'$1_account_CoinRegisterEvent'(s1: $1_account_CoinRegisterEvent, s2: $1_account_CoinRegisterEvent): bool {
    $IsEqual'$1_type_info_TypeInfo'(s1->$type_info, s2->$type_info)}

// struct account::KeyRotationEvent at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:71:5+138
datatype $1_account_KeyRotationEvent {
    $1_account_KeyRotationEvent($old_authentication_key: Vec (int), $new_authentication_key: Vec (int))
}
function {:inline} $Update'$1_account_KeyRotationEvent'_old_authentication_key(s: $1_account_KeyRotationEvent, x: Vec (int)): $1_account_KeyRotationEvent {
    $1_account_KeyRotationEvent(x, s->$new_authentication_key)
}
function {:inline} $Update'$1_account_KeyRotationEvent'_new_authentication_key(s: $1_account_KeyRotationEvent, x: Vec (int)): $1_account_KeyRotationEvent {
    $1_account_KeyRotationEvent(s->$old_authentication_key, x)
}
function $IsValid'$1_account_KeyRotationEvent'(s: $1_account_KeyRotationEvent): bool {
    $IsValid'vec'u8''(s->$old_authentication_key)
      && $IsValid'vec'u8''(s->$new_authentication_key)
}
function {:inline} $IsEqual'$1_account_KeyRotationEvent'(s1: $1_account_KeyRotationEvent, s2: $1_account_KeyRotationEvent): bool {
    $IsEqual'vec'u8''(s1->$old_authentication_key, s2->$old_authentication_key)
    && $IsEqual'vec'u8''(s1->$new_authentication_key, s2->$new_authentication_key)}

// struct account::RotationCapability at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:88:5+62
datatype $1_account_RotationCapability {
    $1_account_RotationCapability($account: int)
}
function {:inline} $Update'$1_account_RotationCapability'_account(s: $1_account_RotationCapability, x: int): $1_account_RotationCapability {
    $1_account_RotationCapability(x)
}
function $IsValid'$1_account_RotationCapability'(s: $1_account_RotationCapability): bool {
    $IsValid'address'(s->$account)
}
function {:inline} $IsEqual'$1_account_RotationCapability'(s1: $1_account_RotationCapability, s2: $1_account_RotationCapability): bool {
    s1 == s2
}

// struct account::SignerCapability at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:90:5+60
datatype $1_account_SignerCapability {
    $1_account_SignerCapability($account: int)
}
function {:inline} $Update'$1_account_SignerCapability'_account(s: $1_account_SignerCapability, x: int): $1_account_SignerCapability {
    $1_account_SignerCapability(x)
}
function $IsValid'$1_account_SignerCapability'(s: $1_account_SignerCapability): bool {
    $IsValid'address'(s->$account)
}
function {:inline} $IsEqual'$1_account_SignerCapability'(s1: $1_account_SignerCapability, s2: $1_account_SignerCapability): bool {
    s1 == s2
}

// fun account::new_event_handle<0x1::coin::DepositEvent> [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1205:5+159
procedure {:inline 1} $1_account_new_event_handle'$1_coin_DepositEvent'(_$t0: $signer) returns ($ret0: $1_event_EventHandle'$1_coin_DepositEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_account_Account;
    var $t3: int;
    var $t4: int;
    var $t5: $1_account_Account;
    var $t6: $1_guid_GUID;
    var $t7: int;
    var $t8: $1_event_EventHandle'$1_coin_DepositEvent';
    var $t0: $signer;
    var $temp_0'$1_event_EventHandle'$1_coin_DepositEvent'': $1_event_EventHandle'$1_coin_DepositEvent';
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t1, signer::$address_of($t0)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.spec.move:656:9+39
    assume {:print "$at(98,33357,33396)"} true;
    assume ($t1 == $1_signer_$address_of($t0));

    // assume Identical($t2, global<0x1::account::Account>($t1)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.spec.move:657:9+36
    assume {:print "$at(98,33406,33442)"} true;
    assume ($t2 == $ResourceValue($1_account_Account_$memory, $t1));

    // trace_local[account]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1205:5+1
    assume {:print "$at(97,63259,63260)"} true;
    assume {:print "$track_local(39,0,0):", $t0} $t0 == $t0;

    // assume Identical($t3, signer::$address_of($t0)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.spec.move:640:9+46
    assume {:print "$at(98,32708,32754)"} true;
    assume ($t3 == $1_signer_$address_of($t0));

    // assume Identical($t4, signer::$address_of($t0)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.spec.move:656:9+39
    assume {:print "$at(98,33357,33396)"} true;
    assume ($t4 == $1_signer_$address_of($t0));

    // assume Identical($t5, global<0x1::account::Account>($t4)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.spec.move:657:9+36
    assume {:print "$at(98,33406,33442)"} true;
    assume ($t5 == $ResourceValue($1_account_Account_$memory, $t4));

    // $t6 := account::create_guid($t0) on_abort goto L2 with $t7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1206:33+20
    assume {:print "$at(97,63390,63410)"} true;
    call $t6 := $1_account_create_guid($t0);
    if ($abort_flag) {
        assume {:print "$at(97,63390,63410)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(39,0):", $t7} $t7 == $t7;
        goto L2;
    }

    // $t8 := event::new_event_handle<#0>($t6) on_abort goto L2 with $t7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1206:9+45
    call $t8 := $1_event_new_event_handle'$1_coin_DepositEvent'($t6);
    if ($abort_flag) {
        assume {:print "$at(97,63366,63411)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(39,0):", $t7} $t7 == $t7;
        goto L2;
    }

    // trace_return[0]($t8) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1206:9+45
    assume {:print "$track_return(39,0,0):", $t8} $t8 == $t8;

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1207:5+1
    assume {:print "$at(97,63417,63418)"} true;
L1:

    // return $t8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1207:5+1
    assume {:print "$at(97,63417,63418)"} true;
    $ret0 := $t8;
    return;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1207:5+1
L2:

    // abort($t7) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1207:5+1
    assume {:print "$at(97,63417,63418)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// fun account::new_event_handle<0x1::coin::WithdrawEvent> [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1205:5+159
procedure {:inline 1} $1_account_new_event_handle'$1_coin_WithdrawEvent'(_$t0: $signer) returns ($ret0: $1_event_EventHandle'$1_coin_WithdrawEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_account_Account;
    var $t3: int;
    var $t4: int;
    var $t5: $1_account_Account;
    var $t6: $1_guid_GUID;
    var $t7: int;
    var $t8: $1_event_EventHandle'$1_coin_WithdrawEvent';
    var $t0: $signer;
    var $temp_0'$1_event_EventHandle'$1_coin_WithdrawEvent'': $1_event_EventHandle'$1_coin_WithdrawEvent';
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t1, signer::$address_of($t0)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.spec.move:656:9+39
    assume {:print "$at(98,33357,33396)"} true;
    assume ($t1 == $1_signer_$address_of($t0));

    // assume Identical($t2, global<0x1::account::Account>($t1)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.spec.move:657:9+36
    assume {:print "$at(98,33406,33442)"} true;
    assume ($t2 == $ResourceValue($1_account_Account_$memory, $t1));

    // trace_local[account]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1205:5+1
    assume {:print "$at(97,63259,63260)"} true;
    assume {:print "$track_local(39,0,0):", $t0} $t0 == $t0;

    // assume Identical($t3, signer::$address_of($t0)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.spec.move:640:9+46
    assume {:print "$at(98,32708,32754)"} true;
    assume ($t3 == $1_signer_$address_of($t0));

    // assume Identical($t4, signer::$address_of($t0)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.spec.move:656:9+39
    assume {:print "$at(98,33357,33396)"} true;
    assume ($t4 == $1_signer_$address_of($t0));

    // assume Identical($t5, global<0x1::account::Account>($t4)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.spec.move:657:9+36
    assume {:print "$at(98,33406,33442)"} true;
    assume ($t5 == $ResourceValue($1_account_Account_$memory, $t4));

    // $t6 := account::create_guid($t0) on_abort goto L2 with $t7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1206:33+20
    assume {:print "$at(97,63390,63410)"} true;
    call $t6 := $1_account_create_guid($t0);
    if ($abort_flag) {
        assume {:print "$at(97,63390,63410)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(39,0):", $t7} $t7 == $t7;
        goto L2;
    }

    // $t8 := event::new_event_handle<#0>($t6) on_abort goto L2 with $t7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1206:9+45
    call $t8 := $1_event_new_event_handle'$1_coin_WithdrawEvent'($t6);
    if ($abort_flag) {
        assume {:print "$at(97,63366,63411)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(39,0):", $t7} $t7 == $t7;
        goto L2;
    }

    // trace_return[0]($t8) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1206:9+45
    assume {:print "$track_return(39,0,0):", $t8} $t8 == $t8;

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1207:5+1
    assume {:print "$at(97,63417,63418)"} true;
L1:

    // return $t8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1207:5+1
    assume {:print "$at(97,63417,63418)"} true;
    $ret0 := $t8;
    return;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1207:5+1
L2:

    // abort($t7) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1207:5+1
    assume {:print "$at(97,63417,63418)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// fun account::create_account_if_does_not_exist [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:276:5+427
procedure {:inline 1} $1_account_create_account_if_does_not_exist(_$t0: int) returns ()
{
    // declare local variables
    var $t1: bool;
    var $t2: bool;
    var $t3: Vec (int);
    var $t4: bool;
    var $t5: int;
    var $t6: bool;
    var $t7: int;
    var $t8: bool;
    var $t9: int;
    var $t10: bool;
    var $t11: Vec (int);
    var $t12: $signer;
    var $t13: bool;
    var $t14: int;
    var $t15: int;
    var $t16: int;
    var $t17: bool;
    var $t18: bool;
    var $t0: int;
    var $1_account_Account_$modifies: [int]bool;
    var $temp_0'$1_account_Account': $1_account_Account;
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t3, bcs::$to_bytes<address>($t0)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.spec.move:122:9+56
    assume {:print "$at(98,7292,7348)"} true;
    assume ($t3 == $1_bcs_$to_bytes'address'($t0));

    // trace_local[account_address]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:276:5+1
    assume {:print "$at(97,14179,14180)"} true;
    assume {:print "$track_local(39,4,0):", $t0} $t0 == $t0;

    // $t4 := exists<0x1::account::Account>($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:360:9+21
    assume {:print "$at(97,18118,18139)"} true;
    $t4 := $ResourceExists($1_account_Account_$memory, $t0);

    // if ($t4) goto L1 else goto L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:277:13+36
    assume {:print "$at(97,14264,14300)"} true;
    if ($t4) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:277:9+339
L1:

    // goto L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:277:9+339
    assume {:print "$at(97,14260,14599)"} true;
    goto L2;

    // label L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:279:17+15
    assume {:print "$at(97,14343,14358)"} true;
L0:

    // $t5 := 0x0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:279:36+12
    assume {:print "$at(97,14362,14374)"} true;
    $t5 := 0;
    assume $IsValid'address'($t5);

    // $t6 := !=($t0, $t5) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:279:17+31
    $t6 := !$IsEqual'address'($t0, $t5);

    // if ($t6) goto L4 else goto L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:279:17+70
    if ($t6) { goto L4; } else { goto L3; }

    // label L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:279:52+15
L4:

    // $t7 := 0x1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:279:71+16
    assume {:print "$at(97,14397,14413)"} true;
    $t7 := 1;
    assume $IsValid'address'($t7);

    // $t8 := !=($t0, $t7) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:279:52+35
    $t8 := !$IsEqual'address'($t0, $t7);

    // $t1 := $t8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:279:52+35
    $t1 := $t8;

    // trace_local[$t2]($t8) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:279:52+35
    assume {:print "$track_local(39,4,1):", $t8} $t8 == $t8;

    // label L10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:279:17+105
L10:

    // if ($t1) goto L6 else goto L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:279:17+105
    assume {:print "$at(97,14343,14448)"} true;
    if ($t1) { goto L6; } else { goto L5; }

    // label L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:279:91+15
L6:

    // $t9 := 0x3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:279:110+12
    assume {:print "$at(97,14436,14448)"} true;
    $t9 := 3;
    assume $IsValid'address'($t9);

    // $t10 := !=($t0, $t9) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:279:91+31
    $t10 := !$IsEqual'address'($t0, $t9);

    // $t2 := $t10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:279:91+31
    $t2 := $t10;

    // trace_local[$t4]($t10) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:279:91+31
    assume {:print "$track_local(39,4,2):", $t10} $t10 == $t10;

    // label L9 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:278:13+6
    assume {:print "$at(97,14317,14323)"} true;
L9:

    // if ($t2) goto L8 else goto L7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:278:13+6
    assume {:print "$at(97,14317,14323)"} true;
    if ($t2) { goto L8; } else { goto L7; }

    // label L8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:282:13+41
    assume {:print "$at(97,14546,14587)"} true;
L8:

    // assume Identical($t11, bcs::$to_bytes<address>($t0)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.spec.move:170:9+45
    assume {:print "$at(98,9261,9306)"} true;
    assume ($t11 == $1_bcs_$to_bytes'address'($t0));

    // $t12 := opaque begin: account::create_account_unchecked($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:282:13+41
    assume {:print "$at(97,14546,14587)"} true;

    // assume Identical($t13, Or(Neq<num>(Len<u8>($t11), 32), exists<0x1::account::Account>($t0))) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:282:13+41
    assume ($t13 == (!$IsEqual'num'(LenVec($t11), 32) || $ResourceExists($1_account_Account_$memory, $t0)));

    // if ($t13) goto L14 else goto L13 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:282:13+41
    if ($t13) { goto L14; } else { goto L13; }

    // label L14 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:282:13+41
L14:

    // trace_abort($t14) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:282:13+41
    assume {:print "$at(97,14546,14587)"} true;
    assume {:print "$track_abort(39,4):", $t14} $t14 == $t14;

    // goto L12 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:282:13+41
    goto L12;

    // label L13 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:282:13+41
L13:

    // modifies global<0x1::account::Account>($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:282:13+41
    assume {:print "$at(97,14546,14587)"} true;
    havoc $temp_0'bool';
    if ($temp_0'bool') {
        havoc $temp_0'$1_account_Account';
        $1_account_Account_$memory := $ResourceUpdate($1_account_Account_$memory, $t0, $temp_0'$1_account_Account');
    } else {
        $1_account_Account_$memory := $ResourceRemove($1_account_Account_$memory, $t0);
    }

    // assume WellFormed($t12) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:282:13+41
    assume $IsValid'signer'($t12) && $1_signer_is_txn_signer($t12) && $1_signer_is_txn_signer_addr($t12->$addr);

    // assume Eq<num>(Len<u8>($t11), 32) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:282:13+41
    assume $IsEqual'num'(LenVec($t11), 32);

    // assume Eq<address>(signer::$address_of($t12), $t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:282:13+41
    assume $IsEqual'address'($1_signer_$address_of($t12), $t0);

    // assume exists<0x1::account::Account>($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:282:13+41
    assume $ResourceExists($1_account_Account_$memory, $t0);

    // $t12 := opaque end: account::create_account_unchecked($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:282:13+41

    // drop($t12) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:282:13+41

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:277:9+339
    assume {:print "$at(97,14260,14599)"} true;
L2:

    // goto L11 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:277:9+339
    assume {:print "$at(97,14260,14599)"} true;
    goto L11;

    // label L7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:280:41+24
    assume {:print "$at(97,14491,14515)"} true;
L7:

    // $t15 := 5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:280:41+24
    assume {:print "$at(97,14491,14515)"} true;
    $t15 := 5;
    assume $IsValid'u64'($t15);

    // $t16 := error::invalid_argument($t15) on_abort goto L12 with $t14 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:280:17+49
    call $t16 := $1_error_invalid_argument($t15);
    if ($abort_flag) {
        assume {:print "$at(97,14467,14516)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(39,4):", $t14} $t14 == $t14;
        goto L12;
    }

    // trace_abort($t16) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:278:13+6
    assume {:print "$at(97,14317,14323)"} true;
    assume {:print "$track_abort(39,4):", $t16} $t16 == $t16;

    // $t14 := move($t16) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:278:13+6
    $t14 := $t16;

    // goto L12 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:278:13+6
    goto L12;

    // label L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:279:17+105
    assume {:print "$at(97,14343,14448)"} true;
L5:

    // $t17 := false at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:279:17+105
    assume {:print "$at(97,14343,14448)"} true;
    $t17 := false;
    assume $IsValid'bool'($t17);

    // $t2 := $t17 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:279:17+105
    $t2 := $t17;

    // trace_local[$t4]($t17) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:279:17+105
    assume {:print "$track_local(39,4,2):", $t17} $t17 == $t17;

    // goto L9 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:279:17+105
    goto L9;

    // label L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:279:17+70
L3:

    // $t18 := false at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:279:17+70
    assume {:print "$at(97,14343,14413)"} true;
    $t18 := false;
    assume $IsValid'bool'($t18);

    // $t1 := $t18 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:279:17+70
    $t1 := $t18;

    // trace_local[$t2]($t18) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:279:17+70
    assume {:print "$track_local(39,4,1):", $t18} $t18 == $t18;

    // goto L10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:279:17+70
    goto L10;

    // label L11 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:284:5+1
    assume {:print "$at(97,14605,14606)"} true;
L11:

    // return () at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:284:5+1
    assume {:print "$at(97,14605,14606)"} true;
    return;

    // label L12 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:284:5+1
L12:

    // abort($t14) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:284:5+1
    assume {:print "$at(97,14605,14606)"} true;
    $abort_code := $t14;
    $abort_flag := true;
    return;

}

// fun account::create_guid [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1189:5+470
procedure {:inline 1} $1_account_create_guid(_$t0: $signer) returns ($ret0: $1_guid_GUID)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: $Mutation ($1_account_Account);
    var $t4: $1_guid_GUID;
    var $t5: int;
    var $t6: int;
    var $t7: $1_account_Account;
    var $t8: int;
    var $t9: int;
    var $t10: bool;
    var $t11: Vec (int);
    var $t12: $Mutation ($1_account_Account);
    var $t13: $Mutation (int);
    var $t14: $1_guid_GUID;
    var $t15: int;
    var $t16: int;
    var $t17: bool;
    var $t18: int;
    var $t19: int;
    var $t20: bool;
    var $t21: int;
    var $t22: int;
    var $t0: $signer;
    var $1_account_Account_$modifies: [int]bool;
    var $temp_0'$1_account_Account': $1_account_Account;
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t5, signer::$address_of($t0)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.spec.move:640:9+46
    assume {:print "$at(98,32708,32754)"} true;
    assume ($t5 == $1_signer_$address_of($t0));

    // assume Identical($t6, signer::$address_of($t0)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.spec.move:656:9+39
    assume {:print "$at(98,33357,33396)"} true;
    assume ($t6 == $1_signer_$address_of($t0));

    // assume Identical($t7, global<0x1::account::Account>($t6)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.spec.move:657:9+36
    assume {:print "$at(98,33406,33442)"} true;
    assume ($t7 == $ResourceValue($1_account_Account_$memory, $t6));

    // trace_local[account_signer]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1189:5+1
    assume {:print "$at(97,62559,62560)"} true;
    assume {:print "$track_local(39,8,0):", $t0} $t0 == $t0;

    // $t8 := signer::address_of($t0) on_abort goto L8 with $t9 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1190:20+34
    assume {:print "$at(97,62658,62692)"} true;
    call $t8 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(97,62658,62692)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(39,8):", $t9} $t9 == $t9;
        goto L8;
    }

    // trace_local[addr]($t8) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1190:20+34
    assume {:print "$track_local(39,8,1):", $t8} $t8 == $t8;

    // trace_local[addr]($t8) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:404:16+22
    assume {:print "$at(97,19714,19736)"} true;
    assume {:print "$track_local(39,8,2):", $t8} $t8 == $t8;

    // $t10 := opaque begin: features::is_default_account_resource_enabled() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:405:13+47
    assume {:print "$at(97,19783,19830)"} true;

    // assume WellFormed($t10) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:405:13+47
    assume $IsValid'bool'($t10);

    // assume Eq<bool>($t10, features::spec_is_enabled(91)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:405:13+47
    assume $IsEqual'bool'($t10, $1_features_spec_is_enabled(91));

    // $t10 := opaque end: features::is_default_account_resource_enabled() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:405:13+47

    // if ($t10) goto L1 else goto L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:405:9+218
    if ($t10) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:406:13+38
    assume {:print "$at(97,19847,19885)"} true;
L1:

    // assume Identical($t11, bcs::$to_bytes<address>($t8)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.spec.move:122:9+56
    assume {:print "$at(98,7292,7348)"} true;
    assume ($t11 == $1_bcs_$to_bytes'address'($t8));

    // account::create_account_if_does_not_exist($t8) on_abort goto L8 with $t9 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:406:13+38
    assume {:print "$at(97,19847,19885)"} true;
    call $1_account_create_account_if_does_not_exist($t8);
    if ($abort_flag) {
        assume {:print "$at(97,19847,19885)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(39,8):", $t9} $t9 == $t9;
        goto L8;
    }

    // label L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1192:23+18
    assume {:print "$at(97,62756,62774)"} true;
L6:

    // $t12 := borrow_global<0x1::account::Account>($t8) on_abort goto L8 with $t9 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1192:23+18
    assume {:print "$at(97,62756,62774)"} true;
    if (!$ResourceExists($1_account_Account_$memory, $t8)) {
        call $ExecFailureAbort();
    } else {
        $t12 := $Mutation($Global($t8), EmptyVec(), $ResourceValue($1_account_Account_$memory, $t8));
    }
    if ($abort_flag) {
        assume {:print "$at(97,62756,62774)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(39,8):", $t9} $t9 == $t9;
        goto L8;
    }

    // trace_local[account]($t12) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1192:23+18
    $temp_0'$1_account_Account' := $Dereference($t12);
    assume {:print "$track_local(39,8,3):", $temp_0'$1_account_Account'} $temp_0'$1_account_Account' == $temp_0'$1_account_Account';

    // $t13 := borrow_field<0x1::account::Account>.guid_creation_num($t12) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1193:39+30
    assume {:print "$at(97,62815,62845)"} true;
    $t13 := $ChildMutation($t12, 2, $Dereference($t12)->$guid_creation_num);

    // $t14 := guid::create($t8, $t13) on_abort goto L8 with $t9 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1193:20+50
    call $t14,$t13 := $1_guid_create($t8, $t13);
    if ($abort_flag) {
        assume {:print "$at(97,62796,62846)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(39,8):", $t9} $t9 == $t9;
        goto L8;
    }

    // write_back[Reference($t12).guid_creation_num (u64)]($t13) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1193:20+50
    $t12 := $UpdateMutation($t12, $Update'$1_account_Account'_guid_creation_num($Dereference($t12), $Dereference($t13)));

    // trace_local[guid]($t14) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1193:20+50
    assume {:print "$track_local(39,8,4):", $t14} $t14 == $t14;

    // $t15 := get_field<0x1::account::Account>.guid_creation_num($t12) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1195:13+25
    assume {:print "$at(97,62879,62904)"} true;
    $t15 := $Dereference($t12)->$guid_creation_num;

    // pack_ref_deep($t12) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1195:13+25

    // write_back[0x1::account::Account@]($t12) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1195:13+25
    $1_account_Account_$memory := $ResourceUpdate($1_account_Account_$memory, $GlobalLocationAddress($t12),
        $Dereference($t12));

    // $t16 := 1125899906842624 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1195:41+21
    $t16 := 1125899906842624;
    assume $IsValid'u64'($t16);

    // $t17 := <($t15, $t16) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1195:13+49
    call $t17 := $Lt($t15, $t16);

    // if ($t17) goto L3 else goto L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1194:9+6
    assume {:print "$at(97,62857,62863)"} true;
    if ($t17) { goto L3; } else { goto L2; }

    // label L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1198:9+4
    assume {:print "$at(97,63018,63022)"} true;
L3:

    // trace_return[0]($t14) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1189:82+393
    assume {:print "$at(97,62636,63029)"} true;
    assume {:print "$track_return(39,8,0):", $t14} $t14 == $t14;

    // goto L7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1189:82+393
    goto L7;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1196:33+31
    assume {:print "$at(97,62963,62994)"} true;
L2:

    // $t18 := 20 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1196:33+31
    assume {:print "$at(97,62963,62994)"} true;
    $t18 := 20;
    assume $IsValid'u64'($t18);

    // $t19 := error::out_of_range($t18) on_abort goto L8 with $t9 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1196:13+52
    call $t19 := $1_error_out_of_range($t18);
    if ($abort_flag) {
        assume {:print "$at(97,62943,62995)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(39,8):", $t9} $t9 == $t9;
        goto L8;
    }

    // trace_abort($t19) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1194:9+6
    assume {:print "$at(97,62857,62863)"} true;
    assume {:print "$track_abort(39,8):", $t19} $t19 == $t19;

    // $t9 := move($t19) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1194:9+6
    $t9 := $t19;

    // goto L8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1194:9+6
    goto L8;

    // label L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:408:21+15
    assume {:print "$at(97,19926,19941)"} true;
L0:

    // $t20 := opaque begin: account::exists_at($t8) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:408:21+15
    assume {:print "$at(97,19926,19941)"} true;

    // assume WellFormed($t20) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:408:21+15
    assume $IsValid'bool'($t20);

    // assume Eq<bool>($t20, account::spec_exists_at($t8)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:408:21+15
    assume $IsEqual'bool'($t20, $1_account_spec_exists_at($1_account_Account_$memory, $t8));

    // $t20 := opaque end: account::exists_at($t8) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:408:21+15

    // if ($t20) goto L5 else goto L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:408:13+6
    if ($t20) { goto L5; } else { goto L4; }

    // label L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:408:13+6
L5:

    // goto L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:408:13+6
    assume {:print "$at(97,19918,19924)"} true;
    goto L6;

    // label L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:408:55+23
L4:

    // $t21 := 2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:408:55+23
    assume {:print "$at(97,19960,19983)"} true;
    $t21 := 2;
    assume $IsValid'u64'($t21);

    // $t22 := error::not_found($t21) on_abort goto L8 with $t9 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:408:38+41
    call $t22 := $1_error_not_found($t21);
    if ($abort_flag) {
        assume {:print "$at(97,19943,19984)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(39,8):", $t9} $t9 == $t9;
        goto L8;
    }

    // trace_abort($t22) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:408:13+6
    assume {:print "$at(97,19918,19924)"} true;
    assume {:print "$track_abort(39,8):", $t22} $t22 == $t22;

    // $t9 := move($t22) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:408:13+6
    $t9 := $t22;

    // goto L8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:408:13+6
    goto L8;

    // label L7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1199:5+1
    assume {:print "$at(97,63028,63029)"} true;
L7:

    // return $t14 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1199:5+1
    assume {:print "$at(97,63028,63029)"} true;
    $ret0 := $t14;
    return;

    // label L8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1199:5+1
L8:

    // abort($t9) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1199:5+1
    assume {:print "$at(97,63028,63029)"} true;
    $abort_code := $t9;
    $abort_flag := true;
    return;

}

// fun account::create_resource_account [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1125:5+1449
procedure {:inline 1} $1_account_create_resource_account(_$t0: $signer, _$t1: Vec (int)) returns ($ret0: $signer, $ret1: $1_account_SignerCapability)
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: $signer;
    var $t5: $Mutation ($1_account_Account);
    var $t6: $1_account_SignerCapability;
    var $t7: $signer;
    var $t8: int;
    var $t9: int;
    var $t10: $1_account_Account;
    var $t11: Vec (int);
    var $t12: int;
    var $t13: int;
    var $t14: int;
    var $t15: bool;
    var $t16: bool;
    var $t17: $1_account_Account;
    var $t18: $1_account_CapabilityOffer'$1_account_SignerCapability';
    var $t19: $1_option_Option'address';
    var $t20: bool;
    var $t21: int;
    var $t22: int;
    var $t23: bool;
    var $t24: $signer;
    var $t25: Vec (int);
    var $t26: int;
    var $t27: $Mutation ($1_account_Account);
    var $t28: $1_option_Option'address';
    var $t29: $Mutation ($1_account_CapabilityOffer'$1_account_SignerCapability');
    var $t30: $Mutation ($1_option_Option'address');
    var $t31: $1_account_SignerCapability;
    var $t32: int;
    var $t33: int;
    var $t34: int;
    var $t35: int;
    var $t36: Vec (int);
    var $t37: $signer;
    var $t38: bool;
    var $t0: $signer;
    var $t1: Vec (int);
    var $temp_0'$1_account_Account': $1_account_Account;
    var $temp_0'$1_account_SignerCapability': $1_account_SignerCapability;
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    var $temp_0'signer': $signer;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t8, signer::$address_of($t0)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.spec.move:601:9+45
    assume {:print "$at(98,30975,31020)"} true;
    assume ($t8 == $1_signer_$address_of($t0));

    // assume Identical($t9, account::spec_create_resource_address($t8, $t1)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.spec.move:602:9+68
    assume {:print "$at(98,31030,31098)"} true;
    assume ($t9 == $1_account_spec_create_resource_address($t8, $t1));

    // assume Identical($t10, global<0x1::account::Account>($t9)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.spec.move:676:9+45
    assume {:print "$at(98,34131,34176)"} true;
    assume ($t10 == $ResourceValue($1_account_Account_$memory, $t9));

    // assume Identical($t11, bcs::$to_bytes<address>($t9)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.spec.move:170:9+45
    assume {:print "$at(98,9261,9306)"} true;
    assume ($t11 == $1_bcs_$to_bytes'address'($t9));

    // trace_local[source]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1125:5+1
    assume {:print "$at(97,59644,59645)"} true;
    assume {:print "$track_local(39,9,0):", $t0} $t0 == $t0;

    // trace_local[seed]($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1125:5+1
    assume {:print "$track_local(39,9,1):", $t1} $t1 == $t1;

    // $t12 := signer::address_of($t0) on_abort goto L11 with $t13 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1126:54+26
    assume {:print "$at(97,59815,59841)"} true;
    call $t12 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(97,59815,59841)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(39,9):", $t13} $t13 == $t13;
        goto L11;
    }

    // trace_local[$t6]($t12) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1126:54+26
    assume {:print "$track_local(39,9,2):", $t12} $t12 == $t12;

    // $t14 := opaque begin: account::create_resource_address($t12, $t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1126:29+58

    // assume WellFormed($t14) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1126:29+58
    assume $IsValid'address'($t14);

    // assume Eq<address>($t14, account::spec_create_resource_address($t12, $t1)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1126:29+58
    assume $IsEqual'address'($t14, $1_account_spec_create_resource_address($t12, $t1));

    // assume Neq<address>($t12, $t14) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1126:29+58
    assume !$IsEqual'address'($t12, $t14);

    // $t14 := opaque end: account::create_resource_address($t12, $t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1126:29+58

    // trace_local[resource_addr]($t14) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1126:29+58
    assume {:print "$track_local(39,9,3):", $t14} $t14 == $t14;

    // $t15 := opaque begin: account::exists_at($t14) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1127:28+24
    assume {:print "$at(97,59878,59902)"} true;

    // assume WellFormed($t15) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1127:28+24
    assume $IsValid'bool'($t15);

    // assume Eq<bool>($t15, account::spec_exists_at($t14)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1127:28+24
    assume $IsEqual'bool'($t15, $1_account_spec_exists_at($1_account_Account_$memory, $t14));

    // $t15 := opaque end: account::exists_at($t14) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1127:28+24

    // if ($t15) goto L1 else goto L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1127:24+604
    if ($t15) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:359:16+18
    assume {:print "$at(97,18067,18085)"} true;
L1:

    // $t16 := exists<0x1::account::Account>($t14) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:360:9+21
    assume {:print "$at(97,18118,18139)"} true;
    $t16 := $ResourceExists($1_account_Account_$memory, $t14);

    // if ($t16) goto L2 else goto L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1128:13+276
    assume {:print "$at(97,59919,60195)"} true;
    if ($t16) { goto L2; } else { goto L4; }

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1129:27+23
    assume {:print "$at(97,59987,60010)"} true;
L2:

    // $t17 := get_global<0x1::account::Account>($t14) on_abort goto L11 with $t13 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1129:27+23
    assume {:print "$at(97,59987,60010)"} true;
    if (!$ResourceExists($1_account_Account_$memory, $t14)) {
        call $ExecFailureAbort();
    } else {
        $t17 := $ResourceValue($1_account_Account_$memory, $t14);
    }
    if ($abort_flag) {
        assume {:print "$at(97,59987,60010)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(39,9):", $t13} $t13 == $t13;
        goto L11;
    }

    // $t18 := get_field<0x1::account::Account>.signer_capability_offer($t17) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1131:17+31
    assume {:print "$at(97,60051,60082)"} true;
    $t18 := $t17->$signer_capability_offer;

    // $t19 := get_field<0x1::account::CapabilityOffer<0x1::account::SignerCapability>>.for($t18) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1131:17+45
    $t19 := $t18->$for;

    // $t20 := opaque begin: option::is_none<address>($t19) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1131:17+45

    // assume WellFormed($t20) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1131:17+45
    assume $IsValid'bool'($t20);

    // assume Eq<bool>($t20, option::spec_is_none<address>($t19)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1131:17+45
    assume $IsEqual'bool'($t20, $1_option_spec_is_none'address'($t19));

    // $t20 := opaque end: option::is_none<address>($t19) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1131:17+45

    // if ($t20) goto L6 else goto L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1130:13+6
    assume {:print "$at(97,60025,60031)"} true;
    if ($t20) { goto L6; } else { goto L5; }

    // label L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1130:13+6
L6:

    // label L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1136:17+34
    assume {:print "$at(97,60236,60270)"} true;
L4:

    // $t21 := account::get_sequence_number($t14) on_abort goto L11 with $t13 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1136:17+34
    assume {:print "$at(97,60236,60270)"} true;
    call $t21 := $1_account_get_sequence_number($t14);
    if ($abort_flag) {
        assume {:print "$at(97,60236,60270)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(39,9):", $t13} $t13 == $t13;
        goto L11;
    }

    // $t22 := 0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1136:55+1
    $t22 := 0;
    assume $IsValid'u64'($t22);

    // $t23 := ==($t21, $t22) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1136:17+39
    $t23 := $IsEqual'u64'($t21, $t22);

    // if ($t23) goto L8 else goto L7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1135:13+6
    assume {:print "$at(97,60210,60216)"} true;
    if ($t23) { goto L8; } else { goto L7; }

    // label L8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1139:13+28
    assume {:print "$at(97,60368,60396)"} true;
L8:

    // $t24 := opaque begin: create_signer::create_signer($t14) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1139:13+28
    assume {:print "$at(97,60368,60396)"} true;

    // assume WellFormed($t24) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1139:13+28
    assume $IsValid'signer'($t24) && $1_signer_is_txn_signer($t24) && $1_signer_is_txn_signer_addr($t24->$addr);

    // assume Eq<address>(signer::$address_of($t24), $t14) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1139:13+28
    assume $IsEqual'address'($1_signer_$address_of($t24), $t14);

    // assume Eq<signer>($t24, create_signer::spec_create_signer($t14)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1139:13+28
    assume $IsEqual'signer'($t24, $1_create_signer_spec_create_signer($t14));

    // $t24 := opaque end: create_signer::create_signer($t14) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1139:13+28

    // $t4 := $t24 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1139:13+28
    $t4 := $t24;

    // trace_local[resource]($t24) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1139:13+28
    assume {:print "$track_local(39,9,4):", $t24} $t24 == $t24;

    // label L9 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1147:44+9
    assume {:print "$at(97,60827,60836)"} true;
L9:

    // $t25 := [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1147:55+13
    assume {:print "$at(97,60838,60851)"} true;
    $t25 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(0, 0, 0, 0), MakeVec4(0, 0, 0, 0)), MakeVec4(0, 0, 0, 0)), MakeVec4(0, 0, 0, 0)), MakeVec4(0, 0, 0, 0)), MakeVec4(0, 0, 0, 0)), MakeVec4(0, 0, 0, 0)), MakeVec4(0, 0, 0, 0));
    assume $IsValid'vec'u8''($t25);

    // assume Identical($t26, signer::$address_of($t4)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.spec.move:211:9+39
    assume {:print "$at(98,10888,10927)"} true;
    assume ($t26 == $1_signer_$address_of($t4));

    // account::rotate_authentication_key_internal($t4, $t25) on_abort goto L11 with $t13 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1147:9+60
    assume {:print "$at(97,60792,60852)"} true;
    call $1_account_rotate_authentication_key_internal($t4, $t25);
    if ($abort_flag) {
        assume {:print "$at(97,60792,60852)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(39,9):", $t13} $t13 == $t13;
        goto L11;
    }

    // $t27 := borrow_global<0x1::account::Account>($t14) on_abort goto L11 with $t13 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1149:23+27
    assume {:print "$at(97,60879,60906)"} true;
    if (!$ResourceExists($1_account_Account_$memory, $t14)) {
        call $ExecFailureAbort();
    } else {
        $t27 := $Mutation($Global($t14), EmptyVec(), $ResourceValue($1_account_Account_$memory, $t14));
    }
    if ($abort_flag) {
        assume {:print "$at(97,60879,60906)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(39,9):", $t13} $t13 == $t13;
        goto L11;
    }

    // trace_local[account]($t27) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1149:23+27
    $temp_0'$1_account_Account' := $Dereference($t27);
    assume {:print "$track_local(39,9,5):", $temp_0'$1_account_Account'} $temp_0'$1_account_Account' == $temp_0'$1_account_Account';

    // $t28 := opaque begin: option::some<address>($t14) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1150:47+27
    assume {:print "$at(97,60955,60982)"} true;

    // assume And(WellFormed($t28), Le(Len<address>(select option::Option.vec($t28)), 1)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1150:47+27
    assume ($IsValid'$1_option_Option'address''($t28) && (LenVec($t28->$vec) <= 1));

    // assume Eq<0x1::option::Option<address>>($t28, option::spec_some<address>($t14)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1150:47+27
    assume $IsEqual'$1_option_Option'address''($t28, $1_option_spec_some'address'($t14));

    // $t28 := opaque end: option::some<address>($t14) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1150:47+27

    // $t29 := borrow_field<0x1::account::Account>.signer_capability_offer($t27) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1150:9+31
    $t29 := $ChildMutation($t27, 6, $Dereference($t27)->$signer_capability_offer);

    // $t30 := borrow_field<0x1::account::CapabilityOffer<0x1::account::SignerCapability>>.for($t29) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1150:9+35
    $t30 := $ChildMutation($t29, 0, $Dereference($t29)->$for);

    // write_ref($t30, $t28) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1150:9+65
    $t30 := $UpdateMutation($t30, $t28);

    // write_back[Reference($t29).for (0x1::option::Option<address>)]($t30) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1150:9+65
    $t29 := $UpdateMutation($t29, $Update'$1_account_CapabilityOffer'$1_account_SignerCapability''_for($Dereference($t29), $Dereference($t30)));

    // write_back[Reference($t27).signer_capability_offer (0x1::account::CapabilityOffer<0x1::account::SignerCapability>)]($t29) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1150:9+65
    $t27 := $UpdateMutation($t27, $Update'$1_account_Account'_signer_capability_offer($Dereference($t27), $Dereference($t29)));

    // pack_ref_deep($t27) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1150:9+65

    // write_back[0x1::account::Account@]($t27) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1150:9+65
    $1_account_Account_$memory := $ResourceUpdate($1_account_Account_$memory, $GlobalLocationAddress($t27),
        $Dereference($t27));

    // $t31 := pack 0x1::account::SignerCapability($t14) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1151:26+43
    assume {:print "$at(97,61010,61053)"} true;
    $t31 := $1_account_SignerCapability($t14);

    // trace_local[signer_cap]($t31) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1151:26+43
    assume {:print "$track_local(39,9,6):", $t31} $t31 == $t31;

    // trace_return[0]($t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1125:120+1334
    assume {:print "$at(97,59759,61093)"} true;
    assume {:print "$track_return(39,9,0):", $t4} $t4 == $t4;

    // trace_return[1]($t31) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1125:120+1334
    assume {:print "$track_return(39,9,1):", $t31} $t31 == $t31;

    // goto L10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1125:120+1334
    goto L10;

    // label L7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1137:38+21
    assume {:print "$at(97,60315,60336)"} true;
L7:

    // $t32 := 16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1137:38+21
    assume {:print "$at(97,60315,60336)"} true;
    $t32 := 16;
    assume $IsValid'u64'($t32);

    // $t33 := error::invalid_state($t32) on_abort goto L11 with $t13 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1137:17+43
    call $t33 := $1_error_invalid_state($t32);
    if ($abort_flag) {
        assume {:print "$at(97,60294,60337)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(39,9):", $t13} $t13 == $t13;
        goto L11;
    }

    // trace_abort($t33) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1135:13+6
    assume {:print "$at(97,60210,60216)"} true;
    assume {:print "$track_abort(39,9):", $t33} $t33 == $t33;

    // $t13 := move($t33) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1135:13+6
    $t13 := $t33;

    // goto L11 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1135:13+6
    goto L11;

    // label L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1132:39+25
    assume {:print "$at(97,60137,60162)"} true;
L5:

    // $t34 := 15 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1132:39+25
    assume {:print "$at(97,60137,60162)"} true;
    $t34 := 15;
    assume $IsValid'u64'($t34);

    // $t35 := error::already_exists($t34) on_abort goto L11 with $t13 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1132:17+48
    call $t35 := $1_error_already_exists($t34);
    if ($abort_flag) {
        assume {:print "$at(97,60115,60163)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(39,9):", $t13} $t13 == $t13;
        goto L11;
    }

    // trace_abort($t35) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1130:13+6
    assume {:print "$at(97,60025,60031)"} true;
    assume {:print "$track_abort(39,9):", $t35} $t35 == $t35;

    // $t13 := move($t35) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1130:13+6
    $t13 := $t35;

    // goto L11 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1130:13+6
    goto L11;

    // label L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1141:13+39
    assume {:print "$at(97,60428,60467)"} true;
L0:

    // assume Identical($t36, bcs::$to_bytes<address>($t14)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.spec.move:170:9+45
    assume {:print "$at(98,9261,9306)"} true;
    assume ($t36 == $1_bcs_$to_bytes'address'($t14));

    // $t37 := opaque begin: account::create_account_unchecked($t14) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1141:13+39
    assume {:print "$at(97,60428,60467)"} true;

    // assume Identical($t38, Or(Neq<num>(Len<u8>($t36), 32), exists<0x1::account::Account>($t14))) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1141:13+39
    assume ($t38 == (!$IsEqual'num'(LenVec($t36), 32) || $ResourceExists($1_account_Account_$memory, $t14)));

    // if ($t38) goto L13 else goto L12 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1141:13+39
    if ($t38) { goto L13; } else { goto L12; }

    // label L13 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1141:13+39
L13:

    // trace_abort($t13) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1141:13+39
    assume {:print "$at(97,60428,60467)"} true;
    assume {:print "$track_abort(39,9):", $t13} $t13 == $t13;

    // goto L11 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1141:13+39
    goto L11;

    // label L12 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1141:13+39
L12:

    // modifies global<0x1::account::Account>($t14) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1141:13+39
    assume {:print "$at(97,60428,60467)"} true;
    havoc $temp_0'bool';
    if ($temp_0'bool') {
        havoc $temp_0'$1_account_Account';
        $1_account_Account_$memory := $ResourceUpdate($1_account_Account_$memory, $t14, $temp_0'$1_account_Account');
    } else {
        $1_account_Account_$memory := $ResourceRemove($1_account_Account_$memory, $t14);
    }

    // assume WellFormed($t37) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1141:13+39
    assume $IsValid'signer'($t37) && $1_signer_is_txn_signer($t37) && $1_signer_is_txn_signer_addr($t37->$addr);

    // assume Eq<num>(Len<u8>($t36), 32) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1141:13+39
    assume $IsEqual'num'(LenVec($t36), 32);

    // assume Eq<address>(signer::$address_of($t37), $t14) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1141:13+39
    assume $IsEqual'address'($1_signer_$address_of($t37), $t14);

    // assume exists<0x1::account::Account>($t14) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1141:13+39
    assume $ResourceExists($1_account_Account_$memory, $t14);

    // $t37 := opaque end: account::create_account_unchecked($t14) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1141:13+39

    // $t4 := $t37 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1141:13+39
    $t4 := $t37;

    // trace_local[resource]($t37) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1141:13+39
    assume {:print "$track_local(39,9,4):", $t37} $t37 == $t37;

    // goto L9 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1141:13+39
    goto L9;

    // label L10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1153:5+1
    assume {:print "$at(97,61092,61093)"} true;
L10:

    // return ($t4, $t31) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1153:5+1
    assume {:print "$at(97,61092,61093)"} true;
    $ret0 := $t4;
    $ret1 := $t31;
    return;

    // label L11 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1153:5+1
L11:

    // abort($t13) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1153:5+1
    assume {:print "$at(97,61092,61093)"} true;
    $abort_code := $t13;
    $abort_flag := true;
    return;

}

// fun account::create_signer_with_capability [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1253:5+159
procedure {:inline 1} $1_account_create_signer_with_capability(_$t0: $1_account_SignerCapability) returns ($ret0: $signer)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: $signer;
    var $t0: $1_account_SignerCapability;
    var $temp_0'$1_account_SignerCapability': $1_account_SignerCapability;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t1, select account::SignerCapability.account<0x1::account::SignerCapability>($t0)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.spec.move:670:9+30
    assume {:print "$at(98,33947,33977)"} true;
    assume ($t1 == $t0->$account);

    // trace_local[capability]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1253:5+1
    assume {:print "$at(97,65239,65240)"} true;
    assume {:print "$track_local(39,11,0):", $t0} $t0 == $t0;

    // $t2 := get_field<0x1::account::SignerCapability>.account($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1254:20+19
    assume {:print "$at(97,65341,65360)"} true;
    $t2 := $t0->$account;

    // $t3 := opaque begin: create_signer::create_signer($t2) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1255:9+20
    assume {:print "$at(97,65371,65391)"} true;

    // assume WellFormed($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1255:9+20
    assume $IsValid'signer'($t3) && $1_signer_is_txn_signer($t3) && $1_signer_is_txn_signer_addr($t3->$addr);

    // assume Eq<address>(signer::$address_of($t3), $t2) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1255:9+20
    assume $IsEqual'address'($1_signer_$address_of($t3), $t2);

    // assume Eq<signer>($t3, create_signer::spec_create_signer($t2)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1255:9+20
    assume $IsEqual'signer'($t3, $1_create_signer_spec_create_signer($t2));

    // $t3 := opaque end: create_signer::create_signer($t2) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1255:9+20

    // trace_return[0]($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1255:9+20
    assume {:print "$track_return(39,11,0):", $t3} $t3 == $t3;

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1256:5+1
    assume {:print "$at(97,65397,65398)"} true;
L1:

    // return $t3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1256:5+1
    assume {:print "$at(97,65397,65398)"} true;
    $ret0 := $t3;
    return;

}

// fun account::get_sequence_number [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:384:5+336
procedure {:inline 1} $1_account_get_sequence_number(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: bool;
    var $t3: $1_account_Account;
    var $t4: int;
    var $t5: int;
    var $t6: bool;
    var $t7: int;
    var $t8: int;
    var $t9: int;
    var $t0: int;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[addr]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:384:5+1
    assume {:print "$at(97,18984,18985)"} true;
    assume {:print "$track_local(39,16,0):", $t0} $t0 == $t0;

    // $t2 := exists<0x1::account::Account>($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:360:9+21
    assume {:print "$at(97,18118,18139)"} true;
    $t2 := $ResourceExists($1_account_Account_$memory, $t0);

    // if ($t2) goto L1 else goto L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:385:9+250
    assume {:print "$at(97,19063,19313)"} true;
    if ($t2) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:386:13+13
    assume {:print "$at(97,19108,19121)"} true;
L1:

    // $t3 := get_global<0x1::account::Account>($t0) on_abort goto L6 with $t4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:386:13+13
    assume {:print "$at(97,19108,19121)"} true;
    if (!$ResourceExists($1_account_Account_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t3 := $ResourceValue($1_account_Account_$memory, $t0);
    }
    if ($abort_flag) {
        assume {:print "$at(97,19108,19121)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(39,16):", $t4} $t4 == $t4;
        goto L6;
    }

    // $t5 := get_field<0x1::account::Account>.sequence_number($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:386:13+29
    $t5 := $t3->$sequence_number;

    // $t1 := $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:386:13+29
    $t1 := $t5;

    // trace_local[return]($t5) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:386:13+29
    assume {:print "$track_local(39,16,1):", $t5} $t5 == $t5;

    // label L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:385:9+250
    assume {:print "$at(97,19063,19313)"} true;
L4:

    // trace_return[0]($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:385:9+250
    assume {:print "$at(97,19063,19313)"} true;
    assume {:print "$track_return(39,16,0):", $t1} $t1 == $t1;

    // goto L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:385:9+250
    goto L5;

    // label L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:387:20+47
    assume {:print "$at(97,19158,19205)"} true;
L0:

    // $t6 := opaque begin: features::is_default_account_resource_enabled() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:387:20+47
    assume {:print "$at(97,19158,19205)"} true;

    // assume WellFormed($t6) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:387:20+47
    assume $IsValid'bool'($t6);

    // assume Eq<bool>($t6, features::spec_is_enabled(91)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:387:20+47
    assume $IsEqual'bool'($t6, $1_features_spec_is_enabled(91));

    // $t6 := opaque end: features::is_default_account_resource_enabled() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:387:20+47

    // if ($t6) goto L3 else goto L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:387:16+159
    if ($t6) { goto L3; } else { goto L2; }

    // label L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:388:13+1
    assume {:print "$at(97,19222,19223)"} true;
L3:

    // $t7 := 0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:388:13+1
    assume {:print "$at(97,19222,19223)"} true;
    $t7 := 0;
    assume $IsValid'u64'($t7);

    // $t1 := $t7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:388:13+1
    $t1 := $t7;

    // trace_local[return]($t7) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:388:13+1
    assume {:print "$track_local(39,16,1):", $t7} $t7 == $t7;

    // goto L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:388:13+1
    goto L4;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:390:36+23
    assume {:print "$at(97,19278,19301)"} true;
L2:

    // $t8 := 2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:390:36+23
    assume {:print "$at(97,19278,19301)"} true;
    $t8 := 2;
    assume $IsValid'u64'($t8);

    // $t9 := error::not_found($t8) on_abort goto L6 with $t4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:390:19+41
    call $t9 := $1_error_not_found($t8);
    if ($abort_flag) {
        assume {:print "$at(97,19261,19302)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(39,16):", $t4} $t4 == $t4;
        goto L6;
    }

    // trace_abort($t9) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:390:13+47
    assume {:print "$at(97,19255,19302)"} true;
    assume {:print "$track_abort(39,16):", $t9} $t9 == $t9;

    // $t4 := move($t9) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:390:13+47
    $t4 := $t9;

    // goto L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:390:13+47
    goto L6;

    // label L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:392:5+1
    assume {:print "$at(97,19319,19320)"} true;
L5:

    // return $t1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:392:5+1
    assume {:print "$at(97,19319,19320)"} true;
    $ret0 := $t1;
    return;

    // label L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:392:5+1
L6:

    // abort($t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:392:5+1
    assume {:print "$at(97,19319,19320)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun account::register_coin<0x1::aptos_coin::AptosCoin> [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1213:5+732
procedure {:inline 1} $1_account_register_coin'$1_aptos_coin_AptosCoin'(_$t0: int) returns ()
{
    // declare local variables
    var $t1: int;
    var $t2: bool;
    var $t3: int;
    var $t4: $1_type_info_TypeInfo;
    var $t5: $1_account_CoinRegister;
    var $t6: bool;
    var $t7: Vec (int);
    var $t8: $Mutation ($1_account_Account);
    var $t9: $Mutation ($1_event_EventHandle'$1_account_CoinRegisterEvent');
    var $t10: $1_type_info_TypeInfo;
    var $t11: $1_account_CoinRegisterEvent;
    var $t12: bool;
    var $t13: int;
    var $t14: int;
    var $t0: int;
    var $1_account_Account_$modifies: [int]bool;
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[account_addr]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1213:5+1
    assume {:print "$at(97,63624,63625)"} true;
    assume {:print "$track_local(39,27,0):", $t0} $t0 == $t0;

    // $t2 := features::module_event_migration_enabled() on_abort goto L9 with $t3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1214:13+47
    assume {:print "$at(97,63722,63769)"} true;
    call $t2 := $1_features_module_event_migration_enabled();
    if ($abort_flag) {
        assume {:print "$at(97,63722,63769)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(39,27):", $t3} $t3 == $t3;
        goto L9;
    }

    // if ($t2) goto L1 else goto L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1214:9+631
    if ($t2) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1217:30+12
    assume {:print "$at(97,63861,63873)"} true;
L1:

    // $t4 := type_info::type_of<#0>() on_abort goto L9 with $t3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1218:32+30
    assume {:print "$at(97,63907,63937)"} true;
    if (!true) {
        call $ExecFailureAbort();
    }
    else {
        $t4 := $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9));
    }
    if ($abort_flag) {
        assume {:print "$at(97,63907,63937)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(39,27):", $t3} $t3 == $t3;
        goto L9;
    }

    // $t5 := pack 0x1::account::CoinRegister($t0, $t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1216:17+141
    assume {:print "$at(97,63816,63957)"} true;
    $t5 := $1_account_CoinRegister($t0, $t4);

    // opaque begin: event::emit<0x1::account::CoinRegister>($t5) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1215:13+187
    assume {:print "$at(97,63786,63973)"} true;

    // opaque end: event::emit<0x1::account::CoinRegister>($t5) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1215:13+187

    // label L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1214:9+631
    assume {:print "$at(97,63718,64349)"} true;
L4:

    // goto L8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1214:9+631
    assume {:print "$at(97,63718,64349)"} true;
    goto L8;

    // label L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:404:16+22
    assume {:print "$at(97,19714,19736)"} true;
L0:

    // trace_local[$t3]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:404:16+22
    assume {:print "$at(97,19714,19736)"} true;
    assume {:print "$track_local(39,27,1):", $t0} $t0 == $t0;

    // $t6 := opaque begin: features::is_default_account_resource_enabled() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:405:13+47
    assume {:print "$at(97,19783,19830)"} true;

    // assume WellFormed($t6) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:405:13+47
    assume $IsValid'bool'($t6);

    // assume Eq<bool>($t6, features::spec_is_enabled(91)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:405:13+47
    assume $IsEqual'bool'($t6, $1_features_spec_is_enabled(91));

    // $t6 := opaque end: features::is_default_account_resource_enabled() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:405:13+47

    // if ($t6) goto L3 else goto L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:405:9+218
    if ($t6) { goto L3; } else { goto L2; }

    // label L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:406:13+38
    assume {:print "$at(97,19847,19885)"} true;
L3:

    // assume Identical($t7, bcs::$to_bytes<address>($t0)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.spec.move:122:9+56
    assume {:print "$at(98,7292,7348)"} true;
    assume ($t7 == $1_bcs_$to_bytes'address'($t0));

    // account::create_account_if_does_not_exist($t0) on_abort goto L9 with $t3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:406:13+38
    assume {:print "$at(97,19847,19885)"} true;
    call $1_account_create_account_if_does_not_exist($t0);
    if ($abort_flag) {
        assume {:print "$at(97,19847,19885)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(39,27):", $t3} $t3 == $t3;
        goto L9;
    }

    // label L7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1223:27+26
    assume {:print "$at(97,64071,64097)"} true;
L7:

    // $t8 := borrow_global<0x1::account::Account>($t0) on_abort goto L9 with $t3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1223:27+26
    assume {:print "$at(97,64071,64097)"} true;
    if (!$ResourceExists($1_account_Account_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t8 := $Mutation($Global($t0), EmptyVec(), $ResourceValue($1_account_Account_$memory, $t0));
    }
    if ($abort_flag) {
        assume {:print "$at(97,64071,64097)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(39,27):", $t3} $t3 == $t3;
        goto L9;
    }

    // $t9 := borrow_field<0x1::account::Account>.coin_register_events($t8) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1225:17+33
    assume {:print "$at(97,64167,64200)"} true;
    $t9 := $ChildMutation($t8, 3, $Dereference($t8)->$coin_register_events);

    // $t10 := type_info::type_of<#0>() on_abort goto L9 with $t3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1227:32+30
    assume {:print "$at(97,64271,64301)"} true;
    if (!true) {
        call $ExecFailureAbort();
    }
    else {
        $t10 := $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9));
    }
    if ($abort_flag) {
        assume {:print "$at(97,64271,64301)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(39,27):", $t3} $t3 == $t3;
        goto L9;
    }

    // $t11 := pack 0x1::account::CoinRegisterEvent($t10) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1226:17+102
    assume {:print "$at(97,64219,64321)"} true;
    $t11 := $1_account_CoinRegisterEvent($t10);

    // opaque begin: event::emit_event<0x1::account::CoinRegisterEvent>($t9, $t11) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1224:13+225
    assume {:print "$at(97,64112,64337)"} true;

    // opaque end: event::emit_event<0x1::account::CoinRegisterEvent>($t9, $t11) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1224:13+225

    // write_back[Reference($t8).coin_register_events (0x1::event::EventHandle<0x1::account::CoinRegisterEvent>)]($t9) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1224:13+225
    $t8 := $UpdateMutation($t8, $Update'$1_account_Account'_coin_register_events($Dereference($t8), $Dereference($t9)));

    // pack_ref_deep($t8) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1224:13+225

    // write_back[0x1::account::Account@]($t8) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1224:13+225
    $1_account_Account_$memory := $ResourceUpdate($1_account_Account_$memory, $GlobalLocationAddress($t8),
        $Dereference($t8));

    // goto L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1224:13+225
    goto L4;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:408:21+15
    assume {:print "$at(97,19926,19941)"} true;
L2:

    // $t12 := opaque begin: account::exists_at($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:408:21+15
    assume {:print "$at(97,19926,19941)"} true;

    // assume WellFormed($t12) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:408:21+15
    assume $IsValid'bool'($t12);

    // assume Eq<bool>($t12, account::spec_exists_at($t0)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:408:21+15
    assume $IsEqual'bool'($t12, $1_account_spec_exists_at($1_account_Account_$memory, $t0));

    // $t12 := opaque end: account::exists_at($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:408:21+15

    // if ($t12) goto L6 else goto L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:408:13+6
    if ($t12) { goto L6; } else { goto L5; }

    // label L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:408:13+6
L6:

    // goto L7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:408:13+6
    assume {:print "$at(97,19918,19924)"} true;
    goto L7;

    // label L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:408:55+23
L5:

    // $t13 := 2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:408:55+23
    assume {:print "$at(97,19960,19983)"} true;
    $t13 := 2;
    assume $IsValid'u64'($t13);

    // $t14 := error::not_found($t13) on_abort goto L9 with $t3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:408:38+41
    call $t14 := $1_error_not_found($t13);
    if ($abort_flag) {
        assume {:print "$at(97,19943,19984)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(39,27):", $t3} $t3 == $t3;
        goto L9;
    }

    // trace_abort($t14) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:408:13+6
    assume {:print "$at(97,19918,19924)"} true;
    assume {:print "$track_abort(39,27):", $t14} $t14 == $t14;

    // $t3 := move($t14) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:408:13+6
    $t3 := $t14;

    // goto L9 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:408:13+6
    goto L9;

    // label L8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1231:5+1
    assume {:print "$at(97,64355,64356)"} true;
L8:

    // return () at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1231:5+1
    assume {:print "$at(97,64355,64356)"} true;
    return;

    // label L9 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1231:5+1
L9:

    // abort($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1231:5+1
    assume {:print "$at(97,64355,64356)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun account::register_coin<#0> [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1213:5+732
procedure {:inline 1} $1_account_register_coin'#0'(_$t0: int) returns ()
{
    // declare local variables
    var $t1: int;
    var $t2: bool;
    var $t3: int;
    var $t4: $1_type_info_TypeInfo;
    var $t5: $1_account_CoinRegister;
    var $t6: bool;
    var $t7: Vec (int);
    var $t8: $Mutation ($1_account_Account);
    var $t9: $Mutation ($1_event_EventHandle'$1_account_CoinRegisterEvent');
    var $t10: $1_type_info_TypeInfo;
    var $t11: $1_account_CoinRegisterEvent;
    var $t12: bool;
    var $t13: int;
    var $t14: int;
    var $t0: int;
    var $1_account_Account_$modifies: [int]bool;
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[account_addr]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1213:5+1
    assume {:print "$at(97,63624,63625)"} true;
    assume {:print "$track_local(39,27,0):", $t0} $t0 == $t0;

    // $t2 := features::module_event_migration_enabled() on_abort goto L9 with $t3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1214:13+47
    assume {:print "$at(97,63722,63769)"} true;
    call $t2 := $1_features_module_event_migration_enabled();
    if ($abort_flag) {
        assume {:print "$at(97,63722,63769)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(39,27):", $t3} $t3 == $t3;
        goto L9;
    }

    // if ($t2) goto L1 else goto L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1214:9+631
    if ($t2) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1217:30+12
    assume {:print "$at(97,63861,63873)"} true;
L1:

    // $t4 := type_info::type_of<#0>() on_abort goto L9 with $t3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1218:32+30
    assume {:print "$at(97,63907,63937)"} true;
    if (!(#0_info is $TypeParamStruct)) {
        call $ExecFailureAbort();
    }
    else {
        $t4 := $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s);
    }
    if ($abort_flag) {
        assume {:print "$at(97,63907,63937)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(39,27):", $t3} $t3 == $t3;
        goto L9;
    }

    // $t5 := pack 0x1::account::CoinRegister($t0, $t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1216:17+141
    assume {:print "$at(97,63816,63957)"} true;
    $t5 := $1_account_CoinRegister($t0, $t4);

    // opaque begin: event::emit<0x1::account::CoinRegister>($t5) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1215:13+187
    assume {:print "$at(97,63786,63973)"} true;

    // opaque end: event::emit<0x1::account::CoinRegister>($t5) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1215:13+187

    // label L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1214:9+631
    assume {:print "$at(97,63718,64349)"} true;
L4:

    // goto L8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1214:9+631
    assume {:print "$at(97,63718,64349)"} true;
    goto L8;

    // label L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:404:16+22
    assume {:print "$at(97,19714,19736)"} true;
L0:

    // trace_local[$t3]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:404:16+22
    assume {:print "$at(97,19714,19736)"} true;
    assume {:print "$track_local(39,27,1):", $t0} $t0 == $t0;

    // $t6 := opaque begin: features::is_default_account_resource_enabled() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:405:13+47
    assume {:print "$at(97,19783,19830)"} true;

    // assume WellFormed($t6) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:405:13+47
    assume $IsValid'bool'($t6);

    // assume Eq<bool>($t6, features::spec_is_enabled(91)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:405:13+47
    assume $IsEqual'bool'($t6, $1_features_spec_is_enabled(91));

    // $t6 := opaque end: features::is_default_account_resource_enabled() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:405:13+47

    // if ($t6) goto L3 else goto L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:405:9+218
    if ($t6) { goto L3; } else { goto L2; }

    // label L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:406:13+38
    assume {:print "$at(97,19847,19885)"} true;
L3:

    // assume Identical($t7, bcs::$to_bytes<address>($t0)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.spec.move:122:9+56
    assume {:print "$at(98,7292,7348)"} true;
    assume ($t7 == $1_bcs_$to_bytes'address'($t0));

    // account::create_account_if_does_not_exist($t0) on_abort goto L9 with $t3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:406:13+38
    assume {:print "$at(97,19847,19885)"} true;
    call $1_account_create_account_if_does_not_exist($t0);
    if ($abort_flag) {
        assume {:print "$at(97,19847,19885)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(39,27):", $t3} $t3 == $t3;
        goto L9;
    }

    // label L7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1223:27+26
    assume {:print "$at(97,64071,64097)"} true;
L7:

    // $t8 := borrow_global<0x1::account::Account>($t0) on_abort goto L9 with $t3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1223:27+26
    assume {:print "$at(97,64071,64097)"} true;
    if (!$ResourceExists($1_account_Account_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t8 := $Mutation($Global($t0), EmptyVec(), $ResourceValue($1_account_Account_$memory, $t0));
    }
    if ($abort_flag) {
        assume {:print "$at(97,64071,64097)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(39,27):", $t3} $t3 == $t3;
        goto L9;
    }

    // $t9 := borrow_field<0x1::account::Account>.coin_register_events($t8) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1225:17+33
    assume {:print "$at(97,64167,64200)"} true;
    $t9 := $ChildMutation($t8, 3, $Dereference($t8)->$coin_register_events);

    // $t10 := type_info::type_of<#0>() on_abort goto L9 with $t3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1227:32+30
    assume {:print "$at(97,64271,64301)"} true;
    if (!(#0_info is $TypeParamStruct)) {
        call $ExecFailureAbort();
    }
    else {
        $t10 := $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s);
    }
    if ($abort_flag) {
        assume {:print "$at(97,64271,64301)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(39,27):", $t3} $t3 == $t3;
        goto L9;
    }

    // $t11 := pack 0x1::account::CoinRegisterEvent($t10) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1226:17+102
    assume {:print "$at(97,64219,64321)"} true;
    $t11 := $1_account_CoinRegisterEvent($t10);

    // opaque begin: event::emit_event<0x1::account::CoinRegisterEvent>($t9, $t11) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1224:13+225
    assume {:print "$at(97,64112,64337)"} true;

    // opaque end: event::emit_event<0x1::account::CoinRegisterEvent>($t9, $t11) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1224:13+225

    // write_back[Reference($t8).coin_register_events (0x1::event::EventHandle<0x1::account::CoinRegisterEvent>)]($t9) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1224:13+225
    $t8 := $UpdateMutation($t8, $Update'$1_account_Account'_coin_register_events($Dereference($t8), $Dereference($t9)));

    // pack_ref_deep($t8) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1224:13+225

    // write_back[0x1::account::Account@]($t8) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1224:13+225
    $1_account_Account_$memory := $ResourceUpdate($1_account_Account_$memory, $GlobalLocationAddress($t8),
        $Dereference($t8));

    // goto L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1224:13+225
    goto L4;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:408:21+15
    assume {:print "$at(97,19926,19941)"} true;
L2:

    // $t12 := opaque begin: account::exists_at($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:408:21+15
    assume {:print "$at(97,19926,19941)"} true;

    // assume WellFormed($t12) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:408:21+15
    assume $IsValid'bool'($t12);

    // assume Eq<bool>($t12, account::spec_exists_at($t0)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:408:21+15
    assume $IsEqual'bool'($t12, $1_account_spec_exists_at($1_account_Account_$memory, $t0));

    // $t12 := opaque end: account::exists_at($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:408:21+15

    // if ($t12) goto L6 else goto L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:408:13+6
    if ($t12) { goto L6; } else { goto L5; }

    // label L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:408:13+6
L6:

    // goto L7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:408:13+6
    assume {:print "$at(97,19918,19924)"} true;
    goto L7;

    // label L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:408:55+23
L5:

    // $t13 := 2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:408:55+23
    assume {:print "$at(97,19960,19983)"} true;
    $t13 := 2;
    assume $IsValid'u64'($t13);

    // $t14 := error::not_found($t13) on_abort goto L9 with $t3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:408:38+41
    call $t14 := $1_error_not_found($t13);
    if ($abort_flag) {
        assume {:print "$at(97,19943,19984)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(39,27):", $t3} $t3 == $t3;
        goto L9;
    }

    // trace_abort($t14) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:408:13+6
    assume {:print "$at(97,19918,19924)"} true;
    assume {:print "$track_abort(39,27):", $t14} $t14 == $t14;

    // $t3 := move($t14) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:408:13+6
    $t3 := $t14;

    // goto L9 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:408:13+6
    goto L9;

    // label L8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1231:5+1
    assume {:print "$at(97,64355,64356)"} true;
L8:

    // return () at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1231:5+1
    assume {:print "$at(97,64355,64356)"} true;
    return;

    // label L9 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1231:5+1
L9:

    // abort($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:1231:5+1
    assume {:print "$at(97,64355,64356)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun account::rotate_authentication_key_internal [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:440:5+509
procedure {:inline 1} $1_account_rotate_authentication_key_internal(_$t0: $signer, _$t1: Vec (int)) returns ()
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: $Mutation (Vec (int));
    var $t5: int;
    var $t6: int;
    var $t7: int;
    var $t8: bool;
    var $t9: Vec (int);
    var $t10: int;
    var $t11: int;
    var $t12: bool;
    var $t13: $1_account_AccountPermission;
    var $t14: bool;
    var $t15: bool;
    var $t16: $Mutation ($1_account_Account);
    var $t17: $Mutation (Vec (int));
    var $t18: int;
    var $t19: int;
    var $t20: int;
    var $t21: int;
    var $t22: bool;
    var $t23: int;
    var $t24: int;
    var $t0: $signer;
    var $t1: Vec (int);
    var $1_account_Account_$modifies: [int]bool;
    var $temp_0'$1_permissioned_signer_PermissionStorage': $1_permissioned_signer_PermissionStorage;
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    var $temp_0'signer': $signer;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t5, signer::$address_of($t0)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.spec.move:211:9+39
    assume {:print "$at(98,10888,10927)"} true;
    assume ($t5 == $1_signer_$address_of($t0));

    // trace_local[account]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:440:5+1
    assume {:print "$at(97,21196,21197)"} true;
    assume {:print "$track_local(39,35,0):", $t0} $t0 == $t0;

    // trace_local[new_auth_key]($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:440:5+1
    assume {:print "$track_local(39,35,1):", $t1} $t1 == $t1;

    // $t6 := signer::address_of($t0) on_abort goto L10 with $t7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:441:20+27
    assume {:print "$at(97,21333,21360)"} true;
    call $t6 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(97,21333,21360)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(39,35):", $t7} $t7 == $t7;
        goto L10;
    }

    // trace_local[addr]($t6) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:441:20+27
    assume {:print "$track_local(39,35,2):", $t6} $t6 == $t6;

    // trace_local[addr]($t6) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:404:16+22
    assume {:print "$at(97,19714,19736)"} true;
    assume {:print "$track_local(39,35,3):", $t6} $t6 == $t6;

    // $t8 := opaque begin: features::is_default_account_resource_enabled() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:405:13+47
    assume {:print "$at(97,19783,19830)"} true;

    // assume WellFormed($t8) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:405:13+47
    assume $IsValid'bool'($t8);

    // assume Eq<bool>($t8, features::spec_is_enabled(91)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:405:13+47
    assume $IsEqual'bool'($t8, $1_features_spec_is_enabled(91));

    // $t8 := opaque end: features::is_default_account_resource_enabled() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:405:13+47

    // if ($t8) goto L1 else goto L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:405:9+218
    if ($t8) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:406:13+38
    assume {:print "$at(97,19847,19885)"} true;
L1:

    // assume Identical($t9, bcs::$to_bytes<address>($t6)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.spec.move:122:9+56
    assume {:print "$at(98,7292,7348)"} true;
    assume ($t9 == $1_bcs_$to_bytes'address'($t6));

    // account::create_account_if_does_not_exist($t6) on_abort goto L10 with $t7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:406:13+38
    assume {:print "$at(97,19847,19885)"} true;
    call $1_account_create_account_if_does_not_exist($t6);
    if ($abort_flag) {
        assume {:print "$at(97,19847,19885)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(39,35):", $t7} $t7 == $t7;
        goto L10;
    }

    // label L8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:444:13+21
    assume {:print "$at(97,21432,21453)"} true;
L8:

    // $t10 := vector::length<u8>($t1) on_abort goto L10 with $t7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:444:13+21
    assume {:print "$at(97,21432,21453)"} true;
    call $t10 := $1_vector_length'u8'($t1);
    if ($abort_flag) {
        assume {:print "$at(97,21432,21453)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(39,35):", $t7} $t7 == $t7;
        goto L10;
    }

    // $t11 := 32 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:444:38+2
    $t11 := 32;
    assume $IsValid'u64'($t11);

    // $t12 := ==($t10, $t11) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:444:13+27
    $t12 := $IsEqual'u64'($t10, $t11);

    // if ($t12) goto L3 else goto L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:443:9+6
    assume {:print "$at(97,21410,21416)"} true;
    if ($t12) { goto L3; } else { goto L2; }

    // label L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:240:16+25
    assume {:print "$at(97,12533,12558)"} true;
L3:

    // $t13 := pack_variant 0x1::account::AccountPermission::KeyRotation() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:242:61+33
    assume {:print "$at(97,12652,12685)"} true;
    $t13 := $1_account_AccountPermission_KeyRotation();

    // $t14 := opaque begin: permissioned_signer::check_permission_exists<0x1::account::AccountPermission>($t0, $t13) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:242:13+82

    // $t15 := havoc[val]() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:242:13+82
    havoc $t15;

    // if ($t15) goto L12 else goto L11 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:242:13+82
    if ($t15) { goto L12; } else { goto L11; }

    // label L12 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:242:13+82
L12:

    // trace_abort($t7) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:242:13+82
    assume {:print "$at(97,12604,12686)"} true;
    assume {:print "$track_abort(39,35):", $t7} $t7 == $t7;

    // goto L10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:242:13+82
    goto L10;

    // label L11 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:242:13+82
L11:

    // modifies global<0x1::permissioned_signer::PermissionStorage>(permissioned_signer::spec_permission_address($t0)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:242:13+82
    assume {:print "$at(97,12604,12686)"} true;
    havoc $temp_0'bool';
    if ($temp_0'bool') {
        havoc $temp_0'$1_permissioned_signer_PermissionStorage';
        $1_permissioned_signer_PermissionStorage_$memory := $ResourceUpdate($1_permissioned_signer_PermissionStorage_$memory, $1_permissioned_signer_spec_permission_address($t0), $temp_0'$1_permissioned_signer_PermissionStorage');
    } else {
        $1_permissioned_signer_PermissionStorage_$memory := $ResourceRemove($1_permissioned_signer_PermissionStorage_$memory, $1_permissioned_signer_spec_permission_address($t0));
    }

    // assume WellFormed($t14) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:242:13+82
    assume $IsValid'bool'($t14);

    // assume Eq<bool>($t14, permissioned_signer::spec_check_permission_exists<0x1::account::AccountPermission>($t0, $t13)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:242:13+82
    assume $IsEqual'bool'($t14, $1_permissioned_signer_spec_check_permission_exists'$1_account_AccountPermission'($t0, $t13));

    // $t14 := opaque end: permissioned_signer::check_permission_exists<0x1::account::AccountPermission>($t0, $t13) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:242:13+82

    // if ($t14) goto L5 else goto L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:241:9+6
    assume {:print "$at(97,12582,12588)"} true;
    if ($t14) { goto L5; } else { goto L4; }

    // label L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:448:32+18
    assume {:print "$at(97,21618,21636)"} true;
L5:

    // $t16 := borrow_global<0x1::account::Account>($t6) on_abort goto L10 with $t7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:448:32+18
    assume {:print "$at(97,21618,21636)"} true;
    if (!$ResourceExists($1_account_Account_$memory, $t6)) {
        call $ExecFailureAbort();
    } else {
        $t16 := $Mutation($Global($t6), EmptyVec(), $ResourceValue($1_account_Account_$memory, $t6));
    }
    if ($abort_flag) {
        assume {:print "$at(97,21618,21636)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(39,35):", $t7} $t7 == $t7;
        goto L10;
    }

    // $t17 := borrow_field<0x1::account::Account>.authentication_key($t16) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:449:9+35
    assume {:print "$at(97,21647,21682)"} true;
    $t17 := $ChildMutation($t16, 0, $Dereference($t16)->$authentication_key);

    // trace_local[$t21]($t17) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:449:9+50
    $temp_0'vec'u8'' := $Dereference($t17);
    assume {:print "$track_local(39,35,4):", $temp_0'vec'u8''} $temp_0'vec'u8'' == $temp_0'vec'u8'';

    // write_ref($t17, $t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:449:9+50
    $t17 := $UpdateMutation($t17, $t1);

    // write_back[Reference($t16).authentication_key (vector<u8>)]($t17) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:449:9+50
    $t16 := $UpdateMutation($t16, $Update'$1_account_Account'_authentication_key($Dereference($t16), $Dereference($t17)));

    // pack_ref_deep($t16) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:449:9+50

    // write_back[0x1::account::Account@]($t16) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:449:9+50
    $1_account_Account_$memory := $ResourceUpdate($1_account_Account_$memory, $GlobalLocationAddress($t16),
        $Dereference($t16));

    // goto L9 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:440:120+394
    assume {:print "$at(97,21311,21705)"} true;
    goto L9;

    // label L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:243:38+22
    assume {:print "$at(97,12726,12748)"} true;
L4:

    // $t18 := 23 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:243:38+22
    assume {:print "$at(97,12726,12748)"} true;
    $t18 := 23;
    assume $IsValid'u64'($t18);

    // $t19 := error::permission_denied($t18) on_abort goto L10 with $t7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:243:13+48
    call $t19 := $1_error_permission_denied($t18);
    if ($abort_flag) {
        assume {:print "$at(97,12701,12749)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(39,35):", $t7} $t7 == $t7;
        goto L10;
    }

    // trace_abort($t19) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:241:9+6
    assume {:print "$at(97,12582,12588)"} true;
    assume {:print "$track_abort(39,35):", $t19} $t19 == $t19;

    // $t7 := move($t19) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:241:9+6
    $t7 := $t19;

    // goto L10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:241:9+6
    goto L10;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:443:9+6
    assume {:print "$at(97,21410,21416)"} true;
L2:

    // $t20 := 4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:445:37+29
    assume {:print "$at(97,21498,21527)"} true;
    $t20 := 4;
    assume $IsValid'u64'($t20);

    // $t21 := error::invalid_argument($t20) on_abort goto L10 with $t7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:445:13+54
    call $t21 := $1_error_invalid_argument($t20);
    if ($abort_flag) {
        assume {:print "$at(97,21474,21528)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(39,35):", $t7} $t7 == $t7;
        goto L10;
    }

    // trace_abort($t21) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:443:9+6
    assume {:print "$at(97,21410,21416)"} true;
    assume {:print "$track_abort(39,35):", $t21} $t21 == $t21;

    // $t7 := move($t21) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:443:9+6
    $t7 := $t21;

    // goto L10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:443:9+6
    goto L10;

    // label L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:408:21+15
    assume {:print "$at(97,19926,19941)"} true;
L0:

    // $t22 := opaque begin: account::exists_at($t6) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:408:21+15
    assume {:print "$at(97,19926,19941)"} true;

    // assume WellFormed($t22) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:408:21+15
    assume $IsValid'bool'($t22);

    // assume Eq<bool>($t22, account::spec_exists_at($t6)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:408:21+15
    assume $IsEqual'bool'($t22, $1_account_spec_exists_at($1_account_Account_$memory, $t6));

    // $t22 := opaque end: account::exists_at($t6) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:408:21+15

    // if ($t22) goto L7 else goto L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:408:13+6
    if ($t22) { goto L7; } else { goto L6; }

    // label L7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:408:13+6
L7:

    // goto L8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:408:13+6
    assume {:print "$at(97,19918,19924)"} true;
    goto L8;

    // label L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:408:13+6
L6:

    // $t23 := 2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:408:55+23
    assume {:print "$at(97,19960,19983)"} true;
    $t23 := 2;
    assume $IsValid'u64'($t23);

    // $t24 := error::not_found($t23) on_abort goto L10 with $t7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:408:38+41
    call $t24 := $1_error_not_found($t23);
    if ($abort_flag) {
        assume {:print "$at(97,19943,19984)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(39,35):", $t7} $t7 == $t7;
        goto L10;
    }

    // trace_abort($t24) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:408:13+6
    assume {:print "$at(97,19918,19924)"} true;
    assume {:print "$track_abort(39,35):", $t24} $t24 == $t24;

    // $t7 := move($t24) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:408:13+6
    $t7 := $t24;

    // goto L10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:408:13+6
    goto L10;

    // label L9 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:450:5+1
    assume {:print "$at(97,21704,21705)"} true;
L9:

    // return () at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:450:5+1
    assume {:print "$at(97,21704,21705)"} true;
    return;

    // label L10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:450:5+1
L10:

    // abort($t7) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.move:450:5+1
    assume {:print "$at(97,21704,21705)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.spec.move:60:10+50
function  $1_object_spec_exists_at'$1_fungible_asset_FungibleStore'(object: int): bool;
axiom (forall object: int ::
(var $$res := $1_object_spec_exists_at'$1_fungible_asset_FungibleStore'(object);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.spec.move:60:10+50
function  $1_object_spec_exists_at'$1_fungible_asset_Metadata'(object: int): bool;
axiom (forall object: int ::
(var $$res := $1_object_spec_exists_at'$1_fungible_asset_Metadata'(object);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.spec.move:60:10+50
function  $1_object_spec_exists_at'$1_coin_PairedCoinType'(object: int): bool;
axiom (forall object: int ::
(var $$res := $1_object_spec_exists_at'$1_coin_PairedCoinType'(object);
$IsValid'bool'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.spec.move:567:10+75
function  $1_object_spec_create_object_address(source: int, seed: Vec (int)): int;
axiom (forall source: int, seed: Vec (int) ::
(var $$res := $1_object_spec_create_object_address(source, seed);
$IsValid'address'($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.spec.move:569:10+92
function  $1_object_spec_create_user_derived_object_address(source: int, derive_from: int): int;
axiom (forall source: int, derive_from: int ::
(var $$res := $1_object_spec_create_user_derived_object_address(source, derive_from);
$IsValid'address'($$res)));

// struct object::ConstructorRef at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:136:5+171
datatype $1_object_ConstructorRef {
    $1_object_ConstructorRef($self: int, $can_delete: bool)
}
function {:inline} $Update'$1_object_ConstructorRef'_self(s: $1_object_ConstructorRef, x: int): $1_object_ConstructorRef {
    $1_object_ConstructorRef(x, s->$can_delete)
}
function {:inline} $Update'$1_object_ConstructorRef'_can_delete(s: $1_object_ConstructorRef, x: bool): $1_object_ConstructorRef {
    $1_object_ConstructorRef(s->$self, x)
}
function $IsValid'$1_object_ConstructorRef'(s: $1_object_ConstructorRef): bool {
    $IsValid'address'(s->$self)
      && $IsValid'bool'(s->$can_delete)
}
function {:inline} $IsEqual'$1_object_ConstructorRef'(s1: $1_object_ConstructorRef, s2: $1_object_ConstructorRef): bool {
    s1 == s2
}

// struct object::DeriveRef at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:165:5+65
datatype $1_object_DeriveRef {
    $1_object_DeriveRef($self: int)
}
function {:inline} $Update'$1_object_DeriveRef'_self(s: $1_object_DeriveRef, x: int): $1_object_DeriveRef {
    $1_object_DeriveRef(x)
}
function $IsValid'$1_object_DeriveRef'(s: $1_object_DeriveRef): bool {
    $IsValid'address'(s->$self)
}
function {:inline} $IsEqual'$1_object_DeriveRef'(s1: $1_object_DeriveRef, s2: $1_object_DeriveRef): bool {
    s1 == s2
}

// struct object::Object<0x1::fungible_asset::FungibleStore> at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:131:5+80
datatype $1_object_Object'$1_fungible_asset_FungibleStore' {
    $1_object_Object'$1_fungible_asset_FungibleStore'($inner: int)
}
function {:inline} $Update'$1_object_Object'$1_fungible_asset_FungibleStore''_inner(s: $1_object_Object'$1_fungible_asset_FungibleStore', x: int): $1_object_Object'$1_fungible_asset_FungibleStore' {
    $1_object_Object'$1_fungible_asset_FungibleStore'(x)
}
function $IsValid'$1_object_Object'$1_fungible_asset_FungibleStore''(s: $1_object_Object'$1_fungible_asset_FungibleStore'): bool {
    $IsValid'address'(s->$inner)
}
function {:inline} $IsEqual'$1_object_Object'$1_fungible_asset_FungibleStore''(s1: $1_object_Object'$1_fungible_asset_FungibleStore', s2: $1_object_Object'$1_fungible_asset_FungibleStore'): bool {
    s1 == s2
}

// struct object::Object<0x1::fungible_asset::Metadata> at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:131:5+80
datatype $1_object_Object'$1_fungible_asset_Metadata' {
    $1_object_Object'$1_fungible_asset_Metadata'($inner: int)
}
function {:inline} $Update'$1_object_Object'$1_fungible_asset_Metadata''_inner(s: $1_object_Object'$1_fungible_asset_Metadata', x: int): $1_object_Object'$1_fungible_asset_Metadata' {
    $1_object_Object'$1_fungible_asset_Metadata'(x)
}
function $IsValid'$1_object_Object'$1_fungible_asset_Metadata''(s: $1_object_Object'$1_fungible_asset_Metadata'): bool {
    $IsValid'address'(s->$inner)
}
function {:inline} $IsEqual'$1_object_Object'$1_fungible_asset_Metadata''(s1: $1_object_Object'$1_fungible_asset_Metadata', s2: $1_object_Object'$1_fungible_asset_Metadata'): bool {
    s1 == s2
}

// struct object::ObjectCore at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:100:5+561
datatype $1_object_ObjectCore {
    $1_object_ObjectCore($guid_creation_num: int, $owner: int, $allow_ungated_transfer: bool, $transfer_events: $1_event_EventHandle'$1_object_TransferEvent')
}
function {:inline} $Update'$1_object_ObjectCore'_guid_creation_num(s: $1_object_ObjectCore, x: int): $1_object_ObjectCore {
    $1_object_ObjectCore(x, s->$owner, s->$allow_ungated_transfer, s->$transfer_events)
}
function {:inline} $Update'$1_object_ObjectCore'_owner(s: $1_object_ObjectCore, x: int): $1_object_ObjectCore {
    $1_object_ObjectCore(s->$guid_creation_num, x, s->$allow_ungated_transfer, s->$transfer_events)
}
function {:inline} $Update'$1_object_ObjectCore'_allow_ungated_transfer(s: $1_object_ObjectCore, x: bool): $1_object_ObjectCore {
    $1_object_ObjectCore(s->$guid_creation_num, s->$owner, x, s->$transfer_events)
}
function {:inline} $Update'$1_object_ObjectCore'_transfer_events(s: $1_object_ObjectCore, x: $1_event_EventHandle'$1_object_TransferEvent'): $1_object_ObjectCore {
    $1_object_ObjectCore(s->$guid_creation_num, s->$owner, s->$allow_ungated_transfer, x)
}
function $IsValid'$1_object_ObjectCore'(s: $1_object_ObjectCore): bool {
    $IsValid'u64'(s->$guid_creation_num)
      && $IsValid'address'(s->$owner)
      && $IsValid'bool'(s->$allow_ungated_transfer)
      && $IsValid'$1_event_EventHandle'$1_object_TransferEvent''(s->$transfer_events)
}
function {:inline} $IsEqual'$1_object_ObjectCore'(s1: $1_object_ObjectCore, s2: $1_object_ObjectCore): bool {
    s1 == s2
}
var $1_object_ObjectCore_$memory: $Memory $1_object_ObjectCore;

// struct object::TombStone at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:114:5+173
datatype $1_object_TombStone {
    $1_object_TombStone($original_owner: int)
}
function {:inline} $Update'$1_object_TombStone'_original_owner(s: $1_object_TombStone, x: int): $1_object_TombStone {
    $1_object_TombStone(x)
}
function $IsValid'$1_object_TombStone'(s: $1_object_TombStone): bool {
    $IsValid'address'(s->$original_owner)
}
function {:inline} $IsEqual'$1_object_TombStone'(s1: $1_object_TombStone, s2: $1_object_TombStone): bool {
    s1 == s2
}
var $1_object_TombStone_$memory: $Memory $1_object_TombStone;

// struct object::Transfer at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:183:5+112
datatype $1_object_Transfer {
    $1_object_Transfer($object: int, $from: int, $to: int)
}
function {:inline} $Update'$1_object_Transfer'_object(s: $1_object_Transfer, x: int): $1_object_Transfer {
    $1_object_Transfer(x, s->$from, s->$to)
}
function {:inline} $Update'$1_object_Transfer'_from(s: $1_object_Transfer, x: int): $1_object_Transfer {
    $1_object_Transfer(s->$object, x, s->$to)
}
function {:inline} $Update'$1_object_Transfer'_to(s: $1_object_Transfer, x: int): $1_object_Transfer {
    $1_object_Transfer(s->$object, s->$from, x)
}
function $IsValid'$1_object_Transfer'(s: $1_object_Transfer): bool {
    $IsValid'address'(s->$object)
      && $IsValid'address'(s->$from)
      && $IsValid'address'(s->$to)
}
function {:inline} $IsEqual'$1_object_Transfer'(s1: $1_object_Transfer, s2: $1_object_Transfer): bool {
    s1 == s2
}

// struct object::TransferEvent at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:175:5+117
datatype $1_object_TransferEvent {
    $1_object_TransferEvent($object: int, $from: int, $to: int)
}
function {:inline} $Update'$1_object_TransferEvent'_object(s: $1_object_TransferEvent, x: int): $1_object_TransferEvent {
    $1_object_TransferEvent(x, s->$from, s->$to)
}
function {:inline} $Update'$1_object_TransferEvent'_from(s: $1_object_TransferEvent, x: int): $1_object_TransferEvent {
    $1_object_TransferEvent(s->$object, x, s->$to)
}
function {:inline} $Update'$1_object_TransferEvent'_to(s: $1_object_TransferEvent, x: int): $1_object_TransferEvent {
    $1_object_TransferEvent(s->$object, s->$from, x)
}
function $IsValid'$1_object_TransferEvent'(s: $1_object_TransferEvent): bool {
    $IsValid'address'(s->$object)
      && $IsValid'address'(s->$from)
      && $IsValid'address'(s->$to)
}
function {:inline} $IsEqual'$1_object_TransferEvent'(s1: $1_object_TransferEvent, s2: $1_object_TransferEvent): bool {
    s1 == s2
}

// struct object::TransferPermission at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:170:5+82
datatype $1_object_TransferPermission {
    $1_object_TransferPermission($object: int)
}
function {:inline} $Update'$1_object_TransferPermission'_object(s: $1_object_TransferPermission, x: int): $1_object_TransferPermission {
    $1_object_TransferPermission(x)
}
function $IsValid'$1_object_TransferPermission'(s: $1_object_TransferPermission): bool {
    $IsValid'address'(s->$object)
}
function {:inline} $IsEqual'$1_object_TransferPermission'(s1: $1_object_TransferPermission, s2: $1_object_TransferPermission): bool {
    s1 == s2
}

// struct object::TransferRef at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:153:5+67
datatype $1_object_TransferRef {
    $1_object_TransferRef($self: int)
}
function {:inline} $Update'$1_object_TransferRef'_self(s: $1_object_TransferRef, x: int): $1_object_TransferRef {
    $1_object_TransferRef(x)
}
function $IsValid'$1_object_TransferRef'(s: $1_object_TransferRef): bool {
    $IsValid'address'(s->$self)
}
function {:inline} $IsEqual'$1_object_TransferRef'(s1: $1_object_TransferRef, s2: $1_object_TransferRef): bool {
    s1 == s2
}

// struct object::Untransferable at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:121:5+32
datatype $1_object_Untransferable {
    $1_object_Untransferable($dummy_field: bool)
}
function {:inline} $Update'$1_object_Untransferable'_dummy_field(s: $1_object_Untransferable, x: bool): $1_object_Untransferable {
    $1_object_Untransferable(x)
}
function $IsValid'$1_object_Untransferable'(s: $1_object_Untransferable): bool {
    $IsValid'bool'(s->$dummy_field)
}
function {:inline} $IsEqual'$1_object_Untransferable'(s1: $1_object_Untransferable, s2: $1_object_Untransferable): bool {
    s1 == s2
}
var $1_object_Untransferable_$memory: $Memory $1_object_Untransferable;

// fun object::address_to_object<0x1::fungible_asset::FungibleStore> [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:200:5+282
procedure {:inline 1} $1_object_address_to_object'$1_fungible_asset_FungibleStore'(_$t0: int) returns ($ret0: $1_object_Object'$1_fungible_asset_FungibleStore')
{
    // declare local variables
    var $t1: bool;
    var $t2: bool;
    var $t3: bool;
    var $t4: int;
    var $t5: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t6: int;
    var $t7: int;
    var $t8: int;
    var $t9: int;
    var $t0: int;
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[object]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:200:5+1
    assume {:print "$at(186,8669,8670)"} true;
    assume {:print "$track_local(40,6,0):", $t0} $t0 == $t0;

    // $t1 := exists<0x1::object::ObjectCore>($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:201:17+26
    assume {:print "$at(186,8753,8779)"} true;
    $t1 := $ResourceExists($1_object_ObjectCore_$memory, $t0);

    // if ($t1) goto L1 else goto L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:201:9+6
    if ($t1) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:202:17+20
    assume {:print "$at(186,8841,8861)"} true;
L1:

    // $t2 := opaque begin: object::exists_at<#0>($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:202:17+20
    assume {:print "$at(186,8841,8861)"} true;

    // $t3 := havoc[val]() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:202:17+20
    havoc $t3;

    // if ($t3) goto L7 else goto L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:202:17+20
    if ($t3) { goto L7; } else { goto L6; }

    // label L7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:202:17+20
L7:

    // trace_abort($t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:202:17+20
    assume {:print "$at(186,8841,8861)"} true;
    assume {:print "$track_abort(40,6):", $t4} $t4 == $t4;

    // goto L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:202:17+20
    goto L5;

    // label L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:202:17+20
L6:

    // assume WellFormed($t2) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:202:17+20
    assume {:print "$at(186,8841,8861)"} true;
    assume $IsValid'bool'($t2);

    // assume Eq<bool>($t2, object::spec_exists_at<#0>($t0)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:202:17+20
    assume $IsEqual'bool'($t2, $1_object_spec_exists_at'$1_fungible_asset_FungibleStore'($t0));

    // $t2 := opaque end: object::exists_at<#0>($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:202:17+20

    // if ($t2) goto L3 else goto L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:202:9+6
    if ($t2) { goto L3; } else { goto L2; }

    // label L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:203:9+27
    assume {:print "$at(186,8917,8944)"} true;
L3:

    // $t5 := pack 0x1::object::Object<#0>($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:203:9+27
    assume {:print "$at(186,8917,8944)"} true;
    $t5 := $1_object_Object'$1_fungible_asset_FungibleStore'($t0);

    // trace_return[0]($t5) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:200:70+217
    assume {:print "$at(186,8734,8951)"} true;
    assume {:print "$track_return(40,6,0):", $t5} $t5 == $t5;

    // goto L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:200:70+217
    goto L4;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:202:56+24
    assume {:print "$at(186,8880,8904)"} true;
L2:

    // $t6 := 7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:202:56+24
    assume {:print "$at(186,8880,8904)"} true;
    $t6 := 7;
    assume $IsValid'u64'($t6);

    // $t7 := error::not_found($t6) on_abort goto L5 with $t4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:202:39+42
    call $t7 := $1_error_not_found($t6);
    if ($abort_flag) {
        assume {:print "$at(186,8863,8905)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(40,6):", $t4} $t4 == $t4;
        goto L5;
    }

    // trace_abort($t7) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:202:9+6
    assume {:print "$at(186,8833,8839)"} true;
    assume {:print "$track_abort(40,6):", $t7} $t7 == $t7;

    // $t4 := move($t7) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:202:9+6
    $t4 := $t7;

    // goto L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:202:9+6
    goto L5;

    // label L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:201:62+22
    assume {:print "$at(186,8798,8820)"} true;
L0:

    // $t8 := 2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:201:62+22
    assume {:print "$at(186,8798,8820)"} true;
    $t8 := 2;
    assume $IsValid'u64'($t8);

    // $t9 := error::not_found($t8) on_abort goto L5 with $t4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:201:45+40
    call $t9 := $1_error_not_found($t8);
    if ($abort_flag) {
        assume {:print "$at(186,8781,8821)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(40,6):", $t4} $t4 == $t4;
        goto L5;
    }

    // trace_abort($t9) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:201:9+6
    assume {:print "$at(186,8745,8751)"} true;
    assume {:print "$track_abort(40,6):", $t9} $t9 == $t9;

    // $t4 := move($t9) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:201:9+6
    $t4 := $t9;

    // goto L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:201:9+6
    goto L5;

    // label L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:204:5+1
    assume {:print "$at(186,8950,8951)"} true;
L4:

    // return $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:204:5+1
    assume {:print "$at(186,8950,8951)"} true;
    $ret0 := $t5;
    return;

    // label L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:204:5+1
L5:

    // abort($t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:204:5+1
    assume {:print "$at(186,8950,8951)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun object::address_to_object<0x1::fungible_asset::Metadata> [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:200:5+282
procedure {:inline 1} $1_object_address_to_object'$1_fungible_asset_Metadata'(_$t0: int) returns ($ret0: $1_object_Object'$1_fungible_asset_Metadata')
{
    // declare local variables
    var $t1: bool;
    var $t2: bool;
    var $t3: bool;
    var $t4: int;
    var $t5: $1_object_Object'$1_fungible_asset_Metadata';
    var $t6: int;
    var $t7: int;
    var $t8: int;
    var $t9: int;
    var $t0: int;
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[object]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:200:5+1
    assume {:print "$at(186,8669,8670)"} true;
    assume {:print "$track_local(40,6,0):", $t0} $t0 == $t0;

    // $t1 := exists<0x1::object::ObjectCore>($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:201:17+26
    assume {:print "$at(186,8753,8779)"} true;
    $t1 := $ResourceExists($1_object_ObjectCore_$memory, $t0);

    // if ($t1) goto L1 else goto L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:201:9+6
    if ($t1) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:202:17+20
    assume {:print "$at(186,8841,8861)"} true;
L1:

    // $t2 := opaque begin: object::exists_at<#0>($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:202:17+20
    assume {:print "$at(186,8841,8861)"} true;

    // $t3 := havoc[val]() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:202:17+20
    havoc $t3;

    // if ($t3) goto L7 else goto L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:202:17+20
    if ($t3) { goto L7; } else { goto L6; }

    // label L7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:202:17+20
L7:

    // trace_abort($t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:202:17+20
    assume {:print "$at(186,8841,8861)"} true;
    assume {:print "$track_abort(40,6):", $t4} $t4 == $t4;

    // goto L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:202:17+20
    goto L5;

    // label L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:202:17+20
L6:

    // assume WellFormed($t2) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:202:17+20
    assume {:print "$at(186,8841,8861)"} true;
    assume $IsValid'bool'($t2);

    // assume Eq<bool>($t2, object::spec_exists_at<#0>($t0)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:202:17+20
    assume $IsEqual'bool'($t2, $1_object_spec_exists_at'$1_fungible_asset_Metadata'($t0));

    // $t2 := opaque end: object::exists_at<#0>($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:202:17+20

    // if ($t2) goto L3 else goto L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:202:9+6
    if ($t2) { goto L3; } else { goto L2; }

    // label L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:203:9+27
    assume {:print "$at(186,8917,8944)"} true;
L3:

    // $t5 := pack 0x1::object::Object<#0>($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:203:9+27
    assume {:print "$at(186,8917,8944)"} true;
    $t5 := $1_object_Object'$1_fungible_asset_Metadata'($t0);

    // trace_return[0]($t5) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:200:70+217
    assume {:print "$at(186,8734,8951)"} true;
    assume {:print "$track_return(40,6,0):", $t5} $t5 == $t5;

    // goto L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:200:70+217
    goto L4;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:202:56+24
    assume {:print "$at(186,8880,8904)"} true;
L2:

    // $t6 := 7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:202:56+24
    assume {:print "$at(186,8880,8904)"} true;
    $t6 := 7;
    assume $IsValid'u64'($t6);

    // $t7 := error::not_found($t6) on_abort goto L5 with $t4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:202:39+42
    call $t7 := $1_error_not_found($t6);
    if ($abort_flag) {
        assume {:print "$at(186,8863,8905)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(40,6):", $t4} $t4 == $t4;
        goto L5;
    }

    // trace_abort($t7) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:202:9+6
    assume {:print "$at(186,8833,8839)"} true;
    assume {:print "$track_abort(40,6):", $t7} $t7 == $t7;

    // $t4 := move($t7) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:202:9+6
    $t4 := $t7;

    // goto L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:202:9+6
    goto L5;

    // label L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:201:62+22
    assume {:print "$at(186,8798,8820)"} true;
L0:

    // $t8 := 2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:201:62+22
    assume {:print "$at(186,8798,8820)"} true;
    $t8 := 2;
    assume $IsValid'u64'($t8);

    // $t9 := error::not_found($t8) on_abort goto L5 with $t4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:201:45+40
    call $t9 := $1_error_not_found($t8);
    if ($abort_flag) {
        assume {:print "$at(186,8781,8821)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(40,6):", $t4} $t4 == $t4;
        goto L5;
    }

    // trace_abort($t9) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:201:9+6
    assume {:print "$at(186,8745,8751)"} true;
    assume {:print "$track_abort(40,6):", $t9} $t9 == $t9;

    // $t4 := move($t9) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:201:9+6
    $t4 := $t9;

    // goto L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:201:9+6
    goto L5;

    // label L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:204:5+1
    assume {:print "$at(186,8950,8951)"} true;
L4:

    // return $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:204:5+1
    assume {:print "$at(186,8950,8951)"} true;
    $ret0 := $t5;
    return;

    // label L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:204:5+1
L5:

    // abort($t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:204:5+1
    assume {:print "$at(186,8950,8951)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun object::can_generate_delete_ref [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:390:5+95
procedure {:inline 1} $1_object_can_generate_delete_ref(_$t0: $1_object_ConstructorRef) returns ($ret0: bool)
{
    // declare local variables
    var $t1: bool;
    var $t0: $1_object_ConstructorRef;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'bool': bool;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[ref]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:390:5+1
    assume {:print "$at(186,17515,17516)"} true;
    assume {:print "$track_local(40,9,0):", $t0} $t0 == $t0;

    // $t1 := get_field<0x1::object::ConstructorRef>.can_delete($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:391:9+14
    assume {:print "$at(186,17589,17603)"} true;
    $t1 := $t0->$can_delete;

    // trace_return[0]($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:391:9+14
    assume {:print "$track_return(40,9,0):", $t1} $t1 == $t1;

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:392:5+1
    assume {:print "$at(186,17609,17610)"} true;
L1:

    // return $t1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:392:5+1
    assume {:print "$at(186,17609,17610)"} true;
    $ret0 := $t1;
    return;

}

// fun object::convert<0x1::fungible_asset::Metadata, 0x1::fungible_asset::Metadata> [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:254:5+117
procedure {:inline 1} $1_object_convert'$1_fungible_asset_Metadata_$1_fungible_asset_Metadata'(_$t0: $1_object_Object'$1_fungible_asset_Metadata') returns ($ret0: $1_object_Object'$1_fungible_asset_Metadata')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_object_Object'$1_fungible_asset_Metadata';
    var $t3: int;
    var $t0: $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[object]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:254:5+1
    assume {:print "$at(186,11112,11113)"} true;
    assume {:print "$track_local(40,10,0):", $t0} $t0 == $t0;

    // $t1 := get_field<0x1::object::Object<#0>>.inner($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:255:30+12
    assume {:print "$at(186,11209,11221)"} true;
    $t1 := $t0->$inner;

    // $t2 := object::address_to_object<#1>($t1) on_abort goto L2 with $t3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:255:9+34
    call $t2 := $1_object_address_to_object'$1_fungible_asset_Metadata'($t1);
    if ($abort_flag) {
        assume {:print "$at(186,11188,11222)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(40,10):", $t3} $t3 == $t3;
        goto L2;
    }

    // trace_return[0]($t2) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:255:9+34
    assume {:print "$track_return(40,10,0):", $t2} $t2 == $t2;

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:256:5+1
    assume {:print "$at(186,11228,11229)"} true;
L1:

    // return $t2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:256:5+1
    assume {:print "$at(186,11228,11229)"} true;
    $ret0 := $t2;
    return;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:256:5+1
L2:

    // abort($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:256:5+1
    assume {:print "$at(186,11228,11229)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun object::create_named_object [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:260:5+288
procedure {:inline 1} $1_object_create_named_object(_$t0: $signer, _$t1: Vec (int)) returns ($ret0: $1_object_ConstructorRef)
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: int;
    var $t8: int;
    var $t9: bool;
    var $t10: bool;
    var $t11: $1_object_ConstructorRef;
    var $t0: $signer;
    var $t1: Vec (int);
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t4, signer::$address_of($t0)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.spec.move:162:9+50
    assume {:print "$at(187,7097,7147)"} true;
    assume ($t4 == $1_signer_$address_of($t0));

    // assume Identical($t5, object::spec_create_object_address($t4, $t1)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.spec.move:163:9+65
    assume {:print "$at(187,7157,7222)"} true;
    assume ($t5 == $1_object_spec_create_object_address($t4, $t1));

    // trace_local[creator]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:260:5+1
    assume {:print "$at(186,11439,11440)"} true;
    assume {:print "$track_local(40,12,0):", $t0} $t0 == $t0;

    // trace_local[seed]($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:260:5+1
    assume {:print "$track_local(40,12,1):", $t1} $t1 == $t1;

    // $t6 := signer::address_of($t0) on_abort goto L2 with $t7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:261:31+27
    assume {:print "$at(186,11555,11582)"} true;
    call $t6 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(186,11555,11582)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(40,12):", $t7} $t7 == $t7;
        goto L2;
    }

    // trace_local[creator_address]($t6) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:261:31+27
    assume {:print "$track_local(40,12,2):", $t6} $t6 == $t6;

    // $t8 := opaque begin: object::create_object_address($t6, $t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:262:24+45
    assume {:print "$at(186,11608,11653)"} true;

    // $t9 := havoc[val]() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:262:24+45
    havoc $t9;

    // if ($t9) goto L4 else goto L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:262:24+45
    if ($t9) { goto L4; } else { goto L3; }

    // label L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:262:24+45
L4:

    // trace_abort($t7) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:262:24+45
    assume {:print "$at(186,11608,11653)"} true;
    assume {:print "$track_abort(40,12):", $t7} $t7 == $t7;

    // goto L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:262:24+45
    goto L2;

    // label L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:262:24+45
L3:

    // assume WellFormed($t8) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:262:24+45
    assume {:print "$at(186,11608,11653)"} true;
    assume $IsValid'address'($t8);

    // assume Eq<address>($t8, object::spec_create_object_address($t6, $t1)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:262:24+45
    assume $IsEqual'address'($t8, $1_object_spec_create_object_address($t6, $t1));

    // $t8 := opaque end: object::create_object_address($t6, $t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:262:24+45

    // trace_local[obj_addr]($t8) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:262:24+45
    assume {:print "$track_local(40,12,3):", $t8} $t8 == $t8;

    // $t10 := false at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:263:59+5
    assume {:print "$at(186,11714,11719)"} true;
    $t10 := false;
    assume $IsValid'bool'($t10);

    // $t11 := object::create_object_internal($t6, $t8, $t10) on_abort goto L2 with $t7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:263:9+56
    call $t11 := $1_object_create_object_internal($t6, $t8, $t10);
    if ($abort_flag) {
        assume {:print "$at(186,11664,11720)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(40,12):", $t7} $t7 == $t7;
        goto L2;
    }

    // trace_return[0]($t11) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:263:9+56
    assume {:print "$track_return(40,12,0):", $t11} $t11 == $t11;

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:264:5+1
    assume {:print "$at(186,11726,11727)"} true;
L1:

    // return $t11 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:264:5+1
    assume {:print "$at(186,11726,11727)"} true;
    $ret0 := $t11;
    return;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:264:5+1
L2:

    // abort($t7) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:264:5+1
    assume {:print "$at(186,11726,11727)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// fun object::create_object_internal [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:327:5+787
procedure {:inline 1} $1_object_create_object_internal(_$t0: int, _$t1: int, _$t2: bool) returns ($ret0: $1_object_ConstructorRef)
{
    // declare local variables
    var $t3: $signer;
    var $t4: int;
    var $t5: $1_guid_GUID;
    var $t6: bool;
    var $t7: $signer;
    var $t8: int;
    var $t9: $Mutation (int);
    var $t10: $1_guid_GUID;
    var $t11: int;
    var $t12: int;
    var $t13: bool;
    var $t14: $1_event_EventHandle'$1_object_TransferEvent';
    var $t15: $1_object_ObjectCore;
    var $t16: $1_object_ConstructorRef;
    var $t17: int;
    var $t18: int;
    var $t0: int;
    var $t1: int;
    var $t2: bool;
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // bytecode translation starts here
    // trace_local[creator_address]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:327:5+1
    assume {:print "$at(186,15044,15045)"} true;
    assume {:print "$track_local(40,18,0):", $t0} $t0 == $t0;

    // trace_local[object]($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:327:5+1
    assume {:print "$track_local(40,18,1):", $t1} $t1 == $t1;

    // trace_local[can_delete]($t2) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:327:5+1
    assume {:print "$track_local(40,18,2):", $t2} $t2 == $t2;

    // $t6 := exists<0x1::object::ObjectCore>($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:332:18+26
    assume {:print "$at(186,15203,15229)"} true;
    $t6 := $ResourceExists($1_object_ObjectCore_$memory, $t1);

    // if ($t6) goto L0 else goto L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:332:17+27
    if ($t6) { goto L0; } else { goto L1; }

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:334:29+21
    assume {:print "$at(186,15302,15323)"} true;
L1:

    // $t7 := opaque begin: create_signer::create_signer($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:334:29+21
    assume {:print "$at(186,15302,15323)"} true;

    // assume WellFormed($t7) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:334:29+21
    assume $IsValid'signer'($t7) && $1_signer_is_txn_signer($t7) && $1_signer_is_txn_signer_addr($t7->$addr);

    // assume Eq<address>(signer::$address_of($t7), $t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:334:29+21
    assume $IsEqual'address'($1_signer_$address_of($t7), $t1);

    // assume Eq<signer>($t7, create_signer::spec_create_signer($t1)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:334:29+21
    assume $IsEqual'signer'($t7, $1_create_signer_spec_create_signer($t1));

    // $t7 := opaque end: create_signer::create_signer($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:334:29+21

    // trace_local[object_signer]($t7) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:334:29+21
    assume {:print "$track_local(40,18,3):", $t7} $t7 == $t7;

    // $t8 := 1125899906842624 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:335:33+22
    assume {:print "$at(186,15358,15380)"} true;
    $t8 := 1125899906842624;
    assume $IsValid'u64'($t8);

    // $t4 := $t8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:335:33+22
    $t4 := $t8;

    // trace_local[guid_creation_num]($t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:335:33+22
    assume {:print "$track_local(40,18,4):", $t4} $t4 == $t4;

    // $t9 := borrow_local($t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:336:57+22
    assume {:print "$at(186,15439,15461)"} true;
    $t9 := $Mutation($Local(4), EmptyVec(), $t4);

    // $t10 := guid::create($t1, $t9) on_abort goto L3 with $t11 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:336:36+44
    call $t10,$t9 := $1_guid_create($t1, $t9);
    if ($abort_flag) {
        assume {:print "$at(186,15418,15462)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(40,18):", $t11} $t11 == $t11;
        goto L3;
    }

    // write_back[LocalRoot($t4)@]($t9) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:336:36+44
    $t4 := $Dereference($t9);

    // trace_local[guid_creation_num]($t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:336:36+44
    assume {:print "$track_local(40,18,4):", $t4} $t4 == $t4;

    // trace_local[transfer_events_guid]($t10) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:336:36+44
    assume {:print "$track_local(40,18,5):", $t10} $t10 == $t10;

    // $t12 := move($t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:341:17+17
    assume {:print "$at(186,15556,15573)"} true;
    $t12 := $t4;

    // $t13 := true at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:343:41+4
    assume {:print "$at(186,15657,15661)"} true;
    $t13 := true;
    assume $IsValid'bool'($t13);

    // $t14 := event::new_event_handle<0x1::object::TransferEvent>($t10) on_abort goto L3 with $t11 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:344:34+45
    assume {:print "$at(186,15697,15742)"} true;
    call $t14 := $1_event_new_event_handle'$1_object_TransferEvent'($t10);
    if ($abort_flag) {
        assume {:print "$at(186,15697,15742)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(40,18):", $t11} $t11 == $t11;
        goto L3;
    }

    // $t15 := pack 0x1::object::ObjectCore($t12, $t0, $t13, $t14) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:340:13+232
    assume {:print "$at(186,15526,15758)"} true;
    $t15 := $1_object_ObjectCore($t12, $t0, $t13, $t14);

    // move_to<0x1::object::ObjectCore>($t15, $t7) on_abort goto L3 with $t11 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:338:9+295
    assume {:print "$at(186,15475,15770)"} true;
    if ($ResourceExists($1_object_ObjectCore_$memory, $t7->$addr)) {
        call $ExecFailureAbort();
    } else {
        $1_object_ObjectCore_$memory := $ResourceUpdate($1_object_ObjectCore_$memory, $t7->$addr, $t15);
    }
    if ($abort_flag) {
        assume {:print "$at(186,15475,15770)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(40,18):", $t11} $t11 == $t11;
        goto L3;
    }

    // $t16 := pack 0x1::object::ConstructorRef($t1, $t2) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:347:9+43
    assume {:print "$at(186,15781,15824)"} true;
    $t16 := $1_object_ConstructorRef($t1, $t2);

    // trace_return[0]($t16) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:331:23+648
    assume {:print "$at(186,15183,15831)"} true;
    assume {:print "$track_return(40,18,0):", $t16} $t16 == $t16;

    // goto L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:331:23+648
    goto L2;

    // label L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:332:68+14
    assume {:print "$at(186,15253,15267)"} true;
L0:

    // $t17 := 1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:332:68+14
    assume {:print "$at(186,15253,15267)"} true;
    $t17 := 1;
    assume $IsValid'u64'($t17);

    // $t18 := error::already_exists($t17) on_abort goto L3 with $t11 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:332:46+37
    call $t18 := $1_error_already_exists($t17);
    if ($abort_flag) {
        assume {:print "$at(186,15231,15268)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(40,18):", $t11} $t11 == $t11;
        goto L3;
    }

    // trace_abort($t18) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:332:9+6
    assume {:print "$at(186,15194,15200)"} true;
    assume {:print "$track_abort(40,18):", $t18} $t18 == $t18;

    // $t11 := move($t18) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:332:9+6
    $t11 := $t18;

    // goto L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:332:9+6
    goto L3;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:348:5+1
    assume {:print "$at(186,15830,15831)"} true;
L2:

    // return $t16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:348:5+1
    assume {:print "$at(186,15830,15831)"} true;
    $ret0 := $t16;
    return;

    // label L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:348:5+1
L3:

    // abort($t11) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:348:5+1
    assume {:print "$at(186,15830,15831)"} true;
    $abort_code := $t11;
    $abort_flag := true;
    return;

}

// fun object::create_sticky_object_at_address [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:289:5+220
procedure {:inline 1} $1_object_create_sticky_object_at_address(_$t0: int, _$t1: int) returns ($ret0: $1_object_ConstructorRef)
{
    // declare local variables
    var $t2: bool;
    var $t3: $1_object_ConstructorRef;
    var $t4: int;
    var $t0: int;
    var $t1: int;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'address': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[owner_address]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:289:5+1
    assume {:print "$at(186,13164,13165)"} true;
    assume {:print "$track_local(40,20,0):", $t0} $t0 == $t0;

    // trace_local[object_address]($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:289:5+1
    assume {:print "$track_local(40,20,1):", $t1} $t1 == $t1;

    // $t2 := false at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:293:63+5
    assume {:print "$at(186,13371,13376)"} true;
    $t2 := false;
    assume $IsValid'bool'($t2);

    // $t3 := object::create_object_internal($t0, $t1, $t2) on_abort goto L2 with $t4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:293:9+60
    call $t3 := $1_object_create_object_internal($t0, $t1, $t2);
    if ($abort_flag) {
        assume {:print "$at(186,13317,13377)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(40,20):", $t4} $t4 == $t4;
        goto L2;
    }

    // trace_return[0]($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:293:9+60
    assume {:print "$track_return(40,20,0):", $t3} $t3 == $t3;

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:294:5+1
    assume {:print "$at(186,13383,13384)"} true;
L1:

    // return $t3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:294:5+1
    assume {:print "$at(186,13383,13384)"} true;
    $ret0 := $t3;
    return;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:294:5+1
L2:

    // abort($t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:294:5+1
    assume {:print "$at(186,13383,13384)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun object::object_address<0x1::fungible_asset::FungibleStore> [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:249:5+93
procedure {:inline 1} $1_object_object_address'$1_fungible_asset_FungibleStore'(_$t0: $1_object_Object'$1_fungible_asset_FungibleStore') returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t0: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[object]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:249:5+1
    assume {:print "$at(186,10970,10971)"} true;
    assume {:print "$track_local(40,21,0):", $t0} $t0 == $t0;

    // $t1 := get_field<0x1::object::Object<#0>>.inner($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:250:9+12
    assume {:print "$at(186,11044,11056)"} true;
    $t1 := $t0->$inner;

    // trace_return[0]($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:250:9+12
    assume {:print "$track_return(40,21,0):", $t1} $t1 == $t1;

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:251:5+1
    assume {:print "$at(186,11062,11063)"} true;
L1:

    // return $t1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:251:5+1
    assume {:print "$at(186,11062,11063)"} true;
    $ret0 := $t1;
    return;

}

// fun object::object_address<0x1::fungible_asset::Metadata> [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:249:5+93
procedure {:inline 1} $1_object_object_address'$1_fungible_asset_Metadata'(_$t0: $1_object_Object'$1_fungible_asset_Metadata') returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t0: $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[object]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:249:5+1
    assume {:print "$at(186,10970,10971)"} true;
    assume {:print "$track_local(40,21,0):", $t0} $t0 == $t0;

    // $t1 := get_field<0x1::object::Object<#0>>.inner($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:250:9+12
    assume {:print "$at(186,11044,11056)"} true;
    $t1 := $t0->$inner;

    // trace_return[0]($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:250:9+12
    assume {:print "$track_return(40,21,0):", $t1} $t1 == $t1;

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:251:5+1
    assume {:print "$at(186,11062,11063)"} true;
L1:

    // return $t1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:251:5+1
    assume {:print "$at(186,11062,11063)"} true;
    $ret0 := $t1;
    return;

}

// fun object::create_user_derived_object [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:268:5+280
procedure {:inline 1} $1_object_create_user_derived_object(_$t0: int, _$t1: $1_object_DeriveRef) returns ($ret0: $1_object_ConstructorRef)
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: bool;
    var $t7: int;
    var $t8: bool;
    var $t9: $1_object_ConstructorRef;
    var $t0: int;
    var $t1: $1_object_DeriveRef;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_DeriveRef': $1_object_DeriveRef;
    var $temp_0'address': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t3, object::spec_create_user_derived_object_address($t0, select object::DeriveRef.self<0x1::object::DeriveRef>($t1))) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.spec.move:185:9+89
    assume {:print "$at(187,8052,8141)"} true;
    assume ($t3 == $1_object_spec_create_user_derived_object_address($t0, $t1->$self));

    // trace_local[creator_address]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:268:5+1
    assume {:print "$at(186,11917,11918)"} true;
    assume {:print "$track_local(40,22,0):", $t0} $t0 == $t0;

    // trace_local[derive_ref]($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:268:5+1
    assume {:print "$track_local(40,22,1):", $t1} $t1 == $t1;

    // $t4 := get_field<0x1::object::DeriveRef>.self($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:269:76+15
    assume {:print "$at(186,12107,12122)"} true;
    $t4 := $t1->$self;

    // $t5 := opaque begin: object::create_user_derived_object_address($t0, $t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:269:24+68

    // $t6 := havoc[val]() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:269:24+68
    havoc $t6;

    // if ($t6) goto L4 else goto L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:269:24+68
    if ($t6) { goto L4; } else { goto L3; }

    // label L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:269:24+68
L4:

    // trace_abort($t7) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:269:24+68
    assume {:print "$at(186,12055,12123)"} true;
    assume {:print "$track_abort(40,22):", $t7} $t7 == $t7;

    // goto L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:269:24+68
    goto L2;

    // label L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:269:24+68
L3:

    // assume WellFormed($t5) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:269:24+68
    assume {:print "$at(186,12055,12123)"} true;
    assume $IsValid'address'($t5);

    // assume Eq<address>($t5, object::spec_create_user_derived_object_address($t0, $t4)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:269:24+68
    assume $IsEqual'address'($t5, $1_object_spec_create_user_derived_object_address($t0, $t4));

    // $t5 := opaque end: object::create_user_derived_object_address($t0, $t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:269:24+68

    // trace_local[$t4]($t5) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:269:24+68
    assume {:print "$track_local(40,22,2):", $t5} $t5 == $t5;

    // $t8 := false at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:270:59+5
    assume {:print "$at(186,12184,12189)"} true;
    $t8 := false;
    assume $IsValid'bool'($t8);

    // $t9 := object::create_object_internal($t0, $t5, $t8) on_abort goto L2 with $t7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:270:9+56
    call $t9 := $1_object_create_object_internal($t0, $t5, $t8);
    if ($abort_flag) {
        assume {:print "$at(186,12134,12190)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(40,22):", $t7} $t7 == $t7;
        goto L2;
    }

    // trace_return[0]($t9) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:270:9+56
    assume {:print "$track_return(40,22,0):", $t9} $t9 == $t9;

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:271:5+1
    assume {:print "$at(186,12196,12197)"} true;
L1:

    // return $t9 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:271:5+1
    assume {:print "$at(186,12196,12197)"} true;
    $ret0 := $t9;
    return;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:271:5+1
L2:

    // abort($t7) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:271:5+1
    assume {:print "$at(186,12196,12197)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// fun object::disable_ungated_transfer [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:454:5+194
procedure {:inline 1} $1_object_disable_ungated_transfer(_$t0: $1_object_TransferRef) returns ()
{
    // declare local variables
    var $t1: $Mutation ($1_object_ObjectCore);
    var $t2: int;
    var $t3: $Mutation ($1_object_ObjectCore);
    var $t4: int;
    var $t5: bool;
    var $t6: $Mutation (bool);
    var $t0: $1_object_TransferRef;
    var $temp_0'$1_object_ObjectCore': $1_object_ObjectCore;
    var $temp_0'$1_object_TransferRef': $1_object_TransferRef;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[ref]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:454:5+1
    assume {:print "$at(186,19606,19607)"} true;
    assume {:print "$track_local(40,26,0):", $t0} $t0 == $t0;

    // $t2 := get_field<0x1::object::TransferRef>.self($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:455:52+8
    assume {:print "$at(186,19735,19743)"} true;
    $t2 := $t0->$self;

    // $t3 := borrow_global<0x1::object::ObjectCore>($t2) on_abort goto L2 with $t4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:455:22+39
    if (!$ResourceExists($1_object_ObjectCore_$memory, $t2)) {
        call $ExecFailureAbort();
    } else {
        $t3 := $Mutation($Global($t2), EmptyVec(), $ResourceValue($1_object_ObjectCore_$memory, $t2));
    }
    if ($abort_flag) {
        assume {:print "$at(186,19705,19744)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(40,26):", $t4} $t4 == $t4;
        goto L2;
    }

    // trace_local[object]($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:455:22+39
    $temp_0'$1_object_ObjectCore' := $Dereference($t3);
    assume {:print "$track_local(40,26,1):", $temp_0'$1_object_ObjectCore'} $temp_0'$1_object_ObjectCore' == $temp_0'$1_object_ObjectCore';

    // $t5 := false at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:456:41+5
    assume {:print "$at(186,19787,19792)"} true;
    $t5 := false;
    assume $IsValid'bool'($t5);

    // $t6 := borrow_field<0x1::object::ObjectCore>.allow_ungated_transfer($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:456:9+29
    $t6 := $ChildMutation($t3, 2, $Dereference($t3)->$allow_ungated_transfer);

    // write_ref($t6, $t5) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:456:9+37
    $t6 := $UpdateMutation($t6, $t5);

    // write_back[Reference($t3).allow_ungated_transfer (bool)]($t6) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:456:9+37
    $t3 := $UpdateMutation($t3, $Update'$1_object_ObjectCore'_allow_ungated_transfer($Dereference($t3), $Dereference($t6)));

    // write_back[0x1::object::ObjectCore@]($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:456:9+37
    $1_object_ObjectCore_$memory := $ResourceUpdate($1_object_ObjectCore_$memory, $GlobalLocationAddress($t3),
        $Dereference($t3));

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:457:5+1
    assume {:print "$at(186,19799,19800)"} true;
L1:

    // return () at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:457:5+1
    assume {:print "$at(186,19799,19800)"} true;
    return;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:457:5+1
L2:

    // abort($t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:457:5+1
    assume {:print "$at(186,19799,19800)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun object::generate_derive_ref [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:370:5+110
procedure {:inline 1} $1_object_generate_derive_ref(_$t0: $1_object_ConstructorRef) returns ($ret0: $1_object_DeriveRef)
{
    // declare local variables
    var $t1: int;
    var $t2: $1_object_DeriveRef;
    var $t0: $1_object_ConstructorRef;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_DeriveRef': $1_object_DeriveRef;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[ref]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:370:5+1
    assume {:print "$at(186,16799,16800)"} true;
    assume {:print "$track_local(40,29,0):", $t0} $t0 == $t0;

    // $t1 := get_field<0x1::object::ConstructorRef>.self($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:371:27+8
    assume {:print "$at(186,16892,16900)"} true;
    $t1 := $t0->$self;

    // $t2 := pack 0x1::object::DeriveRef($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:371:9+28
    $t2 := $1_object_DeriveRef($t1);

    // trace_return[0]($t2) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:371:9+28
    assume {:print "$track_return(40,29,0):", $t2} $t2 == $t2;

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:372:5+1
    assume {:print "$at(186,16908,16909)"} true;
L1:

    // return $t2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:372:5+1
    assume {:print "$at(186,16908,16909)"} true;
    $ret0 := $t2;
    return;

}

// fun object::generate_signer [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:375:5+98
procedure {:inline 1} $1_object_generate_signer(_$t0: $1_object_ConstructorRef) returns ($ret0: $signer)
{
    // declare local variables
    var $t1: int;
    var $t2: $signer;
    var $t0: $1_object_ConstructorRef;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[ref]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:375:5+1
    assume {:print "$at(186,16965,16966)"} true;
    assume {:print "$track_local(40,32,0):", $t0} $t0 == $t0;

    // $t1 := get_field<0x1::object::ConstructorRef>.self($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:376:23+8
    assume {:print "$at(186,17047,17055)"} true;
    $t1 := $t0->$self;

    // $t2 := opaque begin: create_signer::create_signer($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:376:9+23

    // assume WellFormed($t2) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:376:9+23
    assume $IsValid'signer'($t2) && $1_signer_is_txn_signer($t2) && $1_signer_is_txn_signer_addr($t2->$addr);

    // assume Eq<address>(signer::$address_of($t2), $t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:376:9+23
    assume $IsEqual'address'($1_signer_$address_of($t2), $t1);

    // assume Eq<signer>($t2, create_signer::spec_create_signer($t1)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:376:9+23
    assume $IsEqual'signer'($t2, $1_create_signer_spec_create_signer($t1));

    // $t2 := opaque end: create_signer::create_signer($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:376:9+23

    // trace_return[0]($t2) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:376:9+23
    assume {:print "$track_return(40,32,0):", $t2} $t2 == $t2;

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:377:5+1
    assume {:print "$at(186,17062,17063)"} true;
L1:

    // return $t2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:377:5+1
    assume {:print "$at(186,17062,17063)"} true;
    $ret0 := $t2;
    return;

}

// fun object::generate_transfer_ref [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:364:5+222
procedure {:inline 1} $1_object_generate_transfer_ref(_$t0: $1_object_ConstructorRef) returns ($ret0: $1_object_TransferRef)
{
    // declare local variables
    var $t1: int;
    var $t2: bool;
    var $t3: int;
    var $t4: $1_object_TransferRef;
    var $t5: int;
    var $t6: int;
    var $t7: int;
    var $t0: $1_object_ConstructorRef;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_TransferRef': $1_object_TransferRef;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[ref]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:364:5+1
    assume {:print "$at(186,16453,16454)"} true;
    assume {:print "$track_local(40,34,0):", $t0} $t0 == $t0;

    // $t1 := get_field<0x1::object::ConstructorRef>.self($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:365:41+8
    assume {:print "$at(186,16564,16572)"} true;
    $t1 := $t0->$self;

    // $t2 := exists<0x1::object::Untransferable>($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:365:18+32
    $t2 := $ResourceExists($1_object_Untransferable_$memory, $t1);

    // if ($t2) goto L0 else goto L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:365:17+33
    if ($t2) { goto L0; } else { goto L1; }

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:366:29+8
    assume {:print "$at(186,16658,16666)"} true;
L1:

    // $t3 := get_field<0x1::object::ConstructorRef>.self($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:366:29+8
    assume {:print "$at(186,16658,16666)"} true;
    $t3 := $t0->$self;

    // $t4 := pack 0x1::object::TransferRef($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:366:9+30
    $t4 := $1_object_TransferRef($t3);

    // trace_return[0]($t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:364:73+154
    assume {:print "$at(186,16521,16675)"} true;
    assume {:print "$track_return(40,34,0):", $t4} $t4 == $t4;

    // goto L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:364:73+154
    goto L2;

    // label L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:365:9+6
    assume {:print "$at(186,16532,16538)"} true;
L0:

    // $t5 := 9 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:365:77+25
    assume {:print "$at(186,16600,16625)"} true;
    $t5 := 9;
    assume $IsValid'u64'($t5);

    // $t6 := error::permission_denied($t5) on_abort goto L3 with $t7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:365:52+51
    call $t6 := $1_error_permission_denied($t5);
    if ($abort_flag) {
        assume {:print "$at(186,16575,16626)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(40,34):", $t7} $t7 == $t7;
        goto L3;
    }

    // trace_abort($t6) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:365:9+6
    assume {:print "$at(186,16532,16538)"} true;
    assume {:print "$track_abort(40,34):", $t6} $t6 == $t6;

    // $t7 := move($t6) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:365:9+6
    $t7 := $t6;

    // goto L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:365:9+6
    goto L3;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:367:5+1
    assume {:print "$at(186,16674,16675)"} true;
L2:

    // return $t4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:367:5+1
    assume {:print "$at(186,16674,16675)"} true;
    $ret0 := $t4;
    return;

    // label L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:367:5+1
L3:

    // abort($t7) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:367:5+1
    assume {:print "$at(186,16674,16675)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// fun object::is_burnt<0x1::fungible_asset::FungibleStore> [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:195:5+102
procedure {:inline 1} $1_object_is_burnt'$1_fungible_asset_FungibleStore'(_$t0: $1_object_Object'$1_fungible_asset_FungibleStore') returns ($ret0: bool)
{
    // declare local variables
    var $t1: int;
    var $t2: bool;
    var $t0: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'bool': bool;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[object]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:195:5+1
    assume {:print "$at(186,8483,8484)"} true;
    assume {:print "$track_local(40,37,0):", $t0} $t0 == $t0;

    // $t1 := get_field<0x1::object::Object<#0>>.inner($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:196:27+12
    assume {:print "$at(186,8565,8577)"} true;
    $t1 := $t0->$inner;

    // $t2 := exists<0x1::object::TombStone>($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:196:9+31
    $t2 := $ResourceExists($1_object_TombStone_$memory, $t1);

    // trace_return[0]($t2) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:196:9+31
    assume {:print "$track_return(40,37,0):", $t2} $t2 == $t2;

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:197:5+1
    assume {:print "$at(186,8584,8585)"} true;
L1:

    // return $t2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:197:5+1
    assume {:print "$at(186,8584,8585)"} true;
    $ret0 := $t2;
    return;

}

// fun object::object_exists<0x1::coin::PairedCoinType> [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:212:5+124
procedure {:inline 1} $1_object_object_exists'$1_coin_PairedCoinType'(_$t0: int) returns ($ret0: bool)
{
    // declare local variables
    var $t1: bool;
    var $t2: bool;
    var $t3: bool;
    var $t4: bool;
    var $t5: int;
    var $t6: bool;
    var $t0: int;
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[object]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:212:5+1
    assume {:print "$at(186,9198,9199)"} true;
    assume {:print "$track_local(40,41,0):", $t0} $t0 == $t0;

    // $t2 := exists<0x1::object::ObjectCore>($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:213:9+26
    assume {:print "$at(186,9265,9291)"} true;
    $t2 := $ResourceExists($1_object_ObjectCore_$memory, $t0);

    // if ($t2) goto L1 else goto L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:213:9+50
    if ($t2) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:213:39+20
L1:

    // $t3 := opaque begin: object::exists_at<#0>($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:213:39+20
    assume {:print "$at(186,9295,9315)"} true;

    // $t4 := havoc[val]() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:213:39+20
    havoc $t4;

    // if ($t4) goto L6 else goto L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:213:39+20
    if ($t4) { goto L6; } else { goto L5; }

    // label L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:213:39+20
L6:

    // trace_abort($t5) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:213:39+20
    assume {:print "$at(186,9295,9315)"} true;
    assume {:print "$track_abort(40,41):", $t5} $t5 == $t5;

    // goto L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:213:39+20
    goto L4;

    // label L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:213:39+20
L5:

    // assume WellFormed($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:213:39+20
    assume {:print "$at(186,9295,9315)"} true;
    assume $IsValid'bool'($t3);

    // assume Eq<bool>($t3, object::spec_exists_at<#0>($t0)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:213:39+20
    assume $IsEqual'bool'($t3, $1_object_spec_exists_at'$1_coin_PairedCoinType'($t0));

    // $t3 := opaque end: object::exists_at<#0>($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:213:39+20

    // $t1 := $t3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:213:39+20
    $t1 := $t3;

    // trace_local[$t2]($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:213:39+20
    assume {:print "$track_local(40,41,1):", $t3} $t3 == $t3;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:213:9+50
L2:

    // trace_return[0]($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:213:9+50
    assume {:print "$at(186,9265,9315)"} true;
    assume {:print "$track_return(40,41,0):", $t1} $t1 == $t1;

    // goto L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:213:9+50
    goto L3;

    // label L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:213:9+50
L0:

    // $t6 := false at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:213:9+50
    assume {:print "$at(186,9265,9315)"} true;
    $t6 := false;
    assume $IsValid'bool'($t6);

    // $t1 := $t6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:213:9+50
    $t1 := $t6;

    // trace_local[$t2]($t6) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:213:9+50
    assume {:print "$track_local(40,41,1):", $t6} $t6 == $t6;

    // goto L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:213:9+50
    goto L2;

    // label L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:214:5+1
    assume {:print "$at(186,9321,9322)"} true;
L3:

    // return $t1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:214:5+1
    assume {:print "$at(186,9321,9322)"} true;
    $ret0 := $t1;
    return;

    // label L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:214:5+1
L4:

    // abort($t5) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:214:5+1
    assume {:print "$at(186,9321,9322)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun object::object_from_constructor_ref<0x1::fungible_asset::FungibleStore> [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:385:5+128
procedure {:inline 1} $1_object_object_from_constructor_ref'$1_fungible_asset_FungibleStore'(_$t0: $1_object_ConstructorRef) returns ($ret0: $1_object_Object'$1_fungible_asset_FungibleStore')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t3: int;
    var $t0: $1_object_ConstructorRef;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[ref]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:385:5+1
    assume {:print "$at(186,17296,17297)"} true;
    assume {:print "$track_local(40,42,0):", $t0} $t0 == $t0;

    // $t1 := get_field<0x1::object::ConstructorRef>.self($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:386:30+8
    assume {:print "$at(186,17408,17416)"} true;
    $t1 := $t0->$self;

    // $t2 := object::address_to_object<#0>($t1) on_abort goto L2 with $t3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:386:9+30
    call $t2 := $1_object_address_to_object'$1_fungible_asset_FungibleStore'($t1);
    if ($abort_flag) {
        assume {:print "$at(186,17387,17417)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(40,42):", $t3} $t3 == $t3;
        goto L2;
    }

    // trace_return[0]($t2) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:386:9+30
    assume {:print "$track_return(40,42,0):", $t2} $t2 == $t2;

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:387:5+1
    assume {:print "$at(186,17423,17424)"} true;
L1:

    // return $t2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:387:5+1
    assume {:print "$at(186,17423,17424)"} true;
    $ret0 := $t2;
    return;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:387:5+1
L2:

    // abort($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:387:5+1
    assume {:print "$at(186,17423,17424)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun object::object_from_constructor_ref<0x1::fungible_asset::Metadata> [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:385:5+128
procedure {:inline 1} $1_object_object_from_constructor_ref'$1_fungible_asset_Metadata'(_$t0: $1_object_ConstructorRef) returns ($ret0: $1_object_Object'$1_fungible_asset_Metadata')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_object_Object'$1_fungible_asset_Metadata';
    var $t3: int;
    var $t0: $1_object_ConstructorRef;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[ref]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:385:5+1
    assume {:print "$at(186,17296,17297)"} true;
    assume {:print "$track_local(40,42,0):", $t0} $t0 == $t0;

    // $t1 := get_field<0x1::object::ConstructorRef>.self($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:386:30+8
    assume {:print "$at(186,17408,17416)"} true;
    $t1 := $t0->$self;

    // $t2 := object::address_to_object<#0>($t1) on_abort goto L2 with $t3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:386:9+30
    call $t2 := $1_object_address_to_object'$1_fungible_asset_Metadata'($t1);
    if ($abort_flag) {
        assume {:print "$at(186,17387,17417)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(40,42):", $t3} $t3 == $t3;
        goto L2;
    }

    // trace_return[0]($t2) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:386:9+30
    assume {:print "$track_return(40,42,0):", $t2} $t2 == $t2;

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:387:5+1
    assume {:print "$at(186,17423,17424)"} true;
L1:

    // return $t2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:387:5+1
    assume {:print "$at(186,17423,17424)"} true;
    $ret0 := $t2;
    return;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:387:5+1
L2:

    // abort($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:387:5+1
    assume {:print "$at(186,17423,17424)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun object::owns<0x1::fungible_asset::FungibleStore> [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:696:5+920
procedure {:inline 1} $1_object_owns'$1_fungible_asset_FungibleStore'(_$t0: $1_object_Object'$1_fungible_asset_FungibleStore', _$t1: int) returns ($ret0: bool)
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: $1_object_ObjectCore;
    var $t7: int;
    var $t8: int;
    var $t9: int;
    var $t10: bool;
    var $t11: bool;
    var $t12: bool;
    var $t13: bool;
    var $t14: $1_object_ObjectCore;
    var $t15: int;
    var $t16: int;
    var $t17: bool;
    var $t18: int;
    var $t19: int;
    var $t20: int;
    var $t21: bool;
    var $t22: bool;
    var $t23: $1_object_ObjectCore;
    var $t24: int;
    var $t25: bool;
    var $t26: int;
    var $t27: int;
    var $t28: bool;
    var $t29: int;
    var $t30: int;
    var $t0: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t1: int;
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    var $temp_0'u8': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t5, select object::Object.inner<0x1::object::Object<#0>>($t0)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.spec.move:555:9+37
    assume {:print "$at(187,23029,23066)"} true;
    assume ($t5 == $t0->$inner);

    // assume Identical($t6, global<0x1::object::ObjectCore>($t5)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.spec.move:556:9+53
    assume {:print "$at(187,23076,23129)"} true;
    assume ($t6 == $ResourceValue($1_object_ObjectCore_$memory, $t5));

    // assume Identical($t7, select object::ObjectCore.owner<0x1::object::ObjectCore>($t6)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.spec.move:557:9+37
    assume {:print "$at(187,23139,23176)"} true;
    assume ($t7 == $t6->$owner);

    // trace_local[object]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:696:5+1
    assume {:print "$at(186,29883,29884)"} true;
    assume {:print "$track_local(40,44,0):", $t0} $t0 == $t0;

    // trace_local[owner]($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:696:5+1
    assume {:print "$track_local(40,44,1):", $t1} $t1 == $t1;

    // $t8 := object::object_address<#0>($t0) on_abort goto L13 with $t9 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:697:31+23
    assume {:print "$at(186,30001,30024)"} true;
    call $t8 := $1_object_object_address'$1_fungible_asset_FungibleStore'($t0);
    if ($abort_flag) {
        assume {:print "$at(186,30001,30024)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(40,44):", $t9} $t9 == $t9;
        goto L13;
    }

    // trace_local[current_address]($t8) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:697:31+23
    assume {:print "$track_local(40,44,2):", $t8} $t8 == $t8;

    // $t10 := exists<0x1::object::ObjectCore>($t8) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:700:13+35
    assume {:print "$at(186,30059,30094)"} true;
    $t10 := $ResourceExists($1_object_ObjectCore_$memory, $t8);

    // if ($t10) goto L1 else goto L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:699:9+6
    assume {:print "$at(186,30037,30043)"} true;
    if ($t10) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:704:13+15
    assume {:print "$at(186,30178,30193)"} true;
L1:

    // $t11 := ==($t8, $t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:704:13+24
    assume {:print "$at(186,30178,30202)"} true;
    $t11 := $IsEqual'address'($t8, $t1);

    // if ($t11) goto L3 else goto L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:704:9+67
    if ($t11) { goto L3; } else { goto L2; }

    // label L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:705:20+4
    assume {:print "$at(186,30226,30230)"} true;
L3:

    // $t12 := true at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:705:20+4
    assume {:print "$at(186,30226,30230)"} true;
    $t12 := true;
    assume $IsValid'bool'($t12);

    // trace_return[0]($t12) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:705:13+11
    assume {:print "$track_return(40,44,0):", $t12} $t12 == $t12;

    // $t13 := move($t12) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:705:13+11
    $t13 := $t12;

    // goto L12 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:705:13+11
    goto L12;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:708:22+42
    assume {:print "$at(186,30267,30309)"} true;
L2:

    // $t14 := get_global<0x1::object::ObjectCore>($t8) on_abort goto L13 with $t9 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:708:22+42
    assume {:print "$at(186,30267,30309)"} true;
    if (!$ResourceExists($1_object_ObjectCore_$memory, $t8)) {
        call $ExecFailureAbort();
    } else {
        $t14 := $ResourceValue($1_object_ObjectCore_$memory, $t8);
    }
    if ($abort_flag) {
        assume {:print "$at(186,30267,30309)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(40,44):", $t9} $t9 == $t9;
        goto L13;
    }

    // $t15 := get_field<0x1::object::ObjectCore>.owner($t14) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:709:31+12
    assume {:print "$at(186,30342,30354)"} true;
    $t15 := $t14->$owner;

    // trace_local[$t9]($t15) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:709:31+12
    assume {:print "$track_local(40,44,3):", $t15} $t15 == $t15;

    // $t16 := 0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:711:21+1
    assume {:print "$at(186,30379,30380)"} true;
    $t16 := 0;
    assume $IsValid'u8'($t16);

    // trace_local[count]($t16) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:711:21+1
    assume {:print "$track_local(40,44,4):", $t16} $t16 == $t16;

    // label L10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:712:16+5
    assume {:print "$at(186,30398,30403)"} true;
L10:

    // $t3 := havoc[val]() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:712:16+5
    assume {:print "$at(186,30398,30403)"} true;
    havoc $t3;

    // assume WellFormed($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:712:16+5
    assume $IsValid'address'($t3);

    // $t4 := havoc[val]() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:712:16+5
    havoc $t4;

    // assume WellFormed($t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:712:16+5
    assume $IsValid'u8'($t4);

    // $t17 := havoc[val]() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:712:16+5
    havoc $t17;

    // assume WellFormed($t17) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:712:16+5
    assume $IsValid'bool'($t17);

    // $t18 := havoc[val]() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:712:16+5
    havoc $t18;

    // assume WellFormed($t18) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:712:16+5
    assume $IsValid'u8'($t18);

    // $t19 := havoc[val]() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:712:16+5
    havoc $t19;

    // assume WellFormed($t19) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:712:16+5
    assume $IsValid'u8'($t19);

    // $t20 := havoc[val]() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:712:16+5
    havoc $t20;

    // assume WellFormed($t20) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:712:16+5
    assume $IsValid'u8'($t20);

    // $t21 := havoc[val]() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:712:16+5
    havoc $t21;

    // assume WellFormed($t21) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:712:16+5
    assume $IsValid'bool'($t21);

    // $t22 := havoc[val]() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:712:16+5
    havoc $t22;

    // assume WellFormed($t22) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:712:16+5
    assume $IsValid'bool'($t22);

    // $t23 := havoc[val]() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:712:16+5
    havoc $t23;

    // assume WellFormed($t23) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:712:16+5
    assume $IsValid'$1_object_ObjectCore'($t23);

    // $t24 := havoc[val]() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:712:16+5
    havoc $t24;

    // assume WellFormed($t24) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:712:16+5
    assume $IsValid'address'($t24);

    // trace_local[$t9]($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:712:16+5
    assume {:print "$info(): enter loop, variable(s) $t9, count havocked and reassigned"} true;
    assume {:print "$track_local(40,44,3):", $t3} $t3 == $t3;

    // trace_local[count]($t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:712:16+5
    assume {:print "$track_local(40,44,4):", $t4} $t4 == $t4;

    // assume Not(AbortFlag()) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:712:16+5
    assume !$abort_flag;

    // $t17 := !=($t1, $t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:712:16+24
    $t17 := !$IsEqual'address'($t1, $t3);

    // if ($t17) goto L5 else goto L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:712:9+390
    if ($t17) { goto L5; } else { goto L4; }

    // label L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:713:21+5
    assume {:print "$at(186,30447,30452)"} true;
L5:

    // $t18 := 1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:713:29+1
    assume {:print "$at(186,30455,30456)"} true;
    $t18 := 1;
    assume $IsValid'u8'($t18);

    // $t19 := +($t4, $t18) on_abort goto L13 with $t9 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:713:21+9
    call $t19 := $AddU8($t4, $t18);
    if ($abort_flag) {
        assume {:print "$at(186,30447,30456)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(40,44):", $t9} $t9 == $t9;
        goto L13;
    }

    // trace_local[count]($t19) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:713:13+17
    assume {:print "$track_local(40,44,4):", $t19} $t19 == $t19;

    // $t20 := 8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:714:29+22
    assume {:print "$at(186,30487,30509)"} true;
    $t20 := 8;
    assume $IsValid'u8'($t20);

    // $t21 := <($t19, $t20) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:714:21+30
    call $t21 := $Lt($t19, $t20);

    // if ($t21) goto L7 else goto L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:714:13+6
    if ($t21) { goto L7; } else { goto L6; }

    // label L7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:715:18+35
    assume {:print "$at(186,30569,30604)"} true;
L7:

    // $t22 := exists<0x1::object::ObjectCore>($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:715:18+35
    assume {:print "$at(186,30569,30604)"} true;
    $t22 := $ResourceExists($1_object_ObjectCore_$memory, $t3);

    // if ($t22) goto L8 else goto L9 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:715:17+36
    if ($t22) { goto L8; } else { goto L9; }

    // label L9 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:716:24+5
    assume {:print "$at(186,30632,30637)"} true;
L9:

    // $t25 := false at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:716:24+5
    assume {:print "$at(186,30632,30637)"} true;
    $t25 := false;
    assume $IsValid'bool'($t25);

    // trace_return[0]($t25) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:716:17+12
    assume {:print "$track_return(40,44,0):", $t25} $t25 == $t25;

    // $t13 := move($t25) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:716:17+12
    $t13 := $t25;

    // goto L12 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:716:17+12
    goto L12;

    // label L8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:719:26+42
    assume {:print "$at(186,30682,30724)"} true;
L8:

    // $t23 := get_global<0x1::object::ObjectCore>($t3) on_abort goto L13 with $t9 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:719:26+42
    assume {:print "$at(186,30682,30724)"} true;
    if (!$ResourceExists($1_object_ObjectCore_$memory, $t3)) {
        call $ExecFailureAbort();
    } else {
        $t23 := $ResourceValue($1_object_ObjectCore_$memory, $t3);
    }
    if ($abort_flag) {
        assume {:print "$at(186,30682,30724)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(40,44):", $t9} $t9 == $t9;
        goto L13;
    }

    // $t24 := get_field<0x1::object::ObjectCore>.owner($t23) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:720:31+12
    assume {:print "$at(186,30757,30769)"} true;
    $t24 := $t23->$owner;

    // trace_local[$t9]($t24) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:720:13+30
    assume {:print "$track_local(40,44,3):", $t24} $t24 == $t24;

    // goto L11 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:712:9+390
    assume {:print "$at(186,30391,30781)"} true;
    goto L11;

    // label L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:714:73+16
    assume {:print "$at(186,30531,30547)"} true;
L6:

    // $t26 := 6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:714:73+16
    assume {:print "$at(186,30531,30547)"} true;
    $t26 := 6;
    assume $IsValid'u64'($t26);

    // $t27 := error::out_of_range($t26) on_abort goto L13 with $t9 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:714:53+37
    call $t27 := $1_error_out_of_range($t26);
    if ($abort_flag) {
        assume {:print "$at(186,30511,30548)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(40,44):", $t9} $t9 == $t9;
        goto L13;
    }

    // trace_abort($t27) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:714:13+6
    assume {:print "$at(186,30471,30477)"} true;
    assume {:print "$track_abort(40,44):", $t27} $t27 == $t27;

    // $t9 := move($t27) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:714:13+6
    $t9 := $t27;

    // goto L13 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:714:13+6
    goto L13;

    // label L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:722:9+4
    assume {:print "$at(186,30792,30796)"} true;
L4:

    // $t28 := true at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:722:9+4
    assume {:print "$at(186,30792,30796)"} true;
    $t28 := true;
    assume $IsValid'bool'($t28);

    // trace_return[0]($t28) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:696:90+835
    assume {:print "$at(186,29968,30803)"} true;
    assume {:print "$track_return(40,44,0):", $t28} $t28 == $t28;

    // $t13 := move($t28) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:696:90+835
    $t13 := $t28;

    // goto L12 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:696:90+835
    goto L12;

    // label L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:701:30+22
    assume {:print "$at(186,30126,30148)"} true;
L0:

    // $t29 := 2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:701:30+22
    assume {:print "$at(186,30126,30148)"} true;
    $t29 := 2;
    assume $IsValid'u64'($t29);

    // $t30 := error::not_found($t29) on_abort goto L13 with $t9 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:701:13+40
    call $t30 := $1_error_not_found($t29);
    if ($abort_flag) {
        assume {:print "$at(186,30109,30149)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(40,44):", $t9} $t9 == $t9;
        goto L13;
    }

    // trace_abort($t30) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:699:9+6
    assume {:print "$at(186,30037,30043)"} true;
    assume {:print "$track_abort(40,44):", $t30} $t30 == $t30;

    // $t9 := move($t30) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:699:9+6
    $t9 := $t30;

    // goto L13 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:699:9+6
    goto L13;

    // label L11 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:701:30+22
    // Loop invariant checking block for the loop started with header: L10
    assume {:print "$at(186,30126,30148)"} true;
L11:

    // stop() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:701:30+22
    assume {:print "$at(186,30126,30148)"} true;
    assume false;
    return;

    // label L12 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:723:5+1
    assume {:print "$at(186,30802,30803)"} true;
L12:

    // return $t13 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:723:5+1
    assume {:print "$at(186,30802,30803)"} true;
    $ret0 := $t13;
    return;

    // label L13 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:723:5+1
L13:

    // abort($t9) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:723:5+1
    assume {:print "$at(186,30802,30803)"} true;
    $abort_code := $t9;
    $abort_flag := true;
    return;

}

// fun object::set_untransferable [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:460:5+295
procedure {:inline 1} $1_object_set_untransferable(_$t0: $1_object_ConstructorRef) returns ()
{
    // declare local variables
    var $t1: $Mutation ($1_object_ObjectCore);
    var $t2: $signer;
    var $t3: int;
    var $t4: $Mutation ($1_object_ObjectCore);
    var $t5: int;
    var $t6: bool;
    var $t7: $Mutation (bool);
    var $t8: $signer;
    var $t9: bool;
    var $t10: $1_object_Untransferable;
    var $t0: $1_object_ConstructorRef;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_ObjectCore': $1_object_ObjectCore;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[ref]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:460:5+1
    assume {:print "$at(186,19846,19847)"} true;
    assume {:print "$track_local(40,46,0):", $t0} $t0 == $t0;

    // $t3 := get_field<0x1::object::ConstructorRef>.self($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:461:52+8
    assume {:print "$at(186,19972,19980)"} true;
    $t3 := $t0->$self;

    // $t4 := borrow_global<0x1::object::ObjectCore>($t3) on_abort goto L2 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:461:22+39
    if (!$ResourceExists($1_object_ObjectCore_$memory, $t3)) {
        call $ExecFailureAbort();
    } else {
        $t4 := $Mutation($Global($t3), EmptyVec(), $ResourceValue($1_object_ObjectCore_$memory, $t3));
    }
    if ($abort_flag) {
        assume {:print "$at(186,19942,19981)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(40,46):", $t5} $t5 == $t5;
        goto L2;
    }

    // trace_local[object]($t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:461:22+39
    $temp_0'$1_object_ObjectCore' := $Dereference($t4);
    assume {:print "$track_local(40,46,1):", $temp_0'$1_object_ObjectCore'} $temp_0'$1_object_ObjectCore' == $temp_0'$1_object_ObjectCore';

    // $t6 := false at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:462:41+5
    assume {:print "$at(186,20024,20029)"} true;
    $t6 := false;
    assume $IsValid'bool'($t6);

    // $t7 := borrow_field<0x1::object::ObjectCore>.allow_ungated_transfer($t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:462:9+29
    $t7 := $ChildMutation($t4, 2, $Dereference($t4)->$allow_ungated_transfer);

    // write_ref($t7, $t6) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:462:9+37
    $t7 := $UpdateMutation($t7, $t6);

    // write_back[Reference($t4).allow_ungated_transfer (bool)]($t7) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:462:9+37
    $t4 := $UpdateMutation($t4, $Update'$1_object_ObjectCore'_allow_ungated_transfer($Dereference($t4), $Dereference($t7)));

    // write_back[0x1::object::ObjectCore@]($t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:462:9+37
    $1_object_ObjectCore_$memory := $ResourceUpdate($1_object_ObjectCore_$memory, $GlobalLocationAddress($t4),
        $Dereference($t4));

    // $t8 := object::generate_signer($t0) on_abort goto L2 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:463:29+20
    assume {:print "$at(186,20060,20080)"} true;
    call $t8 := $1_object_generate_signer($t0);
    if ($abort_flag) {
        assume {:print "$at(186,20060,20080)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(40,46):", $t5} $t5 == $t5;
        goto L2;
    }

    // trace_local[object_signer]($t8) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:463:29+20
    assume {:print "$track_local(40,46,2):", $t8} $t8 == $t8;

    // $t9 := false at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:464:33+17
    assume {:print "$at(186,20115,20132)"} true;
    $t9 := false;
    assume $IsValid'bool'($t9);

    // $t10 := pack 0x1::object::Untransferable($t9) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:464:33+17
    $t10 := $1_object_Untransferable($t9);

    // move_to<0x1::object::Untransferable>($t10, $t8) on_abort goto L2 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:464:9+42
    if ($ResourceExists($1_object_Untransferable_$memory, $t8->$addr)) {
        call $ExecFailureAbort();
    } else {
        $1_object_Untransferable_$memory := $ResourceUpdate($1_object_Untransferable_$memory, $t8->$addr, $t10);
    }
    if ($abort_flag) {
        assume {:print "$at(186,20091,20133)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(40,46):", $t5} $t5 == $t5;
        goto L2;
    }

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:465:5+1
    assume {:print "$at(186,20140,20141)"} true;
L1:

    // return () at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:465:5+1
    assume {:print "$at(186,20140,20141)"} true;
    return;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:465:5+1
L2:

    // abort($t5) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:465:5+1
    assume {:print "$at(186,20140,20141)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun object::unburn<0x1::fungible_asset::FungibleStore> [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:640:5+1375
procedure {:inline 1} $1_object_unburn'$1_fungible_asset_FungibleStore'(_$t0: $signer, _$t1: $1_object_Object'$1_fungible_asset_FungibleStore') returns ()
{
    // declare local variables
    var $t2: int;
    var $t3: $1_object_ObjectCore;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: $Mutation ($1_object_ObjectCore);
    var $t8: $Mutation (int);
    var $t9: int;
    var $t10: $1_object_TombStone;
    var $t11: int;
    var $t12: int;
    var $t13: int;
    var $t14: bool;
    var $t15: $1_object_TransferPermission;
    var $t16: bool;
    var $t17: bool;
    var $t18: int;
    var $t19: $1_object_ObjectCore;
    var $t20: int;
    var $t21: int;
    var $t22: bool;
    var $t23: $1_object_TombStone;
    var $t24: int;
    var $t25: int;
    var $t26: int;
    var $t27: bool;
    var $t28: $1_object_TombStone;
    var $t29: int;
    var $t30: int;
    var $t31: bool;
    var $t32: $Mutation ($1_object_ObjectCore);
    var $t33: int;
    var $t34: bool;
    var $t35: bool;
    var $t36: int;
    var $t37: $1_object_Transfer;
    var $t38: $Mutation (int);
    var $t39: $Mutation ($1_event_EventHandle'$1_object_TransferEvent');
    var $t40: int;
    var $t41: $1_object_TransferEvent;
    var $t42: int;
    var $t43: int;
    var $t44: int;
    var $t45: int;
    var $t46: int;
    var $t47: int;
    var $t48: int;
    var $t49: int;
    var $t0: $signer;
    var $t1: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_object_ObjectCore': $1_object_ObjectCore;
    var $temp_0'$1_permissioned_signer_PermissionStorage': $1_permissioned_signer_PermissionStorage;
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    var $temp_0'signer': $signer;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t9, select object::Object.inner<0x1::object::Object<#0>>($t1)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.spec.move:505:9+34
    assume {:print "$at(187,20550,20584)"} true;
    assume ($t9 == $t1->$inner);

    // assume Identical($t10, global<0x1::object::TombStone>($t9)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.spec.move:508:9+58
    assume {:print "$at(187,20688,20746)"} true;
    assume ($t10 == $ResourceValue($1_object_TombStone_$memory, $t9));

    // assume Identical($t11, signer::$address_of($t0)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.spec.move:509:9+64
    assume {:print "$at(187,20756,20820)"} true;
    assume ($t11 == $1_signer_$address_of($t0));

    // assume Identical($t12, select object::ObjectCore.owner<0x1::object::ObjectCore>(global<0x1::object::ObjectCore>($t9))) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.spec.move:510:9+75
    assume {:print "$at(187,20830,20905)"} true;
    assume ($t12 == $ResourceValue($1_object_ObjectCore_$memory, $t9)->$owner);

    // trace_local[original_owner]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:640:5+1
    assume {:print "$at(186,27463,27464)"} true;
    assume {:print "$track_local(40,52,0):", $t0} $t0 == $t0;

    // trace_local[object]($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:640:5+1
    assume {:print "$track_local(40,52,1):", $t1} $t1 == $t1;

    // $t13 := get_field<0x1::object::Object<#0>>.inner($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:644:27+12
    assume {:print "$at(186,27625,27637)"} true;
    $t13 := $t1->$inner;

    // trace_local[object_addr]($t13) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:644:27+12
    assume {:print "$track_local(40,52,2):", $t13} $t13 == $t13;

    // $t14 := exists<0x1::object::TombStone>($t13) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:645:17+30
    assume {:print "$at(186,27656,27686)"} true;
    $t14 := $ResourceExists($1_object_TombStone_$memory, $t13);

    // if ($t14) goto L1 else goto L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:645:9+6
    if ($t14) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:647:58+14
    assume {:print "$at(186,27809,27823)"} true;
L1:

    // $t15 := pack 0x1::object::TransferPermission($t13) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:647:74+42
    assume {:print "$at(186,27825,27867)"} true;
    $t15 := $1_object_TransferPermission($t13);

    // $t16 := opaque begin: permissioned_signer::check_permission_exists<0x1::object::TransferPermission>($t0, $t15) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:647:13+104

    // $t17 := havoc[val]() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:647:13+104
    havoc $t17;

    // if ($t17) goto L19 else goto L18 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:647:13+104
    if ($t17) { goto L19; } else { goto L18; }

    // label L19 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:647:13+104
L19:

    // trace_abort($t18) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:647:13+104
    assume {:print "$at(186,27764,27868)"} true;
    assume {:print "$track_abort(40,52):", $t18} $t18 == $t18;

    // goto L17 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:647:13+104
    goto L17;

    // label L18 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:647:13+104
L18:

    // modifies global<0x1::permissioned_signer::PermissionStorage>(permissioned_signer::spec_permission_address($t0)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:647:13+104
    assume {:print "$at(186,27764,27868)"} true;
    havoc $temp_0'bool';
    if ($temp_0'bool') {
        havoc $temp_0'$1_permissioned_signer_PermissionStorage';
        $1_permissioned_signer_PermissionStorage_$memory := $ResourceUpdate($1_permissioned_signer_PermissionStorage_$memory, $1_permissioned_signer_spec_permission_address($t0), $temp_0'$1_permissioned_signer_PermissionStorage');
    } else {
        $1_permissioned_signer_PermissionStorage_$memory := $ResourceRemove($1_permissioned_signer_PermissionStorage_$memory, $1_permissioned_signer_spec_permission_address($t0));
    }

    // assume WellFormed($t16) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:647:13+104
    assume $IsValid'bool'($t16);

    // assume Eq<bool>($t16, permissioned_signer::spec_check_permission_exists<0x1::object::TransferPermission>($t0, $t15)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:647:13+104
    assume $IsEqual'bool'($t16, $1_permissioned_signer_spec_check_permission_exists'$1_object_TransferPermission'($t0, $t15));

    // $t16 := opaque end: permissioned_signer::check_permission_exists<0x1::object::TransferPermission>($t0, $t15) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:647:13+104

    // if ($t16) goto L3 else goto L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:646:9+6
    assume {:print "$at(186,27742,27748)"} true;
    if ($t16) { goto L3; } else { goto L2; }

    // label L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:652:27+38
    assume {:print "$at(186,28099,28137)"} true;
L3:

    // $t19 := get_global<0x1::object::ObjectCore>($t13) on_abort goto L17 with $t18 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:652:27+38
    assume {:print "$at(186,28099,28137)"} true;
    if (!$ResourceExists($1_object_ObjectCore_$memory, $t13)) {
        call $ExecFailureAbort();
    } else {
        $t19 := $ResourceValue($1_object_ObjectCore_$memory, $t13);
    }
    if ($abort_flag) {
        assume {:print "$at(186,28099,28137)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(40,52):", $t18} $t18 == $t18;
        goto L17;
    }

    // trace_local[object_core]($t19) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:652:27+38
    assume {:print "$track_local(40,52,3):", $t19} $t19 == $t19;

    // $t20 := get_field<0x1::object::ObjectCore>.owner($t19) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:653:13+17
    assume {:print "$at(186,28152,28169)"} true;
    $t20 := $t19->$owner;

    // $t21 := signer::address_of($t0) on_abort goto L17 with $t18 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:653:34+34
    call $t21 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(186,28173,28207)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(40,52):", $t18} $t18 == $t18;
        goto L17;
    }

    // $t22 := ==($t20, $t21) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:653:13+55
    $t22 := $IsEqual'address'($t20, $t21);

    // if ($t22) goto L5 else goto L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:653:9+682
    if ($t22) { goto L5; } else { goto L4; }

    // label L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:653:70+98
L5:

    // $t23 := move_from<0x1::object::TombStone>($t13) on_abort goto L17 with $t18 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:654:51+33
    assume {:print "$at(186,28262,28295)"} true;
    if (!$ResourceExists($1_object_TombStone_$memory, $t13)) {
        call $ExecFailureAbort();
    } else {
        $t23 := $ResourceValue($1_object_TombStone_$memory, $t13);
        $1_object_TombStone_$memory := $ResourceRemove($1_object_TombStone_$memory, $t13);
    }
    if ($abort_flag) {
        assume {:print "$at(186,28262,28295)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(40,52):", $t18} $t18 == $t18;
        goto L17;
    }

    // $t24 := unpack 0x1::object::TombStone($t23) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:654:17+31
    $t24 := $t23->$original_owner;

    // drop($t24) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:654:17+31

    // label L14 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:643:38+1242
    assume {:print "$at(186,27596,28838)"} true;
L14:

    // goto L16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:643:38+1242
    assume {:print "$at(186,27596,28838)"} true;
    goto L16;

    // label L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:655:20+17
    assume {:print "$at(186,28317,28334)"} true;
L4:

    // $t25 := get_field<0x1::object::ObjectCore>.owner($t19) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:655:20+17
    assume {:print "$at(186,28317,28334)"} true;
    $t25 := $t19->$owner;

    // $t26 := 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:655:41+12
    $t26 := 115792089237316195423570985008687907853269984665640564039457584007913129639935;
    assume $IsValid'address'($t26);

    // $t27 := ==($t25, $t26) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:655:20+33
    $t27 := $IsEqual'address'($t25, $t26);

    // if ($t27) goto L7 else goto L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:655:16+517
    if ($t27) { goto L7; } else { goto L6; }

    // label L7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:657:69+33
    assume {:print "$at(186,28461,28494)"} true;
L7:

    // $t28 := move_from<0x1::object::TombStone>($t13) on_abort goto L17 with $t18 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:657:69+33
    assume {:print "$at(186,28461,28494)"} true;
    if (!$ResourceExists($1_object_TombStone_$memory, $t13)) {
        call $ExecFailureAbort();
    } else {
        $t28 := $ResourceValue($1_object_TombStone_$memory, $t13);
        $1_object_TombStone_$memory := $ResourceRemove($1_object_TombStone_$memory, $t13);
    }
    if ($abort_flag) {
        assume {:print "$at(186,28461,28494)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(40,52):", $t18} $t18 == $t18;
        goto L17;
    }

    // $t29 := unpack 0x1::object::TombStone($t28) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:657:17+49
    $t29 := $t28->$original_owner;

    // trace_local[$t17]($t29) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:657:17+49
    assume {:print "$track_local(40,52,4):", $t29} $t29 == $t29;

    // $t30 := signer::address_of($t0) on_abort goto L17 with $t18 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:659:40+34
    assume {:print "$at(186,28558,28592)"} true;
    call $t30 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(186,28558,28592)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(40,52):", $t18} $t18 == $t18;
        goto L17;
    }

    // $t31 := ==($t29, $t30) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:659:17+57
    $t31 := $IsEqual'address'($t29, $t30);

    // if ($t31) goto L9 else goto L8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:658:13+6
    assume {:print "$at(186,28509,28515)"} true;
    if ($t31) { goto L9; } else { goto L8; }

    // label L9 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:557:16+18
    assume {:print "$at(186,23775,23793)"} true;
L9:

    // trace_local[$t19]($t13) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:557:16+18
    assume {:print "$at(186,23775,23793)"} true;
    assume {:print "$track_local(40,52,5):", $t13} $t13 == $t13;

    // trace_local[$t28]($t29) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:557:16+18
    assume {:print "$track_local(40,52,6):", $t29} $t29 == $t29;

    // $t32 := borrow_global<0x1::object::ObjectCore>($t13) on_abort goto L17 with $t18 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:558:27+37
    assume {:print "$at(186,23873,23910)"} true;
    if (!$ResourceExists($1_object_ObjectCore_$memory, $t13)) {
        call $ExecFailureAbort();
    } else {
        $t32 := $Mutation($Global($t13), EmptyVec(), $ResourceValue($1_object_ObjectCore_$memory, $t13));
    }
    if ($abort_flag) {
        assume {:print "$at(186,23873,23910)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(40,52):", $t18} $t18 == $t18;
        goto L17;
    }

    // trace_local[object_core]($t32) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:558:27+37
    $temp_0'$1_object_ObjectCore' := $Dereference($t32);
    assume {:print "$track_local(40,52,7):", $temp_0'$1_object_ObjectCore'} $temp_0'$1_object_ObjectCore' == $temp_0'$1_object_ObjectCore';

    // $t33 := get_field<0x1::object::ObjectCore>.owner($t32) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:559:13+17
    assume {:print "$at(186,23925,23942)"} true;
    $t33 := $Dereference($t32)->$owner;

    // $t34 := !=($t33, $t29) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:559:13+23
    $t34 := !$IsEqual'address'($t33, $t29);

    // if ($t34) goto L11 else goto L10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:559:9+686
    if ($t34) { goto L11; } else { goto L10; }

    // label L11 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:560:17+47
    assume {:print "$at(186,23969,24016)"} true;
L11:

    // $t35 := features::module_event_migration_enabled() on_abort goto L17 with $t18 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:560:17+47
    assume {:print "$at(186,23969,24016)"} true;
    call $t35 := $1_features_module_event_migration_enabled();
    if ($abort_flag) {
        assume {:print "$at(186,23969,24016)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(40,52):", $t18} $t18 == $t18;
        goto L17;
    }

    // if ($t35) goto L13 else goto L12 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:560:13+593
    if ($t35) { goto L13; } else { goto L12; }

    // label L13 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:563:25+6
    assume {:print "$at(186,24107,24113)"} true;
L13:

    // $t36 := get_field<0x1::object::ObjectCore>.owner($t32) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:564:31+17
    assume {:print "$at(186,24146,24163)"} true;
    $t36 := $Dereference($t32)->$owner;

    // $t37 := pack 0x1::object::Transfer($t13, $t36, $t29) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:562:21+145
    assume {:print "$at(186,24071,24216)"} true;
    $t37 := $1_object_Transfer($t13, $t36, $t29);

    // opaque begin: event::emit<0x1::object::Transfer>($t37) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:561:17+199
    assume {:print "$at(186,24037,24236)"} true;

    // opaque end: event::emit<0x1::object::Transfer>($t37) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:561:17+199

    // label L15 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:578:13+17
    assume {:print "$at(186,24573,24590)"} true;
L15:

    // $t38 := borrow_field<0x1::object::ObjectCore>.owner($t32) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:578:13+17
    assume {:print "$at(186,24573,24590)"} true;
    $t38 := $ChildMutation($t32, 1, $Dereference($t32)->$owner);

    // trace_local[$t47]($t38) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:578:13+22
    $temp_0'address' := $Dereference($t38);
    assume {:print "$track_local(40,52,8):", $temp_0'address'} $temp_0'address' == $temp_0'address';

    // write_ref($t38, $t29) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:578:13+22
    $t38 := $UpdateMutation($t38, $t29);

    // write_back[Reference($t32).owner (address)]($t38) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:578:13+22
    $t32 := $UpdateMutation($t32, $Update'$1_object_ObjectCore'_owner($Dereference($t32), $Dereference($t38)));

    // write_back[0x1::object::ObjectCore@]($t32) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:578:13+22
    $1_object_ObjectCore_$memory := $ResourceUpdate($1_object_ObjectCore_$memory, $GlobalLocationAddress($t32),
        $Dereference($t32));

    // goto L14 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:559:38+657
    assume {:print "$at(186,23950,24607)"} true;
    goto L14;

    // label L12 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:570:21+32
    assume {:print "$at(186,24317,24349)"} true;
L12:

    // $t39 := borrow_field<0x1::object::ObjectCore>.transfer_events($t32) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:570:21+32
    assume {:print "$at(186,24317,24349)"} true;
    $t39 := $ChildMutation($t32, 3, $Dereference($t32)->$transfer_events);

    // $t40 := get_field<0x1::object::ObjectCore>.owner($t32) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:573:31+17
    assume {:print "$at(186,24452,24469)"} true;
    $t40 := $Dereference($t32)->$owner;

    // $t41 := pack 0x1::object::TransferEvent($t13, $t40, $t29) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:571:21+150
    assume {:print "$at(186,24372,24522)"} true;
    $t41 := $1_object_TransferEvent($t13, $t40, $t29);

    // opaque begin: event::emit_event<0x1::object::TransferEvent>($t39, $t41) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:569:17+265
    assume {:print "$at(186,24277,24542)"} true;

    // opaque end: event::emit_event<0x1::object::TransferEvent>($t39, $t41) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:569:17+265

    // write_back[Reference($t32).transfer_events (0x1::event::EventHandle<0x1::object::TransferEvent>)]($t39) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:569:17+265
    $t32 := $UpdateMutation($t32, $Update'$1_object_ObjectCore'_transfer_events($Dereference($t32), $Dereference($t39)));

    // goto L15 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:569:17+265
    goto L15;

    // label L10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:559:9+686
    assume {:print "$at(186,23921,24607)"} true;
L10:

    // drop($t32) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:559:9+686
    assume {:print "$at(186,23921,24607)"} true;

    // goto L14 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:559:9+686
    goto L14;

    // label L8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:660:42+17
    assume {:print "$at(186,28636,28653)"} true;
L8:

    // $t42 := 4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:660:42+17
    assume {:print "$at(186,28636,28653)"} true;
    $t42 := 4;
    assume $IsValid'u64'($t42);

    // $t43 := error::permission_denied($t42) on_abort goto L17 with $t18 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:660:17+43
    call $t43 := $1_error_permission_denied($t42);
    if ($abort_flag) {
        assume {:print "$at(186,28611,28654)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(40,52):", $t18} $t18 == $t18;
        goto L17;
    }

    // trace_abort($t43) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:658:13+6
    assume {:print "$at(186,28509,28515)"} true;
    assume {:print "$track_abort(40,52):", $t43} $t43 == $t43;

    // $t18 := move($t43) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:658:13+6
    $t18 := $t43;

    // goto L17 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:658:13+6
    goto L17;

    // label L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:663:16+76
    assume {:print "$at(186,28754,28830)"} true;
L6:

    // $t44 := 4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:664:44+17
    assume {:print "$at(186,28800,28817)"} true;
    $t44 := 4;
    assume $IsValid'u64'($t44);

    // $t45 := error::permission_denied($t44) on_abort goto L17 with $t18 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:664:19+43
    call $t45 := $1_error_permission_denied($t44);
    if ($abort_flag) {
        assume {:print "$at(186,28775,28818)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(40,52):", $t18} $t18 == $t18;
        goto L17;
    }

    // trace_abort($t45) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:664:13+49
    assume {:print "$at(186,28769,28818)"} true;
    assume {:print "$track_abort(40,52):", $t45} $t45 == $t45;

    // $t18 := move($t45) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:664:13+49
    $t18 := $t45;

    // goto L17 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:664:13+49
    goto L17;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:646:9+6
    assume {:print "$at(186,27742,27748)"} true;
L2:

    // $t46 := 9 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:648:38+25
    assume {:print "$at(186,27908,27933)"} true;
    $t46 := 9;
    assume $IsValid'u64'($t46);

    // $t47 := error::permission_denied($t46) on_abort goto L17 with $t18 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:648:13+51
    call $t47 := $1_error_permission_denied($t46);
    if ($abort_flag) {
        assume {:print "$at(186,27883,27934)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(40,52):", $t18} $t18 == $t18;
        goto L17;
    }

    // trace_abort($t47) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:646:9+6
    assume {:print "$at(186,27742,27748)"} true;
    assume {:print "$track_abort(40,52):", $t47} $t47 == $t47;

    // $t18 := move($t47) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:646:9+6
    $t18 := $t47;

    // goto L17 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:646:9+6
    goto L17;

    // label L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:645:9+6
    assume {:print "$at(186,27648,27654)"} true;
L0:

    // $t48 := 8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:645:73+17
    assume {:print "$at(186,27712,27729)"} true;
    $t48 := 8;
    assume $IsValid'u64'($t48);

    // $t49 := error::invalid_argument($t48) on_abort goto L17 with $t18 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:645:49+42
    call $t49 := $1_error_invalid_argument($t48);
    if ($abort_flag) {
        assume {:print "$at(186,27688,27730)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(40,52):", $t18} $t18 == $t18;
        goto L17;
    }

    // trace_abort($t49) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:645:9+6
    assume {:print "$at(186,27648,27654)"} true;
    assume {:print "$track_abort(40,52):", $t49} $t49 == $t49;

    // $t18 := move($t49) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:645:9+6
    $t18 := $t49;

    // goto L17 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:645:9+6
    goto L17;

    // label L16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:666:5+1
    assume {:print "$at(186,28837,28838)"} true;
L16:

    // return () at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:666:5+1
    assume {:print "$at(186,28837,28838)"} true;
    return;

    // label L17 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:666:5+1
L17:

    // abort($t18) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.move:666:5+1
    assume {:print "$at(186,28837,28838)"} true;
    $abort_code := $t18;
    $abort_flag := true;
    return;

}

// struct function_info::FunctionInfo at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\function_info.move:20:5+146
datatype $1_function_info_FunctionInfo {
    $1_function_info_FunctionInfo($module_address: int, $module_name: $1_string_String, $function_name: $1_string_String)
}
function {:inline} $Update'$1_function_info_FunctionInfo'_module_address(s: $1_function_info_FunctionInfo, x: int): $1_function_info_FunctionInfo {
    $1_function_info_FunctionInfo(x, s->$module_name, s->$function_name)
}
function {:inline} $Update'$1_function_info_FunctionInfo'_module_name(s: $1_function_info_FunctionInfo, x: $1_string_String): $1_function_info_FunctionInfo {
    $1_function_info_FunctionInfo(s->$module_address, x, s->$function_name)
}
function {:inline} $Update'$1_function_info_FunctionInfo'_function_name(s: $1_function_info_FunctionInfo, x: $1_string_String): $1_function_info_FunctionInfo {
    $1_function_info_FunctionInfo(s->$module_address, s->$module_name, x)
}
function $IsValid'$1_function_info_FunctionInfo'(s: $1_function_info_FunctionInfo): bool {
    $IsValid'address'(s->$module_address)
      && $IsValid'$1_string_String'(s->$module_name)
      && $IsValid'$1_string_String'(s->$function_name)
}
function {:inline} $IsEqual'$1_function_info_FunctionInfo'(s1: $1_function_info_FunctionInfo, s2: $1_function_info_FunctionInfo): bool {
    $IsEqual'address'(s1->$module_address, s2->$module_address)
    && $IsEqual'$1_string_String'(s1->$module_name, s2->$module_name)
    && $IsEqual'$1_string_String'(s1->$function_name, s2->$function_name)}

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.spec.move:144:10+329
function {:inline} $1_optional_aggregator_optional_aggregator_value(optional_aggregator: $1_optional_aggregator_OptionalAggregator): int {
    (if ($1_optional_aggregator_$is_parallelizable(optional_aggregator)) then ($1_aggregator_spec_aggregator_get_val($1_option_$borrow'$1_aggregator_Aggregator'(optional_aggregator->$aggregator))) else ($1_option_$borrow'$1_optional_aggregator_Integer'(optional_aggregator->$integer)->$value))
}

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:157:5+143
function {:inline} $1_optional_aggregator_$is_parallelizable(optional_aggregator: $1_optional_aggregator_OptionalAggregator): bool {
    $1_option_$is_some'$1_aggregator_Aggregator'(optional_aggregator->$aggregator)
}

// struct optional_aggregator::Integer at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:25:5+77
datatype $1_optional_aggregator_Integer {
    $1_optional_aggregator_Integer($value: int, $limit: int)
}
function {:inline} $Update'$1_optional_aggregator_Integer'_value(s: $1_optional_aggregator_Integer, x: int): $1_optional_aggregator_Integer {
    $1_optional_aggregator_Integer(x, s->$limit)
}
function {:inline} $Update'$1_optional_aggregator_Integer'_limit(s: $1_optional_aggregator_Integer, x: int): $1_optional_aggregator_Integer {
    $1_optional_aggregator_Integer(s->$value, x)
}
function $IsValid'$1_optional_aggregator_Integer'(s: $1_optional_aggregator_Integer): bool {
    $IsValid'u128'(s->$value)
      && $IsValid'u128'(s->$limit)
}
function {:inline} $IsEqual'$1_optional_aggregator_Integer'(s1: $1_optional_aggregator_Integer, s2: $1_optional_aggregator_Integer): bool {
    s1 == s2
}

// struct optional_aggregator::OptionalAggregator at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:69:5+180
datatype $1_optional_aggregator_OptionalAggregator {
    $1_optional_aggregator_OptionalAggregator($aggregator: $1_option_Option'$1_aggregator_Aggregator', $integer: $1_option_Option'$1_optional_aggregator_Integer')
}
function {:inline} $Update'$1_optional_aggregator_OptionalAggregator'_aggregator(s: $1_optional_aggregator_OptionalAggregator, x: $1_option_Option'$1_aggregator_Aggregator'): $1_optional_aggregator_OptionalAggregator {
    $1_optional_aggregator_OptionalAggregator(x, s->$integer)
}
function {:inline} $Update'$1_optional_aggregator_OptionalAggregator'_integer(s: $1_optional_aggregator_OptionalAggregator, x: $1_option_Option'$1_optional_aggregator_Integer'): $1_optional_aggregator_OptionalAggregator {
    $1_optional_aggregator_OptionalAggregator(s->$aggregator, x)
}
function $IsValid'$1_optional_aggregator_OptionalAggregator'(s: $1_optional_aggregator_OptionalAggregator): bool {
    $IsValid'$1_option_Option'$1_aggregator_Aggregator''(s->$aggregator)
      && $IsValid'$1_option_Option'$1_optional_aggregator_Integer''(s->$integer)
}
function {:inline} $IsEqual'$1_optional_aggregator_OptionalAggregator'(s1: $1_optional_aggregator_OptionalAggregator, s2: $1_optional_aggregator_OptionalAggregator): bool {
    $IsEqual'$1_option_Option'$1_aggregator_Aggregator''(s1->$aggregator, s2->$aggregator)
    && $IsEqual'$1_option_Option'$1_optional_aggregator_Integer''(s1->$integer, s2->$integer)}

// fun optional_aggregator::add [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:124:5+435
procedure {:inline 1} $1_optional_aggregator_add(_$t0: $Mutation ($1_optional_aggregator_OptionalAggregator), _$t1: int) returns ($ret0: $Mutation ($1_optional_aggregator_OptionalAggregator))
{
    // declare local variables
    var $t2: $1_option_Option'$1_aggregator_Aggregator';
    var $t3: bool;
    var $t4: $Mutation ($1_option_Option'$1_aggregator_Aggregator');
    var $t5: $Mutation ($1_aggregator_Aggregator);
    var $t6: int;
    var $t7: $1_aggregator_Aggregator;
    var $t8: bool;
    var $t9: $Mutation ($1_option_Option'$1_optional_aggregator_Integer');
    var $t10: $Mutation ($1_optional_aggregator_Integer);
    var $t0: $Mutation ($1_optional_aggregator_OptionalAggregator);
    var $t1: int;
    var $temp_0'$1_aggregator_Aggregator': $1_aggregator_Aggregator;
    var $temp_0'$1_optional_aggregator_OptionalAggregator': $1_optional_aggregator_OptionalAggregator;
    var $temp_0'u128': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[optional_aggregator]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:124:5+1
    assume {:print "$at(113,4520,4521)"} true;
    $temp_0'$1_optional_aggregator_OptionalAggregator' := $Dereference($t0);
    assume {:print "$track_local(47,2,0):", $temp_0'$1_optional_aggregator_OptionalAggregator'} $temp_0'$1_optional_aggregator_OptionalAggregator' == $temp_0'$1_optional_aggregator_OptionalAggregator';

    // trace_local[value]($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:124:5+1
    assume {:print "$track_local(47,2,1):", $t1} $t1 == $t1;

    // $t2 := get_field<0x1::optional_aggregator::OptionalAggregator>.aggregator($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:125:29+31
    assume {:print "$at(113,4625,4656)"} true;
    $t2 := $Dereference($t0)->$aggregator;

    // $t3 := opaque begin: option::is_some<0x1::aggregator::Aggregator>($t2) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:125:13+48

    // assume WellFormed($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:125:13+48
    assume $IsValid'bool'($t3);

    // assume Eq<bool>($t3, option::spec_is_some<0x1::aggregator::Aggregator>($t2)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:125:13+48
    assume $IsEqual'bool'($t3, $1_option_spec_is_some'$1_aggregator_Aggregator'($t2));

    // $t3 := opaque end: option::is_some<0x1::aggregator::Aggregator>($t2) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:125:13+48

    // if ($t3) goto L1 else goto L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:125:9+343
    if ($t3) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:126:49+35
    assume {:print "$at(113,4710,4745)"} true;
L1:

    // $t4 := borrow_field<0x1::optional_aggregator::OptionalAggregator>.aggregator($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:126:49+35
    assume {:print "$at(113,4710,4745)"} true;
    $t4 := $ChildMutation($t0, 0, $Dereference($t0)->$aggregator);

    // $t5 := option::borrow_mut<0x1::aggregator::Aggregator>($t4) on_abort goto L4 with $t6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:126:30+55
    call $t5,$t4 := $1_option_borrow_mut'$1_aggregator_Aggregator'($t4);
    if ($abort_flag) {
        assume {:print "$at(113,4691,4746)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(47,2):", $t6} $t6 == $t6;
        goto L4;
    }

    // opaque begin: aggregator::add($t5, $t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:127:13+34
    assume {:print "$at(113,4761,4795)"} true;

    // $t7 := read_ref($t5) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:127:13+34
    $t7 := $Dereference($t5);

    // assume Identical($t8, Or(Gt(Add(aggregator::spec_aggregator_get_val($t5), $t1), aggregator::spec_get_limit($t5)), Gt(Add(aggregator::spec_aggregator_get_val($t5), $t1), 340282366920938463463374607431768211455))) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:127:13+34
    assume ($t8 == ((($1_aggregator_spec_aggregator_get_val($Dereference($t5)) + $t1) > $1_aggregator_spec_get_limit($Dereference($t5))) || (($1_aggregator_spec_aggregator_get_val($Dereference($t5)) + $t1) > 340282366920938463463374607431768211455)));

    // if ($t8) goto L7 else goto L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:127:13+34
    if ($t8) { goto L7; } else { goto L5; }

    // label L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:127:13+34
L6:

    // trace_abort($t6) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:127:13+34
    assume {:print "$at(113,4761,4795)"} true;
    assume {:print "$track_abort(47,2):", $t6} $t6 == $t6;

    // goto L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:127:13+34
    goto L4;

    // label L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:127:13+34
L5:

    // $t5 := havoc[mut]() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:127:13+34
    assume {:print "$at(113,4761,4795)"} true;
    havoc $temp_0'$1_aggregator_Aggregator';
    $t5 := $UpdateMutation($t5, $temp_0'$1_aggregator_Aggregator');

    // assume WellFormed($t5) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:127:13+34
    assume $IsValid'$1_aggregator_Aggregator'($Dereference($t5));

    // assume Eq<u128>(aggregator::spec_get_limit($t5), aggregator::spec_get_limit($t7)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:127:13+34
    assume $IsEqual'u128'($1_aggregator_spec_get_limit($Dereference($t5)), $1_aggregator_spec_get_limit($t7));

    // assume Eq<0x1::aggregator::Aggregator>(Freeze(false)($t5), aggregator::spec_aggregator_set_val($t7, Add(aggregator::spec_aggregator_get_val($t7), $t1))) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:127:13+34
    assume $IsEqual'$1_aggregator_Aggregator'($Dereference($t5), $1_aggregator_spec_aggregator_set_val($t7, ($1_aggregator_spec_aggregator_get_val($t7) + $t1)));

    // opaque end: aggregator::add($t5, $t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:127:13+34

    // write_back[Reference($t4).vec (vector<0x1::aggregator::Aggregator>)/[]]($t5) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:127:13+34
    $t4 := $UpdateMutation($t4, (var $$sel0 := $Dereference($t4)->$vec; $Update'$1_option_Option'$1_aggregator_Aggregator''_vec($Dereference($t4), UpdateVec($$sel0, ReadVec($t5->p, LenVec($t4->p) + 1), $Dereference($t5)))));

    // write_back[Reference($t0).aggregator (0x1::option::Option<0x1::aggregator::Aggregator>)]($t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:127:13+34
    $t0 := $UpdateMutation($t0, $Update'$1_optional_aggregator_OptionalAggregator'_aggregator($Dereference($t0), $Dereference($t4)));

    // trace_local[optional_aggregator]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:127:13+34
    $temp_0'$1_optional_aggregator_OptionalAggregator' := $Dereference($t0);
    assume {:print "$track_local(47,2,0):", $temp_0'$1_optional_aggregator_OptionalAggregator'} $temp_0'$1_optional_aggregator_OptionalAggregator' == $temp_0'$1_optional_aggregator_OptionalAggregator';

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:125:9+343
    assume {:print "$at(113,4605,4948)"} true;
L2:

    // trace_local[optional_aggregator]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:125:9+343
    assume {:print "$at(113,4605,4948)"} true;
    $temp_0'$1_optional_aggregator_OptionalAggregator' := $Dereference($t0);
    assume {:print "$track_local(47,2,0):", $temp_0'$1_optional_aggregator_OptionalAggregator'} $temp_0'$1_optional_aggregator_OptionalAggregator' == $temp_0'$1_optional_aggregator_OptionalAggregator';

    // pack_ref_deep($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:125:9+343

    // goto L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:125:9+343
    goto L3;

    // label L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:129:46+32
    assume {:print "$at(113,4861,4893)"} true;
L0:

    // $t9 := borrow_field<0x1::optional_aggregator::OptionalAggregator>.integer($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:129:46+32
    assume {:print "$at(113,4861,4893)"} true;
    $t9 := $ChildMutation($t0, 1, $Dereference($t0)->$integer);

    // $t10 := option::borrow_mut<0x1::optional_aggregator::Integer>($t9) on_abort goto L4 with $t6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:129:27+52
    call $t10,$t9 := $1_option_borrow_mut'$1_optional_aggregator_Integer'($t9);
    if ($abort_flag) {
        assume {:print "$at(113,4842,4894)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(47,2):", $t6} $t6 == $t6;
        goto L4;
    }

    // optional_aggregator::add_integer($t10, $t1) on_abort goto L4 with $t6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:130:13+27
    assume {:print "$at(113,4909,4936)"} true;
    call $t10 := $1_optional_aggregator_add_integer($t10, $t1);
    if ($abort_flag) {
        assume {:print "$at(113,4909,4936)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(47,2):", $t6} $t6 == $t6;
        goto L4;
    }

    // write_back[Reference($t9).vec (vector<0x1::optional_aggregator::Integer>)/[]]($t10) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:130:13+27
    $t9 := $UpdateMutation($t9, (var $$sel0 := $Dereference($t9)->$vec; $Update'$1_option_Option'$1_optional_aggregator_Integer''_vec($Dereference($t9), UpdateVec($$sel0, ReadVec($t10->p, LenVec($t9->p) + 1), $Dereference($t10)))));

    // write_back[Reference($t0).integer (0x1::option::Option<0x1::optional_aggregator::Integer>)]($t9) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:130:13+27
    $t0 := $UpdateMutation($t0, $Update'$1_optional_aggregator_OptionalAggregator'_integer($Dereference($t0), $Dereference($t9)));

    // trace_local[optional_aggregator]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:130:13+27
    $temp_0'$1_optional_aggregator_OptionalAggregator' := $Dereference($t0);
    assume {:print "$track_local(47,2,0):", $temp_0'$1_optional_aggregator_OptionalAggregator'} $temp_0'$1_optional_aggregator_OptionalAggregator' == $temp_0'$1_optional_aggregator_OptionalAggregator';

    // goto L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:130:13+27
    goto L2;

    // label L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:132:5+1
    assume {:print "$at(113,4954,4955)"} true;
L3:

    // return () at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:132:5+1
    assume {:print "$at(113,4954,4955)"} true;
    $ret0 := $t0;
    return;

    // label L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:132:5+1
L4:

    // abort($t6) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:132:5+1
    assume {:print "$at(113,4954,4955)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

    // label L7 at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;
L7:

    // drop($t0) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // drop($t4) at <internal>:1:1+10

    // goto L6 at <internal>:1:1+10
    goto L6;

}

// fun optional_aggregator::sub [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:135:5+435
procedure {:inline 1} $1_optional_aggregator_sub(_$t0: $Mutation ($1_optional_aggregator_OptionalAggregator), _$t1: int) returns ($ret0: $Mutation ($1_optional_aggregator_OptionalAggregator))
{
    // declare local variables
    var $t2: $1_option_Option'$1_aggregator_Aggregator';
    var $t3: bool;
    var $t4: $Mutation ($1_option_Option'$1_aggregator_Aggregator');
    var $t5: $Mutation ($1_aggregator_Aggregator);
    var $t6: int;
    var $t7: $1_aggregator_Aggregator;
    var $t8: bool;
    var $t9: $Mutation ($1_option_Option'$1_optional_aggregator_Integer');
    var $t10: $Mutation ($1_optional_aggregator_Integer);
    var $t0: $Mutation ($1_optional_aggregator_OptionalAggregator);
    var $t1: int;
    var $temp_0'$1_aggregator_Aggregator': $1_aggregator_Aggregator;
    var $temp_0'$1_optional_aggregator_OptionalAggregator': $1_optional_aggregator_OptionalAggregator;
    var $temp_0'u128': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[optional_aggregator]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:135:5+1
    assume {:print "$at(113,5046,5047)"} true;
    $temp_0'$1_optional_aggregator_OptionalAggregator' := $Dereference($t0);
    assume {:print "$track_local(47,5,0):", $temp_0'$1_optional_aggregator_OptionalAggregator'} $temp_0'$1_optional_aggregator_OptionalAggregator' == $temp_0'$1_optional_aggregator_OptionalAggregator';

    // trace_local[value]($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:135:5+1
    assume {:print "$track_local(47,5,1):", $t1} $t1 == $t1;

    // $t2 := get_field<0x1::optional_aggregator::OptionalAggregator>.aggregator($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:136:29+31
    assume {:print "$at(113,5151,5182)"} true;
    $t2 := $Dereference($t0)->$aggregator;

    // $t3 := opaque begin: option::is_some<0x1::aggregator::Aggregator>($t2) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:136:13+48

    // assume WellFormed($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:136:13+48
    assume $IsValid'bool'($t3);

    // assume Eq<bool>($t3, option::spec_is_some<0x1::aggregator::Aggregator>($t2)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:136:13+48
    assume $IsEqual'bool'($t3, $1_option_spec_is_some'$1_aggregator_Aggregator'($t2));

    // $t3 := opaque end: option::is_some<0x1::aggregator::Aggregator>($t2) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:136:13+48

    // if ($t3) goto L1 else goto L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:136:9+343
    if ($t3) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:137:49+35
    assume {:print "$at(113,5236,5271)"} true;
L1:

    // $t4 := borrow_field<0x1::optional_aggregator::OptionalAggregator>.aggregator($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:137:49+35
    assume {:print "$at(113,5236,5271)"} true;
    $t4 := $ChildMutation($t0, 0, $Dereference($t0)->$aggregator);

    // $t5 := option::borrow_mut<0x1::aggregator::Aggregator>($t4) on_abort goto L4 with $t6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:137:30+55
    call $t5,$t4 := $1_option_borrow_mut'$1_aggregator_Aggregator'($t4);
    if ($abort_flag) {
        assume {:print "$at(113,5217,5272)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(47,5):", $t6} $t6 == $t6;
        goto L4;
    }

    // opaque begin: aggregator::sub($t5, $t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:138:13+34
    assume {:print "$at(113,5287,5321)"} true;

    // $t7 := read_ref($t5) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:138:13+34
    $t7 := $Dereference($t5);

    // assume Identical($t8, Lt(aggregator::spec_aggregator_get_val($t5), $t1)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:138:13+34
    assume ($t8 == ($1_aggregator_spec_aggregator_get_val($Dereference($t5)) < $t1));

    // if ($t8) goto L7 else goto L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:138:13+34
    if ($t8) { goto L7; } else { goto L5; }

    // label L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:138:13+34
L6:

    // trace_abort($t6) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:138:13+34
    assume {:print "$at(113,5287,5321)"} true;
    assume {:print "$track_abort(47,5):", $t6} $t6 == $t6;

    // goto L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:138:13+34
    goto L4;

    // label L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:138:13+34
L5:

    // $t5 := havoc[mut]() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:138:13+34
    assume {:print "$at(113,5287,5321)"} true;
    havoc $temp_0'$1_aggregator_Aggregator';
    $t5 := $UpdateMutation($t5, $temp_0'$1_aggregator_Aggregator');

    // assume WellFormed($t5) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:138:13+34
    assume $IsValid'$1_aggregator_Aggregator'($Dereference($t5));

    // assume Eq<u128>(aggregator::spec_get_limit($t5), aggregator::spec_get_limit($t7)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:138:13+34
    assume $IsEqual'u128'($1_aggregator_spec_get_limit($Dereference($t5)), $1_aggregator_spec_get_limit($t7));

    // assume Eq<0x1::aggregator::Aggregator>(Freeze(false)($t5), aggregator::spec_aggregator_set_val($t7, Sub(aggregator::spec_aggregator_get_val($t7), $t1))) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:138:13+34
    assume $IsEqual'$1_aggregator_Aggregator'($Dereference($t5), $1_aggregator_spec_aggregator_set_val($t7, ($1_aggregator_spec_aggregator_get_val($t7) - $t1)));

    // opaque end: aggregator::sub($t5, $t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:138:13+34

    // write_back[Reference($t4).vec (vector<0x1::aggregator::Aggregator>)/[]]($t5) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:138:13+34
    $t4 := $UpdateMutation($t4, (var $$sel0 := $Dereference($t4)->$vec; $Update'$1_option_Option'$1_aggregator_Aggregator''_vec($Dereference($t4), UpdateVec($$sel0, ReadVec($t5->p, LenVec($t4->p) + 1), $Dereference($t5)))));

    // write_back[Reference($t0).aggregator (0x1::option::Option<0x1::aggregator::Aggregator>)]($t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:138:13+34
    $t0 := $UpdateMutation($t0, $Update'$1_optional_aggregator_OptionalAggregator'_aggregator($Dereference($t0), $Dereference($t4)));

    // trace_local[optional_aggregator]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:138:13+34
    $temp_0'$1_optional_aggregator_OptionalAggregator' := $Dereference($t0);
    assume {:print "$track_local(47,5,0):", $temp_0'$1_optional_aggregator_OptionalAggregator'} $temp_0'$1_optional_aggregator_OptionalAggregator' == $temp_0'$1_optional_aggregator_OptionalAggregator';

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:136:9+343
    assume {:print "$at(113,5131,5474)"} true;
L2:

    // trace_local[optional_aggregator]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:136:9+343
    assume {:print "$at(113,5131,5474)"} true;
    $temp_0'$1_optional_aggregator_OptionalAggregator' := $Dereference($t0);
    assume {:print "$track_local(47,5,0):", $temp_0'$1_optional_aggregator_OptionalAggregator'} $temp_0'$1_optional_aggregator_OptionalAggregator' == $temp_0'$1_optional_aggregator_OptionalAggregator';

    // pack_ref_deep($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:136:9+343

    // goto L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:136:9+343
    goto L3;

    // label L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:140:46+32
    assume {:print "$at(113,5387,5419)"} true;
L0:

    // $t9 := borrow_field<0x1::optional_aggregator::OptionalAggregator>.integer($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:140:46+32
    assume {:print "$at(113,5387,5419)"} true;
    $t9 := $ChildMutation($t0, 1, $Dereference($t0)->$integer);

    // $t10 := option::borrow_mut<0x1::optional_aggregator::Integer>($t9) on_abort goto L4 with $t6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:140:27+52
    call $t10,$t9 := $1_option_borrow_mut'$1_optional_aggregator_Integer'($t9);
    if ($abort_flag) {
        assume {:print "$at(113,5368,5420)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(47,5):", $t6} $t6 == $t6;
        goto L4;
    }

    // optional_aggregator::sub_integer($t10, $t1) on_abort goto L4 with $t6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:141:13+27
    assume {:print "$at(113,5435,5462)"} true;
    call $t10 := $1_optional_aggregator_sub_integer($t10, $t1);
    if ($abort_flag) {
        assume {:print "$at(113,5435,5462)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(47,5):", $t6} $t6 == $t6;
        goto L4;
    }

    // write_back[Reference($t9).vec (vector<0x1::optional_aggregator::Integer>)/[]]($t10) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:141:13+27
    $t9 := $UpdateMutation($t9, (var $$sel0 := $Dereference($t9)->$vec; $Update'$1_option_Option'$1_optional_aggregator_Integer''_vec($Dereference($t9), UpdateVec($$sel0, ReadVec($t10->p, LenVec($t9->p) + 1), $Dereference($t10)))));

    // write_back[Reference($t0).integer (0x1::option::Option<0x1::optional_aggregator::Integer>)]($t9) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:141:13+27
    $t0 := $UpdateMutation($t0, $Update'$1_optional_aggregator_OptionalAggregator'_integer($Dereference($t0), $Dereference($t9)));

    // trace_local[optional_aggregator]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:141:13+27
    $temp_0'$1_optional_aggregator_OptionalAggregator' := $Dereference($t0);
    assume {:print "$track_local(47,5,0):", $temp_0'$1_optional_aggregator_OptionalAggregator'} $temp_0'$1_optional_aggregator_OptionalAggregator' == $temp_0'$1_optional_aggregator_OptionalAggregator';

    // goto L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:141:13+27
    goto L2;

    // label L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:143:5+1
    assume {:print "$at(113,5480,5481)"} true;
L3:

    // return () at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:143:5+1
    assume {:print "$at(113,5480,5481)"} true;
    $ret0 := $t0;
    return;

    // label L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:143:5+1
L4:

    // abort($t6) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:143:5+1
    assume {:print "$at(113,5480,5481)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

    // label L7 at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;
L7:

    // drop($t0) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // drop($t4) at <internal>:1:1+10

    // goto L6 at <internal>:1:1+10
    goto L6;

}

// fun optional_aggregator::add_integer [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:39:5+248
procedure {:inline 1} $1_optional_aggregator_add_integer(_$t0: $Mutation ($1_optional_aggregator_Integer), _$t1: int) returns ($ret0: $Mutation ($1_optional_aggregator_Integer))
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: bool;
    var $t7: int;
    var $t8: int;
    var $t9: $Mutation (int);
    var $t10: int;
    var $t11: int;
    var $t0: $Mutation ($1_optional_aggregator_Integer);
    var $t1: int;
    var $temp_0'$1_optional_aggregator_Integer': $1_optional_aggregator_Integer;
    var $temp_0'u128': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[integer]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:39:5+1
    assume {:print "$at(113,1322,1323)"} true;
    $temp_0'$1_optional_aggregator_Integer' := $Dereference($t0);
    assume {:print "$track_local(47,6,0):", $temp_0'$1_optional_aggregator_Integer'} $temp_0'$1_optional_aggregator_Integer' == $temp_0'$1_optional_aggregator_Integer';

    // trace_local[value]($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:39:5+1
    assume {:print "$track_local(47,6,1):", $t1} $t1 == $t1;

    // $t2 := get_field<0x1::optional_aggregator::Integer>.limit($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:41:23+13
    assume {:print "$at(113,1417,1430)"} true;
    $t2 := $Dereference($t0)->$limit;

    // $t3 := get_field<0x1::optional_aggregator::Integer>.value($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:41:39+13
    $t3 := $Dereference($t0)->$value;

    // $t4 := -($t2, $t3) on_abort goto L3 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:41:22+31
    call $t4 := $Sub($t2, $t3);
    if ($abort_flag) {
        assume {:print "$at(113,1416,1447)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(47,6):", $t5} $t5 == $t5;
        goto L3;
    }

    // $t6 := <=($t1, $t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:41:13+40
    call $t6 := $Le($t1, $t4);

    // if ($t6) goto L1 else goto L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:40:9+6
    assume {:print "$at(113,1385,1391)"} true;
    if ($t6) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:44:25+13
    assume {:print "$at(113,1541,1554)"} true;
L1:

    // $t7 := get_field<0x1::optional_aggregator::Integer>.value($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:44:25+13
    assume {:print "$at(113,1541,1554)"} true;
    $t7 := $Dereference($t0)->$value;

    // $t8 := +($t7, $t1) on_abort goto L3 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:44:25+21
    call $t8 := $AddU128($t7, $t1);
    if ($abort_flag) {
        assume {:print "$at(113,1541,1562)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(47,6):", $t5} $t5 == $t5;
        goto L3;
    }

    // $t9 := borrow_field<0x1::optional_aggregator::Integer>.value($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:44:9+13
    $t9 := $ChildMutation($t0, 0, $Dereference($t0)->$value);

    // write_ref($t9, $t8) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:44:9+37
    $t9 := $UpdateMutation($t9, $t8);

    // write_back[Reference($t0).value (u128)]($t9) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:44:9+37
    $t0 := $UpdateMutation($t0, $Update'$1_optional_aggregator_Integer'_value($Dereference($t0), $Dereference($t9)));

    // trace_local[integer]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:44:9+37
    $temp_0'$1_optional_aggregator_Integer' := $Dereference($t0);
    assume {:print "$track_local(47,6,0):", $temp_0'$1_optional_aggregator_Integer'} $temp_0'$1_optional_aggregator_Integer' == $temp_0'$1_optional_aggregator_Integer';

    // trace_local[integer]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:39:57+196
    assume {:print "$at(113,1374,1570)"} true;
    $temp_0'$1_optional_aggregator_Integer' := $Dereference($t0);
    assume {:print "$track_local(47,6,0):", $temp_0'$1_optional_aggregator_Integer'} $temp_0'$1_optional_aggregator_Integer' == $temp_0'$1_optional_aggregator_Integer';

    // goto L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:39:57+196
    goto L2;

    // label L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:40:9+6
    assume {:print "$at(113,1385,1391)"} true;
L0:

    // drop($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:40:9+6
    assume {:print "$at(113,1385,1391)"} true;

    // $t10 := 1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:42:33+20
    assume {:print "$at(113,1482,1502)"} true;
    $t10 := 1;
    assume $IsValid'u64'($t10);

    // $t11 := error::out_of_range($t10) on_abort goto L3 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:42:13+41
    call $t11 := $1_error_out_of_range($t10);
    if ($abort_flag) {
        assume {:print "$at(113,1462,1503)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(47,6):", $t5} $t5 == $t5;
        goto L3;
    }

    // trace_abort($t11) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:40:9+6
    assume {:print "$at(113,1385,1391)"} true;
    assume {:print "$track_abort(47,6):", $t11} $t11 == $t11;

    // $t5 := move($t11) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:40:9+6
    $t5 := $t11;

    // goto L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:40:9+6
    goto L3;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:45:5+1
    assume {:print "$at(113,1569,1570)"} true;
L2:

    // return () at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:45:5+1
    assume {:print "$at(113,1569,1570)"} true;
    $ret0 := $t0;
    return;

    // label L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:45:5+1
L3:

    // abort($t5) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:45:5+1
    assume {:print "$at(113,1569,1570)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun optional_aggregator::sub_integer [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:48:5+194
procedure {:inline 1} $1_optional_aggregator_sub_integer(_$t0: $Mutation ($1_optional_aggregator_Integer), _$t1: int) returns ($ret0: $Mutation ($1_optional_aggregator_Integer))
{
    // declare local variables
    var $t2: int;
    var $t3: bool;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: $Mutation (int);
    var $t8: int;
    var $t9: int;
    var $t0: $Mutation ($1_optional_aggregator_Integer);
    var $t1: int;
    var $temp_0'$1_optional_aggregator_Integer': $1_optional_aggregator_Integer;
    var $temp_0'u128': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[integer]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:48:5+1
    assume {:print "$at(113,1647,1648)"} true;
    $temp_0'$1_optional_aggregator_Integer' := $Dereference($t0);
    assume {:print "$track_local(47,13,0):", $temp_0'$1_optional_aggregator_Integer'} $temp_0'$1_optional_aggregator_Integer' == $temp_0'$1_optional_aggregator_Integer';

    // trace_local[value]($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:48:5+1
    assume {:print "$track_local(47,13,1):", $t1} $t1 == $t1;

    // $t2 := get_field<0x1::optional_aggregator::Integer>.value($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:49:26+13
    assume {:print "$at(113,1727,1740)"} true;
    $t2 := $Dereference($t0)->$value;

    // $t3 := <=($t1, $t2) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:49:17+22
    call $t3 := $Le($t1, $t2);

    // if ($t3) goto L1 else goto L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:49:9+6
    if ($t3) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:50:25+13
    assume {:print "$at(113,1812,1825)"} true;
L1:

    // $t4 := get_field<0x1::optional_aggregator::Integer>.value($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:50:25+13
    assume {:print "$at(113,1812,1825)"} true;
    $t4 := $Dereference($t0)->$value;

    // $t5 := -($t4, $t1) on_abort goto L3 with $t6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:50:25+21
    call $t5 := $Sub($t4, $t1);
    if ($abort_flag) {
        assume {:print "$at(113,1812,1833)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(47,13):", $t6} $t6 == $t6;
        goto L3;
    }

    // $t7 := borrow_field<0x1::optional_aggregator::Integer>.value($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:50:9+13
    $t7 := $ChildMutation($t0, 0, $Dereference($t0)->$value);

    // write_ref($t7, $t5) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:50:9+37
    $t7 := $UpdateMutation($t7, $t5);

    // write_back[Reference($t0).value (u128)]($t7) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:50:9+37
    $t0 := $UpdateMutation($t0, $Update'$1_optional_aggregator_Integer'_value($Dereference($t0), $Dereference($t7)));

    // trace_local[integer]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:50:9+37
    $temp_0'$1_optional_aggregator_Integer' := $Dereference($t0);
    assume {:print "$track_local(47,13,0):", $temp_0'$1_optional_aggregator_Integer'} $temp_0'$1_optional_aggregator_Integer' == $temp_0'$1_optional_aggregator_Integer';

    // trace_local[integer]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:48:57+142
    assume {:print "$at(113,1699,1841)"} true;
    $temp_0'$1_optional_aggregator_Integer' := $Dereference($t0);
    assume {:print "$track_local(47,13,0):", $temp_0'$1_optional_aggregator_Integer'} $temp_0'$1_optional_aggregator_Integer' == $temp_0'$1_optional_aggregator_Integer';

    // goto L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:48:57+142
    goto L2;

    // label L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:49:9+6
    assume {:print "$at(113,1710,1716)"} true;
L0:

    // drop($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:49:9+6
    assume {:print "$at(113,1710,1716)"} true;

    // $t8 := 2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:49:61+21
    $t8 := 2;
    assume $IsValid'u64'($t8);

    // $t9 := error::out_of_range($t8) on_abort goto L3 with $t6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:49:41+42
    call $t9 := $1_error_out_of_range($t8);
    if ($abort_flag) {
        assume {:print "$at(113,1742,1784)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(47,13):", $t6} $t6 == $t6;
        goto L3;
    }

    // trace_abort($t9) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:49:9+6
    assume {:print "$at(113,1710,1716)"} true;
    assume {:print "$track_abort(47,13):", $t9} $t9 == $t9;

    // $t6 := move($t9) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:49:9+6
    $t6 := $t9;

    // goto L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:49:9+6
    goto L3;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:51:5+1
    assume {:print "$at(113,1840,1841)"} true;
L2:

    // return () at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:51:5+1
    assume {:print "$at(113,1840,1841)"} true;
    $ret0 := $t0;
    return;

    // label L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:51:5+1
L3:

    // abort($t6) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aggregator\optional_aggregator.move:51:5+1
    assume {:print "$at(113,1840,1841)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}

// struct fungible_asset::TransferRef at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:190:5+79
datatype $1_fungible_asset_TransferRef {
    $1_fungible_asset_TransferRef($metadata: $1_object_Object'$1_fungible_asset_Metadata')
}
function {:inline} $Update'$1_fungible_asset_TransferRef'_metadata(s: $1_fungible_asset_TransferRef, x: $1_object_Object'$1_fungible_asset_Metadata'): $1_fungible_asset_TransferRef {
    $1_fungible_asset_TransferRef(x)
}
function $IsValid'$1_fungible_asset_TransferRef'(s: $1_fungible_asset_TransferRef): bool {
    $IsValid'$1_object_Object'$1_fungible_asset_Metadata''(s->$metadata)
}
function {:inline} $IsEqual'$1_fungible_asset_TransferRef'(s1: $1_fungible_asset_TransferRef, s2: $1_fungible_asset_TransferRef): bool {
    s1 == s2
}

// struct fungible_asset::Untransferable at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:144:5+32
datatype $1_fungible_asset_Untransferable {
    $1_fungible_asset_Untransferable($dummy_field: bool)
}
function {:inline} $Update'$1_fungible_asset_Untransferable'_dummy_field(s: $1_fungible_asset_Untransferable, x: bool): $1_fungible_asset_Untransferable {
    $1_fungible_asset_Untransferable(x)
}
function $IsValid'$1_fungible_asset_Untransferable'(s: $1_fungible_asset_Untransferable): bool {
    $IsValid'bool'(s->$dummy_field)
}
function {:inline} $IsEqual'$1_fungible_asset_Untransferable'(s1: $1_fungible_asset_Untransferable, s2: $1_fungible_asset_Untransferable): bool {
    s1 == s2
}
var $1_fungible_asset_Untransferable_$memory: $Memory $1_fungible_asset_Untransferable;

// struct fungible_asset::BurnRef at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:205:5+75
datatype $1_fungible_asset_BurnRef {
    $1_fungible_asset_BurnRef($metadata: $1_object_Object'$1_fungible_asset_Metadata')
}
function {:inline} $Update'$1_fungible_asset_BurnRef'_metadata(s: $1_fungible_asset_BurnRef, x: $1_object_Object'$1_fungible_asset_Metadata'): $1_fungible_asset_BurnRef {
    $1_fungible_asset_BurnRef(x)
}
function $IsValid'$1_fungible_asset_BurnRef'(s: $1_fungible_asset_BurnRef): bool {
    $IsValid'$1_object_Object'$1_fungible_asset_Metadata''(s->$metadata)
}
function {:inline} $IsEqual'$1_fungible_asset_BurnRef'(s1: $1_fungible_asset_BurnRef, s2: $1_fungible_asset_BurnRef): bool {
    s1 == s2
}

// struct fungible_asset::ConcurrentFungibleBalance at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:171:5+135
datatype $1_fungible_asset_ConcurrentFungibleBalance {
    $1_fungible_asset_ConcurrentFungibleBalance($balance: $1_aggregator_v2_Aggregator'u64')
}
function {:inline} $Update'$1_fungible_asset_ConcurrentFungibleBalance'_balance(s: $1_fungible_asset_ConcurrentFungibleBalance, x: $1_aggregator_v2_Aggregator'u64'): $1_fungible_asset_ConcurrentFungibleBalance {
    $1_fungible_asset_ConcurrentFungibleBalance(x)
}
function $IsValid'$1_fungible_asset_ConcurrentFungibleBalance'(s: $1_fungible_asset_ConcurrentFungibleBalance): bool {
    $IsValid'$1_aggregator_v2_Aggregator'u64''(s->$balance)
}
function {:inline} $IsEqual'$1_fungible_asset_ConcurrentFungibleBalance'(s1: $1_fungible_asset_ConcurrentFungibleBalance, s2: $1_fungible_asset_ConcurrentFungibleBalance): bool {
    s1 == s2
}
var $1_fungible_asset_ConcurrentFungibleBalance_$memory: $Memory $1_fungible_asset_ConcurrentFungibleBalance;

// struct fungible_asset::ConcurrentSupply at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:118:5+76
datatype $1_fungible_asset_ConcurrentSupply {
    $1_fungible_asset_ConcurrentSupply($current: $1_aggregator_v2_Aggregator'u128')
}
function {:inline} $Update'$1_fungible_asset_ConcurrentSupply'_current(s: $1_fungible_asset_ConcurrentSupply, x: $1_aggregator_v2_Aggregator'u128'): $1_fungible_asset_ConcurrentSupply {
    $1_fungible_asset_ConcurrentSupply(x)
}
function $IsValid'$1_fungible_asset_ConcurrentSupply'(s: $1_fungible_asset_ConcurrentSupply): bool {
    $IsValid'$1_aggregator_v2_Aggregator'u128''(s->$current)
}
function {:inline} $IsEqual'$1_fungible_asset_ConcurrentSupply'(s1: $1_fungible_asset_ConcurrentSupply, s2: $1_fungible_asset_ConcurrentSupply): bool {
    s1 == s2
}
var $1_fungible_asset_ConcurrentSupply_$memory: $Memory $1_fungible_asset_ConcurrentSupply;

// struct fungible_asset::Deposit at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:220:5+86
datatype $1_fungible_asset_Deposit {
    $1_fungible_asset_Deposit($store: int, $amount: int)
}
function {:inline} $Update'$1_fungible_asset_Deposit'_store(s: $1_fungible_asset_Deposit, x: int): $1_fungible_asset_Deposit {
    $1_fungible_asset_Deposit(x, s->$amount)
}
function {:inline} $Update'$1_fungible_asset_Deposit'_amount(s: $1_fungible_asset_Deposit, x: int): $1_fungible_asset_Deposit {
    $1_fungible_asset_Deposit(s->$store, x)
}
function $IsValid'$1_fungible_asset_Deposit'(s: $1_fungible_asset_Deposit): bool {
    $IsValid'address'(s->$store)
      && $IsValid'u64'(s->$amount)
}
function {:inline} $IsEqual'$1_fungible_asset_Deposit'(s1: $1_fungible_asset_Deposit, s2: $1_fungible_asset_Deposit): bool {
    s1 == s2
}

// struct fungible_asset::DispatchFunctionStore at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:158:5+189
datatype $1_fungible_asset_DispatchFunctionStore {
    $1_fungible_asset_DispatchFunctionStore($withdraw_function: $1_option_Option'$1_function_info_FunctionInfo', $deposit_function: $1_option_Option'$1_function_info_FunctionInfo', $derived_balance_function: $1_option_Option'$1_function_info_FunctionInfo')
}
function {:inline} $Update'$1_fungible_asset_DispatchFunctionStore'_withdraw_function(s: $1_fungible_asset_DispatchFunctionStore, x: $1_option_Option'$1_function_info_FunctionInfo'): $1_fungible_asset_DispatchFunctionStore {
    $1_fungible_asset_DispatchFunctionStore(x, s->$deposit_function, s->$derived_balance_function)
}
function {:inline} $Update'$1_fungible_asset_DispatchFunctionStore'_deposit_function(s: $1_fungible_asset_DispatchFunctionStore, x: $1_option_Option'$1_function_info_FunctionInfo'): $1_fungible_asset_DispatchFunctionStore {
    $1_fungible_asset_DispatchFunctionStore(s->$withdraw_function, x, s->$derived_balance_function)
}
function {:inline} $Update'$1_fungible_asset_DispatchFunctionStore'_derived_balance_function(s: $1_fungible_asset_DispatchFunctionStore, x: $1_option_Option'$1_function_info_FunctionInfo'): $1_fungible_asset_DispatchFunctionStore {
    $1_fungible_asset_DispatchFunctionStore(s->$withdraw_function, s->$deposit_function, x)
}
function $IsValid'$1_fungible_asset_DispatchFunctionStore'(s: $1_fungible_asset_DispatchFunctionStore): bool {
    $IsValid'$1_option_Option'$1_function_info_FunctionInfo''(s->$withdraw_function)
      && $IsValid'$1_option_Option'$1_function_info_FunctionInfo''(s->$deposit_function)
      && $IsValid'$1_option_Option'$1_function_info_FunctionInfo''(s->$derived_balance_function)
}
function {:inline} $IsEqual'$1_fungible_asset_DispatchFunctionStore'(s1: $1_fungible_asset_DispatchFunctionStore, s2: $1_fungible_asset_DispatchFunctionStore): bool {
    $IsEqual'$1_option_Option'$1_function_info_FunctionInfo''(s1->$withdraw_function, s2->$withdraw_function)
    && $IsEqual'$1_option_Option'$1_function_info_FunctionInfo''(s1->$deposit_function, s2->$deposit_function)
    && $IsEqual'$1_option_Option'$1_function_info_FunctionInfo''(s1->$derived_balance_function, s2->$derived_balance_function)}
var $1_fungible_asset_DispatchFunctionStore_$memory: $Memory $1_fungible_asset_DispatchFunctionStore;

// struct fungible_asset::FungibleAsset at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:178:5+88
datatype $1_fungible_asset_FungibleAsset {
    $1_fungible_asset_FungibleAsset($metadata: $1_object_Object'$1_fungible_asset_Metadata', $amount: int)
}
function {:inline} $Update'$1_fungible_asset_FungibleAsset'_metadata(s: $1_fungible_asset_FungibleAsset, x: $1_object_Object'$1_fungible_asset_Metadata'): $1_fungible_asset_FungibleAsset {
    $1_fungible_asset_FungibleAsset(x, s->$amount)
}
function {:inline} $Update'$1_fungible_asset_FungibleAsset'_amount(s: $1_fungible_asset_FungibleAsset, x: int): $1_fungible_asset_FungibleAsset {
    $1_fungible_asset_FungibleAsset(s->$metadata, x)
}
function $IsValid'$1_fungible_asset_FungibleAsset'(s: $1_fungible_asset_FungibleAsset): bool {
    $IsValid'$1_object_Object'$1_fungible_asset_Metadata''(s->$metadata)
      && $IsValid'u64'(s->$amount)
}
function {:inline} $IsEqual'$1_fungible_asset_FungibleAsset'(s1: $1_fungible_asset_FungibleAsset, s2: $1_fungible_asset_FungibleAsset): bool {
    s1 == s2
}

// struct fungible_asset::FungibleStore at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:148:5+331
datatype $1_fungible_asset_FungibleStore {
    $1_fungible_asset_FungibleStore($metadata: $1_object_Object'$1_fungible_asset_Metadata', $balance: int, $frozen: bool)
}
function {:inline} $Update'$1_fungible_asset_FungibleStore'_metadata(s: $1_fungible_asset_FungibleStore, x: $1_object_Object'$1_fungible_asset_Metadata'): $1_fungible_asset_FungibleStore {
    $1_fungible_asset_FungibleStore(x, s->$balance, s->$frozen)
}
function {:inline} $Update'$1_fungible_asset_FungibleStore'_balance(s: $1_fungible_asset_FungibleStore, x: int): $1_fungible_asset_FungibleStore {
    $1_fungible_asset_FungibleStore(s->$metadata, x, s->$frozen)
}
function {:inline} $Update'$1_fungible_asset_FungibleStore'_frozen(s: $1_fungible_asset_FungibleStore, x: bool): $1_fungible_asset_FungibleStore {
    $1_fungible_asset_FungibleStore(s->$metadata, s->$balance, x)
}
function $IsValid'$1_fungible_asset_FungibleStore'(s: $1_fungible_asset_FungibleStore): bool {
    $IsValid'$1_object_Object'$1_fungible_asset_Metadata''(s->$metadata)
      && $IsValid'u64'(s->$balance)
      && $IsValid'bool'(s->$frozen)
}
function {:inline} $IsEqual'$1_fungible_asset_FungibleStore'(s1: $1_fungible_asset_FungibleStore, s2: $1_fungible_asset_FungibleStore): bool {
    s1 == s2
}
var $1_fungible_asset_FungibleStore_$memory: $Memory $1_fungible_asset_FungibleStore;

// struct fungible_asset::Metadata at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:124:5+812
datatype $1_fungible_asset_Metadata {
    $1_fungible_asset_Metadata($name: $1_string_String, $symbol: $1_string_String, $decimals: int, $icon_uri: $1_string_String, $project_uri: $1_string_String)
}
function {:inline} $Update'$1_fungible_asset_Metadata'_name(s: $1_fungible_asset_Metadata, x: $1_string_String): $1_fungible_asset_Metadata {
    $1_fungible_asset_Metadata(x, s->$symbol, s->$decimals, s->$icon_uri, s->$project_uri)
}
function {:inline} $Update'$1_fungible_asset_Metadata'_symbol(s: $1_fungible_asset_Metadata, x: $1_string_String): $1_fungible_asset_Metadata {
    $1_fungible_asset_Metadata(s->$name, x, s->$decimals, s->$icon_uri, s->$project_uri)
}
function {:inline} $Update'$1_fungible_asset_Metadata'_decimals(s: $1_fungible_asset_Metadata, x: int): $1_fungible_asset_Metadata {
    $1_fungible_asset_Metadata(s->$name, s->$symbol, x, s->$icon_uri, s->$project_uri)
}
function {:inline} $Update'$1_fungible_asset_Metadata'_icon_uri(s: $1_fungible_asset_Metadata, x: $1_string_String): $1_fungible_asset_Metadata {
    $1_fungible_asset_Metadata(s->$name, s->$symbol, s->$decimals, x, s->$project_uri)
}
function {:inline} $Update'$1_fungible_asset_Metadata'_project_uri(s: $1_fungible_asset_Metadata, x: $1_string_String): $1_fungible_asset_Metadata {
    $1_fungible_asset_Metadata(s->$name, s->$symbol, s->$decimals, s->$icon_uri, x)
}
function $IsValid'$1_fungible_asset_Metadata'(s: $1_fungible_asset_Metadata): bool {
    $IsValid'$1_string_String'(s->$name)
      && $IsValid'$1_string_String'(s->$symbol)
      && $IsValid'u8'(s->$decimals)
      && $IsValid'$1_string_String'(s->$icon_uri)
      && $IsValid'$1_string_String'(s->$project_uri)
}
function {:inline} $IsEqual'$1_fungible_asset_Metadata'(s1: $1_fungible_asset_Metadata, s2: $1_fungible_asset_Metadata): bool {
    $IsEqual'$1_string_String'(s1->$name, s2->$name)
    && $IsEqual'$1_string_String'(s1->$symbol, s2->$symbol)
    && $IsEqual'u8'(s1->$decimals, s2->$decimals)
    && $IsEqual'$1_string_String'(s1->$icon_uri, s2->$icon_uri)
    && $IsEqual'$1_string_String'(s1->$project_uri, s2->$project_uri)}
var $1_fungible_asset_Metadata_$memory: $Memory $1_fungible_asset_Metadata;

// struct fungible_asset::MintRef at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:184:5+75
datatype $1_fungible_asset_MintRef {
    $1_fungible_asset_MintRef($metadata: $1_object_Object'$1_fungible_asset_Metadata')
}
function {:inline} $Update'$1_fungible_asset_MintRef'_metadata(s: $1_fungible_asset_MintRef, x: $1_object_Object'$1_fungible_asset_Metadata'): $1_fungible_asset_MintRef {
    $1_fungible_asset_MintRef(x)
}
function $IsValid'$1_fungible_asset_MintRef'(s: $1_fungible_asset_MintRef): bool {
    $IsValid'$1_object_Object'$1_fungible_asset_Metadata''(s->$metadata)
}
function {:inline} $IsEqual'$1_fungible_asset_MintRef'(s1: $1_fungible_asset_MintRef, s2: $1_fungible_asset_MintRef): bool {
    s1 == s2
}

// struct fungible_asset::Supply at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:111:5+137
datatype $1_fungible_asset_Supply {
    $1_fungible_asset_Supply($current: int, $maximum: $1_option_Option'u128')
}
function {:inline} $Update'$1_fungible_asset_Supply'_current(s: $1_fungible_asset_Supply, x: int): $1_fungible_asset_Supply {
    $1_fungible_asset_Supply(x, s->$maximum)
}
function {:inline} $Update'$1_fungible_asset_Supply'_maximum(s: $1_fungible_asset_Supply, x: $1_option_Option'u128'): $1_fungible_asset_Supply {
    $1_fungible_asset_Supply(s->$current, x)
}
function $IsValid'$1_fungible_asset_Supply'(s: $1_fungible_asset_Supply): bool {
    $IsValid'u128'(s->$current)
      && $IsValid'$1_option_Option'u128''(s->$maximum)
}
function {:inline} $IsEqual'$1_fungible_asset_Supply'(s1: $1_fungible_asset_Supply, s2: $1_fungible_asset_Supply): bool {
    $IsEqual'u128'(s1->$current, s2->$current)
    && $IsEqual'$1_option_Option'u128''(s1->$maximum, s2->$maximum)}
var $1_fungible_asset_Supply_$memory: $Memory $1_fungible_asset_Supply;

// struct fungible_asset::Withdraw at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:227:5+87
datatype $1_fungible_asset_Withdraw {
    $1_fungible_asset_Withdraw($store: int, $amount: int)
}
function {:inline} $Update'$1_fungible_asset_Withdraw'_store(s: $1_fungible_asset_Withdraw, x: int): $1_fungible_asset_Withdraw {
    $1_fungible_asset_Withdraw(x, s->$amount)
}
function {:inline} $Update'$1_fungible_asset_Withdraw'_amount(s: $1_fungible_asset_Withdraw, x: int): $1_fungible_asset_Withdraw {
    $1_fungible_asset_Withdraw(s->$store, x)
}
function $IsValid'$1_fungible_asset_Withdraw'(s: $1_fungible_asset_Withdraw): bool {
    $IsValid'address'(s->$store)
      && $IsValid'u64'(s->$amount)
}
function {:inline} $IsEqual'$1_fungible_asset_Withdraw'(s1: $1_fungible_asset_Withdraw, s2: $1_fungible_asset_Withdraw): bool {
    s1 == s2
}

// enum fungible_asset::WithdrawPermission at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:214:5+98
datatype $1_fungible_asset_WithdrawPermission {
    $1_fungible_asset_WithdrawPermission_ByStore($store_address_ByStore: int)
}
function {:inline} $Update'$1_fungible_asset_WithdrawPermission_ByStore'_store_address(s: $1_fungible_asset_WithdrawPermission, x: int): $1_fungible_asset_WithdrawPermission {
    $1_fungible_asset_WithdrawPermission_ByStore(x)
}
function $IsValid'$1_fungible_asset_WithdrawPermission_ByStore'(s: $1_fungible_asset_WithdrawPermission): bool {
    if s is $1_fungible_asset_WithdrawPermission_ByStore then
    $IsValid'address'(s->$store_address_ByStore)
    else false
}
function {:inline} $Update'$1_fungible_asset_WithdrawPermission'_int_store_address(s: $1_fungible_asset_WithdrawPermission, x: int): $1_fungible_asset_WithdrawPermission {
     if s is $1_fungible_asset_WithdrawPermission_ByStore then
    $Update'$1_fungible_asset_WithdrawPermission_ByStore'_store_address(s, x)
    else s
}
function $IsValid'$1_fungible_asset_WithdrawPermission'(s: $1_fungible_asset_WithdrawPermission): bool {
     if s is $1_fungible_asset_WithdrawPermission_ByStore then
    $IsValid'$1_fungible_asset_WithdrawPermission_ByStore'(s)
    else false
}
function {:inline} $IsEqual'$1_fungible_asset_WithdrawPermission'(s1: $1_fungible_asset_WithdrawPermission, s2: $1_fungible_asset_WithdrawPermission): bool {
    s1 == s2
}

// fun fungible_asset::generate_transfer_ref [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:489:5+210
procedure {:inline 1} $1_fungible_asset_generate_transfer_ref(_$t0: $1_object_ConstructorRef) returns ($ret0: $1_fungible_asset_TransferRef)
{
    // declare local variables
    var $t1: $1_object_Object'$1_fungible_asset_Metadata';
    var $t2: int;
    var $t3: $1_fungible_asset_TransferRef;
    var $t0: $1_object_ConstructorRef;
    var $temp_0'$1_fungible_asset_TransferRef': $1_fungible_asset_TransferRef;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[constructor_ref]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:489:5+1
    assume {:print "$at(169,20925,20926)"} true;
    assume {:print "$track_local(48,4,0):", $t0} $t0 == $t0;

    // $t1 := object::object_from_constructor_ref<0x1::fungible_asset::Metadata>($t0) on_abort goto L2 with $t2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:490:24+62
    assume {:print "$at(169,21031,21093)"} true;
    call $t1 := $1_object_object_from_constructor_ref'$1_fungible_asset_Metadata'($t0);
    if ($abort_flag) {
        assume {:print "$at(169,21031,21093)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(48,4):", $t2} $t2 == $t2;
        goto L2;
    }

    // $t3 := pack 0x1::fungible_asset::TransferRef($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:491:9+24
    assume {:print "$at(169,21104,21128)"} true;
    $t3 := $1_fungible_asset_TransferRef($t1);

    // trace_return[0]($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:491:9+24
    assume {:print "$track_return(48,4,0):", $t3} $t3 == $t3;

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:492:5+1
    assume {:print "$at(169,21134,21135)"} true;
L1:

    // return $t3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:492:5+1
    assume {:print "$at(169,21134,21135)"} true;
    $ret0 := $t3;
    return;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:492:5+1
L2:

    // abort($t2) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:492:5+1
    assume {:print "$at(169,21134,21135)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun fungible_asset::is_untransferable<0x1::fungible_asset::Metadata> [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:322:5+139
procedure {:inline 1} $1_fungible_asset_is_untransferable'$1_fungible_asset_Metadata'(_$t0: $1_object_Object'$1_fungible_asset_Metadata') returns ($ret0: bool)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: bool;
    var $t0: $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'bool': bool;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[metadata]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:322:5+1
    assume {:print "$at(169,13765,13766)"} true;
    assume {:print "$track_local(48,5,0):", $t0} $t0 == $t0;

    // $t1 := object::object_address<#0>($t0) on_abort goto L2 with $t2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:323:32+33
    assume {:print "$at(169,13863,13896)"} true;
    call $t1 := $1_object_object_address'$1_fungible_asset_Metadata'($t0);
    if ($abort_flag) {
        assume {:print "$at(169,13863,13896)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(48,5):", $t2} $t2 == $t2;
        goto L2;
    }

    // $t3 := exists<0x1::fungible_asset::Untransferable>($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:323:9+57
    $t3 := $ResourceExists($1_fungible_asset_Untransferable_$memory, $t1);

    // trace_return[0]($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:323:9+57
    assume {:print "$track_return(48,5,0):", $t3} $t3 == $t3;

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:324:5+1
    assume {:print "$at(169,13903,13904)"} true;
L1:

    // return $t3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:324:5+1
    assume {:print "$at(169,13903,13904)"} true;
    $ret0 := $t3;
    return;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:324:5+1
L2:

    // abort($t2) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:324:5+1
    assume {:print "$at(169,13903,13904)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun fungible_asset::add_fungibility [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:266:5+1873
procedure {:inline 1} $1_fungible_asset_add_fungibility(_$t0: $1_object_ConstructorRef, _$t1: $1_option_Option'u128', _$t2: $1_string_String, _$t3: $1_string_String, _$t4: int, _$t5: $1_string_String, _$t6: $1_string_String) returns ($ret0: $1_object_Object'$1_fungible_asset_Metadata')
{
    // declare local variables
    var $t7: $signer;
    var $t8: $signer;
    var $t9: $signer;
    var $t10: $1_aggregator_v2_Aggregator'u128';
    var $t11: $1_fungible_asset_ConcurrentSupply;
    var $t12: bool;
    var $t13: int;
    var $t14: $signer;
    var $t15: int;
    var $t16: int;
    var $t17: bool;
    var $t18: int;
    var $t19: int;
    var $t20: bool;
    var $t21: int;
    var $t22: bool;
    var $t23: int;
    var $t24: int;
    var $t25: bool;
    var $t26: int;
    var $t27: int;
    var $t28: bool;
    var $t29: $1_fungible_asset_Metadata;
    var $t30: bool;
    var $t31: $1_option_Option'u128';
    var $t32: bool;
    var $t33: $1_aggregator_v2_Aggregator'u128';
    var $t34: $1_fungible_asset_ConcurrentSupply;
    var $t35: $1_object_Object'$1_fungible_asset_Metadata';
    var $t36: $Mutation ($1_option_Option'u128');
    var $t37: int;
    var $t38: $1_option_Option'u128';
    var $t39: bool;
    var $t40: $1_aggregator_v2_Aggregator'u128';
    var $t41: int;
    var $t42: $1_option_Option'u128';
    var $t43: $1_fungible_asset_Supply;
    var $t44: int;
    var $t45: int;
    var $t46: int;
    var $t47: int;
    var $t48: int;
    var $t49: int;
    var $t50: int;
    var $t51: int;
    var $t52: int;
    var $t53: int;
    var $t54: int;
    var $t55: int;
    var $t0: $1_object_ConstructorRef;
    var $t1: $1_option_Option'u128';
    var $t2: $1_string_String;
    var $t3: $1_string_String;
    var $t4: int;
    var $t5: $1_string_String;
    var $t6: $1_string_String;
    var $temp_0'$1_aggregator_v2_Aggregator'u128'': $1_aggregator_v2_Aggregator'u128';
    var $temp_0'$1_fungible_asset_ConcurrentSupply': $1_fungible_asset_ConcurrentSupply;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'$1_option_Option'u128'': $1_option_Option'u128';
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'signer': $signer;
    var $temp_0'u8': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;
    $t3 := _$t3;
    $t4 := _$t4;
    $t5 := _$t5;
    $t6 := _$t6;

    // bytecode translation starts here
    // trace_local[constructor_ref]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:266:5+1
    assume {:print "$at(169,11342,11343)"} true;
    assume {:print "$track_local(48,9,0):", $t0} $t0 == $t0;

    // trace_local[maximum_supply]($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:266:5+1
    assume {:print "$track_local(48,9,1):", $t1} $t1 == $t1;

    // trace_local[name]($t2) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:266:5+1
    assume {:print "$track_local(48,9,2):", $t2} $t2 == $t2;

    // trace_local[symbol]($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:266:5+1
    assume {:print "$track_local(48,9,3):", $t3} $t3 == $t3;

    // trace_local[decimals]($t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:266:5+1
    assume {:print "$track_local(48,9,4):", $t4} $t4 == $t4;

    // trace_local[icon_uri]($t5) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:266:5+1
    assume {:print "$track_local(48,9,5):", $t5} $t5 == $t5;

    // trace_local[project_uri]($t6) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:266:5+1
    assume {:print "$track_local(48,9,6):", $t6} $t6 == $t6;

    // $t12 := object::can_generate_delete_ref($t0) on_abort goto L19 with $t13 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:275:18+48
    assume {:print "$at(169,11625,11673)"} true;
    call $t12 := $1_object_can_generate_delete_ref($t0);
    if ($abort_flag) {
        assume {:print "$at(169,11625,11673)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(48,9):", $t13} $t13 == $t13;
        goto L19;
    }

    // if ($t12) goto L0 else goto L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:275:17+49
    if ($t12) { goto L0; } else { goto L1; }

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:276:39+40
    assume {:print "$at(169,11762,11802)"} true;
L1:

    // $t14 := object::generate_signer($t0) on_abort goto L19 with $t13 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:276:39+40
    assume {:print "$at(169,11762,11802)"} true;
    call $t14 := $1_object_generate_signer($t0);
    if ($abort_flag) {
        assume {:print "$at(169,11762,11802)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(48,9):", $t13} $t13 == $t13;
        goto L19;
    }

    // trace_local[$t13]($t14) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:276:39+40
    assume {:print "$track_local(48,9,7):", $t14} $t14 == $t14;

    // trace_local[metadata_object_signer]($t14) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:276:38+41
    assume {:print "$track_local(48,9,8):", $t14} $t14 == $t14;

    // $t15 := string::length($t2) on_abort goto L19 with $t13 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:277:17+21
    assume {:print "$at(169,11821,11842)"} true;
    call $t15 := $1_string_length($t2);
    if ($abort_flag) {
        assume {:print "$at(169,11821,11842)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(48,9):", $t13} $t13 == $t13;
        goto L19;
    }

    // $t16 := 32 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:277:42+15
    $t16 := 32;
    assume $IsValid'u64'($t16);

    // $t17 := <=($t15, $t16) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:277:17+40
    call $t17 := $Le($t15, $t16);

    // if ($t17) goto L3 else goto L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:277:9+6
    if ($t17) { goto L3; } else { goto L2; }

    // label L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:278:32+7
    assume {:print "$at(169,11933,11940)"} true;
L3:

    // $t18 := string::length($t3) on_abort goto L19 with $t13 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:278:17+23
    assume {:print "$at(169,11918,11941)"} true;
    call $t18 := $1_string_length($t3);
    if ($abort_flag) {
        assume {:print "$at(169,11918,11941)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(48,9):", $t13} $t13 == $t13;
        goto L19;
    }

    // $t19 := 32 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:278:44+17
    $t19 := 32;
    assume $IsValid'u64'($t19);

    // $t20 := <=($t18, $t19) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:278:17+44
    call $t20 := $Le($t18, $t19);

    // if ($t20) goto L5 else goto L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:278:9+6
    if ($t20) { goto L5; } else { goto L4; }

    // label L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:279:17+8
    assume {:print "$at(169,12021,12029)"} true;
L5:

    // $t21 := 32 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:279:29+12
    assume {:print "$at(169,12033,12045)"} true;
    $t21 := 32;
    assume $IsValid'u8'($t21);

    // $t22 := <=($t4, $t21) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:279:17+24
    call $t22 := $Le($t4, $t21);

    // if ($t22) goto L7 else goto L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:279:9+6
    if ($t22) { goto L7; } else { goto L6; }

    // label L7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:280:32+9
    assume {:print "$at(169,12122,12131)"} true;
L7:

    // $t23 := string::length($t5) on_abort goto L19 with $t13 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:280:17+25
    assume {:print "$at(169,12107,12132)"} true;
    call $t23 := $1_string_length($t5);
    if ($abort_flag) {
        assume {:print "$at(169,12107,12132)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(48,9):", $t13} $t13 == $t13;
        goto L19;
    }

    // $t24 := 512 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:280:46+14
    $t24 := 512;
    assume $IsValid'u64'($t24);

    // $t25 := <=($t23, $t24) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:280:17+43
    call $t25 := $Le($t23, $t24);

    // if ($t25) goto L9 else goto L8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:280:9+6
    if ($t25) { goto L9; } else { goto L8; }

    // label L9 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:281:32+12
    assume {:print "$at(169,12221,12233)"} true;
L9:

    // $t26 := string::length($t6) on_abort goto L19 with $t13 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:281:17+28
    assume {:print "$at(169,12206,12234)"} true;
    call $t26 := $1_string_length($t6);
    if ($abort_flag) {
        assume {:print "$at(169,12206,12234)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(48,9):", $t13} $t13 == $t13;
        goto L19;
    }

    // $t27 := 512 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:281:49+14
    $t27 := 512;
    assume $IsValid'u64'($t27);

    // $t28 := <=($t26, $t27) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:281:17+46
    call $t28 := $Le($t26, $t27);

    // if ($t28) goto L11 else goto L10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:281:9+6
    if ($t28) { goto L11; } else { goto L10; }

    // label L11 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:282:17+22
    assume {:print "$at(169,12308,12330)"} true;
L11:

    // $t29 := pack 0x1::fungible_asset::Metadata($t2, $t3, $t4, $t5, $t6) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:283:13+157
    assume {:print "$at(169,12345,12502)"} true;
    $t29 := $1_fungible_asset_Metadata($t2, $t3, $t4, $t5, $t6);

    // move_to<0x1::fungible_asset::Metadata>($t29, $t14) on_abort goto L19 with $t13 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:282:9+213
    assume {:print "$at(169,12300,12513)"} true;
    if ($ResourceExists($1_fungible_asset_Metadata_$memory, $t14->$addr)) {
        call $ExecFailureAbort();
    } else {
        $1_fungible_asset_Metadata_$memory := $ResourceUpdate($1_fungible_asset_Metadata_$memory, $t14->$addr, $t29);
    }
    if ($abort_flag) {
        assume {:print "$at(169,12300,12513)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(48,9):", $t13} $t13 == $t13;
        goto L19;
    }

    // $t30 := features::concurrent_fungible_assets_enabled() on_abort goto L19 with $t13 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:248:9+46
    assume {:print "$at(169,10473,10519)"} true;
    call $t30 := $1_features_concurrent_fungible_assets_enabled();
    if ($abort_flag) {
        assume {:print "$at(169,10473,10519)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(48,9):", $t13} $t13 == $t13;
        goto L19;
    }

    // if ($t30) goto L13 else goto L12 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:292:9+607
    assume {:print "$at(169,12526,13133)"} true;
    if ($t30) { goto L13; } else { goto L12; }

    // label L13 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:293:45+15
    assume {:print "$at(169,12618,12633)"} true;
L13:

    // $t31 := copy($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:293:45+15
    assume {:print "$at(169,12618,12633)"} true;
    $t31 := $t1;

    // $t32 := opaque begin: option::is_none<u128>($t31) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:293:29+32

    // assume WellFormed($t32) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:293:29+32
    assume $IsValid'bool'($t32);

    // assume Eq<bool>($t32, option::spec_is_none<u128>($t31)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:293:29+32
    assume $IsEqual'bool'($t32, $1_option_spec_is_none'u128'($t31));

    // $t32 := opaque end: option::is_none<u128>($t31) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:293:29+32

    // trace_local[$t43]($t14) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:294:21+22
    assume {:print "$at(169,12657,12679)"} true;
    assume {:print "$track_local(48,9,9):", $t14} $t14 == $t14;

    // if ($t32) goto L15 else goto L14 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:295:26+219
    assume {:print "$at(169,12726,12945)"} true;
    if ($t32) { goto L15; } else { goto L14; }

    // label L15 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:296:21+44
    assume {:print "$at(169,12764,12808)"} true;
L15:

    // $t33 := aggregator_v2::create_unbounded_aggregator<u128>() on_abort goto L19 with $t13 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:296:21+44
    assume {:print "$at(169,12764,12808)"} true;
    call $t33 := $1_aggregator_v2_create_unbounded_aggregator'u128'();
    if ($abort_flag) {
        assume {:print "$at(169,12764,12808)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(48,9):", $t13} $t13 == $t13;
        goto L19;
    }

    // $t10 := $t33 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:296:21+44
    $t10 := $t33;

    // trace_local[$t54]($t33) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:296:21+44
    assume {:print "$track_local(48,9,10):", $t33} $t33 == $t33;

    // label L16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:294:45+280
    assume {:print "$at(169,12681,12961)"} true;
L16:

    // $t34 := pack 0x1::fungible_asset::ConcurrentSupply($t10) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:294:45+280
    assume {:print "$at(169,12681,12961)"} true;
    $t34 := $1_fungible_asset_ConcurrentSupply($t10);

    // trace_local[$t53]($t34) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:294:13+313
    assume {:print "$track_local(48,9,11):", $t34} $t34 == $t34;

    // move_to<0x1::fungible_asset::ConcurrentSupply>($t34, $t14) on_abort goto L19 with $t13 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:294:13+313
    if ($ResourceExists($1_fungible_asset_ConcurrentSupply_$memory, $t14->$addr)) {
        call $ExecFailureAbort();
    } else {
        $1_fungible_asset_ConcurrentSupply_$memory := $ResourceUpdate($1_fungible_asset_ConcurrentSupply_$memory, $t14->$addr, $t34);
    }
    if ($abort_flag) {
        assume {:print "$at(169,12649,12962)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(48,9):", $t13} $t13 == $t13;
        goto L19;
    }

    // label L17 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:308:9+62
    assume {:print "$at(169,13146,13208)"} true;
L17:

    // $t35 := object::object_from_constructor_ref<0x1::fungible_asset::Metadata>($t0) on_abort goto L19 with $t13 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:308:9+62
    assume {:print "$at(169,13146,13208)"} true;
    call $t35 := $1_object_object_from_constructor_ref'$1_fungible_asset_Metadata'($t0);
    if ($abort_flag) {
        assume {:print "$at(169,13146,13208)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(48,9):", $t13} $t13 == $t13;
        goto L19;
    }

    // trace_return[0]($t35) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:274:25+1610
    assume {:print "$at(169,11605,13215)"} true;
    assume {:print "$track_return(48,9,0):", $t35} $t35 == $t35;

    // goto L18 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:274:25+1610
    goto L18;

    // label L14 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:298:70+19
    assume {:print "$at(169,12905,12924)"} true;
L14:

    // $t36 := borrow_local($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:298:70+19
    assume {:print "$at(169,12905,12924)"} true;
    $t36 := $Mutation($Local(1), EmptyVec(), $t1);

    // $t37 := opaque begin: option::extract<u128>($t36) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:298:54+36

    // $t38 := read_ref($t36) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:298:54+36
    $t38 := $Dereference($t36);

    // assume Identical($t39, option::spec_is_none<u128>($t36)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:298:54+36
    assume ($t39 == $1_option_spec_is_none'u128'($Dereference($t36)));

    // if ($t39) goto L21 else goto L22 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:298:54+36
    if ($t39) { goto L21; } else { goto L22; }

    // label L21 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:298:54+36
L21:

    // assume And(option::spec_is_none<u128>($t36), Eq(262145, $t13)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:298:54+36
    assume {:print "$at(169,12889,12925)"} true;
    assume ($1_option_spec_is_none'u128'($Dereference($t36)) && $IsEqual'num'(262145, $t13));

    // trace_abort($t13) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:298:54+36
    assume {:print "$at(169,12889,12925)"} true;
    assume {:print "$track_abort(48,9):", $t13} $t13 == $t13;

    // goto L19 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:298:54+36
    goto L19;

    // label L20 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:298:54+36
L20:

    // $t36 := havoc[mut]() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:298:54+36
    assume {:print "$at(169,12889,12925)"} true;
    havoc $temp_0'$1_option_Option'u128'';
    $t36 := $UpdateMutation($t36, $temp_0'$1_option_Option'u128'');

    // assume And(WellFormed($t36), Le(Len<u128>(select option::Option.vec($t36)), 1)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:298:54+36
    assume ($IsValid'$1_option_Option'u128''($Dereference($t36)) && (LenVec($Dereference($t36)->$vec) <= 1));

    // assume WellFormed($t37) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:298:54+36
    assume $IsValid'u128'($t37);

    // assume Eq<u128>($t37, option::spec_borrow<u128>($t38)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:298:54+36
    assume $IsEqual'u128'($t37, $1_option_spec_borrow'u128'($t38));

    // assume option::spec_is_none<u128>($t36) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:298:54+36
    assume $1_option_spec_is_none'u128'($Dereference($t36));

    // $t37 := opaque end: option::extract<u128>($t36) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:298:54+36

    // pack_ref_deep($t36) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:298:54+36

    // write_back[LocalRoot($t1)@]($t36) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:298:54+36
    $t1 := $Dereference($t36);

    // trace_local[maximum_supply]($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:298:54+36
    assume {:print "$track_local(48,9,1):", $t1} $t1 == $t1;

    // $t40 := aggregator_v2::create_aggregator<u128>($t37) on_abort goto L19 with $t13 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:298:21+70
    call $t40 := $1_aggregator_v2_create_aggregator'u128'($t37);
    if ($abort_flag) {
        assume {:print "$at(169,12856,12926)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(48,9):", $t13} $t13 == $t13;
        goto L19;
    }

    // $t10 := $t40 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:298:21+70
    $t10 := $t40;

    // trace_local[$t54]($t40) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:298:21+70
    assume {:print "$track_local(48,9,10):", $t40} $t40 == $t40;

    // goto L16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:298:21+70
    goto L16;

    // label L12 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:302:21+22
    assume {:print "$at(169,13003,13025)"} true;
L12:

    // $t41 := 0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:303:26+1
    assume {:print "$at(169,13062,13063)"} true;
    $t41 := 0;
    assume $IsValid'u128'($t41);

    // $t42 := move($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:302:45+93
    assume {:print "$at(169,13027,13120)"} true;
    $t42 := $t1;

    // $t43 := pack 0x1::fungible_asset::Supply($t41, $t42) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:302:45+93
    $t43 := $1_fungible_asset_Supply($t41, $t42);

    // move_to<0x1::fungible_asset::Supply>($t43, $t14) on_abort goto L19 with $t13 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:302:13+126
    if ($ResourceExists($1_fungible_asset_Supply_$memory, $t14->$addr)) {
        call $ExecFailureAbort();
    } else {
        $1_fungible_asset_Supply_$memory := $ResourceUpdate($1_fungible_asset_Supply_$memory, $t14->$addr, $t43);
    }
    if ($abort_flag) {
        assume {:print "$at(169,12995,13121)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(48,9):", $t13} $t13 == $t13;
        goto L19;
    }

    // goto L17 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:302:13+126
    goto L17;

    // label L10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:281:9+6
    assume {:print "$at(169,12198,12204)"} true;
L10:

    // $t44 := 19 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:281:85+13
    assume {:print "$at(169,12274,12287)"} true;
    $t44 := 19;
    assume $IsValid'u64'($t44);

    // $t45 := error::out_of_range($t44) on_abort goto L19 with $t13 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:281:65+34
    call $t45 := $1_error_out_of_range($t44);
    if ($abort_flag) {
        assume {:print "$at(169,12254,12288)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(48,9):", $t13} $t13 == $t13;
        goto L19;
    }

    // trace_abort($t45) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:281:9+6
    assume {:print "$at(169,12198,12204)"} true;
    assume {:print "$track_abort(48,9):", $t45} $t45 == $t45;

    // $t13 := move($t45) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:281:9+6
    $t13 := $t45;

    // goto L19 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:281:9+6
    goto L19;

    // label L8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:280:9+6
    assume {:print "$at(169,12099,12105)"} true;
L8:

    // $t46 := 19 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:280:82+13
    assume {:print "$at(169,12172,12185)"} true;
    $t46 := 19;
    assume $IsValid'u64'($t46);

    // $t47 := error::out_of_range($t46) on_abort goto L19 with $t13 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:280:62+34
    call $t47 := $1_error_out_of_range($t46);
    if ($abort_flag) {
        assume {:print "$at(169,12152,12186)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(48,9):", $t13} $t13 == $t13;
        goto L19;
    }

    // trace_abort($t47) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:280:9+6
    assume {:print "$at(169,12099,12105)"} true;
    assume {:print "$track_abort(48,9):", $t47} $t47 == $t47;

    // $t13 := move($t47) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:280:9+6
    $t13 := $t47;

    // goto L19 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:280:9+6
    goto L19;

    // label L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:279:9+6
    assume {:print "$at(169,12013,12019)"} true;
L6:

    // $t48 := 17 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:279:63+19
    assume {:print "$at(169,12067,12086)"} true;
    $t48 := 17;
    assume $IsValid'u64'($t48);

    // $t49 := error::out_of_range($t48) on_abort goto L19 with $t13 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:279:43+40
    call $t49 := $1_error_out_of_range($t48);
    if ($abort_flag) {
        assume {:print "$at(169,12047,12087)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(48,9):", $t13} $t13 == $t13;
        goto L19;
    }

    // trace_abort($t49) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:279:9+6
    assume {:print "$at(169,12013,12019)"} true;
    assume {:print "$track_abort(48,9):", $t49} $t49 == $t49;

    // $t13 := move($t49) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:279:9+6
    $t13 := $t49;

    // goto L19 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:279:9+6
    goto L19;

    // label L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:278:9+6
    assume {:print "$at(169,11910,11916)"} true;
L4:

    // $t50 := 16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:278:83+16
    assume {:print "$at(169,11984,12000)"} true;
    $t50 := 16;
    assume $IsValid'u64'($t50);

    // $t51 := error::out_of_range($t50) on_abort goto L19 with $t13 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:278:63+37
    call $t51 := $1_error_out_of_range($t50);
    if ($abort_flag) {
        assume {:print "$at(169,11964,12001)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(48,9):", $t13} $t13 == $t13;
        goto L19;
    }

    // trace_abort($t51) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:278:9+6
    assume {:print "$at(169,11910,11916)"} true;
    assume {:print "$track_abort(48,9):", $t51} $t51 == $t51;

    // $t13 := move($t51) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:278:9+6
    $t13 := $t51;

    // goto L19 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:278:9+6
    goto L19;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:277:9+6
    assume {:print "$at(169,11813,11819)"} true;
L2:

    // $t52 := 15 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:277:79+14
    assume {:print "$at(169,11883,11897)"} true;
    $t52 := 15;
    assume $IsValid'u64'($t52);

    // $t53 := error::out_of_range($t52) on_abort goto L19 with $t13 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:277:59+35
    call $t53 := $1_error_out_of_range($t52);
    if ($abort_flag) {
        assume {:print "$at(169,11863,11898)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(48,9):", $t13} $t13 == $t13;
        goto L19;
    }

    // trace_abort($t53) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:277:9+6
    assume {:print "$at(169,11813,11819)"} true;
    assume {:print "$track_abort(48,9):", $t53} $t53 == $t53;

    // $t13 := move($t53) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:277:9+6
    $t13 := $t53;

    // goto L19 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:277:9+6
    goto L19;

    // label L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:275:9+6
    assume {:print "$at(169,11616,11622)"} true;
L0:

    // $t54 := 18 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:275:92+20
    assume {:print "$at(169,11699,11719)"} true;
    $t54 := 18;
    assume $IsValid'u64'($t54);

    // $t55 := error::invalid_argument($t54) on_abort goto L19 with $t13 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:275:68+45
    call $t55 := $1_error_invalid_argument($t54);
    if ($abort_flag) {
        assume {:print "$at(169,11675,11720)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(48,9):", $t13} $t13 == $t13;
        goto L19;
    }

    // trace_abort($t55) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:275:9+6
    assume {:print "$at(169,11616,11622)"} true;
    assume {:print "$track_abort(48,9):", $t55} $t55 == $t55;

    // $t13 := move($t55) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:275:9+6
    $t13 := $t55;

    // goto L19 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:275:9+6
    goto L19;

    // label L18 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:309:5+1
    assume {:print "$at(169,13214,13215)"} true;
L18:

    // return $t35 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:309:5+1
    assume {:print "$at(169,13214,13215)"} true;
    $ret0 := $t35;
    return;

    // label L19 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:309:5+1
L19:

    // abort($t13) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:309:5+1
    assume {:print "$at(169,13214,13215)"} true;
    $abort_code := $t13;
    $abort_flag := true;
    return;

    // label L22 at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;
L22:

    // drop($t36) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L20 at <internal>:1:1+10
    goto L20;

}

// fun fungible_asset::asset_metadata [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:780:5+93
procedure {:inline 1} $1_fungible_asset_asset_metadata(_$t0: $1_fungible_asset_FungibleAsset) returns ($ret0: $1_object_Object'$1_fungible_asset_Metadata')
{
    // declare local variables
    var $t1: $1_object_Object'$1_fungible_asset_Metadata';
    var $t0: $1_fungible_asset_FungibleAsset;
    var $temp_0'$1_fungible_asset_FungibleAsset': $1_fungible_asset_FungibleAsset;
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[fa]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:780:5+1
    assume {:print "$at(169,33783,33784)"} true;
    assume {:print "$track_local(48,17,0):", $t0} $t0 == $t0;

    // $t1 := get_field<0x1::fungible_asset::FungibleAsset>.metadata($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:781:9+11
    assume {:print "$at(169,33858,33869)"} true;
    $t1 := $t0->$metadata;

    // trace_return[0]($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:781:9+11
    assume {:print "$track_return(48,17,0):", $t1} $t1 == $t1;

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:782:5+1
    assume {:print "$at(169,33875,33876)"} true;
L1:

    // return $t1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:782:5+1
    assume {:print "$at(169,33875,33876)"} true;
    $ret0 := $t1;
    return;

}

// fun fungible_asset::balance<0x1::fungible_asset::FungibleStore> [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:639:5+380
procedure {:inline 1} $1_fungible_asset_balance'$1_fungible_asset_FungibleStore'(_$t0: $1_object_Object'$1_fungible_asset_FungibleStore') returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t4: bool;
    var $t5: $1_fungible_asset_FungibleStore;
    var $t6: $1_object_Object'$1_fungible_asset_Metadata';
    var $t7: bool;
    var $t8: int;
    var $t9: int;
    var $t10: int;
    var $t11: int;
    var $t12: int;
    var $t0: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[store]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:639:5+1
    assume {:print "$at(169,27341,27342)"} true;
    assume {:print "$track_local(48,18,0):", $t0} $t0 == $t0;

    // $t2 := object::object_address<#0>($t0) on_abort goto L5 with $t3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1326:26+29
    assume {:print "$at(169,56412,56441)"} true;
    call $t2 := $1_object_object_address'$1_fungible_asset_FungibleStore'($t0);
    if ($abort_flag) {
        assume {:print "$at(169,56412,56441)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(48,18):", $t3} $t3 == $t3;
        goto L5;
    }

    // trace_local[store_addr]($t2) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1326:26+29
    assume {:print "$track_local(48,18,1):", $t2} $t2 == $t2;

    // $t4 := exists<0x1::fungible_asset::FungibleStore>($t2) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1327:17+33
    assume {:print "$at(169,56460,56493)"} true;
    $t4 := $ResourceExists($1_fungible_asset_FungibleStore_$memory, $t2);

    // if ($t4) goto L1 else goto L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1327:9+6
    if ($t4) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1328:9+40
    assume {:print "$at(169,56550,56590)"} true;
L1:

    // $t5 := get_global<0x1::fungible_asset::FungibleStore>($t2) on_abort goto L5 with $t3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1328:9+40
    assume {:print "$at(169,56550,56590)"} true;
    if (!$ResourceExists($1_fungible_asset_FungibleStore_$memory, $t2)) {
        call $ExecFailureAbort();
    } else {
        $t5 := $ResourceValue($1_fungible_asset_FungibleStore_$memory, $t2);
    }
    if ($abort_flag) {
        assume {:print "$at(169,56550,56590)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(48,18):", $t3} $t3 == $t3;
        goto L5;
    }

    // $t6 := get_field<0x1::fungible_asset::FungibleStore>.metadata($t5) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:642:44+17
    assume {:print "$at(169,27583,27600)"} true;
    $t6 := $t5->$metadata;

    // $t7 := fungible_asset::has_balance_dispatch_function($t6) on_abort goto L5 with $t3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:642:14+48
    call $t7 := $1_fungible_asset_has_balance_dispatch_function($t6);
    if ($abort_flag) {
        assume {:print "$at(169,27553,27601)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(48,18):", $t3} $t3 == $t3;
        goto L5;
    }

    // if ($t7) goto L2 else goto L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:642:13+49
    if ($t7) { goto L2; } else { goto L3; }

    // label L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:645:9+19
    assume {:print "$at(169,27695,27714)"} true;
L3:

    // $t8 := fungible_asset::balance_impl<#0>($t0) on_abort goto L5 with $t3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:645:9+19
    assume {:print "$at(169,27695,27714)"} true;
    call $t8 := $1_fungible_asset_balance_impl'$1_fungible_asset_FungibleStore'($t0);
    if ($abort_flag) {
        assume {:print "$at(169,27695,27714)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(48,18):", $t3} $t3 == $t3;
        goto L5;
    }

    // trace_return[0]($t8) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:639:128+257
    assume {:print "$at(169,27464,27721)"} true;
    assume {:print "$track_return(48,18,0):", $t8} $t8 == $t8;

    // goto L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:639:128+257
    goto L4;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:643:37+32
    assume {:print "$at(169,27640,27672)"} true;
L2:

    // $t9 := 28 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:643:37+32
    assume {:print "$at(169,27640,27672)"} true;
    $t9 := 28;
    assume $IsValid'u64'($t9);

    // $t10 := error::invalid_argument($t9) on_abort goto L5 with $t3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:643:13+57
    call $t10 := $1_error_invalid_argument($t9);
    if ($abort_flag) {
        assume {:print "$at(169,27616,27673)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(48,18):", $t3} $t3 == $t3;
        goto L5;
    }

    // trace_abort($t10) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:641:9+6
    assume {:print "$at(169,27530,27536)"} true;
    assume {:print "$track_abort(48,18):", $t10} $t10 == $t10;

    // $t3 := move($t10) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:641:9+6
    $t3 := $t10;

    // goto L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:641:9+6
    goto L5;

    // label L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1327:69+25
    assume {:print "$at(169,56512,56537)"} true;
L0:

    // $t11 := 23 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1327:69+25
    assume {:print "$at(169,56512,56537)"} true;
    $t11 := 23;
    assume $IsValid'u64'($t11);

    // $t12 := error::not_found($t11) on_abort goto L5 with $t3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1327:52+43
    call $t12 := $1_error_not_found($t11);
    if ($abort_flag) {
        assume {:print "$at(169,56495,56538)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(48,18):", $t3} $t3 == $t3;
        goto L5;
    }

    // trace_abort($t12) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1327:9+6
    assume {:print "$at(169,56452,56458)"} true;
    assume {:print "$track_abort(48,18):", $t12} $t12 == $t12;

    // $t3 := move($t12) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1327:9+6
    $t3 := $t12;

    // goto L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1327:9+6
    goto L5;

    // label L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:646:5+1
    assume {:print "$at(169,27720,27721)"} true;
L4:

    // return $t8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:646:5+1
    assume {:print "$at(169,27720,27721)"} true;
    $ret0 := $t8;
    return;

    // label L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:646:5+1
L5:

    // abort($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:646:5+1
    assume {:print "$at(169,27720,27721)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun fungible_asset::balance_impl<0x1::fungible_asset::FungibleStore> [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:648:5+635
procedure {:inline 1} $1_fungible_asset_balance_impl'$1_fungible_asset_FungibleStore'(_$t0: $1_object_Object'$1_fungible_asset_FungibleStore') returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t4: bool;
    var $t5: int;
    var $t6: int;
    var $t7: int;
    var $t8: bool;
    var $t9: int;
    var $t10: bool;
    var $t11: $1_fungible_asset_FungibleStore;
    var $t12: int;
    var $t13: int;
    var $t14: bool;
    var $t15: bool;
    var $t16: $1_fungible_asset_ConcurrentFungibleBalance;
    var $t17: $1_aggregator_v2_Aggregator'u64';
    var $t18: int;
    var $t19: bool;
    var $t20: int;
    var $t21: int;
    var $t22: int;
    var $t0: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[store]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:648:5+1
    assume {:print "$at(169,27729,27730)"} true;
    assume {:print "$track_local(48,19,0):", $t0} $t0 == $t0;

    // $t6 := object::object_address<#0>($t0) on_abort goto L11 with $t7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:649:26+30
    assume {:print "$at(169,27855,27885)"} true;
    call $t6 := $1_object_object_address'$1_fungible_asset_FungibleStore'($t0);
    if ($abort_flag) {
        assume {:print "$at(169,27855,27885)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(48,19):", $t7} $t7 == $t7;
        goto L11;
    }

    // trace_local[store_addr]($t6) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:649:26+30
    assume {:print "$track_local(48,19,1):", $t6} $t6 == $t6;

    // $t8 := exists<0x1::fungible_asset::FungibleStore>($t6) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:609:9+28
    assume {:print "$at(169,26268,26296)"} true;
    $t8 := $ResourceExists($1_fungible_asset_FungibleStore_$memory, $t6);

    // if ($t8) goto L1 else goto L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:650:9+461
    assume {:print "$at(169,27896,28357)"} true;
    if ($t8) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:651:55+6
    assume {:print "$at(169,27990,27996)"} true;
L1:

    // $t9 := object::object_address<#0>($t0) on_abort goto L11 with $t7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1326:26+29
    assume {:print "$at(169,56412,56441)"} true;
    call $t9 := $1_object_object_address'$1_fungible_asset_FungibleStore'($t0);
    if ($abort_flag) {
        assume {:print "$at(169,56412,56441)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(48,19):", $t7} $t7 == $t7;
        goto L11;
    }

    // trace_local[store]($t9) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1326:26+29
    assume {:print "$track_local(48,19,2):", $t9} $t9 == $t9;

    // $t10 := exists<0x1::fungible_asset::FungibleStore>($t9) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1327:17+33
    assume {:print "$at(169,56460,56493)"} true;
    $t10 := $ResourceExists($1_fungible_asset_FungibleStore_$memory, $t9);

    // if ($t10) goto L3 else goto L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1327:9+6
    if ($t10) { goto L3; } else { goto L2; }

    // label L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1328:9+40
    assume {:print "$at(169,56550,56590)"} true;
L3:

    // $t11 := get_global<0x1::fungible_asset::FungibleStore>($t9) on_abort goto L11 with $t7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1328:9+40
    assume {:print "$at(169,56550,56590)"} true;
    if (!$ResourceExists($1_fungible_asset_FungibleStore_$memory, $t9)) {
        call $ExecFailureAbort();
    } else {
        $t11 := $ResourceValue($1_fungible_asset_FungibleStore_$memory, $t9);
    }
    if ($abort_flag) {
        assume {:print "$at(169,56550,56590)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(48,19):", $t7} $t7 == $t7;
        goto L11;
    }

    // $t12 := get_field<0x1::fungible_asset::FungibleStore>.balance($t11) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:651:33+37
    assume {:print "$at(169,27968,28005)"} true;
    $t12 := $t11->$balance;

    // trace_local[store_balance]($t12) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:651:33+37
    assume {:print "$track_local(48,19,3):", $t12} $t12 == $t12;

    // $t13 := 0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:652:34+1
    assume {:print "$at(169,28041,28042)"} true;
    $t13 := 0;
    assume $IsValid'u64'($t13);

    // $t14 := ==($t12, $t13) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:652:17+18
    $t14 := $IsEqual'u64'($t12, $t13);

    // if ($t14) goto L5 else goto L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:652:17+75
    if ($t14) { goto L5; } else { goto L4; }

    // label L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:614:16+41
    assume {:print "$at(169,26454,26495)"} true;
L5:

    // $t15 := exists<0x1::fungible_asset::ConcurrentFungibleBalance>($t6) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:615:9+40
    assume {:print "$at(169,26529,26569)"} true;
    $t15 := $ResourceExists($1_fungible_asset_ConcurrentFungibleBalance_$memory, $t6);

    // $t4 := $t15 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:615:9+40
    $t4 := $t15;

    // trace_local[$t4]($t15) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:615:9+40
    assume {:print "$track_local(48,19,4):", $t15} $t15 == $t15;

    // label L9 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:652:13+293
    assume {:print "$at(169,28020,28313)"} true;
L9:

    // if ($t4) goto L7 else goto L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:652:13+293
    assume {:print "$at(169,28020,28313)"} true;
    if ($t4) { goto L7; } else { goto L6; }

    // label L7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:653:40+52
    assume {:print "$at(169,28143,28195)"} true;
L7:

    // $t16 := get_global<0x1::fungible_asset::ConcurrentFungibleBalance>($t6) on_abort goto L11 with $t7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:653:40+52
    assume {:print "$at(169,28143,28195)"} true;
    if (!$ResourceExists($1_fungible_asset_ConcurrentFungibleBalance_$memory, $t6)) {
        call $ExecFailureAbort();
    } else {
        $t16 := $ResourceValue($1_fungible_asset_ConcurrentFungibleBalance_$memory, $t6);
    }
    if ($abort_flag) {
        assume {:print "$at(169,28143,28195)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(48,19):", $t7} $t7 == $t7;
        goto L11;
    }

    // $t17 := get_field<0x1::fungible_asset::ConcurrentFungibleBalance>.balance($t16) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:654:17+31
    assume {:print "$at(169,28214,28245)"} true;
    $t17 := $t16->$balance;

    // $t18 := aggregator_v2::read<u64>($t17) on_abort goto L11 with $t7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:654:17+31
    call $t18 := $1_aggregator_v2_read'u64'($t17);
    if ($abort_flag) {
        assume {:print "$at(169,28214,28245)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(48,19):", $t7} $t7 == $t7;
        goto L11;
    }

    // $t5 := $t18 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:654:17+31
    $t5 := $t18;

    // trace_local[$t17]($t18) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:654:17+31
    assume {:print "$track_local(48,19,5):", $t18} $t18 == $t18;

    // label L8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:650:9+461
    assume {:print "$at(169,27896,28357)"} true;
L8:

    // trace_return[0]($t5) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:650:9+461
    assume {:print "$at(169,27896,28357)"} true;
    assume {:print "$track_return(48,19,0):", $t5} $t5 == $t5;

    // goto L10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:650:9+461
    goto L10;

    // label L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:656:17+13
    assume {:print "$at(169,28285,28298)"} true;
L6:

    // $t5 := $t12 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:656:17+13
    assume {:print "$at(169,28285,28298)"} true;
    $t5 := $t12;

    // trace_local[$t17]($t12) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:656:17+13
    assume {:print "$track_local(48,19,5):", $t12} $t12 == $t12;

    // goto L8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:656:17+13
    goto L8;

    // label L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:652:17+75
    assume {:print "$at(169,28024,28099)"} true;
L4:

    // $t19 := false at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:652:17+75
    assume {:print "$at(169,28024,28099)"} true;
    $t19 := false;
    assume $IsValid'bool'($t19);

    // $t4 := $t19 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:652:17+75
    $t4 := $t19;

    // trace_local[$t4]($t19) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:652:17+75
    assume {:print "$track_local(48,19,4):", $t19} $t19 == $t19;

    // goto L9 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:652:17+75
    goto L9;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1327:69+25
    assume {:print "$at(169,56512,56537)"} true;
L2:

    // $t20 := 23 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1327:69+25
    assume {:print "$at(169,56512,56537)"} true;
    $t20 := 23;
    assume $IsValid'u64'($t20);

    // $t21 := error::not_found($t20) on_abort goto L11 with $t7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1327:52+43
    call $t21 := $1_error_not_found($t20);
    if ($abort_flag) {
        assume {:print "$at(169,56495,56538)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(48,19):", $t7} $t7 == $t7;
        goto L11;
    }

    // trace_abort($t21) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1327:9+6
    assume {:print "$at(169,56452,56458)"} true;
    assume {:print "$track_abort(48,19):", $t21} $t21 == $t21;

    // $t7 := move($t21) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1327:9+6
    $t7 := $t21;

    // goto L11 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1327:9+6
    goto L11;

    // label L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:659:13+1
    assume {:print "$at(169,28345,28346)"} true;
L0:

    // $t22 := 0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:659:13+1
    assume {:print "$at(169,28345,28346)"} true;
    $t22 := 0;
    assume $IsValid'u64'($t22);

    // $t5 := $t22 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:659:13+1
    $t5 := $t22;

    // trace_local[$t17]($t22) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:659:13+1
    assume {:print "$track_local(48,19,5):", $t22} $t22 == $t22;

    // goto L8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:659:13+1
    goto L8;

    // label L10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:661:5+1
    assume {:print "$at(169,28363,28364)"} true;
L10:

    // return $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:661:5+1
    assume {:print "$at(169,28363,28364)"} true;
    $ret0 := $t5;
    return;

    // label L11 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:661:5+1
L11:

    // abort($t7) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:661:5+1
    assume {:print "$at(169,28363,28364)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// fun fungible_asset::burn_internal [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1019:5+265
procedure {:inline 1} $1_fungible_asset_burn_internal(_$t0: $1_fungible_asset_FungibleAsset) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: $1_object_Object'$1_fungible_asset_Metadata';
    var $t3: $1_object_Object'$1_fungible_asset_Metadata';
    var $t4: int;
    var $t5: int;
    var $t0: $1_fungible_asset_FungibleAsset;
    var $temp_0'$1_fungible_asset_FungibleAsset': $1_fungible_asset_FungibleAsset;
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[fa]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1019:5+1
    assume {:print "$at(169,43584,43585)"} true;
    assume {:print "$track_local(48,23,0):", $t0} $t0 == $t0;

    // ($t3, $t4) := unpack 0x1::fungible_asset::FungibleAsset($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1022:13+69
    assume {:print "$at(169,43706,43775)"} true;
    $t3 := $t0->$metadata;
    $t4 := $t0->$amount;

    // trace_local[amount]($t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1022:13+69
    assume {:print "$track_local(48,23,1):", $t4} $t4 == $t4;

    // trace_local[metadata]($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1022:13+69
    assume {:print "$track_local(48,23,2):", $t3} $t3 == $t3;

    // fungible_asset::decrease_supply<0x1::fungible_asset::Metadata>($t3, $t4) on_abort goto L2 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1026:9+34
    assume {:print "$at(169,43791,43825)"} true;
    call $1_fungible_asset_decrease_supply'$1_fungible_asset_Metadata'($t3, $t4);
    if ($abort_flag) {
        assume {:print "$at(169,43791,43825)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(48,23):", $t5} $t5 == $t5;
        goto L2;
    }

    // trace_return[0]($t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1021:46+158
    assume {:print "$at(169,43691,43849)"} true;
    assume {:print "$track_return(48,23,0):", $t4} $t4 == $t4;

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1028:5+1
    assume {:print "$at(169,43848,43849)"} true;
L1:

    // return $t4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1028:5+1
    assume {:print "$at(169,43848,43849)"} true;
    $ret0 := $t4;
    return;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1028:5+1
L2:

    // abort($t5) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1028:5+1
    assume {:print "$at(169,43848,43849)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun fungible_asset::create_store<0x1::fungible_asset::Metadata> [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:821:5+787
procedure {:inline 1} $1_fungible_asset_create_store'$1_fungible_asset_Metadata'(_$t0: $1_object_ConstructorRef, _$t1: $1_object_Object'$1_fungible_asset_Metadata') returns ($ret0: $1_object_Object'$1_fungible_asset_FungibleStore')
{
    // declare local variables
    var $t2: $signer;
    var $t3: $signer;
    var $t4: $signer;
    var $t5: int;
    var $t6: $1_object_Object'$1_fungible_asset_Metadata';
    var $t7: int;
    var $t8: bool;
    var $t9: $1_fungible_asset_FungibleStore;
    var $t10: bool;
    var $t11: bool;
    var $t12: $1_aggregator_v2_Aggregator'u64';
    var $t13: $1_fungible_asset_ConcurrentFungibleBalance;
    var $t14: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t0: $1_object_ConstructorRef;
    var $t1: $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'signer': $signer;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[constructor_ref]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:821:5+1
    assume {:print "$at(169,35459,35460)"} true;
    assume {:print "$track_local(48,25,0):", $t0} $t0 == $t0;

    // trace_local[metadata]($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:821:5+1
    assume {:print "$track_local(48,25,1):", $t1} $t1 == $t1;

    // $t4 := object::generate_signer($t0) on_abort goto L7 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:825:26+40
    assume {:print "$at(169,35623,35663)"} true;
    call $t4 := $1_object_generate_signer($t0);
    if ($abort_flag) {
        assume {:print "$at(169,35623,35663)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(48,25):", $t5} $t5 == $t5;
        goto L7;
    }

    // trace_local[$t4]($t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:825:26+40
    assume {:print "$track_local(48,25,2):", $t4} $t4 == $t4;

    // trace_local[store_obj]($t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:825:25+41
    assume {:print "$track_local(48,25,3):", $t4} $t4 == $t4;

    // $t6 := object::convert<#0, 0x1::fungible_asset::Metadata>($t1) on_abort goto L7 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:827:23+25
    assume {:print "$at(169,35732,35757)"} true;
    call $t6 := $1_object_convert'$1_fungible_asset_Metadata_$1_fungible_asset_Metadata'($t1);
    if ($abort_flag) {
        assume {:print "$at(169,35732,35757)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(48,25):", $t5} $t5 == $t5;
        goto L7;
    }

    // $t7 := 0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:828:22+1
    assume {:print "$at(169,35781,35782)"} true;
    $t7 := 0;
    assume $IsValid'u64'($t7);

    // $t8 := false at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:829:21+5
    assume {:print "$at(169,35805,35810)"} true;
    $t8 := false;
    assume $IsValid'bool'($t8);

    // $t9 := pack 0x1::fungible_asset::FungibleStore($t6, $t7, $t8) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:826:28+129
    assume {:print "$at(169,35693,35822)"} true;
    $t9 := $1_fungible_asset_FungibleStore($t6, $t7, $t8);

    // move_to<0x1::fungible_asset::FungibleStore>($t9, $t4) on_abort goto L7 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:826:9+149
    if ($ResourceExists($1_fungible_asset_FungibleStore_$memory, $t4->$addr)) {
        call $ExecFailureAbort();
    } else {
        $1_fungible_asset_FungibleStore_$memory := $ResourceUpdate($1_fungible_asset_FungibleStore_$memory, $t4->$addr, $t9);
    }
    if ($abort_flag) {
        assume {:print "$at(169,35674,35823)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(48,25):", $t5} $t5 == $t5;
        goto L7;
    }

    // $t10 := fungible_asset::is_untransferable<#0>($t1) on_abort goto L7 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:832:13+27
    assume {:print "$at(169,35840,35867)"} true;
    call $t10 := $1_fungible_asset_is_untransferable'$1_fungible_asset_Metadata'($t1);
    if ($abort_flag) {
        assume {:print "$at(169,35840,35867)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(48,25):", $t5} $t5 == $t5;
        goto L7;
    }

    // if ($t10) goto L0 else goto L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:832:9+103
    if ($t10) { goto L0; } else { goto L2; }

    // label L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:833:13+43
    assume {:print "$at(169,35884,35927)"} true;
L0:

    // object::set_untransferable($t0) on_abort goto L7 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:833:13+43
    assume {:print "$at(169,35884,35927)"} true;
    call $1_object_set_untransferable($t0);
    if ($abort_flag) {
        assume {:print "$at(169,35884,35927)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(48,25):", $t5} $t5 == $t5;
        goto L7;
    }

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:256:9+58
    assume {:print "$at(169,10740,10798)"} true;
L2:

    // $t11 := features::default_to_concurrent_fungible_balance_enabled() on_abort goto L7 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:256:9+58
    assume {:print "$at(169,10740,10798)"} true;
    call $t11 := $1_features_default_to_concurrent_fungible_balance_enabled();
    if ($abort_flag) {
        assume {:print "$at(169,10740,10798)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(48,25):", $t5} $t5 == $t5;
        goto L7;
    }

    // if ($t11) goto L4 else goto L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:836:9+207
    assume {:print "$at(169,35952,36159)"} true;
    if ($t11) { goto L4; } else { goto L3; }

    // label L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:837:21+9
    assume {:print "$at(169,36021,36030)"} true;
L4:

    // $t12 := aggregator_v2::create_unbounded_aggregator<u64>() on_abort goto L7 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:838:26+44
    assume {:print "$at(169,36086,36130)"} true;
    call $t12 := $1_aggregator_v2_create_unbounded_aggregator'u64'();
    if ($abort_flag) {
        assume {:print "$at(169,36086,36130)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(48,25):", $t5} $t5 == $t5;
        goto L7;
    }

    // $t13 := pack 0x1::fungible_asset::ConcurrentFungibleBalance($t12) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:837:32+114
    assume {:print "$at(169,36032,36146)"} true;
    $t13 := $1_fungible_asset_ConcurrentFungibleBalance($t12);

    // move_to<0x1::fungible_asset::ConcurrentFungibleBalance>($t13, $t4) on_abort goto L7 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:837:13+134
    if ($ResourceExists($1_fungible_asset_ConcurrentFungibleBalance_$memory, $t4->$addr)) {
        call $ExecFailureAbort();
    } else {
        $1_fungible_asset_ConcurrentFungibleBalance_$memory := $ResourceUpdate($1_fungible_asset_ConcurrentFungibleBalance_$memory, $t4->$addr, $t13);
    }
    if ($abort_flag) {
        assume {:print "$at(169,36013,36147)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(48,25):", $t5} $t5 == $t5;
        goto L7;
    }

    // label L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:842:9+67
    assume {:print "$at(169,36172,36239)"} true;
L5:

    // $t14 := object::object_from_constructor_ref<0x1::fungible_asset::FungibleStore>($t0) on_abort goto L7 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:842:9+67
    assume {:print "$at(169,36172,36239)"} true;
    call $t14 := $1_object_object_from_constructor_ref'$1_fungible_asset_FungibleStore'($t0);
    if ($abort_flag) {
        assume {:print "$at(169,36172,36239)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(48,25):", $t5} $t5 == $t5;
        goto L7;
    }

    // trace_return[0]($t14) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:824:30+651
    assume {:print "$at(169,35595,36246)"} true;
    assume {:print "$track_return(48,25,0):", $t14} $t14 == $t14;

    // goto L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:824:30+651
    goto L6;

    // label L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:836:9+207
    assume {:print "$at(169,35952,36159)"} true;
L3:

    // goto L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:836:9+207
    assume {:print "$at(169,35952,36159)"} true;
    goto L5;

    // label L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:843:5+1
    assume {:print "$at(169,36245,36246)"} true;
L6:

    // return $t14 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:843:5+1
    assume {:print "$at(169,36245,36246)"} true;
    $ret0 := $t14;
    return;

    // label L7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:843:5+1
L7:

    // abort($t5) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:843:5+1
    assume {:print "$at(169,36245,36246)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun fungible_asset::decrease_supply<0x1::fungible_asset::Metadata> [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1285:5+1054
procedure {:inline 1} $1_fungible_asset_decrease_supply'$1_fungible_asset_Metadata'(_$t0: $1_object_Object'$1_fungible_asset_Metadata', _$t1: int) returns ()
{
    // declare local variables
    var $t2: int;
    var $t3: $Mutation ($1_fungible_asset_Supply);
    var $t4: int;
    var $t5: bool;
    var $t6: int;
    var $t7: int;
    var $t8: bool;
    var $t9: $Mutation ($1_fungible_asset_ConcurrentSupply);
    var $t10: $Mutation ($1_aggregator_v2_Aggregator'u128');
    var $t11: int;
    var $t12: bool;
    var $t13: int;
    var $t14: int;
    var $t15: bool;
    var $t16: bool;
    var $t17: $Mutation ($1_fungible_asset_Supply);
    var $t18: int;
    var $t19: int;
    var $t20: bool;
    var $t21: int;
    var $t22: int;
    var $t23: int;
    var $t24: $Mutation (int);
    var $t25: int;
    var $t26: int;
    var $t27: int;
    var $t28: int;
    var $t29: int;
    var $t30: int;
    var $t0: $1_object_Object'$1_fungible_asset_Metadata';
    var $t1: int;
    var $temp_0'$1_fungible_asset_Supply': $1_fungible_asset_Supply;
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[metadata]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1285:5+1
    assume {:print "$at(169,54771,54772)"} true;
    assume {:print "$track_local(48,26,0):", $t0} $t0 == $t0;

    // trace_local[amount]($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1285:5+1
    assume {:print "$track_local(48,26,1):", $t1} $t1 == $t1;

    // $t4 := 0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1286:23+1
    assume {:print "$at(169,54893,54894)"} true;
    $t4 := 0;
    assume $IsValid'u64'($t4);

    // $t5 := ==($t1, $t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1286:13+11
    $t5 := $IsEqual'u64'($t1, $t4);

    // if ($t5) goto L1 else goto L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1286:9+49
    if ($t5) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1287:13+6
    assume {:print "$at(169,54911,54917)"} true;
L1:

    // goto L14 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1287:13+6
    assume {:print "$at(169,54911,54917)"} true;
    goto L14;

    // label L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1289:32+32
    assume {:print "$at(169,54962,54994)"} true;
L0:

    // $t6 := object::object_address<#0>($t0) on_abort goto L15 with $t7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1289:32+32
    assume {:print "$at(169,54962,54994)"} true;
    call $t6 := $1_object_object_address'$1_fungible_asset_Metadata'($t0);
    if ($abort_flag) {
        assume {:print "$at(169,54962,54994)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(48,26):", $t7} $t7 == $t7;
        goto L15;
    }

    // trace_local[metadata_address]($t6) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1289:32+32
    assume {:print "$track_local(48,26,2):", $t6} $t6 == $t6;

    // $t8 := exists<0x1::fungible_asset::ConcurrentSupply>($t6) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1291:13+42
    assume {:print "$at(169,55011,55053)"} true;
    $t8 := $ResourceExists($1_fungible_asset_ConcurrentSupply_$memory, $t6);

    // if ($t8) goto L3 else goto L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1291:9+811
    if ($t8) { goto L3; } else { goto L2; }

    // label L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1292:26+53
    assume {:print "$at(169,55083,55136)"} true;
L3:

    // $t9 := borrow_global<0x1::fungible_asset::ConcurrentSupply>($t6) on_abort goto L15 with $t7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1292:26+53
    assume {:print "$at(169,55083,55136)"} true;
    if (!$ResourceExists($1_fungible_asset_ConcurrentSupply_$memory, $t6)) {
        call $ExecFailureAbort();
    } else {
        $t9 := $Mutation($Global($t6), EmptyVec(), $ResourceValue($1_fungible_asset_ConcurrentSupply_$memory, $t6));
    }
    if ($abort_flag) {
        assume {:print "$at(169,55083,55136)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(48,26):", $t7} $t7 == $t7;
        goto L15;
    }

    // $t10 := borrow_field<0x1::fungible_asset::ConcurrentSupply>.current($t9) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1295:17+38
    assume {:print "$at(169,55179,55217)"} true;
    $t10 := $ChildMutation($t9, 0, $Dereference($t9)->$current);

    // $t11 := (u128)($t1) on_abort goto L15 with $t7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1295:40+14
    call $t11 := $CastU128($t1);
    if ($abort_flag) {
        assume {:print "$at(169,55202,55216)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(48,26):", $t7} $t7 == $t7;
        goto L15;
    }

    // $t12 := aggregator_v2::try_sub<u128>($t10, $t11) on_abort goto L15 with $t7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1295:17+38
    call $t12,$t10 := $1_aggregator_v2_try_sub'u128'($t10, $t11);
    if ($abort_flag) {
        assume {:print "$at(169,55179,55217)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(48,26):", $t7} $t7 == $t7;
        goto L15;
    }

    // write_back[Reference($t9).current (0x1::aggregator_v2::Aggregator<u128>)]($t10) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1295:17+38
    $t9 := $UpdateMutation($t9, $Update'$1_fungible_asset_ConcurrentSupply'_current($Dereference($t9), $Dereference($t10)));

    // write_back[0x1::fungible_asset::ConcurrentSupply@]($t9) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1295:17+38
    $1_fungible_asset_ConcurrentSupply_$memory := $ResourceUpdate($1_fungible_asset_ConcurrentSupply_$memory, $GlobalLocationAddress($t9),
        $Dereference($t9));

    // if ($t12) goto L5 else goto L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1294:13+6
    assume {:print "$at(169,55153,55159)"} true;
    if ($t12) { goto L5; } else { goto L4; }

    // label L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1294:13+6
L5:

    // label L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1285:102+957
    assume {:print "$at(169,54868,55825)"} true;
L6:

    // goto L14 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1285:102+957
    assume {:print "$at(169,54868,55825)"} true;
    goto L14;

    // label L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1296:37+17
    assume {:print "$at(169,55256,55273)"} true;
L4:

    // $t13 := 20 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1296:37+17
    assume {:print "$at(169,55256,55273)"} true;
    $t13 := 20;
    assume $IsValid'u64'($t13);

    // $t14 := error::out_of_range($t13) on_abort goto L15 with $t7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1296:17+38
    call $t14 := $1_error_out_of_range($t13);
    if ($abort_flag) {
        assume {:print "$at(169,55236,55274)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(48,26):", $t7} $t7 == $t7;
        goto L15;
    }

    // trace_abort($t14) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1294:13+6
    assume {:print "$at(169,55153,55159)"} true;
    assume {:print "$track_abort(48,26):", $t14} $t14 == $t14;

    // $t7 := move($t14) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1294:13+6
    $t7 := $t14;

    // goto L15 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1294:13+6
    goto L15;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1298:20+32
    assume {:print "$at(169,55311,55343)"} true;
L2:

    // $t15 := exists<0x1::fungible_asset::Supply>($t6) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1298:20+32
    assume {:print "$at(169,55311,55343)"} true;
    $t15 := $ResourceExists($1_fungible_asset_Supply_$memory, $t6);

    // if ($t15) goto L8 else goto L7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1298:16+511
    if ($t15) { goto L8; } else { goto L7; }

    // label L8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1299:21+32
    assume {:print "$at(169,55368,55400)"} true;
L8:

    // $t16 := exists<0x1::fungible_asset::Supply>($t6) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1299:21+32
    assume {:print "$at(169,55368,55400)"} true;
    $t16 := $ResourceExists($1_fungible_asset_Supply_$memory, $t6);

    // if ($t16) goto L10 else goto L9 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1299:13+6
    if ($t16) { goto L10; } else { goto L9; }

    // label L10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1300:26+43
    assume {:print "$at(169,55466,55509)"} true;
L10:

    // $t17 := borrow_global<0x1::fungible_asset::Supply>($t6) on_abort goto L15 with $t7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1300:26+43
    assume {:print "$at(169,55466,55509)"} true;
    if (!$ResourceExists($1_fungible_asset_Supply_$memory, $t6)) {
        call $ExecFailureAbort();
    } else {
        $t17 := $Mutation($Global($t6), EmptyVec(), $ResourceValue($1_fungible_asset_Supply_$memory, $t6));
    }
    if ($abort_flag) {
        assume {:print "$at(169,55466,55509)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(48,26):", $t7} $t7 == $t7;
        goto L15;
    }

    // trace_local[supply]($t17) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1300:26+43
    $temp_0'$1_fungible_asset_Supply' := $Dereference($t17);
    assume {:print "$track_local(48,26,3):", $temp_0'$1_fungible_asset_Supply'} $temp_0'$1_fungible_asset_Supply' == $temp_0'$1_fungible_asset_Supply';

    // $t18 := get_field<0x1::fungible_asset::Supply>.current($t17) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1302:17+14
    assume {:print "$at(169,55550,55564)"} true;
    $t18 := $Dereference($t17)->$current;

    // $t19 := (u128)($t1) on_abort goto L15 with $t7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1302:35+16
    call $t19 := $CastU128($t1);
    if ($abort_flag) {
        assume {:print "$at(169,55568,55584)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(48,26):", $t7} $t7 == $t7;
        goto L15;
    }

    // $t20 := >=($t18, $t19) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1302:17+34
    call $t20 := $Ge($t18, $t19);

    // if ($t20) goto L12 else goto L11 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1301:13+6
    assume {:print "$at(169,55524,55530)"} true;
    if ($t20) { goto L12; } else { goto L11; }

    // label L12 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1305:30+14
    assume {:print "$at(169,55689,55703)"} true;
L12:

    // $t21 := get_field<0x1::fungible_asset::Supply>.current($t17) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1305:30+14
    assume {:print "$at(169,55689,55703)"} true;
    $t21 := $Dereference($t17)->$current;

    // $t22 := (u128)($t1) on_abort goto L15 with $t7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1305:47+16
    call $t22 := $CastU128($t1);
    if ($abort_flag) {
        assume {:print "$at(169,55706,55722)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(48,26):", $t7} $t7 == $t7;
        goto L15;
    }

    // $t23 := -($t21, $t22) on_abort goto L15 with $t7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1305:30+33
    call $t23 := $Sub($t21, $t22);
    if ($abort_flag) {
        assume {:print "$at(169,55689,55722)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(48,26):", $t7} $t7 == $t7;
        goto L15;
    }

    // $t24 := borrow_field<0x1::fungible_asset::Supply>.current($t17) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1305:13+14
    $t24 := $ChildMutation($t17, 0, $Dereference($t17)->$current);

    // write_ref($t24, $t23) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1305:13+50
    $t24 := $UpdateMutation($t24, $t23);

    // write_back[Reference($t17).current (u128)]($t24) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1305:13+50
    $t17 := $UpdateMutation($t17, $Update'$1_fungible_asset_Supply'_current($Dereference($t17), $Dereference($t24)));

    // pack_ref_deep($t17) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1305:13+50

    // write_back[0x1::fungible_asset::Supply@]($t17) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1305:13+50
    $1_fungible_asset_Supply_$memory := $ResourceUpdate($1_fungible_asset_Supply_$memory, $GlobalLocationAddress($t17),
        $Dereference($t17));

    // goto L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1298:54+389
    assume {:print "$at(169,55345,55734)"} true;
    goto L6;

    // label L11 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1301:13+6
    assume {:print "$at(169,55524,55530)"} true;
L11:

    // drop($t17) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1301:13+6
    assume {:print "$at(169,55524,55530)"} true;

    // $t25 := 20 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1303:38+17
    assume {:print "$at(169,55624,55641)"} true;
    $t25 := 20;
    assume $IsValid'u64'($t25);

    // $t26 := error::invalid_state($t25) on_abort goto L15 with $t7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1303:17+39
    call $t26 := $1_error_invalid_state($t25);
    if ($abort_flag) {
        assume {:print "$at(169,55603,55642)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(48,26):", $t7} $t7 == $t7;
        goto L15;
    }

    // trace_abort($t26) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1301:13+6
    assume {:print "$at(169,55524,55530)"} true;
    assume {:print "$track_abort(48,26):", $t26} $t26 == $t26;

    // $t7 := move($t26) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1301:13+6
    $t7 := $t26;

    // goto L15 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1301:13+6
    goto L15;

    // label L9 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1299:72+17
    assume {:print "$at(169,55419,55436)"} true;
L9:

    // $t27 := 21 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1299:72+17
    assume {:print "$at(169,55419,55436)"} true;
    $t27 := 21;
    assume $IsValid'u64'($t27);

    // $t28 := error::not_found($t27) on_abort goto L15 with $t7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1299:55+35
    call $t28 := $1_error_not_found($t27);
    if ($abort_flag) {
        assume {:print "$at(169,55402,55437)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(48,26):", $t7} $t7 == $t7;
        goto L15;
    }

    // trace_abort($t28) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1299:13+6
    assume {:print "$at(169,55360,55366)"} true;
    assume {:print "$track_abort(48,26):", $t28} $t28 == $t28;

    // $t7 := move($t28) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1299:13+6
    $t7 := $t28;

    // goto L15 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1299:13+6
    goto L15;

    // label L7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1307:21+5
    assume {:print "$at(169,55763,55768)"} true;
L7:

    // goto L13 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1307:21+5
    assume {:print "$at(169,55763,55768)"} true;
    goto L13;

    // goto L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1307:13+6
    goto L6;

    // label L13 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1307:45+17
L13:

    // $t29 := 21 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1307:45+17
    assume {:print "$at(169,55787,55804)"} true;
    $t29 := 21;
    assume $IsValid'u64'($t29);

    // $t30 := error::not_found($t29) on_abort goto L15 with $t7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1307:28+35
    call $t30 := $1_error_not_found($t29);
    if ($abort_flag) {
        assume {:print "$at(169,55770,55805)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(48,26):", $t7} $t7 == $t7;
        goto L15;
    }

    // trace_abort($t30) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1307:13+6
    assume {:print "$at(169,55755,55761)"} true;
    assume {:print "$track_abort(48,26):", $t30} $t30 == $t30;

    // $t7 := move($t30) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1307:13+6
    $t7 := $t30;

    // goto L15 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1307:13+6
    goto L15;

    // label L14 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1309:5+1
    assume {:print "$at(169,55824,55825)"} true;
L14:

    // return () at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1309:5+1
    assume {:print "$at(169,55824,55825)"} true;
    return;

    // label L15 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1309:5+1
L15:

    // abort($t7) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1309:5+1
    assume {:print "$at(169,55824,55825)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// fun fungible_asset::deposit_dispatch_function<0x1::fungible_asset::FungibleStore> [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:702:5+466
procedure {:inline 1} $1_fungible_asset_deposit_dispatch_function'$1_fungible_asset_FungibleStore'(_$t0: $1_object_Object'$1_fungible_asset_FungibleStore') returns ($ret0: $1_option_Option'$1_function_info_FunctionInfo')
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: $1_option_Option'$1_function_info_FunctionInfo';
    var $t4: int;
    var $t5: int;
    var $t6: bool;
    var $t7: $1_fungible_asset_FungibleStore;
    var $t8: $1_object_Object'$1_fungible_asset_Metadata';
    var $t9: int;
    var $t10: bool;
    var $t11: $1_fungible_asset_DispatchFunctionStore;
    var $t12: $1_option_Option'$1_function_info_FunctionInfo';
    var $t13: $1_option_Option'$1_function_info_FunctionInfo';
    var $t14: int;
    var $t15: int;
    var $t0: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_option_Option'$1_function_info_FunctionInfo'': $1_option_Option'$1_function_info_FunctionInfo';
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[store]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:702:5+1
    assume {:print "$at(169,30220,30221)"} true;
    assume {:print "$track_local(48,28,0):", $t0} $t0 == $t0;

    // $t4 := object::object_address<#0>($t0) on_abort goto L6 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1326:26+29
    assume {:print "$at(169,56412,56441)"} true;
    call $t4 := $1_object_object_address'$1_fungible_asset_FungibleStore'($t0);
    if ($abort_flag) {
        assume {:print "$at(169,56412,56441)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(48,28):", $t5} $t5 == $t5;
        goto L6;
    }

    // trace_local[store_addr]($t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1326:26+29
    assume {:print "$track_local(48,28,1):", $t4} $t4 == $t4;

    // $t6 := exists<0x1::fungible_asset::FungibleStore>($t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1327:17+33
    assume {:print "$at(169,56460,56493)"} true;
    $t6 := $ResourceExists($1_fungible_asset_FungibleStore_$memory, $t4);

    // if ($t6) goto L1 else goto L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1327:9+6
    if ($t6) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1328:9+40
    assume {:print "$at(169,56550,56590)"} true;
L1:

    // $t7 := get_global<0x1::fungible_asset::FungibleStore>($t4) on_abort goto L6 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1328:9+40
    assume {:print "$at(169,56550,56590)"} true;
    if (!$ResourceExists($1_fungible_asset_FungibleStore_$memory, $t4)) {
        call $ExecFailureAbort();
    } else {
        $t7 := $ResourceValue($1_fungible_asset_FungibleStore_$memory, $t4);
    }
    if ($abort_flag) {
        assume {:print "$at(169,56550,56590)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(48,28):", $t5} $t5 == $t5;
        goto L6;
    }

    // $t8 := get_field<0x1::fungible_asset::FungibleStore>.metadata($t7) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:704:52+18
    assume {:print "$at(169,30460,30478)"} true;
    $t8 := $t7->$metadata;

    // $t9 := object::object_address<0x1::fungible_asset::Metadata>($t8) on_abort goto L6 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:704:29+42
    call $t9 := $1_object_object_address'$1_fungible_asset_Metadata'($t8);
    if ($abort_flag) {
        assume {:print "$at(169,30437,30479)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(48,28):", $t5} $t5 == $t5;
        goto L6;
    }

    // trace_local[metadata_addr]($t9) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:704:29+42
    assume {:print "$track_local(48,28,2):", $t9} $t9 == $t9;

    // $t10 := exists<0x1::fungible_asset::DispatchFunctionStore>($t9) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:705:12+44
    assume {:print "$at(169,30493,30537)"} true;
    $t10 := $ResourceExists($1_fungible_asset_DispatchFunctionStore_$memory, $t9);

    // if ($t10) goto L3 else goto L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:705:9+189
    if ($t10) { goto L3; } else { goto L2; }

    // label L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:706:13+51
    assume {:print "$at(169,30554,30605)"} true;
L3:

    // $t11 := get_global<0x1::fungible_asset::DispatchFunctionStore>($t9) on_abort goto L6 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:706:13+51
    assume {:print "$at(169,30554,30605)"} true;
    if (!$ResourceExists($1_fungible_asset_DispatchFunctionStore_$memory, $t9)) {
        call $ExecFailureAbort();
    } else {
        $t11 := $ResourceValue($1_fungible_asset_DispatchFunctionStore_$memory, $t9);
    }
    if ($abort_flag) {
        assume {:print "$at(169,30554,30605)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(48,28):", $t5} $t5 == $t5;
        goto L6;
    }

    // $t12 := get_field<0x1::fungible_asset::DispatchFunctionStore>.deposit_function($t11) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:706:13+68
    $t12 := $t11->$deposit_function;

    // $t3 := $t12 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:706:13+68
    $t3 := $t12;

    // trace_local[return]($t12) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:706:13+68
    assume {:print "$track_local(48,28,3):", $t12} $t12 == $t12;

    // label L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:705:9+189
    assume {:print "$at(169,30490,30679)"} true;
L4:

    // trace_return[0]($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:705:9+189
    assume {:print "$at(169,30490,30679)"} true;
    assume {:print "$track_return(48,28,0):", $t3} $t3 == $t3;

    // goto L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:705:9+189
    goto L5;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:708:13+14
    assume {:print "$at(169,30654,30668)"} true;
L2:

    // $t13 := opaque begin: option::none<0x1::function_info::FunctionInfo>() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:708:13+14
    assume {:print "$at(169,30654,30668)"} true;

    // assume And(WellFormed($t13), Le(Len<0x1::function_info::FunctionInfo>(select option::Option.vec($t13)), 1)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:708:13+14
    assume ($IsValid'$1_option_Option'$1_function_info_FunctionInfo''($t13) && (LenVec($t13->$vec) <= 1));

    // assume Eq<0x1::option::Option<0x1::function_info::FunctionInfo>>($t13, option::spec_none<0x1::function_info::FunctionInfo>()) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:708:13+14
    assume $IsEqual'$1_option_Option'$1_function_info_FunctionInfo''($t13, $1_option_spec_none'$1_function_info_FunctionInfo'());

    // $t13 := opaque end: option::none<0x1::function_info::FunctionInfo>() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:708:13+14

    // $t3 := $t13 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:708:13+14
    $t3 := $t13;

    // trace_local[return]($t13) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:708:13+14
    assume {:print "$track_local(48,28,3):", $t13} $t13 == $t13;

    // goto L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:708:13+14
    goto L4;

    // label L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1327:69+25
    assume {:print "$at(169,56512,56537)"} true;
L0:

    // $t14 := 23 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1327:69+25
    assume {:print "$at(169,56512,56537)"} true;
    $t14 := 23;
    assume $IsValid'u64'($t14);

    // $t15 := error::not_found($t14) on_abort goto L6 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1327:52+43
    call $t15 := $1_error_not_found($t14);
    if ($abort_flag) {
        assume {:print "$at(169,56495,56538)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(48,28):", $t5} $t5 == $t5;
        goto L6;
    }

    // trace_abort($t15) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1327:9+6
    assume {:print "$at(169,56452,56458)"} true;
    assume {:print "$track_abort(48,28):", $t15} $t15 == $t15;

    // $t5 := move($t15) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1327:9+6
    $t5 := $t15;

    // goto L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1327:9+6
    goto L6;

    // label L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:710:5+1
    assume {:print "$at(169,30685,30686)"} true;
L5:

    // return $t3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:710:5+1
    assume {:print "$at(169,30685,30686)"} true;
    $ret0 := $t3;
    return;

    // label L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:710:5+1
L6:

    // abort($t5) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:710:5+1
    assume {:print "$at(169,30685,30686)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun fungible_asset::deposit_sanity_check<0x1::fungible_asset::FungibleStore> [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:940:5+484
procedure {:inline 1} $1_fungible_asset_deposit_sanity_check'$1_fungible_asset_FungibleStore'(_$t0: $1_object_Object'$1_fungible_asset_FungibleStore', _$t1: bool) returns ()
{
    // declare local variables
    var $t2: int;
    var $t3: $1_fungible_asset_FungibleStore;
    var $t4: bool;
    var $t5: int;
    var $t6: int;
    var $t7: bool;
    var $t8: $1_fungible_asset_FungibleStore;
    var $t9: bool;
    var $t10: bool;
    var $t11: int;
    var $t12: int;
    var $t13: int;
    var $t14: int;
    var $t15: $1_object_Object'$1_fungible_asset_Metadata';
    var $t16: bool;
    var $t17: bool;
    var $t18: int;
    var $t19: int;
    var $t0: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t1: bool;
    var $temp_0'$1_fungible_asset_FungibleStore': $1_fungible_asset_FungibleStore;
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[store]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:940:5+1
    assume {:print "$at(169,40387,40388)"} true;
    assume {:print "$track_local(48,29,0):", $t0} $t0 == $t0;

    // trace_local[abort_on_dispatch]($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:940:5+1
    assume {:print "$track_local(48,29,1):", $t1} $t1 == $t1;

    // $t5 := object::object_address<#0>($t0) on_abort goto L10 with $t6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1326:26+29
    assume {:print "$at(169,56412,56441)"} true;
    call $t5 := $1_object_object_address'$1_fungible_asset_FungibleStore'($t0);
    if ($abort_flag) {
        assume {:print "$at(169,56412,56441)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(48,29):", $t6} $t6 == $t6;
        goto L10;
    }

    // trace_local[store_addr]($t5) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1326:26+29
    assume {:print "$track_local(48,29,2):", $t5} $t5 == $t5;

    // $t7 := exists<0x1::fungible_asset::FungibleStore>($t5) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1327:17+33
    assume {:print "$at(169,56460,56493)"} true;
    $t7 := $ResourceExists($1_fungible_asset_FungibleStore_$memory, $t5);

    // if ($t7) goto L1 else goto L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1327:9+6
    if ($t7) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1328:9+40
    assume {:print "$at(169,56550,56590)"} true;
L1:

    // $t8 := get_global<0x1::fungible_asset::FungibleStore>($t5) on_abort goto L10 with $t6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1328:9+40
    assume {:print "$at(169,56550,56590)"} true;
    if (!$ResourceExists($1_fungible_asset_FungibleStore_$memory, $t5)) {
        call $ExecFailureAbort();
    } else {
        $t8 := $ResourceValue($1_fungible_asset_FungibleStore_$memory, $t5);
    }
    if ($abort_flag) {
        assume {:print "$at(169,56550,56590)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(48,29):", $t6} $t6 == $t6;
        goto L10;
    }

    // trace_local[fa_store]($t8) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1328:9+40
    assume {:print "$track_local(48,29,3):", $t8} $t8 == $t8;

    // if ($t1) goto L2 else goto L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:946:13+18
    assume {:print "$at(169,40629,40647)"} true;
    if ($t1) { goto L2; } else { goto L3; }

    // label L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:946:13+71
L3:

    // $t9 := true at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:946:13+71
    assume {:print "$at(169,40629,40700)"} true;
    $t9 := true;
    assume $IsValid'bool'($t9);

    // $t4 := $t9 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:946:13+71
    $t4 := $t9;

    // trace_local[$t6]($t9) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:946:13+71
    assume {:print "$track_local(48,29,4):", $t9} $t9 == $t9;

    // label L8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:945:9+6
    assume {:print "$at(169,40607,40613)"} true;
L8:

    // if ($t4) goto L5 else goto L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:945:9+6
    assume {:print "$at(169,40607,40613)"} true;
    if ($t4) { goto L5; } else { goto L4; }

    // label L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:949:18+15
    assume {:print "$at(169,40803,40818)"} true;
L5:

    // $t10 := get_field<0x1::fungible_asset::FungibleStore>.frozen($t8) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:949:18+15
    assume {:print "$at(169,40803,40818)"} true;
    $t10 := $t8->$frozen;

    // if ($t10) goto L6 else goto L7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:949:17+16
    if ($t10) { goto L6; } else { goto L7; }

    // label L7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:943:53+330
    assume {:print "$at(169,40541,40871)"} true;
L7:

    // goto L9 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:943:53+330
    assume {:print "$at(169,40541,40871)"} true;
    goto L9;

    // label L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:949:60+16
    assume {:print "$at(169,40845,40861)"} true;
L6:

    // $t11 := 3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:949:60+16
    assume {:print "$at(169,40845,40861)"} true;
    $t11 := 3;
    assume $IsValid'u64'($t11);

    // $t12 := error::permission_denied($t11) on_abort goto L10 with $t6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:949:35+42
    call $t12 := $1_error_permission_denied($t11);
    if ($abort_flag) {
        assume {:print "$at(169,40820,40862)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(48,29):", $t6} $t6 == $t6;
        goto L10;
    }

    // trace_abort($t12) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:949:9+6
    assume {:print "$at(169,40794,40800)"} true;
    assume {:print "$track_abort(48,29):", $t12} $t12 == $t12;

    // $t6 := move($t12) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:949:9+6
    $t6 := $t12;

    // goto L10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:949:9+6
    goto L10;

    // label L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:945:9+6
    assume {:print "$at(169,40607,40613)"} true;
L4:

    // $t13 := 28 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:947:37+32
    assume {:print "$at(169,40739,40771)"} true;
    $t13 := 28;
    assume $IsValid'u64'($t13);

    // $t14 := error::invalid_argument($t13) on_abort goto L10 with $t6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:947:13+57
    call $t14 := $1_error_invalid_argument($t13);
    if ($abort_flag) {
        assume {:print "$at(169,40715,40772)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(48,29):", $t6} $t6 == $t6;
        goto L10;
    }

    // trace_abort($t14) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:945:9+6
    assume {:print "$at(169,40607,40613)"} true;
    assume {:print "$track_abort(48,29):", $t14} $t14 == $t14;

    // $t6 := move($t14) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:945:9+6
    $t6 := $t14;

    // goto L10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:945:9+6
    goto L10;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:946:66+17
    assume {:print "$at(169,40682,40699)"} true;
L2:

    // $t15 := get_field<0x1::fungible_asset::FungibleStore>.metadata($t8) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:946:66+17
    assume {:print "$at(169,40682,40699)"} true;
    $t15 := $t8->$metadata;

    // $t16 := fungible_asset::has_deposit_dispatch_function($t15) on_abort goto L10 with $t6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:946:36+48
    call $t16 := $1_fungible_asset_has_deposit_dispatch_function($t15);
    if ($abort_flag) {
        assume {:print "$at(169,40652,40700)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(48,29):", $t6} $t6 == $t6;
        goto L10;
    }

    // $t17 := !($t16) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:946:35+49
    call $t17 := $Not($t16);

    // $t4 := $t17 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:946:35+49
    $t4 := $t17;

    // trace_local[$t6]($t17) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:946:35+49
    assume {:print "$track_local(48,29,4):", $t17} $t17 == $t17;

    // goto L8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:946:35+49
    goto L8;

    // label L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1327:69+25
    assume {:print "$at(169,56512,56537)"} true;
L0:

    // $t18 := 23 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1327:69+25
    assume {:print "$at(169,56512,56537)"} true;
    $t18 := 23;
    assume $IsValid'u64'($t18);

    // $t19 := error::not_found($t18) on_abort goto L10 with $t6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1327:52+43
    call $t19 := $1_error_not_found($t18);
    if ($abort_flag) {
        assume {:print "$at(169,56495,56538)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(48,29):", $t6} $t6 == $t6;
        goto L10;
    }

    // trace_abort($t19) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1327:9+6
    assume {:print "$at(169,56452,56458)"} true;
    assume {:print "$track_abort(48,29):", $t19} $t19 == $t19;

    // $t6 := move($t19) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1327:9+6
    $t6 := $t19;

    // goto L10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1327:9+6
    goto L10;

    // label L9 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:950:5+1
    assume {:print "$at(169,40870,40871)"} true;
L9:

    // return () at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:950:5+1
    assume {:print "$at(169,40870,40871)"} true;
    return;

    // label L10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:950:5+1
L10:

    // abort($t6) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:950:5+1
    assume {:print "$at(169,40870,40871)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}

// fun fungible_asset::derived_balance_dispatch_function<0x1::fungible_asset::FungibleStore> [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:761:5+491
procedure {:inline 1} $1_fungible_asset_derived_balance_dispatch_function'$1_fungible_asset_FungibleStore'(_$t0: $1_object_Object'$1_fungible_asset_FungibleStore') returns ($ret0: $1_option_Option'$1_function_info_FunctionInfo')
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: $1_option_Option'$1_function_info_FunctionInfo';
    var $t4: int;
    var $t5: int;
    var $t6: bool;
    var $t7: $1_fungible_asset_FungibleStore;
    var $t8: $1_object_Object'$1_fungible_asset_Metadata';
    var $t9: int;
    var $t10: bool;
    var $t11: $1_fungible_asset_DispatchFunctionStore;
    var $t12: $1_option_Option'$1_function_info_FunctionInfo';
    var $t13: $1_option_Option'$1_function_info_FunctionInfo';
    var $t14: int;
    var $t15: int;
    var $t0: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_option_Option'$1_function_info_FunctionInfo'': $1_option_Option'$1_function_info_FunctionInfo';
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[store]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:761:5+1
    assume {:print "$at(169,32896,32897)"} true;
    assume {:print "$track_local(48,31,0):", $t0} $t0 == $t0;

    // $t4 := object::object_address<#0>($t0) on_abort goto L6 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1326:26+29
    assume {:print "$at(169,56412,56441)"} true;
    call $t4 := $1_object_object_address'$1_fungible_asset_FungibleStore'($t0);
    if ($abort_flag) {
        assume {:print "$at(169,56412,56441)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(48,31):", $t5} $t5 == $t5;
        goto L6;
    }

    // trace_local[store_addr]($t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1326:26+29
    assume {:print "$track_local(48,31,1):", $t4} $t4 == $t4;

    // $t6 := exists<0x1::fungible_asset::FungibleStore>($t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1327:17+33
    assume {:print "$at(169,56460,56493)"} true;
    $t6 := $ResourceExists($1_fungible_asset_FungibleStore_$memory, $t4);

    // if ($t6) goto L1 else goto L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1327:9+6
    if ($t6) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1328:9+40
    assume {:print "$at(169,56550,56590)"} true;
L1:

    // $t7 := get_global<0x1::fungible_asset::FungibleStore>($t4) on_abort goto L6 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1328:9+40
    assume {:print "$at(169,56550,56590)"} true;
    if (!$ResourceExists($1_fungible_asset_FungibleStore_$memory, $t4)) {
        call $ExecFailureAbort();
    } else {
        $t7 := $ResourceValue($1_fungible_asset_FungibleStore_$memory, $t4);
    }
    if ($abort_flag) {
        assume {:print "$at(169,56550,56590)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(48,31):", $t5} $t5 == $t5;
        goto L6;
    }

    // $t8 := get_field<0x1::fungible_asset::FungibleStore>.metadata($t7) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:763:52+18
    assume {:print "$at(169,33152,33170)"} true;
    $t8 := $t7->$metadata;

    // $t9 := object::object_address<0x1::fungible_asset::Metadata>($t8) on_abort goto L6 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:763:29+42
    call $t9 := $1_object_object_address'$1_fungible_asset_Metadata'($t8);
    if ($abort_flag) {
        assume {:print "$at(169,33129,33171)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(48,31):", $t5} $t5 == $t5;
        goto L6;
    }

    // trace_local[metadata_addr]($t9) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:763:29+42
    assume {:print "$track_local(48,31,2):", $t9} $t9 == $t9;

    // $t10 := exists<0x1::fungible_asset::DispatchFunctionStore>($t9) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:764:13+44
    assume {:print "$at(169,33186,33230)"} true;
    $t10 := $ResourceExists($1_fungible_asset_DispatchFunctionStore_$memory, $t9);

    // if ($t10) goto L3 else goto L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:764:9+198
    if ($t10) { goto L3; } else { goto L2; }

    // label L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:765:13+51
    assume {:print "$at(169,33247,33298)"} true;
L3:

    // $t11 := get_global<0x1::fungible_asset::DispatchFunctionStore>($t9) on_abort goto L6 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:765:13+51
    assume {:print "$at(169,33247,33298)"} true;
    if (!$ResourceExists($1_fungible_asset_DispatchFunctionStore_$memory, $t9)) {
        call $ExecFailureAbort();
    } else {
        $t11 := $ResourceValue($1_fungible_asset_DispatchFunctionStore_$memory, $t9);
    }
    if ($abort_flag) {
        assume {:print "$at(169,33247,33298)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(48,31):", $t5} $t5 == $t5;
        goto L6;
    }

    // $t12 := get_field<0x1::fungible_asset::DispatchFunctionStore>.derived_balance_function($t11) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:765:13+76
    $t12 := $t11->$derived_balance_function;

    // $t3 := $t12 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:765:13+76
    $t3 := $t12;

    // trace_local[return]($t12) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:765:13+76
    assume {:print "$track_local(48,31,3):", $t12} $t12 == $t12;

    // label L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:764:9+198
    assume {:print "$at(169,33182,33380)"} true;
L4:

    // trace_return[0]($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:764:9+198
    assume {:print "$at(169,33182,33380)"} true;
    assume {:print "$track_return(48,31,0):", $t3} $t3 == $t3;

    // goto L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:764:9+198
    goto L5;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:767:13+14
    assume {:print "$at(169,33355,33369)"} true;
L2:

    // $t13 := opaque begin: option::none<0x1::function_info::FunctionInfo>() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:767:13+14
    assume {:print "$at(169,33355,33369)"} true;

    // assume And(WellFormed($t13), Le(Len<0x1::function_info::FunctionInfo>(select option::Option.vec($t13)), 1)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:767:13+14
    assume ($IsValid'$1_option_Option'$1_function_info_FunctionInfo''($t13) && (LenVec($t13->$vec) <= 1));

    // assume Eq<0x1::option::Option<0x1::function_info::FunctionInfo>>($t13, option::spec_none<0x1::function_info::FunctionInfo>()) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:767:13+14
    assume $IsEqual'$1_option_Option'$1_function_info_FunctionInfo''($t13, $1_option_spec_none'$1_function_info_FunctionInfo'());

    // $t13 := opaque end: option::none<0x1::function_info::FunctionInfo>() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:767:13+14

    // $t3 := $t13 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:767:13+14
    $t3 := $t13;

    // trace_local[return]($t13) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:767:13+14
    assume {:print "$track_local(48,31,3):", $t13} $t13 == $t13;

    // goto L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:767:13+14
    goto L4;

    // label L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1327:69+25
    assume {:print "$at(169,56512,56537)"} true;
L0:

    // $t14 := 23 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1327:69+25
    assume {:print "$at(169,56512,56537)"} true;
    $t14 := 23;
    assume $IsValid'u64'($t14);

    // $t15 := error::not_found($t14) on_abort goto L6 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1327:52+43
    call $t15 := $1_error_not_found($t14);
    if ($abort_flag) {
        assume {:print "$at(169,56495,56538)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(48,31):", $t5} $t5 == $t5;
        goto L6;
    }

    // trace_abort($t15) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1327:9+6
    assume {:print "$at(169,56452,56458)"} true;
    assume {:print "$track_abort(48,31):", $t15} $t15 == $t15;

    // $t5 := move($t15) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1327:9+6
    $t5 := $t15;

    // goto L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1327:9+6
    goto L6;

    // label L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:769:5+1
    assume {:print "$at(169,33386,33387)"} true;
L5:

    // return $t3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:769:5+1
    assume {:print "$at(169,33386,33387)"} true;
    $ret0 := $t3;
    return;

    // label L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:769:5+1
L6:

    // abort($t5) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:769:5+1
    assume {:print "$at(169,33386,33387)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun fungible_asset::generate_burn_ref [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:481:5+198
procedure {:inline 1} $1_fungible_asset_generate_burn_ref(_$t0: $1_object_ConstructorRef) returns ($ret0: $1_fungible_asset_BurnRef)
{
    // declare local variables
    var $t1: $1_object_Object'$1_fungible_asset_Metadata';
    var $t2: int;
    var $t3: $1_fungible_asset_BurnRef;
    var $t0: $1_object_ConstructorRef;
    var $temp_0'$1_fungible_asset_BurnRef': $1_fungible_asset_BurnRef;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[constructor_ref]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:481:5+1
    assume {:print "$at(169,20467,20468)"} true;
    assume {:print "$track_local(48,35,0):", $t0} $t0 == $t0;

    // $t1 := object::object_from_constructor_ref<0x1::fungible_asset::Metadata>($t0) on_abort goto L2 with $t2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:482:24+62
    assume {:print "$at(169,20565,20627)"} true;
    call $t1 := $1_object_object_from_constructor_ref'$1_fungible_asset_Metadata'($t0);
    if ($abort_flag) {
        assume {:print "$at(169,20565,20627)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(48,35):", $t2} $t2 == $t2;
        goto L2;
    }

    // $t3 := pack 0x1::fungible_asset::BurnRef($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:483:9+20
    assume {:print "$at(169,20638,20658)"} true;
    $t3 := $1_fungible_asset_BurnRef($t1);

    // trace_return[0]($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:483:9+20
    assume {:print "$track_return(48,35,0):", $t3} $t3 == $t3;

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:484:5+1
    assume {:print "$at(169,20664,20665)"} true;
L1:

    // return $t3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:484:5+1
    assume {:print "$at(169,20664,20665)"} true;
    $ret0 := $t3;
    return;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:484:5+1
L2:

    // abort($t2) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:484:5+1
    assume {:print "$at(169,20664,20665)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun fungible_asset::generate_mint_ref [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:474:5+198
procedure {:inline 1} $1_fungible_asset_generate_mint_ref(_$t0: $1_object_ConstructorRef) returns ($ret0: $1_fungible_asset_MintRef)
{
    // declare local variables
    var $t1: $1_object_Object'$1_fungible_asset_Metadata';
    var $t2: int;
    var $t3: $1_fungible_asset_MintRef;
    var $t0: $1_object_ConstructorRef;
    var $temp_0'$1_fungible_asset_MintRef': $1_fungible_asset_MintRef;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[constructor_ref]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:474:5+1
    assume {:print "$at(169,20042,20043)"} true;
    assume {:print "$track_local(48,36,0):", $t0} $t0 == $t0;

    // $t1 := object::object_from_constructor_ref<0x1::fungible_asset::Metadata>($t0) on_abort goto L2 with $t2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:475:24+62
    assume {:print "$at(169,20140,20202)"} true;
    call $t1 := $1_object_object_from_constructor_ref'$1_fungible_asset_Metadata'($t0);
    if ($abort_flag) {
        assume {:print "$at(169,20140,20202)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(48,36):", $t2} $t2 == $t2;
        goto L2;
    }

    // $t3 := pack 0x1::fungible_asset::MintRef($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:476:9+20
    assume {:print "$at(169,20213,20233)"} true;
    $t3 := $1_fungible_asset_MintRef($t1);

    // trace_return[0]($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:476:9+20
    assume {:print "$track_return(48,36,0):", $t3} $t3 == $t3;

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:477:5+1
    assume {:print "$at(169,20239,20240)"} true;
L1:

    // return $t3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:477:5+1
    assume {:print "$at(169,20239,20240)"} true;
    $ret0 := $t3;
    return;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:477:5+1
L2:

    // abort($t2) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:477:5+1
    assume {:print "$at(169,20239,20240)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun fungible_asset::has_balance_dispatch_function [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:742:5+479
procedure {:inline 1} $1_fungible_asset_has_balance_dispatch_function(_$t0: $1_object_Object'$1_fungible_asset_Metadata') returns ($ret0: bool)
{
    // declare local variables
    var $t1: int;
    var $t2: bool;
    var $t3: bool;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: bool;
    var $t8: bool;
    var $t9: $1_fungible_asset_DispatchFunctionStore;
    var $t10: $1_option_Option'$1_function_info_FunctionInfo';
    var $t11: bool;
    var $t12: bool;
    var $t13: bool;
    var $t0: $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[metadata]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:742:5+1
    assume {:print "$at(169,32129,32130)"} true;
    assume {:print "$track_local(48,42,0):", $t0} $t0 == $t0;

    // $t4 := object::object_address<0x1::fungible_asset::Metadata>($t0) on_abort goto L7 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:743:29+33
    assume {:print "$at(169,32259,32292)"} true;
    call $t4 := $1_object_object_address'$1_fungible_asset_Metadata'($t0);
    if ($abort_flag) {
        assume {:print "$at(169,32259,32292)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(48,42):", $t5} $t5 == $t5;
        goto L7;
    }

    // trace_local[metadata_addr]($t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:743:29+33
    assume {:print "$track_local(48,42,1):", $t4} $t4 == $t4;

    // $t6 := 0xa at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:745:30+21
    assume {:print "$at(169,32373,32394)"} true;
    $t6 := 10;
    assume $IsValid'address'($t6);

    // $t7 := !=($t4, $t6) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:745:13+38
    $t7 := !$IsEqual'address'($t4, $t6);

    // if ($t7) goto L1 else goto L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:745:13+86
    if ($t7) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:745:55+44
L1:

    // $t8 := exists<0x1::fungible_asset::DispatchFunctionStore>($t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:745:55+44
    assume {:print "$at(169,32398,32442)"} true;
    $t8 := $ResourceExists($1_fungible_asset_DispatchFunctionStore_$memory, $t4);

    // $t2 := $t8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:745:55+44
    $t2 := $t8;

    // trace_local[$t5]($t8) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:745:55+44
    assume {:print "$track_local(48,42,2):", $t8} $t8 == $t8;

    // label L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:745:9+249
L5:

    // if ($t2) goto L3 else goto L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:745:9+249
    assume {:print "$at(169,32352,32601)"} true;
    if ($t2) { goto L3; } else { goto L2; }

    // label L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:746:30+51
    assume {:print "$at(169,32476,32527)"} true;
L3:

    // $t9 := get_global<0x1::fungible_asset::DispatchFunctionStore>($t4) on_abort goto L7 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:746:30+51
    assume {:print "$at(169,32476,32527)"} true;
    if (!$ResourceExists($1_fungible_asset_DispatchFunctionStore_$memory, $t4)) {
        call $ExecFailureAbort();
    } else {
        $t9 := $ResourceValue($1_fungible_asset_DispatchFunctionStore_$memory, $t4);
    }
    if ($abort_flag) {
        assume {:print "$at(169,32476,32527)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(48,42):", $t5} $t5 == $t5;
        goto L7;
    }

    // $t10 := get_field<0x1::fungible_asset::DispatchFunctionStore>.derived_balance_function($t9) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:746:29+77
    $t10 := $t9->$derived_balance_function;

    // $t11 := opaque begin: option::is_some<0x1::function_info::FunctionInfo>($t10) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:746:13+94

    // assume WellFormed($t11) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:746:13+94
    assume $IsValid'bool'($t11);

    // assume Eq<bool>($t11, option::spec_is_some<0x1::function_info::FunctionInfo>($t10)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:746:13+94
    assume $IsEqual'bool'($t11, $1_option_spec_is_some'$1_function_info_FunctionInfo'($t10));

    // $t11 := opaque end: option::is_some<0x1::function_info::FunctionInfo>($t10) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:746:13+94

    // $t3 := $t11 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:746:13+94
    $t3 := $t11;

    // trace_local[return]($t11) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:746:13+94
    assume {:print "$track_local(48,42,3):", $t11} $t11 == $t11;

    // label L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:745:9+249
    assume {:print "$at(169,32352,32601)"} true;
L4:

    // trace_return[0]($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:745:9+249
    assume {:print "$at(169,32352,32601)"} true;
    assume {:print "$track_return(48,42,0):", $t3} $t3 == $t3;

    // goto L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:745:9+249
    goto L6;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:748:13+5
    assume {:print "$at(169,32585,32590)"} true;
L2:

    // $t12 := false at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:748:13+5
    assume {:print "$at(169,32585,32590)"} true;
    $t12 := false;
    assume $IsValid'bool'($t12);

    // $t3 := $t12 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:748:13+5
    $t3 := $t12;

    // trace_local[return]($t12) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:748:13+5
    assume {:print "$track_local(48,42,3):", $t12} $t12 == $t12;

    // goto L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:748:13+5
    goto L4;

    // label L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:745:13+86
    assume {:print "$at(169,32356,32442)"} true;
L0:

    // $t13 := false at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:745:13+86
    assume {:print "$at(169,32356,32442)"} true;
    $t13 := false;
    assume $IsValid'bool'($t13);

    // $t2 := $t13 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:745:13+86
    $t2 := $t13;

    // trace_local[$t5]($t13) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:745:13+86
    assume {:print "$track_local(48,42,2):", $t13} $t13 == $t13;

    // goto L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:745:13+86
    goto L5;

    // label L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:750:5+1
    assume {:print "$at(169,32607,32608)"} true;
L6:

    // return $t3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:750:5+1
    assume {:print "$at(169,32607,32608)"} true;
    $ret0 := $t3;
    return;

    // label L7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:750:5+1
L7:

    // abort($t5) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:750:5+1
    assume {:print "$at(169,32607,32608)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun fungible_asset::has_deposit_dispatch_function [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:712:5+470
procedure {:inline 1} $1_fungible_asset_has_deposit_dispatch_function(_$t0: $1_object_Object'$1_fungible_asset_Metadata') returns ($ret0: bool)
{
    // declare local variables
    var $t1: int;
    var $t2: bool;
    var $t3: bool;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: bool;
    var $t8: bool;
    var $t9: $1_fungible_asset_DispatchFunctionStore;
    var $t10: $1_option_Option'$1_function_info_FunctionInfo';
    var $t11: bool;
    var $t12: bool;
    var $t13: bool;
    var $t0: $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[metadata]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:712:5+1
    assume {:print "$at(169,30694,30695)"} true;
    assume {:print "$track_local(48,43,0):", $t0} $t0 == $t0;

    // $t4 := object::object_address<0x1::fungible_asset::Metadata>($t0) on_abort goto L7 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:713:29+33
    assume {:print "$at(169,30824,30857)"} true;
    call $t4 := $1_object_object_address'$1_fungible_asset_Metadata'($t0);
    if ($abort_flag) {
        assume {:print "$at(169,30824,30857)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(48,43):", $t5} $t5 == $t5;
        goto L7;
    }

    // trace_local[metadata_addr]($t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:713:29+33
    assume {:print "$track_local(48,43,1):", $t4} $t4 == $t4;

    // $t6 := 0xa at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:715:29+21
    assume {:print "$at(169,30937,30958)"} true;
    $t6 := 10;
    assume $IsValid'address'($t6);

    // $t7 := !=($t4, $t6) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:715:12+38
    $t7 := !$IsEqual'address'($t4, $t6);

    // if ($t7) goto L1 else goto L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:715:12+86
    if ($t7) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:715:54+44
L1:

    // $t8 := exists<0x1::fungible_asset::DispatchFunctionStore>($t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:715:54+44
    assume {:print "$at(169,30962,31006)"} true;
    $t8 := $ResourceExists($1_fungible_asset_DispatchFunctionStore_$memory, $t4);

    // $t2 := $t8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:715:54+44
    $t2 := $t8;

    // trace_local[$t5]($t8) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:715:54+44
    assume {:print "$track_local(48,43,2):", $t8} $t8 == $t8;

    // label L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:715:9+240
L5:

    // if ($t2) goto L3 else goto L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:715:9+240
    assume {:print "$at(169,30917,31157)"} true;
    if ($t2) { goto L3; } else { goto L2; }

    // label L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:716:30+51
    assume {:print "$at(169,31040,31091)"} true;
L3:

    // $t9 := get_global<0x1::fungible_asset::DispatchFunctionStore>($t4) on_abort goto L7 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:716:30+51
    assume {:print "$at(169,31040,31091)"} true;
    if (!$ResourceExists($1_fungible_asset_DispatchFunctionStore_$memory, $t4)) {
        call $ExecFailureAbort();
    } else {
        $t9 := $ResourceValue($1_fungible_asset_DispatchFunctionStore_$memory, $t4);
    }
    if ($abort_flag) {
        assume {:print "$at(169,31040,31091)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(48,43):", $t5} $t5 == $t5;
        goto L7;
    }

    // $t10 := get_field<0x1::fungible_asset::DispatchFunctionStore>.deposit_function($t9) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:716:29+69
    $t10 := $t9->$deposit_function;

    // $t11 := opaque begin: option::is_some<0x1::function_info::FunctionInfo>($t10) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:716:13+86

    // assume WellFormed($t11) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:716:13+86
    assume $IsValid'bool'($t11);

    // assume Eq<bool>($t11, option::spec_is_some<0x1::function_info::FunctionInfo>($t10)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:716:13+86
    assume $IsEqual'bool'($t11, $1_option_spec_is_some'$1_function_info_FunctionInfo'($t10));

    // $t11 := opaque end: option::is_some<0x1::function_info::FunctionInfo>($t10) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:716:13+86

    // $t3 := $t11 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:716:13+86
    $t3 := $t11;

    // trace_local[return]($t11) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:716:13+86
    assume {:print "$track_local(48,43,3):", $t11} $t11 == $t11;

    // label L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:715:9+240
    assume {:print "$at(169,30917,31157)"} true;
L4:

    // trace_return[0]($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:715:9+240
    assume {:print "$at(169,30917,31157)"} true;
    assume {:print "$track_return(48,43,0):", $t3} $t3 == $t3;

    // goto L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:715:9+240
    goto L6;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:718:13+5
    assume {:print "$at(169,31141,31146)"} true;
L2:

    // $t12 := false at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:718:13+5
    assume {:print "$at(169,31141,31146)"} true;
    $t12 := false;
    assume $IsValid'bool'($t12);

    // $t3 := $t12 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:718:13+5
    $t3 := $t12;

    // trace_local[return]($t12) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:718:13+5
    assume {:print "$track_local(48,43,3):", $t12} $t12 == $t12;

    // goto L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:718:13+5
    goto L4;

    // label L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:715:12+86
    assume {:print "$at(169,30920,31006)"} true;
L0:

    // $t13 := false at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:715:12+86
    assume {:print "$at(169,30920,31006)"} true;
    $t13 := false;
    assume $IsValid'bool'($t13);

    // $t2 := $t13 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:715:12+86
    $t2 := $t13;

    // trace_local[$t5]($t13) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:715:12+86
    assume {:print "$track_local(48,43,2):", $t13} $t13 == $t13;

    // goto L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:715:12+86
    goto L5;

    // label L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:720:5+1
    assume {:print "$at(169,31163,31164)"} true;
L6:

    // return $t3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:720:5+1
    assume {:print "$at(169,31163,31164)"} true;
    $ret0 := $t3;
    return;

    // label L7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:720:5+1
L7:

    // abort($t5) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:720:5+1
    assume {:print "$at(169,31163,31164)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun fungible_asset::has_withdraw_dispatch_function [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:732:5+473
procedure {:inline 1} $1_fungible_asset_has_withdraw_dispatch_function(_$t0: $1_object_Object'$1_fungible_asset_Metadata') returns ($ret0: bool)
{
    // declare local variables
    var $t1: int;
    var $t2: bool;
    var $t3: bool;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: bool;
    var $t8: bool;
    var $t9: $1_fungible_asset_DispatchFunctionStore;
    var $t10: $1_option_Option'$1_function_info_FunctionInfo';
    var $t11: bool;
    var $t12: bool;
    var $t13: bool;
    var $t0: $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[metadata]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:732:5+1
    assume {:print "$at(169,31648,31649)"} true;
    assume {:print "$track_local(48,45,0):", $t0} $t0 == $t0;

    // $t4 := object::object_address<0x1::fungible_asset::Metadata>($t0) on_abort goto L7 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:733:29+33
    assume {:print "$at(169,31779,31812)"} true;
    call $t4 := $1_object_object_address'$1_fungible_asset_Metadata'($t0);
    if ($abort_flag) {
        assume {:print "$at(169,31779,31812)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(48,45):", $t5} $t5 == $t5;
        goto L7;
    }

    // trace_local[metadata_addr]($t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:733:29+33
    assume {:print "$track_local(48,45,1):", $t4} $t4 == $t4;

    // $t6 := 0xa at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:735:30+21
    assume {:print "$at(169,31893,31914)"} true;
    $t6 := 10;
    assume $IsValid'address'($t6);

    // $t7 := !=($t4, $t6) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:735:13+38
    $t7 := !$IsEqual'address'($t4, $t6);

    // if ($t7) goto L1 else goto L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:735:13+86
    if ($t7) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:735:55+44
L1:

    // $t8 := exists<0x1::fungible_asset::DispatchFunctionStore>($t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:735:55+44
    assume {:print "$at(169,31918,31962)"} true;
    $t8 := $ResourceExists($1_fungible_asset_DispatchFunctionStore_$memory, $t4);

    // $t2 := $t8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:735:55+44
    $t2 := $t8;

    // trace_local[$t5]($t8) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:735:55+44
    assume {:print "$track_local(48,45,2):", $t8} $t8 == $t8;

    // label L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:735:9+242
L5:

    // if ($t2) goto L3 else goto L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:735:9+242
    assume {:print "$at(169,31872,32114)"} true;
    if ($t2) { goto L3; } else { goto L2; }

    // label L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:736:30+51
    assume {:print "$at(169,31996,32047)"} true;
L3:

    // $t9 := get_global<0x1::fungible_asset::DispatchFunctionStore>($t4) on_abort goto L7 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:736:30+51
    assume {:print "$at(169,31996,32047)"} true;
    if (!$ResourceExists($1_fungible_asset_DispatchFunctionStore_$memory, $t4)) {
        call $ExecFailureAbort();
    } else {
        $t9 := $ResourceValue($1_fungible_asset_DispatchFunctionStore_$memory, $t4);
    }
    if ($abort_flag) {
        assume {:print "$at(169,31996,32047)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(48,45):", $t5} $t5 == $t5;
        goto L7;
    }

    // $t10 := get_field<0x1::fungible_asset::DispatchFunctionStore>.withdraw_function($t9) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:736:29+70
    $t10 := $t9->$withdraw_function;

    // $t11 := opaque begin: option::is_some<0x1::function_info::FunctionInfo>($t10) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:736:13+87

    // assume WellFormed($t11) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:736:13+87
    assume $IsValid'bool'($t11);

    // assume Eq<bool>($t11, option::spec_is_some<0x1::function_info::FunctionInfo>($t10)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:736:13+87
    assume $IsEqual'bool'($t11, $1_option_spec_is_some'$1_function_info_FunctionInfo'($t10));

    // $t11 := opaque end: option::is_some<0x1::function_info::FunctionInfo>($t10) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:736:13+87

    // $t3 := $t11 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:736:13+87
    $t3 := $t11;

    // trace_local[return]($t11) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:736:13+87
    assume {:print "$track_local(48,45,3):", $t11} $t11 == $t11;

    // label L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:735:9+242
    assume {:print "$at(169,31872,32114)"} true;
L4:

    // trace_return[0]($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:735:9+242
    assume {:print "$at(169,31872,32114)"} true;
    assume {:print "$track_return(48,45,0):", $t3} $t3 == $t3;

    // goto L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:735:9+242
    goto L6;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:738:13+5
    assume {:print "$at(169,32098,32103)"} true;
L2:

    // $t12 := false at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:738:13+5
    assume {:print "$at(169,32098,32103)"} true;
    $t12 := false;
    assume $IsValid'bool'($t12);

    // $t3 := $t12 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:738:13+5
    $t3 := $t12;

    // trace_local[return]($t12) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:738:13+5
    assume {:print "$track_local(48,45,3):", $t12} $t12 == $t12;

    // goto L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:738:13+5
    goto L4;

    // label L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:735:13+86
    assume {:print "$at(169,31876,31962)"} true;
L0:

    // $t13 := false at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:735:13+86
    assume {:print "$at(169,31876,31962)"} true;
    $t13 := false;
    assume $IsValid'bool'($t13);

    // $t2 := $t13 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:735:13+86
    $t2 := $t13;

    // trace_local[$t5]($t13) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:735:13+86
    assume {:print "$track_local(48,45,2):", $t13} $t13 == $t13;

    // goto L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:735:13+86
    goto L5;

    // label L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:740:5+1
    assume {:print "$at(169,32120,32121)"} true;
L6:

    // return $t3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:740:5+1
    assume {:print "$at(169,32120,32121)"} true;
    $ret0 := $t3;
    return;

    // label L7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:740:5+1
L7:

    // abort($t5) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:740:5+1
    assume {:print "$at(169,32120,32121)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun fungible_asset::increase_supply<0x1::fungible_asset::Metadata> [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1257:5+1112
procedure {:inline 1} $1_fungible_asset_increase_supply'$1_fungible_asset_Metadata'(_$t0: $1_object_Object'$1_fungible_asset_Metadata', _$t1: int) returns ()
{
    // declare local variables
    var $t2: int;
    var $t3: $Mutation ($1_fungible_asset_Supply);
    var $t4: int;
    var $t5: bool;
    var $t6: int;
    var $t7: int;
    var $t8: bool;
    var $t9: $Mutation ($1_fungible_asset_ConcurrentSupply);
    var $t10: $Mutation ($1_aggregator_v2_Aggregator'u128');
    var $t11: int;
    var $t12: bool;
    var $t13: int;
    var $t14: int;
    var $t15: bool;
    var $t16: $Mutation ($1_fungible_asset_Supply);
    var $t17: $1_option_Option'u128';
    var $t18: bool;
    var $t19: $Mutation ($1_option_Option'u128');
    var $t20: $Mutation (int);
    var $t21: int;
    var $t22: int;
    var $t23: int;
    var $t24: int;
    var $t25: bool;
    var $t26: int;
    var $t27: int;
    var $t28: int;
    var $t29: $Mutation (int);
    var $t30: int;
    var $t31: int;
    var $t32: int;
    var $t33: int;
    var $t0: $1_object_Object'$1_fungible_asset_Metadata';
    var $t1: int;
    var $temp_0'$1_fungible_asset_Supply': $1_fungible_asset_Supply;
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[metadata]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1257:5+1
    assume {:print "$at(169,53590,53591)"} true;
    assume {:print "$track_local(48,46,0):", $t0} $t0 == $t0;

    // trace_local[amount]($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1257:5+1
    assume {:print "$track_local(48,46,1):", $t1} $t1 == $t1;

    // $t4 := 0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1258:23+1
    assume {:print "$at(169,53712,53713)"} true;
    $t4 := 0;
    assume $IsValid'u64'($t4);

    // $t5 := ==($t1, $t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1258:13+11
    $t5 := $IsEqual'u64'($t1, $t4);

    // if ($t5) goto L1 else goto L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1258:9+49
    if ($t5) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1259:13+6
    assume {:print "$at(169,53730,53736)"} true;
L1:

    // goto L14 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1259:13+6
    assume {:print "$at(169,53730,53736)"} true;
    goto L14;

    // label L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1261:32+32
    assume {:print "$at(169,53781,53813)"} true;
L0:

    // $t6 := object::object_address<#0>($t0) on_abort goto L15 with $t7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1261:32+32
    assume {:print "$at(169,53781,53813)"} true;
    call $t6 := $1_object_object_address'$1_fungible_asset_Metadata'($t0);
    if ($abort_flag) {
        assume {:print "$at(169,53781,53813)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(48,46):", $t7} $t7 == $t7;
        goto L15;
    }

    // trace_local[metadata_address]($t6) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1261:32+32
    assume {:print "$track_local(48,46,2):", $t6} $t6 == $t6;

    // $t8 := exists<0x1::fungible_asset::ConcurrentSupply>($t6) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1263:13+42
    assume {:print "$at(169,53830,53872)"} true;
    $t8 := $ResourceExists($1_fungible_asset_ConcurrentSupply_$memory, $t6);

    // if ($t8) goto L3 else goto L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1263:9+869
    if ($t8) { goto L3; } else { goto L2; }

    // label L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1264:26+53
    assume {:print "$at(169,53902,53955)"} true;
L3:

    // $t9 := borrow_global<0x1::fungible_asset::ConcurrentSupply>($t6) on_abort goto L15 with $t7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1264:26+53
    assume {:print "$at(169,53902,53955)"} true;
    if (!$ResourceExists($1_fungible_asset_ConcurrentSupply_$memory, $t6)) {
        call $ExecFailureAbort();
    } else {
        $t9 := $Mutation($Global($t6), EmptyVec(), $ResourceValue($1_fungible_asset_ConcurrentSupply_$memory, $t6));
    }
    if ($abort_flag) {
        assume {:print "$at(169,53902,53955)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(48,46):", $t7} $t7 == $t7;
        goto L15;
    }

    // $t10 := borrow_field<0x1::fungible_asset::ConcurrentSupply>.current($t9) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1266:17+38
    assume {:print "$at(169,53996,54034)"} true;
    $t10 := $ChildMutation($t9, 0, $Dereference($t9)->$current);

    // $t11 := (u128)($t1) on_abort goto L15 with $t7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1266:40+14
    call $t11 := $CastU128($t1);
    if ($abort_flag) {
        assume {:print "$at(169,54019,54033)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(48,46):", $t7} $t7 == $t7;
        goto L15;
    }

    // $t12 := aggregator_v2::try_add<u128>($t10, $t11) on_abort goto L15 with $t7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1266:17+38
    call $t12,$t10 := $1_aggregator_v2_try_add'u128'($t10, $t11);
    if ($abort_flag) {
        assume {:print "$at(169,53996,54034)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(48,46):", $t7} $t7 == $t7;
        goto L15;
    }

    // write_back[Reference($t9).current (0x1::aggregator_v2::Aggregator<u128>)]($t10) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1266:17+38
    $t9 := $UpdateMutation($t9, $Update'$1_fungible_asset_ConcurrentSupply'_current($Dereference($t9), $Dereference($t10)));

    // write_back[0x1::fungible_asset::ConcurrentSupply@]($t9) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1266:17+38
    $1_fungible_asset_ConcurrentSupply_$memory := $ResourceUpdate($1_fungible_asset_ConcurrentSupply_$memory, $GlobalLocationAddress($t9),
        $Dereference($t9));

    // if ($t12) goto L5 else goto L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1265:13+6
    assume {:print "$at(169,53970,53976)"} true;
    if ($t12) { goto L5; } else { goto L4; }

    // label L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1265:13+6
L5:

    // label L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1257:102+1015
    assume {:print "$at(169,53687,54702)"} true;
L6:

    // goto L14 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1257:102+1015
    assume {:print "$at(169,53687,54702)"} true;
    goto L14;

    // label L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1267:37+20
    assume {:print "$at(169,54073,54093)"} true;
L4:

    // $t13 := 5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1267:37+20
    assume {:print "$at(169,54073,54093)"} true;
    $t13 := 5;
    assume $IsValid'u64'($t13);

    // $t14 := error::out_of_range($t13) on_abort goto L15 with $t7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1267:17+41
    call $t14 := $1_error_out_of_range($t13);
    if ($abort_flag) {
        assume {:print "$at(169,54053,54094)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(48,46):", $t7} $t7 == $t7;
        goto L15;
    }

    // trace_abort($t14) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1265:13+6
    assume {:print "$at(169,53970,53976)"} true;
    assume {:print "$track_abort(48,46):", $t14} $t14 == $t14;

    // $t7 := move($t14) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1265:13+6
    $t7 := $t14;

    // goto L15 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1265:13+6
    goto L15;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1269:20+32
    assume {:print "$at(169,54131,54163)"} true;
L2:

    // $t15 := exists<0x1::fungible_asset::Supply>($t6) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1269:20+32
    assume {:print "$at(169,54131,54163)"} true;
    $t15 := $ResourceExists($1_fungible_asset_Supply_$memory, $t6);

    // if ($t15) goto L8 else goto L7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1269:16+568
    if ($t15) { goto L8; } else { goto L7; }

    // label L8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1270:26+43
    assume {:print "$at(169,54193,54236)"} true;
L8:

    // $t16 := borrow_global<0x1::fungible_asset::Supply>($t6) on_abort goto L15 with $t7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1270:26+43
    assume {:print "$at(169,54193,54236)"} true;
    if (!$ResourceExists($1_fungible_asset_Supply_$memory, $t6)) {
        call $ExecFailureAbort();
    } else {
        $t16 := $Mutation($Global($t6), EmptyVec(), $ResourceValue($1_fungible_asset_Supply_$memory, $t6));
    }
    if ($abort_flag) {
        assume {:print "$at(169,54193,54236)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(48,46):", $t7} $t7 == $t7;
        goto L15;
    }

    // trace_local[supply]($t16) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1270:26+43
    $temp_0'$1_fungible_asset_Supply' := $Dereference($t16);
    assume {:print "$track_local(48,46,3):", $temp_0'$1_fungible_asset_Supply'} $temp_0'$1_fungible_asset_Supply' == $temp_0'$1_fungible_asset_Supply';

    // $t17 := get_field<0x1::fungible_asset::Supply>.maximum($t16) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1271:33+15
    assume {:print "$at(169,54271,54286)"} true;
    $t17 := $Dereference($t16)->$maximum;

    // $t18 := opaque begin: option::is_some<u128>($t17) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1271:17+32

    // assume WellFormed($t18) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1271:17+32
    assume $IsValid'bool'($t18);

    // assume Eq<bool>($t18, option::spec_is_some<u128>($t17)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1271:17+32
    assume $IsEqual'bool'($t18, $1_option_spec_is_some'u128'($t17));

    // $t18 := opaque end: option::is_some<u128>($t17) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1271:17+32

    // if ($t18) goto L9 else goto L11 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1271:13+294
    if ($t18) { goto L9; } else { goto L11; }

    // label L9 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1272:47+19
    assume {:print "$at(169,54338,54357)"} true;
L9:

    // $t19 := borrow_field<0x1::fungible_asset::Supply>.maximum($t16) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1272:47+19
    assume {:print "$at(169,54338,54357)"} true;
    $t19 := $ChildMutation($t16, 1, $Dereference($t16)->$maximum);

    // $t20 := option::borrow_mut<u128>($t19) on_abort goto L15 with $t7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1272:28+39
    call $t20,$t19 := $1_option_borrow_mut'u128'($t19);
    if ($abort_flag) {
        assume {:print "$at(169,54319,54358)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(48,46):", $t7} $t7 == $t7;
        goto L15;
    }

    // $t21 := read_ref($t20) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1272:27+40
    $t21 := $Dereference($t20);

    // write_back[Reference($t16).maximum (0x1::option::Option<u128>)]($t19) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1272:27+40
    $t16 := $UpdateMutation($t16, $Update'$1_fungible_asset_Supply'_maximum($Dereference($t16), $Dereference($t19)));

    // $t22 := get_field<0x1::fungible_asset::Supply>.current($t16) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1274:27+14
    assume {:print "$at(169,54413,54427)"} true;
    $t22 := $Dereference($t16)->$current;

    // $t23 := -($t21, $t22) on_abort goto L15 with $t7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1274:21+20
    call $t23 := $Sub($t21, $t22);
    if ($abort_flag) {
        assume {:print "$at(169,54407,54427)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(48,46):", $t7} $t7 == $t7;
        goto L15;
    }

    // $t24 := (u128)($t1) on_abort goto L15 with $t7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1274:45+16
    call $t24 := $CastU128($t1);
    if ($abort_flag) {
        assume {:print "$at(169,54431,54447)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(48,46):", $t7} $t7 == $t7;
        goto L15;
    }

    // $t25 := >=($t23, $t24) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1274:21+40
    call $t25 := $Ge($t23, $t24);

    // if ($t25) goto L13 else goto L12 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1273:17+6
    assume {:print "$at(169,54377,54383)"} true;
    if ($t25) { goto L13; } else { goto L12; }

    // label L13 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1273:17+6
L13:

    // label L11 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1278:30+14
    assume {:print "$at(169,54577,54591)"} true;
L11:

    // $t26 := get_field<0x1::fungible_asset::Supply>.current($t16) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1278:30+14
    assume {:print "$at(169,54577,54591)"} true;
    $t26 := $Dereference($t16)->$current;

    // $t27 := (u128)($t1) on_abort goto L15 with $t7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1278:47+16
    call $t27 := $CastU128($t1);
    if ($abort_flag) {
        assume {:print "$at(169,54594,54610)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(48,46):", $t7} $t7 == $t7;
        goto L15;
    }

    // $t28 := +($t26, $t27) on_abort goto L15 with $t7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1278:30+33
    call $t28 := $AddU128($t26, $t27);
    if ($abort_flag) {
        assume {:print "$at(169,54577,54610)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(48,46):", $t7} $t7 == $t7;
        goto L15;
    }

    // $t29 := borrow_field<0x1::fungible_asset::Supply>.current($t16) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1278:13+14
    $t29 := $ChildMutation($t16, 0, $Dereference($t16)->$current);

    // write_ref($t29, $t28) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1278:13+50
    $t29 := $UpdateMutation($t29, $t28);

    // write_back[Reference($t16).current (u128)]($t29) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1278:13+50
    $t16 := $UpdateMutation($t16, $Update'$1_fungible_asset_Supply'_current($Dereference($t16), $Dereference($t29)));

    // pack_ref_deep($t16) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1278:13+50

    // write_back[0x1::fungible_asset::Supply@]($t16) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1278:13+50
    $1_fungible_asset_Supply_$memory := $ResourceUpdate($1_fungible_asset_Supply_$memory, $GlobalLocationAddress($t16),
        $Dereference($t16));

    // goto L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1278:13+50
    goto L6;

    // label L12 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1273:17+6
    assume {:print "$at(169,54377,54383)"} true;
L12:

    // pack_ref_deep($t16) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1273:17+6
    assume {:print "$at(169,54377,54383)"} true;

    // write_back[0x1::fungible_asset::Supply@]($t16) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1273:17+6
    $1_fungible_asset_Supply_$memory := $ResourceUpdate($1_fungible_asset_Supply_$memory, $GlobalLocationAddress($t16),
        $Dereference($t16));

    // drop($t16) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1273:17+6

    // $t30 := 5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1275:41+20
    assume {:print "$at(169,54490,54510)"} true;
    $t30 := 5;
    assume $IsValid'u64'($t30);

    // $t31 := error::out_of_range($t30) on_abort goto L15 with $t7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1275:21+41
    call $t31 := $1_error_out_of_range($t30);
    if ($abort_flag) {
        assume {:print "$at(169,54470,54511)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(48,46):", $t7} $t7 == $t7;
        goto L15;
    }

    // trace_abort($t31) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1273:17+6
    assume {:print "$at(169,54377,54383)"} true;
    assume {:print "$track_abort(48,46):", $t31} $t31 == $t31;

    // $t7 := move($t31) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1273:17+6
    $t7 := $t31;

    // goto L15 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1273:17+6
    goto L15;

    // label L7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1280:36+17
    assume {:print "$at(169,54666,54683)"} true;
L7:

    // $t32 := 21 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1280:36+17
    assume {:print "$at(169,54666,54683)"} true;
    $t32 := 21;
    assume $IsValid'u64'($t32);

    // $t33 := error::not_found($t32) on_abort goto L15 with $t7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1280:19+35
    call $t33 := $1_error_not_found($t32);
    if ($abort_flag) {
        assume {:print "$at(169,54649,54684)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(48,46):", $t7} $t7 == $t7;
        goto L15;
    }

    // trace_abort($t33) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1280:13+41
    assume {:print "$at(169,54643,54684)"} true;
    assume {:print "$track_abort(48,46):", $t33} $t33 == $t33;

    // $t7 := move($t33) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1280:13+41
    $t7 := $t33;

    // goto L15 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1280:13+41
    goto L15;

    // label L14 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1282:5+1
    assume {:print "$at(169,54701,54702)"} true;
L14:

    // return () at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1282:5+1
    assume {:print "$at(169,54701,54702)"} true;
    return;

    // label L15 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1282:5+1
L15:

    // abort($t7) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1282:5+1
    assume {:print "$at(169,54701,54702)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// fun fungible_asset::metadata_from_asset [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:619:5+98
procedure {:inline 1} $1_fungible_asset_metadata_from_asset(_$t0: $1_fungible_asset_FungibleAsset) returns ($ret0: $1_object_Object'$1_fungible_asset_Metadata')
{
    // declare local variables
    var $t1: $1_object_Object'$1_fungible_asset_Metadata';
    var $t0: $1_fungible_asset_FungibleAsset;
    var $temp_0'$1_fungible_asset_FungibleAsset': $1_fungible_asset_FungibleAsset;
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[fa]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:619:5+1
    assume {:print "$at(169,26631,26632)"} true;
    assume {:print "$track_local(48,52,0):", $t0} $t0 == $t0;

    // $t1 := get_field<0x1::fungible_asset::FungibleAsset>.metadata($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:620:9+11
    assume {:print "$at(169,26711,26722)"} true;
    $t1 := $t0->$metadata;

    // trace_return[0]($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:620:9+11
    assume {:print "$track_return(48,52,0):", $t1} $t1 == $t1;

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:621:5+1
    assume {:print "$at(169,26728,26729)"} true;
L1:

    // return $t1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:621:5+1
    assume {:print "$at(169,26728,26729)"} true;
    $ret0 := $t1;
    return;

}

// fun fungible_asset::mint_internal [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:968:5+280
procedure {:inline 1} $1_fungible_asset_mint_internal(_$t0: $1_object_Object'$1_fungible_asset_Metadata', _$t1: int) returns ($ret0: $1_fungible_asset_FungibleAsset)
{
    // declare local variables
    var $t2: int;
    var $t3: $1_fungible_asset_FungibleAsset;
    var $t0: $1_object_Object'$1_fungible_asset_Metadata';
    var $t1: int;
    var $temp_0'$1_fungible_asset_FungibleAsset': $1_fungible_asset_FungibleAsset;
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[metadata]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:968:5+1
    assume {:print "$at(169,41729,41730)"} true;
    assume {:print "$track_local(48,54,0):", $t0} $t0 == $t0;

    // trace_local[amount]($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:968:5+1
    assume {:print "$track_local(48,54,1):", $t1} $t1 == $t1;

    // fungible_asset::increase_supply<0x1::fungible_asset::Metadata>($t0, $t1) on_abort goto L2 with $t2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:972:9+34
    assume {:print "$at(169,41888,41922)"} true;
    call $1_fungible_asset_increase_supply'$1_fungible_asset_Metadata'($t0, $t1);
    if ($abort_flag) {
        assume {:print "$at(169,41888,41922)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(48,54):", $t2} $t2 == $t2;
        goto L2;
    }

    // $t3 := pack 0x1::fungible_asset::FungibleAsset($t0, $t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:973:9+69
    assume {:print "$at(169,41933,42002)"} true;
    $t3 := $1_fungible_asset_FungibleAsset($t0, $t1);

    // trace_return[0]($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:971:56+132
    assume {:print "$at(169,41877,42009)"} true;
    assume {:print "$track_return(48,54,0):", $t3} $t3 == $t3;

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:977:5+1
    assume {:print "$at(169,42008,42009)"} true;
L1:

    // return $t3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:977:5+1
    assume {:print "$at(169,42008,42009)"} true;
    $ret0 := $t3;
    return;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:977:5+1
L2:

    // abort($t2) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:977:5+1
    assume {:print "$at(169,42008,42009)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun fungible_asset::store_exists [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:603:5+90
procedure {:inline 1} $1_fungible_asset_store_exists(_$t0: int) returns ($ret0: bool)
{
    // declare local variables
    var $t1: bool;
    var $t0: int;
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[store]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:603:5+1
    assume {:print "$at(169,26036,26037)"} true;
    assume {:print "$track_local(48,65,0):", $t0} $t0 == $t0;

    // $t1 := exists<0x1::fungible_asset::FungibleStore>($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:609:9+28
    assume {:print "$at(169,26268,26296)"} true;
    $t1 := $ResourceExists($1_fungible_asset_FungibleStore_$memory, $t0);

    // trace_return[0]($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:609:9+28
    assume {:print "$track_return(48,65,0):", $t1} $t1 == $t1;

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:605:5+1
    assume {:print "$at(169,26125,26126)"} true;
L1:

    // return $t1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:605:5+1
    assume {:print "$at(169,26125,26126)"} true;
    $ret0 := $t1;
    return;

}

// fun fungible_asset::store_metadata<0x1::fungible_asset::FungibleStore> [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:625:5+149
procedure {:inline 1} $1_fungible_asset_store_metadata'$1_fungible_asset_FungibleStore'(_$t0: $1_object_Object'$1_fungible_asset_FungibleStore') returns ($ret0: $1_object_Object'$1_fungible_asset_Metadata')
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t4: bool;
    var $t5: $1_fungible_asset_FungibleStore;
    var $t6: $1_object_Object'$1_fungible_asset_Metadata';
    var $t7: int;
    var $t8: int;
    var $t0: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[store]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:625:5+1
    assume {:print "$at(169,26798,26799)"} true;
    assume {:print "$track_local(48,66,0):", $t0} $t0 == $t0;

    // $t2 := object::object_address<#0>($t0) on_abort goto L3 with $t3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1326:26+29
    assume {:print "$at(169,56412,56441)"} true;
    call $t2 := $1_object_object_address'$1_fungible_asset_FungibleStore'($t0);
    if ($abort_flag) {
        assume {:print "$at(169,56412,56441)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(48,66):", $t3} $t3 == $t3;
        goto L3;
    }

    // trace_local[store_addr]($t2) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1326:26+29
    assume {:print "$track_local(48,66,1):", $t2} $t2 == $t2;

    // $t4 := exists<0x1::fungible_asset::FungibleStore>($t2) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1327:17+33
    assume {:print "$at(169,56460,56493)"} true;
    $t4 := $ResourceExists($1_fungible_asset_FungibleStore_$memory, $t2);

    // if ($t4) goto L1 else goto L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1327:9+6
    if ($t4) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1328:9+40
    assume {:print "$at(169,56550,56590)"} true;
L1:

    // $t5 := get_global<0x1::fungible_asset::FungibleStore>($t2) on_abort goto L3 with $t3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1328:9+40
    assume {:print "$at(169,56550,56590)"} true;
    if (!$ResourceExists($1_fungible_asset_FungibleStore_$memory, $t2)) {
        call $ExecFailureAbort();
    } else {
        $t5 := $ResourceValue($1_fungible_asset_FungibleStore_$memory, $t2);
    }
    if ($abort_flag) {
        assume {:print "$at(169,56550,56590)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(48,66):", $t3} $t3 == $t3;
        goto L3;
    }

    // $t6 := get_field<0x1::fungible_asset::FungibleStore>.metadata($t5) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:626:9+38
    assume {:print "$at(169,26902,26940)"} true;
    $t6 := $t5->$metadata;

    // trace_return[0]($t6) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:626:9+38
    assume {:print "$track_return(48,66,0):", $t6} $t6 == $t6;

    // goto L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:626:9+38
    goto L2;

    // label L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1327:69+25
    assume {:print "$at(169,56512,56537)"} true;
L0:

    // $t7 := 23 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1327:69+25
    assume {:print "$at(169,56512,56537)"} true;
    $t7 := 23;
    assume $IsValid'u64'($t7);

    // $t8 := error::not_found($t7) on_abort goto L3 with $t3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1327:52+43
    call $t8 := $1_error_not_found($t7);
    if ($abort_flag) {
        assume {:print "$at(169,56495,56538)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(48,66):", $t3} $t3 == $t3;
        goto L3;
    }

    // trace_abort($t8) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1327:9+6
    assume {:print "$at(169,56452,56458)"} true;
    assume {:print "$track_abort(48,66):", $t8} $t8 == $t8;

    // $t3 := move($t8) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1327:9+6
    $t3 := $t8;

    // goto L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1327:9+6
    goto L3;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:627:5+1
    assume {:print "$at(169,26946,26947)"} true;
L2:

    // return $t6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:627:5+1
    assume {:print "$at(169,26946,26947)"} true;
    $ret0 := $t6;
    return;

    // label L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:627:5+1
L3:

    // abort($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:627:5+1
    assume {:print "$at(169,26946,26947)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun fungible_asset::unchecked_deposit [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1203:5+343
procedure {:inline 1} $1_fungible_asset_unchecked_deposit(_$t0: int, _$t1: $1_fungible_asset_FungibleAsset) returns ()
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: $1_object_Object'$1_fungible_asset_Metadata';
    var $t5: $Mutation ($1_fungible_asset_FungibleStore);
    var $t6: bool;
    var $t7: int;
    var $t8: $1_object_Object'$1_fungible_asset_Metadata';
    var $t9: int;
    var $t10: bool;
    var $t11: $Mutation ($1_fungible_asset_FungibleStore);
    var $t12: int;
    var $t13: $1_object_Object'$1_fungible_asset_Metadata';
    var $t14: bool;
    var $t15: int;
    var $t16: bool;
    var $t17: int;
    var $t18: int;
    var $t19: bool;
    var $t20: bool;
    var $t21: $Mutation ($1_fungible_asset_ConcurrentFungibleBalance);
    var $t22: $Mutation ($1_aggregator_v2_Aggregator'u64');
    var $t23: int;
    var $t24: bool;
    var $t25: $1_fungible_asset_Deposit;
    var $t26: int;
    var $t27: int;
    var $t28: $Mutation (int);
    var $t29: bool;
    var $t30: int;
    var $t31: int;
    var $t32: int;
    var $t33: int;
    var $t0: int;
    var $t1: $1_fungible_asset_FungibleAsset;
    var $temp_0'$1_fungible_asset_FungibleAsset': $1_fungible_asset_FungibleAsset;
    var $temp_0'$1_fungible_asset_FungibleStore': $1_fungible_asset_FungibleStore;
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[store_addr]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1203:5+1
    assume {:print "$at(169,51350,51351)"} true;
    assume {:print "$track_local(48,71,0):", $t0} $t0 == $t0;

    // trace_local[fa]($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1203:5+1
    assume {:print "$track_local(48,71,1):", $t1} $t1 == $t1;

    // trace_local[store_addr]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1183:16+39
    assume {:print "$at(169,50446,50485)"} true;
    assume {:print "$track_local(48,71,2):", $t0} $t0 == $t0;

    // ($t8, $t9) := unpack 0x1::fungible_asset::FungibleAsset($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1187:13+34
    assume {:print "$at(169,50621,50655)"} true;
    $t8 := $t1->$metadata;
    $t9 := $t1->$amount;

    // trace_local[amount]($t9) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1187:13+34
    assume {:print "$track_local(48,71,3):", $t9} $t9 == $t9;

    // trace_local[metadata]($t8) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1187:13+34
    assume {:print "$track_local(48,71,4):", $t8} $t8 == $t8;

    // $t10 := exists<0x1::fungible_asset::FungibleStore>($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1188:17+33
    assume {:print "$at(169,50679,50712)"} true;
    $t10 := $ResourceExists($1_fungible_asset_FungibleStore_$memory, $t0);

    // if ($t10) goto L1 else goto L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1188:9+6
    if ($t10) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1189:21+44
    assume {:print "$at(169,50781,50825)"} true;
L1:

    // $t11 := borrow_global<0x1::fungible_asset::FungibleStore>($t0) on_abort goto L16 with $t12 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1189:21+44
    assume {:print "$at(169,50781,50825)"} true;
    if (!$ResourceExists($1_fungible_asset_FungibleStore_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t11 := $Mutation($Global($t0), EmptyVec(), $ResourceValue($1_fungible_asset_FungibleStore_$memory, $t0));
    }
    if ($abort_flag) {
        assume {:print "$at(169,50781,50825)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(48,71):", $t12} $t12 == $t12;
        goto L16;
    }

    // trace_local[store]($t11) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1189:21+44
    $temp_0'$1_fungible_asset_FungibleStore' := $Dereference($t11);
    assume {:print "$track_local(48,71,5):", $temp_0'$1_fungible_asset_FungibleStore'} $temp_0'$1_fungible_asset_FungibleStore' == $temp_0'$1_fungible_asset_FungibleStore';

    // $t13 := get_field<0x1::fungible_asset::FungibleStore>.metadata($t11) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1190:29+14
    assume {:print "$at(169,50856,50870)"} true;
    $t13 := $Dereference($t11)->$metadata;

    // $t14 := ==($t8, $t13) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1190:17+26
    $t14 := $IsEqual'$1_object_Object'$1_fungible_asset_Metadata''($t8, $t13);

    // if ($t14) goto L3 else goto L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1190:9+6
    if ($t14) { goto L3; } else { goto L2; }

    // label L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1192:13+6
    assume {:print "$at(169,50949,50955)"} true;
L3:

    // $t15 := 0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1192:23+1
    assume {:print "$at(169,50959,50960)"} true;
    $t15 := 0;
    assume $IsValid'u64'($t15);

    // $t16 := !=($t9, $t15) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1192:13+11
    $t16 := !$IsEqual'u64'($t9, $t15);

    // if ($t16) goto L5 else goto L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1192:9+373
    if ($t16) { goto L5; } else { goto L4; }

    // label L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1193:17+13
    assume {:print "$at(169,50981,50994)"} true;
L5:

    // $t17 := get_field<0x1::fungible_asset::FungibleStore>.balance($t11) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1193:17+13
    assume {:print "$at(169,50981,50994)"} true;
    $t17 := $Dereference($t11)->$balance;

    // $t18 := 0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1193:34+1
    $t18 := 0;
    assume $IsValid'u64'($t18);

    // $t19 := ==($t17, $t18) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1193:17+18
    $t19 := $IsEqual'u64'($t17, $t18);

    // if ($t19) goto L7 else goto L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1193:17+75
    if ($t19) { goto L7; } else { goto L6; }

    // label L7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:614:16+41
    assume {:print "$at(169,26454,26495)"} true;
L7:

    // $t20 := exists<0x1::fungible_asset::ConcurrentFungibleBalance>($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:615:9+40
    assume {:print "$at(169,26529,26569)"} true;
    $t20 := $ResourceExists($1_fungible_asset_ConcurrentFungibleBalance_$memory, $t0);

    // $t6 := $t20 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:615:9+40
    $t6 := $t20;

    // trace_local[$t7]($t20) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:615:9+40
    assume {:print "$track_local(48,71,6):", $t20} $t20 == $t20;

    // label L14 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1193:13+329
    assume {:print "$at(169,50977,51306)"} true;
L14:

    // if ($t6) goto L9 else goto L8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1193:13+329
    assume {:print "$at(169,50977,51306)"} true;
    if ($t6) { goto L9; } else { goto L8; }

    // label L9 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1193:94+169
L9:

    // drop($t11) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1193:94+169
    assume {:print "$at(169,51058,51227)"} true;

    // $t21 := borrow_global<0x1::fungible_asset::ConcurrentFungibleBalance>($t0) on_abort goto L16 with $t12 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1194:40+56
    assume {:print "$at(169,51100,51156)"} true;
    if (!$ResourceExists($1_fungible_asset_ConcurrentFungibleBalance_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t21 := $Mutation($Global($t0), EmptyVec(), $ResourceValue($1_fungible_asset_ConcurrentFungibleBalance_$memory, $t0));
    }
    if ($abort_flag) {
        assume {:print "$at(169,51100,51156)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(48,71):", $t12} $t12 == $t12;
        goto L16;
    }

    // $t22 := borrow_field<0x1::fungible_asset::ConcurrentFungibleBalance>.balance($t21) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1195:17+36
    assume {:print "$at(169,51175,51211)"} true;
    $t22 := $ChildMutation($t21, 0, $Dereference($t21)->$balance);

    // aggregator_v2::add<u64>($t22, $t9) on_abort goto L16 with $t12 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1195:17+36
    call $t22 := $1_aggregator_v2_add'u64'($t22, $t9);
    if ($abort_flag) {
        assume {:print "$at(169,51175,51211)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(48,71):", $t12} $t12 == $t12;
        goto L16;
    }

    // write_back[Reference($t21).balance (0x1::aggregator_v2::Aggregator<u64>)]($t22) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1195:17+36
    $t21 := $UpdateMutation($t21, $Update'$1_fungible_asset_ConcurrentFungibleBalance'_balance($Dereference($t21), $Dereference($t22)));

    // write_back[0x1::fungible_asset::ConcurrentFungibleBalance@]($t21) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1195:17+36
    $1_fungible_asset_ConcurrentFungibleBalance_$memory := $ResourceUpdate($1_fungible_asset_ConcurrentFungibleBalance_$memory, $GlobalLocationAddress($t21),
        $Dereference($t21));

    // label L13 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1200:9+6
    assume {:print "$at(169,51329,51335)"} true;
L13:

    // trace_local[$t18]($t9) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1200:9+6
    assume {:print "$at(169,51329,51335)"} true;
    assume {:print "$track_local(48,71,7):", $t9} $t9 == $t9;

    // $t23 := 0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1208:23+1
    assume {:print "$at(169,51606,51607)"} true;
    $t23 := 0;
    assume $IsValid'u64'($t23);

    // $t24 := !=($t9, $t23) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1208:13+11
    $t24 := !$IsEqual'u64'($t9, $t23);

    // if ($t24) goto L10 else goto L12 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1208:9+94
    if ($t24) { goto L10; } else { goto L12; }

    // label L10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1209:42+10
    assume {:print "$at(169,51653,51663)"} true;
L10:

    // $t25 := pack 0x1::fungible_asset::Deposit($t0, $t9) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1209:25+37
    assume {:print "$at(169,51636,51673)"} true;
    $t25 := $1_fungible_asset_Deposit($t0, $t9);

    // opaque begin: event::emit<0x1::fungible_asset::Deposit>($t25) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1209:13+50

    // opaque end: event::emit<0x1::fungible_asset::Deposit>($t25) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1209:13+50

    // label L12 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1208:9+94
    assume {:print "$at(169,51592,51686)"} true;
L12:

    // goto L15 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1208:9+94
    assume {:print "$at(169,51592,51686)"} true;
    goto L15;

    // label L8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1197:33+13
    assume {:print "$at(169,51268,51281)"} true;
L8:

    // $t26 := get_field<0x1::fungible_asset::FungibleStore>.balance($t11) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1197:33+13
    assume {:print "$at(169,51268,51281)"} true;
    $t26 := $Dereference($t11)->$balance;

    // $t27 := +($t26, $t9) on_abort goto L16 with $t12 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1197:33+22
    call $t27 := $AddU64($t26, $t9);
    if ($abort_flag) {
        assume {:print "$at(169,51268,51290)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(48,71):", $t12} $t12 == $t12;
        goto L16;
    }

    // $t28 := borrow_field<0x1::fungible_asset::FungibleStore>.balance($t11) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1197:17+13
    $t28 := $ChildMutation($t11, 1, $Dereference($t11)->$balance);

    // write_ref($t28, $t27) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1197:17+38
    $t28 := $UpdateMutation($t28, $t27);

    // write_back[Reference($t11).balance (u64)]($t28) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1197:17+38
    $t11 := $UpdateMutation($t11, $Update'$1_fungible_asset_FungibleStore'_balance($Dereference($t11), $Dereference($t28)));

    // write_back[0x1::fungible_asset::FungibleStore@]($t11) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1197:17+38
    $1_fungible_asset_FungibleStore_$memory := $ResourceUpdate($1_fungible_asset_FungibleStore_$memory, $GlobalLocationAddress($t11),
        $Dereference($t11));

    // goto L13 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1197:17+38
    goto L13;

    // label L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1193:17+75
    assume {:print "$at(169,50981,51056)"} true;
L6:

    // $t29 := false at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1193:17+75
    assume {:print "$at(169,50981,51056)"} true;
    $t29 := false;
    assume $IsValid'bool'($t29);

    // $t6 := $t29 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1193:17+75
    $t6 := $t29;

    // trace_local[$t7]($t29) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1193:17+75
    assume {:print "$track_local(48,71,6):", $t29} $t29 == $t29;

    // goto L14 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1193:17+75
    goto L14;

    // label L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1192:9+373
    assume {:print "$at(169,50945,51318)"} true;
L4:

    // drop($t11) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1192:9+373
    assume {:print "$at(169,50945,51318)"} true;

    // goto L13 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1192:9+373
    goto L13;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1190:9+6
    assume {:print "$at(169,50836,50842)"} true;
L2:

    // drop($t11) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1190:9+6
    assume {:print "$at(169,50836,50842)"} true;

    // $t30 := 11 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1190:69+34
    $t30 := 11;
    assume $IsValid'u64'($t30);

    // $t31 := error::invalid_argument($t30) on_abort goto L16 with $t12 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1190:45+59
    call $t31 := $1_error_invalid_argument($t30);
    if ($abort_flag) {
        assume {:print "$at(169,50872,50931)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(48,71):", $t12} $t12 == $t12;
        goto L16;
    }

    // trace_abort($t31) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1190:9+6
    assume {:print "$at(169,50836,50842)"} true;
    assume {:print "$track_abort(48,71):", $t31} $t31 == $t31;

    // $t12 := move($t31) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1190:9+6
    $t12 := $t31;

    // goto L16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1190:9+6
    goto L16;

    // label L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1188:69+25
    assume {:print "$at(169,50731,50756)"} true;
L0:

    // $t32 := 23 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1188:69+25
    assume {:print "$at(169,50731,50756)"} true;
    $t32 := 23;
    assume $IsValid'u64'($t32);

    // $t33 := error::not_found($t32) on_abort goto L16 with $t12 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1188:52+43
    call $t33 := $1_error_not_found($t32);
    if ($abort_flag) {
        assume {:print "$at(169,50714,50757)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(48,71):", $t12} $t12 == $t12;
        goto L16;
    }

    // trace_abort($t33) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1188:9+6
    assume {:print "$at(169,50671,50677)"} true;
    assume {:print "$track_abort(48,71):", $t33} $t33 == $t33;

    // $t12 := move($t33) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1188:9+6
    $t12 := $t33;

    // goto L16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1188:9+6
    goto L16;

    // label L15 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1211:5+1
    assume {:print "$at(169,51692,51693)"} true;
L15:

    // return () at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1211:5+1
    assume {:print "$at(169,51692,51693)"} true;
    return;

    // label L16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1211:5+1
L16:

    // abort($t12) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1211:5+1
    assume {:print "$at(169,51692,51693)"} true;
    $abort_code := $t12;
    $abort_flag := true;
    return;

}

// fun fungible_asset::unchecked_withdraw [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1221:5+371
procedure {:inline 1} $1_fungible_asset_unchecked_withdraw(_$t0: int, _$t1: int) returns ($ret0: $1_fungible_asset_FungibleAsset)
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: $Mutation ($1_fungible_asset_FungibleStore);
    var $t5: $1_object_Object'$1_fungible_asset_Metadata';
    var $t6: bool;
    var $t7: $1_fungible_asset_FungibleAsset;
    var $t8: bool;
    var $t9: $Mutation ($1_fungible_asset_FungibleStore);
    var $t10: int;
    var $t11: $1_object_Object'$1_fungible_asset_Metadata';
    var $t12: int;
    var $t13: bool;
    var $t14: int;
    var $t15: int;
    var $t16: bool;
    var $t17: bool;
    var $t18: $Mutation ($1_fungible_asset_ConcurrentFungibleBalance);
    var $t19: $Mutation ($1_aggregator_v2_Aggregator'u64');
    var $t20: bool;
    var $t21: $1_fungible_asset_FungibleAsset;
    var $t22: int;
    var $t23: bool;
    var $t24: $1_fungible_asset_Withdraw;
    var $t25: int;
    var $t26: int;
    var $t27: int;
    var $t28: bool;
    var $t29: int;
    var $t30: int;
    var $t31: $Mutation (int);
    var $t32: int;
    var $t33: int;
    var $t34: bool;
    var $t35: int;
    var $t36: int;
    var $t0: int;
    var $t1: int;
    var $temp_0'$1_fungible_asset_FungibleAsset': $1_fungible_asset_FungibleAsset;
    var $temp_0'$1_fungible_asset_FungibleStore': $1_fungible_asset_FungibleStore;
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[store_addr]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1221:5+1
    assume {:print "$at(169,52027,52028)"} true;
    assume {:print "$track_local(48,73,0):", $t0} $t0 == $t0;

    // trace_local[amount]($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1221:5+1
    assume {:print "$track_local(48,73,1):", $t1} $t1 == $t1;

    // trace_local[store_addr]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1233:16+33
    assume {:print "$at(169,52498,52531)"} true;
    assume {:print "$track_local(48,73,2):", $t0} $t0 == $t0;

    // trace_local[amount]($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1233:16+33
    assume {:print "$track_local(48,73,3):", $t1} $t1 == $t1;

    // $t8 := exists<0x1::fungible_asset::FungibleStore>($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1237:17+33
    assume {:print "$at(169,52676,52709)"} true;
    $t8 := $ResourceExists($1_fungible_asset_FungibleStore_$memory, $t0);

    // if ($t8) goto L1 else goto L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1237:9+6
    if ($t8) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1239:21+44
    assume {:print "$at(169,52780,52824)"} true;
L1:

    // $t9 := borrow_global<0x1::fungible_asset::FungibleStore>($t0) on_abort goto L18 with $t10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1239:21+44
    assume {:print "$at(169,52780,52824)"} true;
    if (!$ResourceExists($1_fungible_asset_FungibleStore_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t9 := $Mutation($Global($t0), EmptyVec(), $ResourceValue($1_fungible_asset_FungibleStore_$memory, $t0));
    }
    if ($abort_flag) {
        assume {:print "$at(169,52780,52824)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(48,73):", $t10} $t10 == $t10;
        goto L18;
    }

    // trace_local[store]($t9) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1239:21+44
    $temp_0'$1_fungible_asset_FungibleStore' := $Dereference($t9);
    assume {:print "$track_local(48,73,4):", $temp_0'$1_fungible_asset_FungibleStore'} $temp_0'$1_fungible_asset_FungibleStore' == $temp_0'$1_fungible_asset_FungibleStore';

    // $t11 := get_field<0x1::fungible_asset::FungibleStore>.metadata($t9) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1240:24+14
    assume {:print "$at(169,52850,52864)"} true;
    $t11 := $Dereference($t9)->$metadata;

    // trace_local[metadata]($t11) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1240:24+14
    assume {:print "$track_local(48,73,5):", $t11} $t11 == $t11;

    // $t12 := 0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1241:23+1
    assume {:print "$at(169,52889,52890)"} true;
    $t12 := 0;
    assume $IsValid'u64'($t12);

    // $t13 := !=($t1, $t12) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1241:13+11
    $t13 := !$IsEqual'u64'($t1, $t12);

    // if ($t13) goto L3 else goto L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1241:9+594
    if ($t13) { goto L3; } else { goto L2; }

    // label L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1242:17+13
    assume {:print "$at(169,52911,52924)"} true;
L3:

    // $t14 := get_field<0x1::fungible_asset::FungibleStore>.balance($t9) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1242:17+13
    assume {:print "$at(169,52911,52924)"} true;
    $t14 := $Dereference($t9)->$balance;

    // $t15 := 0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1242:34+1
    $t15 := 0;
    assume $IsValid'u64'($t15);

    // $t16 := ==($t14, $t15) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1242:17+18
    $t16 := $IsEqual'u64'($t14, $t15);

    // if ($t16) goto L5 else goto L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1242:17+75
    if ($t16) { goto L5; } else { goto L4; }

    // label L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:614:16+41
    assume {:print "$at(169,26454,26495)"} true;
L5:

    // $t17 := exists<0x1::fungible_asset::ConcurrentFungibleBalance>($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:615:9+40
    assume {:print "$at(169,26529,26569)"} true;
    $t17 := $ResourceExists($1_fungible_asset_ConcurrentFungibleBalance_$memory, $t0);

    // $t6 := $t17 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:615:9+40
    $t6 := $t17;

    // trace_local[$t6]($t17) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:615:9+40
    assume {:print "$track_local(48,73,6):", $t17} $t17 == $t17;

    // label L16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1242:13+550
    assume {:print "$at(169,52907,53457)"} true;
L16:

    // if ($t6) goto L7 else goto L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1242:13+550
    assume {:print "$at(169,52907,53457)"} true;
    if ($t6) { goto L7; } else { goto L6; }

    // label L7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1242:94+291
L7:

    // drop($t9) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1242:94+291
    assume {:print "$at(169,52988,53279)"} true;

    // $t18 := borrow_global<0x1::fungible_asset::ConcurrentFungibleBalance>($t0) on_abort goto L18 with $t10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1243:40+56
    assume {:print "$at(169,53030,53086)"} true;
    if (!$ResourceExists($1_fungible_asset_ConcurrentFungibleBalance_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t18 := $Mutation($Global($t0), EmptyVec(), $ResourceValue($1_fungible_asset_ConcurrentFungibleBalance_$memory, $t0));
    }
    if ($abort_flag) {
        assume {:print "$at(169,53030,53086)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(48,73):", $t10} $t10 == $t10;
        goto L18;
    }

    // $t19 := borrow_field<0x1::fungible_asset::ConcurrentFungibleBalance>.balance($t18) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1245:21+40
    assume {:print "$at(169,53135,53175)"} true;
    $t19 := $ChildMutation($t18, 0, $Dereference($t18)->$balance);

    // $t20 := aggregator_v2::try_sub<u64>($t19, $t1) on_abort goto L18 with $t10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1245:21+40
    call $t20,$t19 := $1_aggregator_v2_try_sub'u64'($t19, $t1);
    if ($abort_flag) {
        assume {:print "$at(169,53135,53175)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(48,73):", $t10} $t10 == $t10;
        goto L18;
    }

    // write_back[Reference($t18).balance (0x1::aggregator_v2::Aggregator<u64>)]($t19) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1245:21+40
    $t18 := $UpdateMutation($t18, $Update'$1_fungible_asset_ConcurrentFungibleBalance'_balance($Dereference($t18), $Dereference($t19)));

    // write_back[0x1::fungible_asset::ConcurrentFungibleBalance@]($t18) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1245:21+40
    $1_fungible_asset_ConcurrentFungibleBalance_$memory := $ResourceUpdate($1_fungible_asset_ConcurrentFungibleBalance_$memory, $GlobalLocationAddress($t18),
        $Dereference($t18));

    // if ($t20) goto L9 else goto L8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1244:17+6
    assume {:print "$at(169,53105,53111)"} true;
    if ($t20) { goto L9; } else { goto L8; }

    // label L9 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1244:17+6
L9:

    // label L10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1253:25+8
    assume {:print "$at(169,53496,53504)"} true;
L10:

    // $t21 := pack 0x1::fungible_asset::FungibleAsset($t11, $t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1253:9+34
    assume {:print "$at(169,53480,53514)"} true;
    $t21 := $1_fungible_asset_FungibleAsset($t11, $t1);

    // trace_local[fa]($t21) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1253:9+34
    assume {:print "$track_local(48,73,7):", $t21} $t21 == $t21;

    // $t22 := 0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1226:23+1
    assume {:print "$at(169,52287,52288)"} true;
    $t22 := 0;
    assume $IsValid'u64'($t22);

    // $t23 := !=($t1, $t22) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1226:13+11
    $t23 := !$IsEqual'u64'($t1, $t22);

    // if ($t23) goto L11 else goto L13 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1226:9+105
    if ($t23) { goto L11; } else { goto L13; }

    // label L11 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1227:53+10
    assume {:print "$at(169,52345,52355)"} true;
L11:

    // $t24 := pack 0x1::fungible_asset::Withdraw($t0, $t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1227:35+38
    assume {:print "$at(169,52327,52365)"} true;
    $t24 := $1_fungible_asset_Withdraw($t0, $t1);

    // opaque begin: event::emit<0x1::fungible_asset::Withdraw>($t24) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1227:13+61

    // opaque end: event::emit<0x1::fungible_asset::Withdraw>($t24) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1227:13+61

    // label L13 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1224:72+209
    assume {:print "$at(169,52189,52398)"} true;
L13:

    // trace_return[0]($t21) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1224:72+209
    assume {:print "$at(169,52189,52398)"} true;
    assume {:print "$track_return(48,73,0):", $t21} $t21 == $t21;

    // goto L17 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1224:72+209
    goto L17;

    // label L8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1246:45+21
    assume {:print "$at(169,53222,53243)"} true;
L8:

    // $t25 := 4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1246:45+21
    assume {:print "$at(169,53222,53243)"} true;
    $t25 := 4;
    assume $IsValid'u64'($t25);

    // $t26 := error::invalid_argument($t25) on_abort goto L18 with $t10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1246:21+46
    call $t26 := $1_error_invalid_argument($t25);
    if ($abort_flag) {
        assume {:print "$at(169,53198,53244)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(48,73):", $t10} $t10 == $t10;
        goto L18;
    }

    // trace_abort($t26) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1244:17+6
    assume {:print "$at(169,53105,53111)"} true;
    assume {:print "$track_abort(48,73):", $t26} $t26 == $t26;

    // $t10 := move($t26) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1244:17+6
    $t10 := $t26;

    // goto L18 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1244:17+6
    goto L18;

    // label L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1249:25+13
    assume {:print "$at(169,53312,53325)"} true;
L6:

    // $t27 := get_field<0x1::fungible_asset::FungibleStore>.balance($t9) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1249:25+13
    assume {:print "$at(169,53312,53325)"} true;
    $t27 := $Dereference($t9)->$balance;

    // $t28 := >=($t27, $t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1249:25+23
    call $t28 := $Ge($t27, $t1);

    // if ($t28) goto L15 else goto L14 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1249:17+6
    if ($t28) { goto L15; } else { goto L14; }

    // label L15 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1250:33+13
    assume {:print "$at(169,53419,53432)"} true;
L15:

    // $t29 := get_field<0x1::fungible_asset::FungibleStore>.balance($t9) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1250:33+13
    assume {:print "$at(169,53419,53432)"} true;
    $t29 := $Dereference($t9)->$balance;

    // $t30 := -($t29, $t1) on_abort goto L18 with $t10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1250:33+22
    call $t30 := $Sub($t29, $t1);
    if ($abort_flag) {
        assume {:print "$at(169,53419,53441)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(48,73):", $t10} $t10 == $t10;
        goto L18;
    }

    // $t31 := borrow_field<0x1::fungible_asset::FungibleStore>.balance($t9) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1250:17+13
    $t31 := $ChildMutation($t9, 1, $Dereference($t9)->$balance);

    // write_ref($t31, $t30) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1250:17+38
    $t31 := $UpdateMutation($t31, $t30);

    // write_back[Reference($t9).balance (u64)]($t31) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1250:17+38
    $t9 := $UpdateMutation($t9, $Update'$1_fungible_asset_FungibleStore'_balance($Dereference($t9), $Dereference($t31)));

    // write_back[0x1::fungible_asset::FungibleStore@]($t9) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1250:17+38
    $1_fungible_asset_FungibleStore_$memory := $ResourceUpdate($1_fungible_asset_FungibleStore_$memory, $GlobalLocationAddress($t9),
        $Dereference($t9));

    // goto L10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1250:17+38
    goto L10;

    // label L14 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1249:17+6
    assume {:print "$at(169,53304,53310)"} true;
L14:

    // drop($t9) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1249:17+6
    assume {:print "$at(169,53304,53310)"} true;

    // $t32 := 4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1249:74+21
    $t32 := 4;
    assume $IsValid'u64'($t32);

    // $t33 := error::invalid_argument($t32) on_abort goto L18 with $t10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1249:50+46
    call $t33 := $1_error_invalid_argument($t32);
    if ($abort_flag) {
        assume {:print "$at(169,53337,53383)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(48,73):", $t10} $t10 == $t10;
        goto L18;
    }

    // trace_abort($t33) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1249:17+6
    assume {:print "$at(169,53304,53310)"} true;
    assume {:print "$track_abort(48,73):", $t33} $t33 == $t33;

    // $t10 := move($t33) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1249:17+6
    $t10 := $t33;

    // goto L18 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1249:17+6
    goto L18;

    // label L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1242:17+75
    assume {:print "$at(169,52911,52986)"} true;
L4:

    // $t34 := false at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1242:17+75
    assume {:print "$at(169,52911,52986)"} true;
    $t34 := false;
    assume $IsValid'bool'($t34);

    // $t6 := $t34 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1242:17+75
    $t6 := $t34;

    // trace_local[$t6]($t34) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1242:17+75
    assume {:print "$track_local(48,73,6):", $t34} $t34 == $t34;

    // goto L16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1242:17+75
    goto L16;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1241:9+594
    assume {:print "$at(169,52875,53469)"} true;
L2:

    // drop($t9) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1241:9+594
    assume {:print "$at(169,52875,53469)"} true;

    // goto L10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1241:9+594
    goto L10;

    // label L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1237:69+25
    assume {:print "$at(169,52728,52753)"} true;
L0:

    // $t35 := 23 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1237:69+25
    assume {:print "$at(169,52728,52753)"} true;
    $t35 := 23;
    assume $IsValid'u64'($t35);

    // $t36 := error::not_found($t35) on_abort goto L18 with $t10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1237:52+43
    call $t36 := $1_error_not_found($t35);
    if ($abort_flag) {
        assume {:print "$at(169,52711,52754)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(48,73):", $t10} $t10 == $t10;
        goto L18;
    }

    // trace_abort($t36) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1237:9+6
    assume {:print "$at(169,52668,52674)"} true;
    assume {:print "$track_abort(48,73):", $t36} $t36 == $t36;

    // $t10 := move($t36) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1237:9+6
    $t10 := $t36;

    // goto L18 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1237:9+6
    goto L18;

    // label L17 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1230:5+1
    assume {:print "$at(169,52397,52398)"} true;
L17:

    // return $t21 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1230:5+1
    assume {:print "$at(169,52397,52398)"} true;
    $ret0 := $t21;
    return;

    // label L18 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1230:5+1
L18:

    // abort($t10) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1230:5+1
    assume {:print "$at(169,52397,52398)"} true;
    $abort_code := $t10;
    $abort_flag := true;
    return;

}

// fun fungible_asset::withdraw_dispatch_function<0x1::fungible_asset::FungibleStore> [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:722:5+468
procedure {:inline 1} $1_fungible_asset_withdraw_dispatch_function'$1_fungible_asset_FungibleStore'(_$t0: $1_object_Object'$1_fungible_asset_FungibleStore') returns ($ret0: $1_option_Option'$1_function_info_FunctionInfo')
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: $1_option_Option'$1_function_info_FunctionInfo';
    var $t4: int;
    var $t5: int;
    var $t6: bool;
    var $t7: $1_fungible_asset_FungibleStore;
    var $t8: $1_object_Object'$1_fungible_asset_Metadata';
    var $t9: int;
    var $t10: bool;
    var $t11: $1_fungible_asset_DispatchFunctionStore;
    var $t12: $1_option_Option'$1_function_info_FunctionInfo';
    var $t13: $1_option_Option'$1_function_info_FunctionInfo';
    var $t14: int;
    var $t15: int;
    var $t0: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_option_Option'$1_function_info_FunctionInfo'': $1_option_Option'$1_function_info_FunctionInfo';
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[store]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:722:5+1
    assume {:print "$at(169,31172,31173)"} true;
    assume {:print "$track_local(48,77,0):", $t0} $t0 == $t0;

    // $t4 := object::object_address<#0>($t0) on_abort goto L6 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1326:26+29
    assume {:print "$at(169,56412,56441)"} true;
    call $t4 := $1_object_object_address'$1_fungible_asset_FungibleStore'($t0);
    if ($abort_flag) {
        assume {:print "$at(169,56412,56441)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(48,77):", $t5} $t5 == $t5;
        goto L6;
    }

    // trace_local[store_addr]($t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1326:26+29
    assume {:print "$track_local(48,77,1):", $t4} $t4 == $t4;

    // $t6 := exists<0x1::fungible_asset::FungibleStore>($t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1327:17+33
    assume {:print "$at(169,56460,56493)"} true;
    $t6 := $ResourceExists($1_fungible_asset_FungibleStore_$memory, $t4);

    // if ($t6) goto L1 else goto L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1327:9+6
    if ($t6) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1328:9+40
    assume {:print "$at(169,56550,56590)"} true;
L1:

    // $t7 := get_global<0x1::fungible_asset::FungibleStore>($t4) on_abort goto L6 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1328:9+40
    assume {:print "$at(169,56550,56590)"} true;
    if (!$ResourceExists($1_fungible_asset_FungibleStore_$memory, $t4)) {
        call $ExecFailureAbort();
    } else {
        $t7 := $ResourceValue($1_fungible_asset_FungibleStore_$memory, $t4);
    }
    if ($abort_flag) {
        assume {:print "$at(169,56550,56590)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(48,77):", $t5} $t5 == $t5;
        goto L6;
    }

    // $t8 := get_field<0x1::fungible_asset::FungibleStore>.metadata($t7) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:724:52+18
    assume {:print "$at(169,31413,31431)"} true;
    $t8 := $t7->$metadata;

    // $t9 := object::object_address<0x1::fungible_asset::Metadata>($t8) on_abort goto L6 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:724:29+42
    call $t9 := $1_object_object_address'$1_fungible_asset_Metadata'($t8);
    if ($abort_flag) {
        assume {:print "$at(169,31390,31432)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(48,77):", $t5} $t5 == $t5;
        goto L6;
    }

    // trace_local[metadata_addr]($t9) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:724:29+42
    assume {:print "$track_local(48,77,2):", $t9} $t9 == $t9;

    // $t10 := exists<0x1::fungible_asset::DispatchFunctionStore>($t9) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:725:12+44
    assume {:print "$at(169,31446,31490)"} true;
    $t10 := $ResourceExists($1_fungible_asset_DispatchFunctionStore_$memory, $t9);

    // if ($t10) goto L3 else goto L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:725:9+190
    if ($t10) { goto L3; } else { goto L2; }

    // label L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:726:13+51
    assume {:print "$at(169,31507,31558)"} true;
L3:

    // $t11 := get_global<0x1::fungible_asset::DispatchFunctionStore>($t9) on_abort goto L6 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:726:13+51
    assume {:print "$at(169,31507,31558)"} true;
    if (!$ResourceExists($1_fungible_asset_DispatchFunctionStore_$memory, $t9)) {
        call $ExecFailureAbort();
    } else {
        $t11 := $ResourceValue($1_fungible_asset_DispatchFunctionStore_$memory, $t9);
    }
    if ($abort_flag) {
        assume {:print "$at(169,31507,31558)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(48,77):", $t5} $t5 == $t5;
        goto L6;
    }

    // $t12 := get_field<0x1::fungible_asset::DispatchFunctionStore>.withdraw_function($t11) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:726:13+69
    $t12 := $t11->$withdraw_function;

    // $t3 := $t12 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:726:13+69
    $t3 := $t12;

    // trace_local[return]($t12) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:726:13+69
    assume {:print "$track_local(48,77,3):", $t12} $t12 == $t12;

    // label L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:725:9+190
    assume {:print "$at(169,31443,31633)"} true;
L4:

    // trace_return[0]($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:725:9+190
    assume {:print "$at(169,31443,31633)"} true;
    assume {:print "$track_return(48,77,0):", $t3} $t3 == $t3;

    // goto L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:725:9+190
    goto L5;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:728:13+14
    assume {:print "$at(169,31608,31622)"} true;
L2:

    // $t13 := opaque begin: option::none<0x1::function_info::FunctionInfo>() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:728:13+14
    assume {:print "$at(169,31608,31622)"} true;

    // assume And(WellFormed($t13), Le(Len<0x1::function_info::FunctionInfo>(select option::Option.vec($t13)), 1)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:728:13+14
    assume ($IsValid'$1_option_Option'$1_function_info_FunctionInfo''($t13) && (LenVec($t13->$vec) <= 1));

    // assume Eq<0x1::option::Option<0x1::function_info::FunctionInfo>>($t13, option::spec_none<0x1::function_info::FunctionInfo>()) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:728:13+14
    assume $IsEqual'$1_option_Option'$1_function_info_FunctionInfo''($t13, $1_option_spec_none'$1_function_info_FunctionInfo'());

    // $t13 := opaque end: option::none<0x1::function_info::FunctionInfo>() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:728:13+14

    // $t3 := $t13 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:728:13+14
    $t3 := $t13;

    // trace_local[return]($t13) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:728:13+14
    assume {:print "$track_local(48,77,3):", $t13} $t13 == $t13;

    // goto L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:728:13+14
    goto L4;

    // label L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1327:69+25
    assume {:print "$at(169,56512,56537)"} true;
L0:

    // $t14 := 23 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1327:69+25
    assume {:print "$at(169,56512,56537)"} true;
    $t14 := 23;
    assume $IsValid'u64'($t14);

    // $t15 := error::not_found($t14) on_abort goto L6 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1327:52+43
    call $t15 := $1_error_not_found($t14);
    if ($abort_flag) {
        assume {:print "$at(169,56495,56538)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(48,77):", $t5} $t5 == $t5;
        goto L6;
    }

    // trace_abort($t15) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1327:9+6
    assume {:print "$at(169,56452,56458)"} true;
    assume {:print "$track_abort(48,77):", $t15} $t15 == $t15;

    // $t5 := move($t15) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1327:9+6
    $t5 := $t15;

    // goto L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1327:9+6
    goto L6;

    // label L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:730:5+1
    assume {:print "$at(169,31639,31640)"} true;
L5:

    // return $t3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:730:5+1
    assume {:print "$at(169,31639,31640)"} true;
    $ret0 := $t3;
    return;

    // label L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:730:5+1
L6:

    // abort($t5) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:730:5+1
    assume {:print "$at(169,31639,31640)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun fungible_asset::withdraw_permission_check<0x1::fungible_asset::FungibleStore> [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:891:5+388
procedure {:inline 1} $1_fungible_asset_withdraw_permission_check'$1_fungible_asset_FungibleStore'(_$t0: $signer, _$t1: $1_object_Object'$1_fungible_asset_FungibleStore', _$t2: int) returns ()
{
    // declare local variables
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: $1_fungible_asset_WithdrawPermission;
    var $t7: int;
    var $t8: bool;
    var $t9: bool;
    var $t10: int;
    var $t11: int;
    var $t0: $signer;
    var $t1: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t2: int;
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_permissioned_signer_PermissionStorage': $1_permissioned_signer_PermissionStorage;
    var $temp_0'bool': bool;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // bytecode translation starts here
    // trace_local[owner]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:891:5+1
    assume {:print "$at(169,38474,38475)"} true;
    assume {:print "$track_local(48,78,0):", $t0} $t0 == $t0;

    // trace_local[store]($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:891:5+1
    assume {:print "$track_local(48,78,1):", $t1} $t1 == $t1;

    // trace_local[amount]($t2) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:891:5+1
    assume {:print "$track_local(48,78,2):", $t2} $t2 == $t2;

    // $t3 := (u256)($t2) on_abort goto L3 with $t4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:896:70+14
    assume {:print "$at(169,38681,38695)"} true;
    call $t3 := $CastU256($t2);
    if ($abort_flag) {
        assume {:print "$at(169,38681,38695)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(48,78):", $t4} $t4 == $t4;
        goto L3;
    }

    // $t5 := object::object_address<#0>($t1) on_abort goto L3 with $t4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:897:28+30
    assume {:print "$at(169,38755,38785)"} true;
    call $t5 := $1_object_object_address'$1_fungible_asset_FungibleStore'($t1);
    if ($abort_flag) {
        assume {:print "$at(169,38755,38785)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(48,78):", $t4} $t4 == $t4;
        goto L3;
    }

    // $t6 := pack_variant 0x1::fungible_asset::WithdrawPermission::ByStore($t5) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:896:86+100
    assume {:print "$at(169,38697,38797)"} true;
    $t6 := $1_fungible_asset_WithdrawPermission_ByStore($t5);

    // assume Identical($t7, permissioned_signer::spec_permission_address($t0)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\permissioned_signer.spec.move:157:9+58
    assume {:print "$at(190,6486,6544)"} true;
    assume ($t7 == $1_permissioned_signer_spec_permission_address($t0));

    // $t8 := opaque begin: permissioned_signer::check_permission_consume<0x1::fungible_asset::WithdrawPermission>($t0, $t3, $t6) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:896:17+170
    assume {:print "$at(169,38628,38798)"} true;

    // $t9 := havoc[val]() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:896:17+170
    havoc $t9;

    // if ($t9) goto L5 else goto L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:896:17+170
    if ($t9) { goto L5; } else { goto L4; }

    // label L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:896:17+170
L5:

    // trace_abort($t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:896:17+170
    assume {:print "$at(169,38628,38798)"} true;
    assume {:print "$track_abort(48,78):", $t4} $t4 == $t4;

    // goto L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:896:17+170
    goto L3;

    // label L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:896:17+170
L4:

    // modifies global<0x1::permissioned_signer::PermissionStorage>(permissioned_signer::spec_permission_address($t0)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:896:17+170
    assume {:print "$at(169,38628,38798)"} true;
    havoc $temp_0'bool';
    if ($temp_0'bool') {
        havoc $temp_0'$1_permissioned_signer_PermissionStorage';
        $1_permissioned_signer_PermissionStorage_$memory := $ResourceUpdate($1_permissioned_signer_PermissionStorage_$memory, $1_permissioned_signer_spec_permission_address($t0), $temp_0'$1_permissioned_signer_PermissionStorage');
    } else {
        $1_permissioned_signer_PermissionStorage_$memory := $ResourceRemove($1_permissioned_signer_PermissionStorage_$memory, $1_permissioned_signer_spec_permission_address($t0));
    }

    // assume WellFormed($t8) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:896:17+170
    assume $IsValid'bool'($t8);

    // assume Eq<bool>($t8, permissioned_signer::spec_check_permission_consume<0x1::fungible_asset::WithdrawPermission>($t0, $t3, $t6)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:896:17+170
    assume $IsEqual'bool'($t8, $1_permissioned_signer_spec_check_permission_consume'$1_fungible_asset_WithdrawPermission'($t0, $t3, $t6));

    // $t8 := opaque end: permissioned_signer::check_permission_consume<0x1::fungible_asset::WithdrawPermission>($t0, $t3, $t6) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:896:17+170

    // if ($t8) goto L1 else goto L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:896:9+6
    if ($t8) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:895:7+253
    assume {:print "$at(169,38609,38862)"} true;
L1:

    // goto L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:895:7+253
    assume {:print "$at(169,38609,38862)"} true;
    goto L2;

    // label L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:898:38+27
    assume {:print "$at(169,38825,38852)"} true;
L0:

    // $t10 := 36 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:898:38+27
    assume {:print "$at(169,38825,38852)"} true;
    $t10 := 36;
    assume $IsValid'u64'($t10);

    // $t11 := error::permission_denied($t10) on_abort goto L3 with $t4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:898:13+53
    call $t11 := $1_error_permission_denied($t10);
    if ($abort_flag) {
        assume {:print "$at(169,38800,38853)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(48,78):", $t4} $t4 == $t4;
        goto L3;
    }

    // trace_abort($t11) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:896:9+6
    assume {:print "$at(169,38620,38626)"} true;
    assume {:print "$track_abort(48,78):", $t11} $t11 == $t11;

    // $t4 := move($t11) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:896:9+6
    $t4 := $t11;

    // goto L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:896:9+6
    goto L3;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:899:5+1
    assume {:print "$at(169,38861,38862)"} true;
L2:

    // return () at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:899:5+1
    assume {:print "$at(169,38861,38862)"} true;
    return;

    // label L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:899:5+1
L3:

    // abort($t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:899:5+1
    assume {:print "$at(169,38861,38862)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun fungible_asset::withdraw_permission_check_by_address [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:902:5+365
procedure {:inline 1} $1_fungible_asset_withdraw_permission_check_by_address(_$t0: $signer, _$t1: int, _$t2: int) returns ()
{
    // declare local variables
    var $t3: int;
    var $t4: int;
    var $t5: $1_fungible_asset_WithdrawPermission;
    var $t6: int;
    var $t7: bool;
    var $t8: bool;
    var $t9: int;
    var $t10: int;
    var $t0: $signer;
    var $t1: int;
    var $t2: int;
    var $temp_0'$1_permissioned_signer_PermissionStorage': $1_permissioned_signer_PermissionStorage;
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // bytecode translation starts here
    // trace_local[owner]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:902:5+1
    assume {:print "$at(169,38924,38925)"} true;
    assume {:print "$track_local(48,79,0):", $t0} $t0 == $t0;

    // trace_local[store_address]($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:902:5+1
    assume {:print "$track_local(48,79,1):", $t1} $t1 == $t1;

    // trace_local[amount]($t2) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:902:5+1
    assume {:print "$track_local(48,79,2):", $t2} $t2 == $t2;

    // $t3 := (u256)($t2) on_abort goto L3 with $t4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:907:70+14
    assume {:print "$at(169,39140,39154)"} true;
    call $t3 := $CastU256($t2);
    if ($abort_flag) {
        assume {:print "$at(169,39140,39154)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(48,79):", $t4} $t4 == $t4;
        goto L3;
    }

    // $t5 := pack_variant 0x1::fungible_asset::WithdrawPermission::ByStore($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:907:86+68
    $t5 := $1_fungible_asset_WithdrawPermission_ByStore($t1);

    // assume Identical($t6, permissioned_signer::spec_permission_address($t0)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\permissioned_signer.spec.move:157:9+58
    assume {:print "$at(190,6486,6544)"} true;
    assume ($t6 == $1_permissioned_signer_spec_permission_address($t0));

    // $t7 := opaque begin: permissioned_signer::check_permission_consume<0x1::fungible_asset::WithdrawPermission>($t0, $t3, $t5) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:907:17+138
    assume {:print "$at(169,39087,39225)"} true;

    // $t8 := havoc[val]() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:907:17+138
    havoc $t8;

    // if ($t8) goto L5 else goto L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:907:17+138
    if ($t8) { goto L5; } else { goto L4; }

    // label L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:907:17+138
L5:

    // trace_abort($t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:907:17+138
    assume {:print "$at(169,39087,39225)"} true;
    assume {:print "$track_abort(48,79):", $t4} $t4 == $t4;

    // goto L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:907:17+138
    goto L3;

    // label L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:907:17+138
L4:

    // modifies global<0x1::permissioned_signer::PermissionStorage>(permissioned_signer::spec_permission_address($t0)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:907:17+138
    assume {:print "$at(169,39087,39225)"} true;
    havoc $temp_0'bool';
    if ($temp_0'bool') {
        havoc $temp_0'$1_permissioned_signer_PermissionStorage';
        $1_permissioned_signer_PermissionStorage_$memory := $ResourceUpdate($1_permissioned_signer_PermissionStorage_$memory, $1_permissioned_signer_spec_permission_address($t0), $temp_0'$1_permissioned_signer_PermissionStorage');
    } else {
        $1_permissioned_signer_PermissionStorage_$memory := $ResourceRemove($1_permissioned_signer_PermissionStorage_$memory, $1_permissioned_signer_spec_permission_address($t0));
    }

    // assume WellFormed($t7) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:907:17+138
    assume $IsValid'bool'($t7);

    // assume Eq<bool>($t7, permissioned_signer::spec_check_permission_consume<0x1::fungible_asset::WithdrawPermission>($t0, $t3, $t5)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:907:17+138
    assume $IsEqual'bool'($t7, $1_permissioned_signer_spec_check_permission_consume'$1_fungible_asset_WithdrawPermission'($t0, $t3, $t5));

    // $t7 := opaque end: permissioned_signer::check_permission_consume<0x1::fungible_asset::WithdrawPermission>($t0, $t3, $t5) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:907:17+138

    // if ($t7) goto L1 else goto L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:907:9+6
    if ($t7) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:906:7+221
    assume {:print "$at(169,39068,39289)"} true;
L1:

    // goto L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:906:7+221
    assume {:print "$at(169,39068,39289)"} true;
    goto L2;

    // label L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:909:38+27
    assume {:print "$at(169,39252,39279)"} true;
L0:

    // $t9 := 36 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:909:38+27
    assume {:print "$at(169,39252,39279)"} true;
    $t9 := 36;
    assume $IsValid'u64'($t9);

    // $t10 := error::permission_denied($t9) on_abort goto L3 with $t4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:909:13+53
    call $t10 := $1_error_permission_denied($t9);
    if ($abort_flag) {
        assume {:print "$at(169,39227,39280)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(48,79):", $t4} $t4 == $t4;
        goto L3;
    }

    // trace_abort($t10) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:907:9+6
    assume {:print "$at(169,39079,39085)"} true;
    assume {:print "$track_abort(48,79):", $t10} $t10 == $t10;

    // $t4 := move($t10) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:907:9+6
    $t4 := $t10;

    // goto L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:907:9+6
    goto L3;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:910:5+1
    assume {:print "$at(169,39288,39289)"} true;
L2:

    // return () at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:910:5+1
    assume {:print "$at(169,39288,39289)"} true;
    return;

    // label L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:910:5+1
L3:

    // abort($t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:910:5+1
    assume {:print "$at(169,39288,39289)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun fungible_asset::withdraw_sanity_check<0x1::fungible_asset::FungibleStore> [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:913:5+337
procedure {:inline 1} $1_fungible_asset_withdraw_sanity_check'$1_fungible_asset_FungibleStore'(_$t0: $signer, _$t1: $1_object_Object'$1_fungible_asset_FungibleStore', _$t2: bool) returns ()
{
    // declare local variables
    var $t3: int;
    var $t4: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t5: $1_fungible_asset_FungibleStore;
    var $t6: bool;
    var $t7: int;
    var $t8: int;
    var $t9: int;
    var $t10: $1_object_ObjectCore;
    var $t11: int;
    var $t12: bool;
    var $t13: int;
    var $t14: bool;
    var $t15: $1_fungible_asset_FungibleStore;
    var $t16: bool;
    var $t17: bool;
    var $t18: int;
    var $t19: int;
    var $t20: int;
    var $t21: int;
    var $t22: $1_object_Object'$1_fungible_asset_Metadata';
    var $t23: bool;
    var $t24: bool;
    var $t25: int;
    var $t26: int;
    var $t27: int;
    var $t28: int;
    var $t0: $signer;
    var $t1: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t2: bool;
    var $temp_0'$1_fungible_asset_FungibleStore': $1_fungible_asset_FungibleStore;
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    var $temp_0'signer': $signer;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // bytecode translation starts here
    // trace_local[owner]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:913:5+1
    assume {:print "$at(169,39351,39352)"} true;
    assume {:print "$track_local(48,80,0):", $t0} $t0 == $t0;

    // trace_local[store]($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:913:5+1
    assume {:print "$track_local(48,80,1):", $t1} $t1 == $t1;

    // trace_local[abort_on_dispatch]($t2) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:913:5+1
    assume {:print "$track_local(48,80,2):", $t2} $t2 == $t2;

    // $t7 := signer::address_of($t0) on_abort goto L12 with $t8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:919:13+25
    assume {:print "$at(169,39592,39617)"} true;
    call $t7 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(169,39592,39617)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(48,80):", $t8} $t8 == $t8;
        goto L12;
    }

    // trace_local[$t6]($t7) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:919:13+25
    assume {:print "$track_local(48,80,3):", $t7} $t7 == $t7;

    // trace_local[store]($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:925:16+26
    assume {:print "$at(169,39707,39733)"} true;
    assume {:print "$track_local(48,80,4):", $t1} $t1 == $t1;

    // assume Identical($t9, select object::Object.inner<0x1::object::Object<#0>>($t1)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.spec.move:555:9+37
    assume {:print "$at(187,23029,23066)"} true;
    assume ($t9 == $t1->$inner);

    // assume Identical($t10, global<0x1::object::ObjectCore>($t9)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.spec.move:556:9+53
    assume {:print "$at(187,23076,23129)"} true;
    assume ($t10 == $ResourceValue($1_object_ObjectCore_$memory, $t9));

    // assume Identical($t11, select object::ObjectCore.owner<0x1::object::ObjectCore>($t10)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.spec.move:557:9+37
    assume {:print "$at(187,23139,23176)"} true;
    assume ($t11 == $t10->$owner);

    // $t12 := object::owns<#0>($t1, $t7) on_abort goto L12 with $t8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:930:17+34
    assume {:print "$at(169,39909,39943)"} true;
    call $t12 := $1_object_owns'$1_fungible_asset_FungibleStore'($t1, $t7);
    if ($abort_flag) {
        assume {:print "$at(169,39909,39943)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(48,80):", $t8} $t8 == $t8;
        goto L12;
    }

    // if ($t12) goto L1 else goto L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:930:9+6
    if ($t12) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:931:46+6
    assume {:print "$at(169,40036,40042)"} true;
L1:

    // $t13 := object::object_address<#0>($t1) on_abort goto L12 with $t8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1326:26+29
    assume {:print "$at(169,56412,56441)"} true;
    call $t13 := $1_object_object_address'$1_fungible_asset_FungibleStore'($t1);
    if ($abort_flag) {
        assume {:print "$at(169,56412,56441)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(48,80):", $t8} $t8 == $t8;
        goto L12;
    }

    // trace_local[$t6]($t13) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1326:26+29
    assume {:print "$track_local(48,80,3):", $t13} $t13 == $t13;

    // $t14 := exists<0x1::fungible_asset::FungibleStore>($t13) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1327:17+33
    assume {:print "$at(169,56460,56493)"} true;
    $t14 := $ResourceExists($1_fungible_asset_FungibleStore_$memory, $t13);

    // if ($t14) goto L3 else goto L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1327:9+6
    if ($t14) { goto L3; } else { goto L2; }

    // label L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1328:9+40
    assume {:print "$at(169,56550,56590)"} true;
L3:

    // $t15 := get_global<0x1::fungible_asset::FungibleStore>($t13) on_abort goto L12 with $t8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1328:9+40
    assume {:print "$at(169,56550,56590)"} true;
    if (!$ResourceExists($1_fungible_asset_FungibleStore_$memory, $t13)) {
        call $ExecFailureAbort();
    } else {
        $t15 := $ResourceValue($1_fungible_asset_FungibleStore_$memory, $t13);
    }
    if ($abort_flag) {
        assume {:print "$at(169,56550,56590)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(48,80):", $t8} $t8 == $t8;
        goto L12;
    }

    // trace_local[fa_store]($t15) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1328:9+40
    assume {:print "$track_local(48,80,5):", $t15} $t15 == $t15;

    // if ($t2) goto L4 else goto L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:933:13+18
    assume {:print "$at(169,40076,40094)"} true;
    if ($t2) { goto L4; } else { goto L5; }

    // label L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:933:13+72
L5:

    // $t16 := true at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:933:13+72
    assume {:print "$at(169,40076,40148)"} true;
    $t16 := true;
    assume $IsValid'bool'($t16);

    // $t6 := $t16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:933:13+72
    $t6 := $t16;

    // trace_local[$t7]($t16) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:933:13+72
    assume {:print "$track_local(48,80,6):", $t16} $t16 == $t16;

    // label L10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:932:9+6
    assume {:print "$at(169,40054,40060)"} true;
L10:

    // if ($t6) goto L7 else goto L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:932:9+6
    assume {:print "$at(169,40054,40060)"} true;
    if ($t6) { goto L7; } else { goto L6; }

    // label L7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:936:18+15
    assume {:print "$at(169,40251,40266)"} true;
L7:

    // $t17 := get_field<0x1::fungible_asset::FungibleStore>.frozen($t15) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:936:18+15
    assume {:print "$at(169,40251,40266)"} true;
    $t17 := $t15->$frozen;

    // if ($t17) goto L8 else goto L9 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:936:17+16
    if ($t17) { goto L8; } else { goto L9; }

    // label L9 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:929:53+429
    assume {:print "$at(169,39890,40319)"} true;
L9:

    // goto L11 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:929:53+429
    assume {:print "$at(169,39890,40319)"} true;
    goto L11;

    // label L8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:936:60+16
    assume {:print "$at(169,40293,40309)"} true;
L8:

    // $t18 := 3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:936:60+16
    assume {:print "$at(169,40293,40309)"} true;
    $t18 := 3;
    assume $IsValid'u64'($t18);

    // $t19 := error::permission_denied($t18) on_abort goto L12 with $t8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:936:35+42
    call $t19 := $1_error_permission_denied($t18);
    if ($abort_flag) {
        assume {:print "$at(169,40268,40310)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(48,80):", $t8} $t8 == $t8;
        goto L12;
    }

    // trace_abort($t19) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:936:9+6
    assume {:print "$at(169,40242,40248)"} true;
    assume {:print "$track_abort(48,80):", $t19} $t19 == $t19;

    // $t8 := move($t19) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:936:9+6
    $t8 := $t19;

    // goto L12 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:936:9+6
    goto L12;

    // label L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:932:9+6
    assume {:print "$at(169,40054,40060)"} true;
L6:

    // $t20 := 28 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:934:37+32
    assume {:print "$at(169,40187,40219)"} true;
    $t20 := 28;
    assume $IsValid'u64'($t20);

    // $t21 := error::invalid_argument($t20) on_abort goto L12 with $t8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:934:13+57
    call $t21 := $1_error_invalid_argument($t20);
    if ($abort_flag) {
        assume {:print "$at(169,40163,40220)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(48,80):", $t8} $t8 == $t8;
        goto L12;
    }

    // trace_abort($t21) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:932:9+6
    assume {:print "$at(169,40054,40060)"} true;
    assume {:print "$track_abort(48,80):", $t21} $t21 == $t21;

    // $t8 := move($t21) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:932:9+6
    $t8 := $t21;

    // goto L12 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:932:9+6
    goto L12;

    // label L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:933:67+17
    assume {:print "$at(169,40130,40147)"} true;
L4:

    // $t22 := get_field<0x1::fungible_asset::FungibleStore>.metadata($t15) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:933:67+17
    assume {:print "$at(169,40130,40147)"} true;
    $t22 := $t15->$metadata;

    // $t23 := fungible_asset::has_withdraw_dispatch_function($t22) on_abort goto L12 with $t8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:933:36+49
    call $t23 := $1_fungible_asset_has_withdraw_dispatch_function($t22);
    if ($abort_flag) {
        assume {:print "$at(169,40099,40148)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(48,80):", $t8} $t8 == $t8;
        goto L12;
    }

    // $t24 := !($t23) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:933:35+50
    call $t24 := $Not($t23);

    // $t6 := $t24 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:933:35+50
    $t6 := $t24;

    // trace_local[$t7]($t24) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:933:35+50
    assume {:print "$track_local(48,80,6):", $t24} $t24 == $t24;

    // goto L10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:933:35+50
    goto L10;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1327:69+25
    assume {:print "$at(169,56512,56537)"} true;
L2:

    // $t25 := 23 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1327:69+25
    assume {:print "$at(169,56512,56537)"} true;
    $t25 := 23;
    assume $IsValid'u64'($t25);

    // $t26 := error::not_found($t25) on_abort goto L12 with $t8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1327:52+43
    call $t26 := $1_error_not_found($t25);
    if ($abort_flag) {
        assume {:print "$at(169,56495,56538)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(48,80):", $t8} $t8 == $t8;
        goto L12;
    }

    // trace_abort($t26) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1327:9+6
    assume {:print "$at(169,56452,56458)"} true;
    assume {:print "$track_abort(48,80):", $t26} $t26 == $t26;

    // $t8 := move($t26) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1327:9+6
    $t8 := $t26;

    // goto L12 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:1327:9+6
    goto L12;

    // label L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:930:78+16
    assume {:print "$at(169,39970,39986)"} true;
L0:

    // $t27 := 8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:930:78+16
    assume {:print "$at(169,39970,39986)"} true;
    $t27 := 8;
    assume $IsValid'u64'($t27);

    // $t28 := error::permission_denied($t27) on_abort goto L12 with $t8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:930:53+42
    call $t28 := $1_error_permission_denied($t27);
    if ($abort_flag) {
        assume {:print "$at(169,39945,39987)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(48,80):", $t8} $t8 == $t8;
        goto L12;
    }

    // trace_abort($t28) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:930:9+6
    assume {:print "$at(169,39901,39907)"} true;
    assume {:print "$track_abort(48,80):", $t28} $t28 == $t28;

    // $t8 := move($t28) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:930:9+6
    $t8 := $t28;

    // goto L12 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:930:9+6
    goto L12;

    // label L11 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:923:5+1
    assume {:print "$at(169,39687,39688)"} true;
L11:

    // return () at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:923:5+1
    assume {:print "$at(169,39687,39688)"} true;
    return;

    // label L12 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:923:5+1
L12:

    // abort($t8) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\fungible_asset.move:923:5+1
    assume {:print "$at(169,39687,39688)"} true;
    $abort_code := $t8;
    $abort_flag := true;
    return;

}

// struct dispatchable_fungible_asset::TransferRefStore at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:36:5+75
datatype $1_dispatchable_fungible_asset_TransferRefStore {
    $1_dispatchable_fungible_asset_TransferRefStore($transfer_ref: $1_fungible_asset_TransferRef)
}
function {:inline} $Update'$1_dispatchable_fungible_asset_TransferRefStore'_transfer_ref(s: $1_dispatchable_fungible_asset_TransferRefStore, x: $1_fungible_asset_TransferRef): $1_dispatchable_fungible_asset_TransferRefStore {
    $1_dispatchable_fungible_asset_TransferRefStore(x)
}
function $IsValid'$1_dispatchable_fungible_asset_TransferRefStore'(s: $1_dispatchable_fungible_asset_TransferRefStore): bool {
    $IsValid'$1_fungible_asset_TransferRef'(s->$transfer_ref)
}
function {:inline} $IsEqual'$1_dispatchable_fungible_asset_TransferRefStore'(s1: $1_dispatchable_fungible_asset_TransferRefStore, s2: $1_dispatchable_fungible_asset_TransferRefStore): bool {
    s1 == s2
}
var $1_dispatchable_fungible_asset_TransferRefStore_$memory: $Memory $1_dispatchable_fungible_asset_TransferRefStore;

// fun dispatchable_fungible_asset::deposit<0x1::fungible_asset::FungibleStore> [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:104:5+814
procedure {:inline 1} $1_dispatchable_fungible_asset_deposit'$1_fungible_asset_FungibleStore'(_$t0: $1_object_Object'$1_fungible_asset_FungibleStore', _$t1: $1_fungible_asset_FungibleAsset) returns ()
{
    // declare local variables
    var $t2: $1_option_Option'$1_function_info_FunctionInfo';
    var $t3: $1_function_info_FunctionInfo;
    var $t4: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t5: $1_fungible_asset_FungibleAsset;
    var $t6: $1_object_Object'$1_fungible_asset_Metadata';
    var $t7: int;
    var $t8: $1_fungible_asset_TransferRef;
    var $t9: bool;
    var $t10: int;
    var $t11: $1_option_Option'$1_function_info_FunctionInfo';
    var $t12: bool;
    var $t13: bool;
    var $t14: $1_function_info_FunctionInfo;
    var $t15: bool;
    var $t16: bool;
    var $t17: $1_object_Object'$1_fungible_asset_Metadata';
    var $t18: int;
    var $t19: bool;
    var $t20: $1_dispatchable_fungible_asset_TransferRefStore;
    var $t21: $1_fungible_asset_TransferRef;
    var $t22: bool;
    var $t23: int;
    var $t24: int;
    var $t25: int;
    var $t26: int;
    var $t27: int;
    var $t0: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t1: $1_fungible_asset_FungibleAsset;
    var $temp_0'$1_function_info_FunctionInfo': $1_function_info_FunctionInfo;
    var $temp_0'$1_fungible_asset_FungibleAsset': $1_fungible_asset_FungibleAsset;
    var $temp_0'$1_fungible_asset_TransferRef': $1_fungible_asset_TransferRef;
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'$1_option_Option'$1_function_info_FunctionInfo'': $1_option_Option'$1_function_info_FunctionInfo';
    var $temp_0'address': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[store]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:104:5+1
    assume {:print "$at(161,4307,4308)"} true;
    assume {:print "$track_local(49,1,0):", $t0} $t0 == $t0;

    // trace_local[fa]($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:104:5+1
    assume {:print "$track_local(49,1,1):", $t1} $t1 == $t1;

    // $t9 := false at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:105:53+5
    assume {:print "$at(161,4452,4457)"} true;
    $t9 := false;
    assume $IsValid'bool'($t9);

    // fungible_asset::deposit_sanity_check<#0>($t0, $t9) on_abort goto L8 with $t10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:105:9+50
    call $1_fungible_asset_deposit_sanity_check'$1_fungible_asset_FungibleStore'($t0, $t9);
    if ($abort_flag) {
        assume {:print "$at(161,4408,4458)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(49,1):", $t10} $t10 == $t10;
        goto L8;
    }

    // $t11 := fungible_asset::deposit_dispatch_function<#0>($t0) on_abort goto L8 with $t10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:106:24+48
    assume {:print "$at(161,4484,4532)"} true;
    call $t11 := $1_fungible_asset_deposit_dispatch_function'$1_fungible_asset_FungibleStore'($t0);
    if ($abort_flag) {
        assume {:print "$at(161,4484,4532)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(49,1):", $t10} $t10 == $t10;
        goto L8;
    }

    // trace_local[func_opt]($t11) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:106:24+48
    assume {:print "$track_local(49,1,2):", $t11} $t11 == $t11;

    // $t12 := opaque begin: option::is_some<0x1::function_info::FunctionInfo>($t11) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:107:13+26
    assume {:print "$at(161,4547,4573)"} true;

    // assume WellFormed($t12) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:107:13+26
    assume $IsValid'bool'($t12);

    // assume Eq<bool>($t12, option::spec_is_some<0x1::function_info::FunctionInfo>($t11)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:107:13+26
    assume $IsEqual'bool'($t12, $1_option_spec_is_some'$1_function_info_FunctionInfo'($t11));

    // $t12 := opaque end: option::is_some<0x1::function_info::FunctionInfo>($t11) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:107:13+26

    // if ($t12) goto L1 else goto L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:107:9+571
    if ($t12) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:109:17+47
    assume {:print "$at(161,4616,4663)"} true;
L1:

    // $t13 := features::dispatchable_fungible_asset_enabled() on_abort goto L8 with $t10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:109:17+47
    assume {:print "$at(161,4616,4663)"} true;
    call $t13 := $1_features_dispatchable_fungible_asset_enabled();
    if ($abort_flag) {
        assume {:print "$at(161,4616,4663)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(49,1):", $t10} $t10 == $t10;
        goto L8;
    }

    // if ($t13) goto L3 else goto L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:108:13+6
    assume {:print "$at(161,4590,4596)"} true;
    if ($t13) { goto L3; } else { goto L2; }

    // label L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:112:39+9
    assume {:print "$at(161,4768,4777)"} true;
L3:

    // $t14 := opaque begin: option::borrow<0x1::function_info::FunctionInfo>($t11) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:112:24+25
    assume {:print "$at(161,4753,4778)"} true;

    // assume Identical($t15, option::spec_is_none<0x1::function_info::FunctionInfo>($t11)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:112:24+25
    assume ($t15 == $1_option_spec_is_none'$1_function_info_FunctionInfo'($t11));

    // if ($t15) goto L10 else goto L9 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:112:24+25
    if ($t15) { goto L10; } else { goto L9; }

    // label L10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:112:24+25
L10:

    // assume And(option::spec_is_none<0x1::function_info::FunctionInfo>($t11), Eq(262145, $t10)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:112:24+25
    assume {:print "$at(161,4753,4778)"} true;
    assume ($1_option_spec_is_none'$1_function_info_FunctionInfo'($t11) && $IsEqual'num'(262145, $t10));

    // trace_abort($t10) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:112:24+25
    assume {:print "$at(161,4753,4778)"} true;
    assume {:print "$track_abort(49,1):", $t10} $t10 == $t10;

    // goto L8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:112:24+25
    goto L8;

    // label L9 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:112:24+25
L9:

    // assume WellFormed($t14) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:112:24+25
    assume {:print "$at(161,4753,4778)"} true;
    assume $IsValid'$1_function_info_FunctionInfo'($t14);

    // assume Eq<0x1::function_info::FunctionInfo>($t14, option::spec_borrow<0x1::function_info::FunctionInfo>($t11)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:112:24+25
    assume $IsEqual'$1_function_info_FunctionInfo'($t14, $1_option_spec_borrow'$1_function_info_FunctionInfo'($t11));

    // $t14 := opaque end: option::borrow<0x1::function_info::FunctionInfo>($t11) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:112:24+25

    // trace_local[func]($t14) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:112:24+25
    assume {:print "$track_local(49,1,3):", $t14} $t14 == $t14;

    // opaque begin: function_info::load_module_from_function($t14) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:113:13+46
    assume {:print "$at(161,4793,4839)"} true;

    // $t16 := havoc[val]() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:113:13+46
    havoc $t16;

    // if ($t16) goto L12 else goto L11 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:113:13+46
    if ($t16) { goto L12; } else { goto L11; }

    // label L12 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:113:13+46
L12:

    // trace_abort($t10) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:113:13+46
    assume {:print "$at(161,4793,4839)"} true;
    assume {:print "$track_abort(49,1):", $t10} $t10 == $t10;

    // goto L8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:113:13+46
    goto L8;

    // label L11 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:113:13+46
L11:

    // opaque end: function_info::load_module_from_function($t14) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:113:13+46
    assume {:print "$at(161,4793,4839)"} true;

    // trace_local[$t2]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:115:17+5
    assume {:print "$at(161,4893,4898)"} true;
    assume {:print "$track_local(49,1,4):", $t0} $t0 == $t0;

    // trace_local[$t13]($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:116:17+2
    assume {:print "$at(161,4917,4919)"} true;
    assume {:print "$track_local(49,1,5):", $t1} $t1 == $t1;

    // $t17 := fungible_asset::store_metadata<#0>($t0) on_abort goto L8 with $t10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:213:14+40
    assume {:print "$at(161,8920,8960)"} true;
    call $t17 := $1_fungible_asset_store_metadata'$1_fungible_asset_FungibleStore'($t0);
    if ($abort_flag) {
        assume {:print "$at(161,8920,8960)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(49,1):", $t10} $t10 == $t10;
        goto L8;
    }

    // trace_local[$t18]($t17) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:213:14+40
    assume {:print "$track_local(49,1,6):", $t17} $t17 == $t17;

    // $t18 := object::object_address<0x1::fungible_asset::Metadata>($t17) on_abort goto L8 with $t10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:212:29+89
    assume {:print "$at(161,8882,8971)"} true;
    call $t18 := $1_object_object_address'$1_fungible_asset_Metadata'($t17);
    if ($abort_flag) {
        assume {:print "$at(161,8882,8971)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(49,1):", $t10} $t10 == $t10;
        goto L8;
    }

    // trace_local[metadata_addr]($t18) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:212:29+89
    assume {:print "$track_local(49,1,7):", $t18} $t18 == $t18;

    // $t19 := exists<0x1::dispatchable_fungible_asset::TransferRefStore>($t18) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:216:13+39
    assume {:print "$at(161,9004,9043)"} true;
    $t19 := $ResourceExists($1_dispatchable_fungible_asset_TransferRefStore_$memory, $t18);

    // if ($t19) goto L5 else goto L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:215:9+6
    assume {:print "$at(161,8982,8988)"} true;
    if ($t19) { goto L5; } else { goto L4; }

    // label L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:219:10+46
    assume {:print "$at(161,9115,9161)"} true;
L5:

    // $t20 := get_global<0x1::dispatchable_fungible_asset::TransferRefStore>($t18) on_abort goto L8 with $t10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:219:10+46
    assume {:print "$at(161,9115,9161)"} true;
    if (!$ResourceExists($1_dispatchable_fungible_asset_TransferRefStore_$memory, $t18)) {
        call $ExecFailureAbort();
    } else {
        $t20 := $ResourceValue($1_dispatchable_fungible_asset_TransferRefStore_$memory, $t18);
    }
    if ($abort_flag) {
        assume {:print "$at(161,9115,9161)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(49,1):", $t10} $t10 == $t10;
        goto L8;
    }

    // $t21 := get_field<0x1::dispatchable_fungible_asset::TransferRefStore>.transfer_ref($t20) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:219:9+60
    $t21 := $t20->$transfer_ref;

    // trace_local[$t14]($t21) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:114:13+148
    assume {:print "$at(161,4854,5002)"} true;
    assume {:print "$track_local(49,1,8):", $t21} $t21 == $t21;

    // opaque begin: dispatchable_fungible_asset::dispatchable_deposit<#0>($t0, $t1, $t21, $t14) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:114:13+148

    // $t22 := havoc[val]() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:114:13+148
    havoc $t22;

    // if ($t22) goto L14 else goto L13 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:114:13+148
    if ($t22) { goto L14; } else { goto L13; }

    // label L14 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:114:13+148
L14:

    // trace_abort($t10) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:114:13+148
    assume {:print "$at(161,4854,5002)"} true;
    assume {:print "$track_abort(49,1):", $t10} $t10 == $t10;

    // goto L8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:114:13+148
    goto L8;

    // label L13 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:114:13+148
L13:

    // opaque end: dispatchable_fungible_asset::dispatchable_deposit<#0>($t0, $t1, $t21, $t14) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:114:13+148
    assume {:print "$at(161,4854,5002)"} true;

    // label L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:104:95+724
    assume {:print "$at(161,4397,5121)"} true;
L6:

    // goto L7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:104:95+724
    assume {:print "$at(161,4397,5121)"} true;
    goto L7;

    // label L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:215:9+6
    assume {:print "$at(161,8982,8988)"} true;
L4:

    // $t23 := 1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:217:30+16
    assume {:print "$at(161,9075,9091)"} true;
    $t23 := 1;
    assume $IsValid'u64'($t23);

    // $t24 := error::not_found($t23) on_abort goto L8 with $t10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:217:13+34
    call $t24 := $1_error_not_found($t23);
    if ($abort_flag) {
        assume {:print "$at(161,9058,9092)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(49,1):", $t10} $t10 == $t10;
        goto L8;
    }

    // trace_abort($t24) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:215:9+6
    assume {:print "$at(161,8982,8988)"} true;
    assume {:print "$track_abort(49,1):", $t24} $t24 == $t24;

    // $t10 := move($t24) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:215:9+6
    $t10 := $t24;

    // goto L8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:215:9+6
    goto L8;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:110:32+14
    assume {:print "$at(161,4697,4711)"} true;
L2:

    // $t25 := 3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:110:32+14
    assume {:print "$at(161,4697,4711)"} true;
    $t25 := 3;
    assume $IsValid'u64'($t25);

    // $t26 := error::aborted($t25) on_abort goto L8 with $t10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:110:17+30
    call $t26 := $1_error_aborted($t25);
    if ($abort_flag) {
        assume {:print "$at(161,4682,4712)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(49,1):", $t10} $t10 == $t10;
        goto L8;
    }

    // trace_abort($t26) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:108:13+6
    assume {:print "$at(161,4590,4596)"} true;
    assume {:print "$track_abort(49,1):", $t26} $t26 == $t26;

    // $t10 := move($t26) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:108:13+6
    $t10 := $t26;

    // goto L8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:108:13+6
    goto L8;

    // label L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:121:70+6
    assume {:print "$at(161,5091,5097)"} true;
L0:

    // $t27 := object::object_address<#0>($t0) on_abort goto L8 with $t10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:121:47+30
    assume {:print "$at(161,5068,5098)"} true;
    call $t27 := $1_object_object_address'$1_fungible_asset_FungibleStore'($t0);
    if ($abort_flag) {
        assume {:print "$at(161,5068,5098)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(49,1):", $t10} $t10 == $t10;
        goto L8;
    }

    // fungible_asset::unchecked_deposit($t27, $t1) on_abort goto L8 with $t10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:121:13+69
    call $1_fungible_asset_unchecked_deposit($t27, $t1);
    if ($abort_flag) {
        assume {:print "$at(161,5034,5103)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(49,1):", $t10} $t10 == $t10;
        goto L8;
    }

    // goto L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:121:13+69
    goto L6;

    // label L7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:123:5+1
    assume {:print "$at(161,5120,5121)"} true;
L7:

    // return () at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:123:5+1
    assume {:print "$at(161,5120,5121)"} true;
    return;

    // label L8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:123:5+1
L8:

    // abort($t10) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:123:5+1
    assume {:print "$at(161,5120,5121)"} true;
    $abort_code := $t10;
    $abort_flag := true;
    return;

}

// fun dispatchable_fungible_asset::withdraw<0x1::fungible_asset::FungibleStore> [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:74:5+995
procedure {:inline 1} $1_dispatchable_fungible_asset_withdraw'$1_fungible_asset_FungibleStore'(_$t0: $signer, _$t1: $1_object_Object'$1_fungible_asset_FungibleStore', _$t2: int) returns ($ret0: $1_fungible_asset_FungibleAsset)
{
    // declare local variables
    var $t3: $1_option_Option'$1_function_info_FunctionInfo';
    var $t4: $1_function_info_FunctionInfo;
    var $t5: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t6: int;
    var $t7: $1_object_Object'$1_fungible_asset_Metadata';
    var $t8: int;
    var $t9: $1_fungible_asset_TransferRef;
    var $t10: $1_fungible_asset_FungibleAsset;
    var $t11: bool;
    var $t12: int;
    var $t13: $1_option_Option'$1_function_info_FunctionInfo';
    var $t14: bool;
    var $t15: bool;
    var $t16: $1_function_info_FunctionInfo;
    var $t17: bool;
    var $t18: bool;
    var $t19: $1_object_Object'$1_fungible_asset_Metadata';
    var $t20: int;
    var $t21: bool;
    var $t22: $1_dispatchable_fungible_asset_TransferRefStore;
    var $t23: $1_fungible_asset_TransferRef;
    var $t24: $1_fungible_asset_FungibleAsset;
    var $t25: bool;
    var $t26: int;
    var $t27: int;
    var $t28: int;
    var $t29: int;
    var $t30: int;
    var $t31: $1_fungible_asset_FungibleAsset;
    var $t0: $signer;
    var $t1: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t2: int;
    var $temp_0'$1_function_info_FunctionInfo': $1_function_info_FunctionInfo;
    var $temp_0'$1_fungible_asset_FungibleAsset': $1_fungible_asset_FungibleAsset;
    var $temp_0'$1_fungible_asset_TransferRef': $1_fungible_asset_TransferRef;
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'$1_option_Option'$1_function_info_FunctionInfo'': $1_option_Option'$1_function_info_FunctionInfo';
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // bytecode translation starts here
    // trace_local[owner]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:74:5+1
    assume {:print "$at(161,3132,3133)"} true;
    assume {:print "$track_local(49,4,0):", $t0} $t0 == $t0;

    // trace_local[store]($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:74:5+1
    assume {:print "$track_local(49,4,1):", $t1} $t1 == $t1;

    // trace_local[amount]($t2) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:74:5+1
    assume {:print "$track_local(49,4,2):", $t2} $t2 == $t2;

    // $t11 := false at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:79:61+5
    assume {:print "$at(161,3346,3351)"} true;
    $t11 := false;
    assume $IsValid'bool'($t11);

    // fungible_asset::withdraw_sanity_check<#0>($t0, $t1, $t11) on_abort goto L8 with $t12 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:79:9+58
    call $1_fungible_asset_withdraw_sanity_check'$1_fungible_asset_FungibleStore'($t0, $t1, $t11);
    if ($abort_flag) {
        assume {:print "$at(161,3294,3352)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(49,4):", $t12} $t12 == $t12;
        goto L8;
    }

    // fungible_asset::withdraw_permission_check<#0>($t0, $t1, $t2) on_abort goto L8 with $t12 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:80:9+63
    assume {:print "$at(161,3363,3426)"} true;
    call $1_fungible_asset_withdraw_permission_check'$1_fungible_asset_FungibleStore'($t0, $t1, $t2);
    if ($abort_flag) {
        assume {:print "$at(161,3363,3426)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(49,4):", $t12} $t12 == $t12;
        goto L8;
    }

    // $t13 := fungible_asset::withdraw_dispatch_function<#0>($t1) on_abort goto L8 with $t12 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:81:24+49
    assume {:print "$at(161,3452,3501)"} true;
    call $t13 := $1_fungible_asset_withdraw_dispatch_function'$1_fungible_asset_FungibleStore'($t1);
    if ($abort_flag) {
        assume {:print "$at(161,3452,3501)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(49,4):", $t12} $t12 == $t12;
        goto L8;
    }

    // trace_local[func_opt]($t13) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:81:24+49
    assume {:print "$track_local(49,4,3):", $t13} $t13 == $t13;

    // $t14 := opaque begin: option::is_some<0x1::function_info::FunctionInfo>($t13) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:82:13+26
    assume {:print "$at(161,3516,3542)"} true;

    // assume WellFormed($t14) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:82:13+26
    assume $IsValid'bool'($t14);

    // assume Eq<bool>($t14, option::spec_is_some<0x1::function_info::FunctionInfo>($t13)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:82:13+26
    assume $IsEqual'bool'($t14, $1_option_spec_is_some'$1_function_info_FunctionInfo'($t13));

    // $t14 := opaque end: option::is_some<0x1::function_info::FunctionInfo>($t13) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:82:13+26

    // if ($t14) goto L1 else goto L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:82:9+608
    if ($t14) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:84:17+47
    assume {:print "$at(161,3585,3632)"} true;
L1:

    // $t15 := features::dispatchable_fungible_asset_enabled() on_abort goto L8 with $t12 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:84:17+47
    assume {:print "$at(161,3585,3632)"} true;
    call $t15 := $1_features_dispatchable_fungible_asset_enabled();
    if ($abort_flag) {
        assume {:print "$at(161,3585,3632)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(49,4):", $t12} $t12 == $t12;
        goto L8;
    }

    // if ($t15) goto L3 else goto L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:83:13+6
    assume {:print "$at(161,3559,3565)"} true;
    if ($t15) { goto L3; } else { goto L2; }

    // label L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:87:39+9
    assume {:print "$at(161,3737,3746)"} true;
L3:

    // $t16 := opaque begin: option::borrow<0x1::function_info::FunctionInfo>($t13) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:87:24+25
    assume {:print "$at(161,3722,3747)"} true;

    // assume Identical($t17, option::spec_is_none<0x1::function_info::FunctionInfo>($t13)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:87:24+25
    assume ($t17 == $1_option_spec_is_none'$1_function_info_FunctionInfo'($t13));

    // if ($t17) goto L10 else goto L9 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:87:24+25
    if ($t17) { goto L10; } else { goto L9; }

    // label L10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:87:24+25
L10:

    // assume And(option::spec_is_none<0x1::function_info::FunctionInfo>($t13), Eq(262145, $t12)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:87:24+25
    assume {:print "$at(161,3722,3747)"} true;
    assume ($1_option_spec_is_none'$1_function_info_FunctionInfo'($t13) && $IsEqual'num'(262145, $t12));

    // trace_abort($t12) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:87:24+25
    assume {:print "$at(161,3722,3747)"} true;
    assume {:print "$track_abort(49,4):", $t12} $t12 == $t12;

    // goto L8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:87:24+25
    goto L8;

    // label L9 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:87:24+25
L9:

    // assume WellFormed($t16) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:87:24+25
    assume {:print "$at(161,3722,3747)"} true;
    assume $IsValid'$1_function_info_FunctionInfo'($t16);

    // assume Eq<0x1::function_info::FunctionInfo>($t16, option::spec_borrow<0x1::function_info::FunctionInfo>($t13)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:87:24+25
    assume $IsEqual'$1_function_info_FunctionInfo'($t16, $1_option_spec_borrow'$1_function_info_FunctionInfo'($t13));

    // $t16 := opaque end: option::borrow<0x1::function_info::FunctionInfo>($t13) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:87:24+25

    // trace_local[func]($t16) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:87:24+25
    assume {:print "$track_local(49,4,4):", $t16} $t16 == $t16;

    // opaque begin: function_info::load_module_from_function($t16) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:88:13+46
    assume {:print "$at(161,3762,3808)"} true;

    // $t18 := havoc[val]() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:88:13+46
    havoc $t18;

    // if ($t18) goto L12 else goto L11 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:88:13+46
    if ($t18) { goto L12; } else { goto L11; }

    // label L12 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:88:13+46
L12:

    // trace_abort($t12) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:88:13+46
    assume {:print "$at(161,3762,3808)"} true;
    assume {:print "$track_abort(49,4):", $t12} $t12 == $t12;

    // goto L8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:88:13+46
    goto L8;

    // label L11 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:88:13+46
L11:

    // opaque end: function_info::load_module_from_function($t16) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:88:13+46
    assume {:print "$at(161,3762,3808)"} true;

    // trace_local[$t5]($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:90:17+5
    assume {:print "$at(161,3872,3877)"} true;
    assume {:print "$track_local(49,4,5):", $t1} $t1 == $t1;

    // trace_local[$t19]($t2) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:91:17+6
    assume {:print "$at(161,3896,3902)"} true;
    assume {:print "$track_local(49,4,6):", $t2} $t2 == $t2;

    // $t19 := fungible_asset::store_metadata<#0>($t1) on_abort goto L8 with $t12 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:213:14+40
    assume {:print "$at(161,8920,8960)"} true;
    call $t19 := $1_fungible_asset_store_metadata'$1_fungible_asset_FungibleStore'($t1);
    if ($abort_flag) {
        assume {:print "$at(161,8920,8960)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(49,4):", $t12} $t12 == $t12;
        goto L8;
    }

    // trace_local[$t24]($t19) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:213:14+40
    assume {:print "$track_local(49,4,7):", $t19} $t19 == $t19;

    // $t20 := object::object_address<0x1::fungible_asset::Metadata>($t19) on_abort goto L8 with $t12 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:212:29+89
    assume {:print "$at(161,8882,8971)"} true;
    call $t20 := $1_object_object_address'$1_fungible_asset_Metadata'($t19);
    if ($abort_flag) {
        assume {:print "$at(161,8882,8971)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(49,4):", $t12} $t12 == $t12;
        goto L8;
    }

    // trace_local[metadata_addr]($t20) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:212:29+89
    assume {:print "$track_local(49,4,8):", $t20} $t20 == $t20;

    // $t21 := exists<0x1::dispatchable_fungible_asset::TransferRefStore>($t20) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:216:13+39
    assume {:print "$at(161,9004,9043)"} true;
    $t21 := $ResourceExists($1_dispatchable_fungible_asset_TransferRefStore_$memory, $t20);

    // if ($t21) goto L5 else goto L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:215:9+6
    assume {:print "$at(161,8982,8988)"} true;
    if ($t21) { goto L5; } else { goto L4; }

    // label L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:219:10+46
    assume {:print "$at(161,9115,9161)"} true;
L5:

    // $t22 := get_global<0x1::dispatchable_fungible_asset::TransferRefStore>($t20) on_abort goto L8 with $t12 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:219:10+46
    assume {:print "$at(161,9115,9161)"} true;
    if (!$ResourceExists($1_dispatchable_fungible_asset_TransferRefStore_$memory, $t20)) {
        call $ExecFailureAbort();
    } else {
        $t22 := $ResourceValue($1_dispatchable_fungible_asset_TransferRefStore_$memory, $t20);
    }
    if ($abort_flag) {
        assume {:print "$at(161,9115,9161)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(49,4):", $t12} $t12 == $t12;
        goto L8;
    }

    // $t23 := get_field<0x1::dispatchable_fungible_asset::TransferRefStore>.transfer_ref($t22) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:219:9+60
    $t23 := $t22->$transfer_ref;

    // trace_local[$t20]($t23) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:89:22+154
    assume {:print "$at(161,3832,3986)"} true;
    assume {:print "$track_local(49,4,9):", $t23} $t23 == $t23;

    // $t24 := opaque begin: dispatchable_fungible_asset::dispatchable_withdraw<#0>($t1, $t2, $t23, $t16) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:89:22+154

    // $t25 := havoc[val]() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:89:22+154
    havoc $t25;

    // if ($t25) goto L14 else goto L13 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:89:22+154
    if ($t25) { goto L14; } else { goto L13; }

    // label L14 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:89:22+154
L14:

    // trace_abort($t12) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:89:22+154
    assume {:print "$at(161,3832,3986)"} true;
    assume {:print "$track_abort(49,4):", $t12} $t12 == $t12;

    // goto L8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:89:22+154
    goto L8;

    // label L13 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:89:22+154
L13:

    // assume WellFormed($t24) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:89:22+154
    assume {:print "$at(161,3832,3986)"} true;
    assume $IsValid'$1_fungible_asset_FungibleAsset'($t24);

    // $t24 := opaque end: dispatchable_fungible_asset::dispatchable_withdraw<#0>($t1, $t2, $t23, $t16) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:89:22+154

    // $t10 := $t24 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:89:22+154
    $t10 := $t24;

    // trace_local[fa]($t24) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:89:22+154
    assume {:print "$track_local(49,4,10):", $t24} $t24 == $t24;

    // label L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:78:48+844
    assume {:print "$at(161,3283,4127)"} true;
L6:

    // trace_return[0]($t10) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:78:48+844
    assume {:print "$at(161,3283,4127)"} true;
    assume {:print "$track_return(49,4,0):", $t10} $t10 == $t10;

    // goto L7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:78:48+844
    goto L7;

    // label L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:215:9+6
    assume {:print "$at(161,8982,8988)"} true;
L4:

    // $t26 := 1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:217:30+16
    assume {:print "$at(161,9075,9091)"} true;
    $t26 := 1;
    assume $IsValid'u64'($t26);

    // $t27 := error::not_found($t26) on_abort goto L8 with $t12 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:217:13+34
    call $t27 := $1_error_not_found($t26);
    if ($abort_flag) {
        assume {:print "$at(161,9058,9092)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(49,4):", $t12} $t12 == $t12;
        goto L8;
    }

    // trace_abort($t27) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:215:9+6
    assume {:print "$at(161,8982,8988)"} true;
    assume {:print "$track_abort(49,4):", $t27} $t27 == $t27;

    // $t12 := move($t27) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:215:9+6
    $t12 := $t27;

    // goto L8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:215:9+6
    goto L8;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:85:32+14
    assume {:print "$at(161,3666,3680)"} true;
L2:

    // $t28 := 3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:85:32+14
    assume {:print "$at(161,3666,3680)"} true;
    $t28 := 3;
    assume $IsValid'u64'($t28);

    // $t29 := error::aborted($t28) on_abort goto L8 with $t12 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:85:17+30
    call $t29 := $1_error_aborted($t28);
    if ($abort_flag) {
        assume {:print "$at(161,3651,3681)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(49,4):", $t12} $t12 == $t12;
        goto L8;
    }

    // trace_abort($t29) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:83:13+6
    assume {:print "$at(161,3559,3565)"} true;
    assume {:print "$track_abort(49,4):", $t29} $t29 == $t29;

    // $t12 := move($t29) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:83:13+6
    $t12 := $t29;

    // goto L8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:83:13+6
    goto L8;

    // label L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:97:71+6
    assume {:print "$at(161,4093,4099)"} true;
L0:

    // $t30 := object::object_address<#0>($t1) on_abort goto L8 with $t12 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:97:48+30
    assume {:print "$at(161,4070,4100)"} true;
    call $t30 := $1_object_object_address'$1_fungible_asset_FungibleStore'($t1);
    if ($abort_flag) {
        assume {:print "$at(161,4070,4100)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(49,4):", $t12} $t12 == $t12;
        goto L8;
    }

    // $t31 := fungible_asset::unchecked_withdraw($t30, $t2) on_abort goto L8 with $t12 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:97:13+74
    call $t31 := $1_fungible_asset_unchecked_withdraw($t30, $t2);
    if ($abort_flag) {
        assume {:print "$at(161,4035,4109)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(49,4):", $t12} $t12 == $t12;
        goto L8;
    }

    // $t10 := $t31 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:97:13+74
    $t10 := $t31;

    // trace_local[fa]($t31) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:97:13+74
    assume {:print "$track_local(49,4,10):", $t31} $t31 == $t31;

    // goto L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:97:13+74
    goto L6;

    // label L7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:99:5+1
    assume {:print "$at(161,4126,4127)"} true;
L7:

    // return $t10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:99:5+1
    assume {:print "$at(161,4126,4127)"} true;
    $ret0 := $t10;
    return;

    // label L8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:99:5+1
L8:

    // abort($t12) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:99:5+1
    assume {:print "$at(161,4126,4127)"} true;
    $abort_code := $t12;
    $abort_flag := true;
    return;

}

// fun dispatchable_fungible_asset::derived_balance<0x1::fungible_asset::FungibleStore> [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:158:5+583
procedure {:inline 1} $1_dispatchable_fungible_asset_derived_balance'$1_fungible_asset_FungibleStore'(_$t0: $1_object_Object'$1_fungible_asset_FungibleStore') returns ($ret0: int)
{
    // declare local variables
    var $t1: $1_option_Option'$1_function_info_FunctionInfo';
    var $t2: $1_function_info_FunctionInfo;
    var $t3: int;
    var $t4: $1_option_Option'$1_function_info_FunctionInfo';
    var $t5: int;
    var $t6: bool;
    var $t7: bool;
    var $t8: $1_function_info_FunctionInfo;
    var $t9: bool;
    var $t10: bool;
    var $t11: int;
    var $t12: bool;
    var $t13: int;
    var $t14: int;
    var $t15: int;
    var $t0: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_function_info_FunctionInfo': $1_function_info_FunctionInfo;
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_option_Option'$1_function_info_FunctionInfo'': $1_option_Option'$1_function_info_FunctionInfo';
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[store]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:158:5+1
    assume {:print "$at(161,6487,6488)"} true;
    assume {:print "$track_local(49,5,0):", $t0} $t0 == $t0;

    // $t4 := fungible_asset::derived_balance_dispatch_function<#0>($t0) on_abort goto L6 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:159:24+56
    assume {:print "$at(161,6571,6627)"} true;
    call $t4 := $1_fungible_asset_derived_balance_dispatch_function'$1_fungible_asset_FungibleStore'($t0);
    if ($abort_flag) {
        assume {:print "$at(161,6571,6627)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(49,5):", $t5} $t5 == $t5;
        goto L6;
    }

    // trace_local[func_opt]($t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:159:24+56
    assume {:print "$track_local(49,5,1):", $t4} $t4 == $t4;

    // $t6 := opaque begin: option::is_some<0x1::function_info::FunctionInfo>($t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:160:13+26
    assume {:print "$at(161,6642,6668)"} true;

    // assume WellFormed($t6) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:160:13+26
    assume $IsValid'bool'($t6);

    // assume Eq<bool>($t6, option::spec_is_some<0x1::function_info::FunctionInfo>($t4)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:160:13+26
    assume $IsEqual'bool'($t6, $1_option_spec_is_some'$1_function_info_FunctionInfo'($t4));

    // $t6 := opaque end: option::is_some<0x1::function_info::FunctionInfo>($t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:160:13+26

    // if ($t6) goto L1 else goto L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:160:9+425
    if ($t6) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:162:17+47
    assume {:print "$at(161,6711,6758)"} true;
L1:

    // $t7 := features::dispatchable_fungible_asset_enabled() on_abort goto L6 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:162:17+47
    assume {:print "$at(161,6711,6758)"} true;
    call $t7 := $1_features_dispatchable_fungible_asset_enabled();
    if ($abort_flag) {
        assume {:print "$at(161,6711,6758)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(49,5):", $t5} $t5 == $t5;
        goto L6;
    }

    // if ($t7) goto L3 else goto L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:161:13+6
    assume {:print "$at(161,6685,6691)"} true;
    if ($t7) { goto L3; } else { goto L2; }

    // label L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:165:39+9
    assume {:print "$at(161,6863,6872)"} true;
L3:

    // $t8 := opaque begin: option::borrow<0x1::function_info::FunctionInfo>($t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:165:24+25
    assume {:print "$at(161,6848,6873)"} true;

    // assume Identical($t9, option::spec_is_none<0x1::function_info::FunctionInfo>($t4)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:165:24+25
    assume ($t9 == $1_option_spec_is_none'$1_function_info_FunctionInfo'($t4));

    // if ($t9) goto L8 else goto L7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:165:24+25
    if ($t9) { goto L8; } else { goto L7; }

    // label L8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:165:24+25
L8:

    // assume And(option::spec_is_none<0x1::function_info::FunctionInfo>($t4), Eq(262145, $t5)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:165:24+25
    assume {:print "$at(161,6848,6873)"} true;
    assume ($1_option_spec_is_none'$1_function_info_FunctionInfo'($t4) && $IsEqual'num'(262145, $t5));

    // trace_abort($t5) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:165:24+25
    assume {:print "$at(161,6848,6873)"} true;
    assume {:print "$track_abort(49,5):", $t5} $t5 == $t5;

    // goto L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:165:24+25
    goto L6;

    // label L7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:165:24+25
L7:

    // assume WellFormed($t8) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:165:24+25
    assume {:print "$at(161,6848,6873)"} true;
    assume $IsValid'$1_function_info_FunctionInfo'($t8);

    // assume Eq<0x1::function_info::FunctionInfo>($t8, option::spec_borrow<0x1::function_info::FunctionInfo>($t4)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:165:24+25
    assume $IsEqual'$1_function_info_FunctionInfo'($t8, $1_option_spec_borrow'$1_function_info_FunctionInfo'($t4));

    // $t8 := opaque end: option::borrow<0x1::function_info::FunctionInfo>($t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:165:24+25

    // trace_local[func]($t8) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:165:24+25
    assume {:print "$track_local(49,5,2):", $t8} $t8 == $t8;

    // opaque begin: function_info::load_module_from_function($t8) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:166:13+46
    assume {:print "$at(161,6888,6934)"} true;

    // $t10 := havoc[val]() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:166:13+46
    havoc $t10;

    // if ($t10) goto L10 else goto L9 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:166:13+46
    if ($t10) { goto L10; } else { goto L9; }

    // label L10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:166:13+46
L10:

    // trace_abort($t5) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:166:13+46
    assume {:print "$at(161,6888,6934)"} true;
    assume {:print "$track_abort(49,5):", $t5} $t5 == $t5;

    // goto L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:166:13+46
    goto L6;

    // label L9 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:166:13+46
L9:

    // opaque end: function_info::load_module_from_function($t8) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:166:13+46
    assume {:print "$at(161,6888,6934)"} true;

    // $t11 := opaque begin: dispatchable_fungible_asset::dispatchable_derived_balance<#0>($t0, $t8) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:167:13+41
    assume {:print "$at(161,6949,6990)"} true;

    // $t12 := havoc[val]() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:167:13+41
    havoc $t12;

    // if ($t12) goto L12 else goto L11 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:167:13+41
    if ($t12) { goto L12; } else { goto L11; }

    // label L12 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:167:13+41
L12:

    // trace_abort($t5) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:167:13+41
    assume {:print "$at(161,6949,6990)"} true;
    assume {:print "$track_abort(49,5):", $t5} $t5 == $t5;

    // goto L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:167:13+41
    goto L6;

    // label L11 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:167:13+41
L11:

    // assume WellFormed($t11) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:167:13+41
    assume {:print "$at(161,6949,6990)"} true;
    assume $IsValid'u64'($t11);

    // $t11 := opaque end: dispatchable_fungible_asset::dispatchable_derived_balance<#0>($t0, $t8) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:167:13+41

    // $t3 := $t11 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:167:13+41
    $t3 := $t11;

    // trace_local[return]($t11) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:167:13+41
    assume {:print "$track_local(49,5,3):", $t11} $t11 == $t11;

    // label L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:160:9+425
    assume {:print "$at(161,6638,7063)"} true;
L4:

    // trace_return[0]($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:160:9+425
    assume {:print "$at(161,6638,7063)"} true;
    assume {:print "$track_return(49,5,0):", $t3} $t3 == $t3;

    // goto L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:160:9+425
    goto L5;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:163:32+14
    assume {:print "$at(161,6792,6806)"} true;
L2:

    // $t13 := 3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:163:32+14
    assume {:print "$at(161,6792,6806)"} true;
    $t13 := 3;
    assume $IsValid'u64'($t13);

    // $t14 := error::aborted($t13) on_abort goto L6 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:163:17+30
    call $t14 := $1_error_aborted($t13);
    if ($abort_flag) {
        assume {:print "$at(161,6777,6807)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(49,5):", $t5} $t5 == $t5;
        goto L6;
    }

    // trace_abort($t14) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:161:13+6
    assume {:print "$at(161,6685,6691)"} true;
    assume {:print "$track_abort(49,5):", $t14} $t14 == $t14;

    // $t5 := move($t14) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:161:13+6
    $t5 := $t14;

    // goto L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:161:13+6
    goto L6;

    // label L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:169:13+30
    assume {:print "$at(161,7022,7052)"} true;
L0:

    // $t15 := fungible_asset::balance<#0>($t0) on_abort goto L6 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:169:13+30
    assume {:print "$at(161,7022,7052)"} true;
    call $t15 := $1_fungible_asset_balance'$1_fungible_asset_FungibleStore'($t0);
    if ($abort_flag) {
        assume {:print "$at(161,7022,7052)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(49,5):", $t5} $t5 == $t5;
        goto L6;
    }

    // $t3 := $t15 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:169:13+30
    $t3 := $t15;

    // trace_local[return]($t15) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:169:13+30
    assume {:print "$track_local(49,5,3):", $t15} $t15 == $t15;

    // goto L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:169:13+30
    goto L4;

    // label L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:171:5+1
    assume {:print "$at(161,7069,7070)"} true;
L5:

    // return $t3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:171:5+1
    assume {:print "$at(161,7069,7070)"} true;
    $ret0 := $t3;
    return;

    // label L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:171:5+1
L6:

    // abort($t5) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\dispatchable_fungible_asset.move:171:5+1
    assume {:print "$at(161,7069,7070)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// struct primary_fungible_store::DeriveRefPod at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:30:5+77
datatype $1_primary_fungible_store_DeriveRefPod {
    $1_primary_fungible_store_DeriveRefPod($metadata_derive_ref: $1_object_DeriveRef)
}
function {:inline} $Update'$1_primary_fungible_store_DeriveRefPod'_metadata_derive_ref(s: $1_primary_fungible_store_DeriveRefPod, x: $1_object_DeriveRef): $1_primary_fungible_store_DeriveRefPod {
    $1_primary_fungible_store_DeriveRefPod(x)
}
function $IsValid'$1_primary_fungible_store_DeriveRefPod'(s: $1_primary_fungible_store_DeriveRefPod): bool {
    $IsValid'$1_object_DeriveRef'(s->$metadata_derive_ref)
}
function {:inline} $IsEqual'$1_primary_fungible_store_DeriveRefPod'(s1: $1_primary_fungible_store_DeriveRefPod, s2: $1_primary_fungible_store_DeriveRefPod): bool {
    s1 == s2
}
var $1_primary_fungible_store_DeriveRefPod_$memory: $Memory $1_primary_fungible_store_DeriveRefPod;

// fun primary_fungible_store::balance<0x1::fungible_asset::Metadata> [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:159:5+271
procedure {:inline 1} $1_primary_fungible_store_balance'$1_fungible_asset_Metadata'(_$t0: int, _$t1: $1_object_Object'$1_fungible_asset_Metadata') returns ($ret0: int)
{
    // declare local variables
    var $t2: int;
    var $t3: bool;
    var $t4: int;
    var $t5: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t6: int;
    var $t7: int;
    var $t0: int;
    var $t1: $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[account]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:159:5+1
    assume {:print "$at(191,7334,7335)"} true;
    assume {:print "$track_local(50,4,0):", $t0} $t0 == $t0;

    // trace_local[metadata]($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:159:5+1
    assume {:print "$track_local(50,4,1):", $t1} $t1 == $t1;

    // $t3 := primary_fungible_store::primary_store_exists<#0>($t0, $t1) on_abort goto L4 with $t4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:160:13+39
    assume {:print "$at(191,7420,7459)"} true;
    call $t3 := $1_primary_fungible_store_primary_store_exists'$1_fungible_asset_Metadata'($t0, $t1);
    if ($abort_flag) {
        assume {:print "$at(191,7420,7459)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(50,4):", $t4} $t4 == $t4;
        goto L4;
    }

    // if ($t3) goto L1 else goto L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:160:9+182
    if ($t3) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:161:72+7
    assume {:print "$at(191,7535,7542)"} true;
L1:

    // $t5 := primary_fungible_store::primary_store<#0>($t0, $t1) on_abort goto L4 with $t4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:161:58+32
    assume {:print "$at(191,7521,7553)"} true;
    call $t5 := $1_primary_fungible_store_primary_store'$1_fungible_asset_Metadata'($t0, $t1);
    if ($abort_flag) {
        assume {:print "$at(191,7521,7553)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(50,4):", $t4} $t4 == $t4;
        goto L4;
    }

    // $t6 := dispatchable_fungible_asset::derived_balance<0x1::fungible_asset::FungibleStore>($t5) on_abort goto L4 with $t4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:161:13+78
    call $t6 := $1_dispatchable_fungible_asset_derived_balance'$1_fungible_asset_FungibleStore'($t5);
    if ($abort_flag) {
        assume {:print "$at(191,7476,7554)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(50,4):", $t4} $t4 == $t4;
        goto L4;
    }

    // $t2 := $t6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:161:13+78
    $t2 := $t6;

    // trace_local[return]($t6) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:161:13+78
    assume {:print "$track_local(50,4,2):", $t6} $t6 == $t6;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:160:9+182
    assume {:print "$at(191,7416,7598)"} true;
L2:

    // trace_return[0]($t2) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:160:9+182
    assume {:print "$at(191,7416,7598)"} true;
    assume {:print "$track_return(50,4,0):", $t2} $t2 == $t2;

    // goto L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:160:9+182
    goto L3;

    // label L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:163:13+1
    assume {:print "$at(191,7586,7587)"} true;
L0:

    // $t7 := 0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:163:13+1
    assume {:print "$at(191,7586,7587)"} true;
    $t7 := 0;
    assume $IsValid'u64'($t7);

    // $t2 := $t7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:163:13+1
    $t2 := $t7;

    // trace_local[return]($t7) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:163:13+1
    assume {:print "$track_local(50,4,2):", $t7} $t7 == $t7;

    // goto L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:163:13+1
    goto L2;

    // label L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:165:5+1
    assume {:print "$at(191,7604,7605)"} true;
L3:

    // return $t2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:165:5+1
    assume {:print "$at(191,7604,7605)"} true;
    $ret0 := $t2;
    return;

    // label L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:165:5+1
L4:

    // abort($t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:165:5+1
    assume {:print "$at(191,7604,7605)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun primary_fungible_store::deposit [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:195:5+270
procedure {:inline 1} $1_primary_fungible_store_deposit(_$t0: int, _$t1: $1_fungible_asset_FungibleAsset) returns ()
{
    // declare local variables
    var $t2: $1_object_Object'$1_fungible_asset_Metadata';
    var $t3: $1_object_Object'$1_fungible_asset_Metadata';
    var $t4: int;
    var $t5: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t0: int;
    var $t1: $1_fungible_asset_FungibleAsset;
    var $temp_0'$1_fungible_asset_FungibleAsset': $1_fungible_asset_FungibleAsset;
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'address': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[owner]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:195:5+1
    assume {:print "$at(191,8880,8881)"} true;
    assume {:print "$track_local(50,5,0):", $t0} $t0 == $t0;

    // trace_local[fa]($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:195:5+1
    assume {:print "$track_local(50,5,1):", $t1} $t1 == $t1;

    // $t3 := fungible_asset::asset_metadata($t1) on_abort goto L2 with $t4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:196:24+35
    assume {:print "$at(191,8982,9017)"} true;
    call $t3 := $1_fungible_asset_asset_metadata($t1);
    if ($abort_flag) {
        assume {:print "$at(191,8982,9017)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(50,5):", $t4} $t4 == $t4;
        goto L2;
    }

    // trace_local[metadata]($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:196:24+35
    assume {:print "$track_local(50,5,2):", $t3} $t3 == $t3;

    // $t5 := primary_fungible_store::ensure_primary_store_exists<0x1::fungible_asset::Metadata>($t0, $t3) on_abort goto L2 with $t4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:197:21+44
    assume {:print "$at(191,9040,9084)"} true;
    call $t5 := $1_primary_fungible_store_ensure_primary_store_exists'$1_fungible_asset_Metadata'($t0, $t3);
    if ($abort_flag) {
        assume {:print "$at(191,9040,9084)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(50,5):", $t4} $t4 == $t4;
        goto L2;
    }

    // dispatchable_fungible_asset::deposit<0x1::fungible_asset::FungibleStore>($t5, $t1) on_abort goto L2 with $t4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:198:9+47
    assume {:print "$at(191,9095,9142)"} true;
    call $1_dispatchable_fungible_asset_deposit'$1_fungible_asset_FungibleStore'($t5, $t1);
    if ($abort_flag) {
        assume {:print "$at(191,9095,9142)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(50,5):", $t4} $t4 == $t4;
        goto L2;
    }

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:199:5+1
    assume {:print "$at(191,9149,9150)"} true;
L1:

    // return () at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:199:5+1
    assume {:print "$at(191,9149,9150)"} true;
    return;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:199:5+1
L2:

    // abort($t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:199:5+1
    assume {:print "$at(191,9149,9150)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun primary_fungible_store::withdraw<0x1::fungible_asset::Metadata> [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:187:5+402
procedure {:inline 1} $1_primary_fungible_store_withdraw'$1_fungible_asset_Metadata'(_$t0: $signer, _$t1: $1_object_Object'$1_fungible_asset_Metadata', _$t2: int) returns ($ret0: $1_fungible_asset_FungibleAsset)
{
    // declare local variables
    var $t3: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t4: int;
    var $t5: int;
    var $t6: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t7: $1_fungible_asset_FungibleAsset;
    var $t0: $signer;
    var $t1: $1_object_Object'$1_fungible_asset_Metadata';
    var $t2: int;
    var $temp_0'$1_fungible_asset_FungibleAsset': $1_fungible_asset_FungibleAsset;
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // bytecode translation starts here
    // trace_local[owner]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:187:5+1
    assume {:print "$at(191,8395,8396)"} true;
    assume {:print "$track_local(50,11,0):", $t0} $t0 == $t0;

    // trace_local[metadata]($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:187:5+1
    assume {:print "$track_local(50,11,1):", $t1} $t1 == $t1;

    // trace_local[amount]($t2) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:187:5+1
    assume {:print "$track_local(50,11,2):", $t2} $t2 == $t2;

    // $t4 := signer::address_of($t0) on_abort goto L2 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:188:49+25
    assume {:print "$at(191,8561,8586)"} true;
    call $t4 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(191,8561,8586)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(50,11):", $t5} $t5 == $t5;
        goto L2;
    }

    // $t6 := primary_fungible_store::ensure_primary_store_exists<#0>($t4, $t1) on_abort goto L2 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:188:21+64
    call $t6 := $1_primary_fungible_store_ensure_primary_store_exists'$1_fungible_asset_Metadata'($t4, $t1);
    if ($abort_flag) {
        assume {:print "$at(191,8533,8597)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(50,11):", $t5} $t5 == $t5;
        goto L2;
    }

    // trace_local[store]($t6) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:188:21+64
    assume {:print "$track_local(50,11,3):", $t6} $t6 == $t6;

    // primary_fungible_store::may_be_unburn($t0, $t6) on_abort goto L2 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:190:9+27
    assume {:print "$at(191,8693,8720)"} true;
    call $1_primary_fungible_store_may_be_unburn($t0, $t6);
    if ($abort_flag) {
        assume {:print "$at(191,8693,8720)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(50,11):", $t5} $t5 == $t5;
        goto L2;
    }

    // $t7 := dispatchable_fungible_asset::withdraw<0x1::fungible_asset::FungibleStore>($t0, $t6, $t2) on_abort goto L2 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:191:9+59
    assume {:print "$at(191,8731,8790)"} true;
    call $t7 := $1_dispatchable_fungible_asset_withdraw'$1_fungible_asset_FungibleStore'($t0, $t6, $t2);
    if ($abort_flag) {
        assume {:print "$at(191,8731,8790)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(50,11):", $t5} $t5 == $t5;
        goto L2;
    }

    // trace_return[0]($t7) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:187:120+287
    assume {:print "$at(191,8510,8797)"} true;
    assume {:print "$track_return(50,11,0):", $t7} $t7 == $t7;

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:192:5+1
    assume {:print "$at(191,8796,8797)"} true;
L1:

    // return $t7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:192:5+1
    assume {:print "$at(191,8796,8797)"} true;
    $ret0 := $t7;
    return;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:192:5+1
L2:

    // abort($t5) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:192:5+1
    assume {:print "$at(191,8796,8797)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun primary_fungible_store::create_primary_store<0x1::fungible_asset::Metadata> [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:75:5+759
procedure {:inline 1} $1_primary_fungible_store_create_primary_store'$1_fungible_asset_Metadata'(_$t0: int, _$t1: $1_object_Object'$1_fungible_asset_Metadata') returns ($ret0: $1_object_Object'$1_fungible_asset_FungibleStore')
{
    // declare local variables
    var $t2: int;
    var $t3: $1_object_DeriveRef;
    var $t4: $1_object_ConstructorRef;
    var $t5: $1_object_ConstructorRef;
    var $t6: $1_object_TransferRef;
    var $t7: int;
    var $t8: int;
    var $t9: $1_object_Object'$1_fungible_asset_Metadata';
    var $t10: $1_primary_fungible_store_DeriveRefPod;
    var $t11: $1_object_DeriveRef;
    var $t12: int;
    var $t13: $1_object_ConstructorRef;
    var $t14: $1_object_TransferRef;
    var $t15: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t0: int;
    var $t1: $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_DeriveRef': $1_object_DeriveRef;
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'$1_object_TransferRef': $1_object_TransferRef;
    var $temp_0'address': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[owner_addr]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:75:5+1
    assume {:print "$at(191,3581,3582)"} true;
    assume {:print "$track_local(50,14,0):", $t0} $t0 == $t0;

    // trace_local[metadata]($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:75:5+1
    assume {:print "$track_local(50,14,1):", $t1} $t1 == $t1;

    // $t7 := object::object_address<#0>($t1) on_abort goto L2 with $t8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:79:29+33
    assume {:print "$at(191,3765,3798)"} true;
    call $t7 := $1_object_object_address'$1_fungible_asset_Metadata'($t1);
    if ($abort_flag) {
        assume {:print "$at(191,3765,3798)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(50,14):", $t8} $t8 == $t8;
        goto L2;
    }

    // trace_local[metadata_addr]($t7) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:79:29+33
    assume {:print "$track_local(50,14,2):", $t7} $t7 == $t7;

    // $t9 := object::address_to_object<0x1::fungible_asset::Metadata>($t7) on_abort goto L2 with $t8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:80:9+50
    assume {:print "$at(191,3809,3859)"} true;
    call $t9 := $1_object_address_to_object'$1_fungible_asset_Metadata'($t7);
    if ($abort_flag) {
        assume {:print "$at(191,3809,3859)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(50,14):", $t8} $t8 == $t8;
        goto L2;
    }

    // drop($t9) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:80:9+50

    // $t10 := get_global<0x1::primary_fungible_store::DeriveRefPod>($t7) on_abort goto L2 with $t8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:81:27+42
    assume {:print "$at(191,3888,3930)"} true;
    if (!$ResourceExists($1_primary_fungible_store_DeriveRefPod_$memory, $t7)) {
        call $ExecFailureAbort();
    } else {
        $t10 := $ResourceValue($1_primary_fungible_store_DeriveRefPod_$memory, $t7);
    }
    if ($abort_flag) {
        assume {:print "$at(191,3888,3930)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(50,14):", $t8} $t8 == $t8;
        goto L2;
    }

    // $t11 := get_field<0x1::primary_fungible_store::DeriveRefPod>.metadata_derive_ref($t10) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:81:26+63
    $t11 := $t10->$metadata_derive_ref;

    // trace_local[derive_ref]($t11) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:81:26+63
    assume {:print "$track_local(50,14,3):", $t11} $t11 == $t11;

    // assume Identical($t12, object::spec_create_user_derived_object_address($t0, select object::DeriveRef.self<0x1::object::DeriveRef>($t11))) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.spec.move:185:9+89
    assume {:print "$at(187,8052,8141)"} true;
    assume ($t12 == $1_object_spec_create_user_derived_object_address($t0, $t11->$self));

    // $t13 := object::create_user_derived_object($t0, $t11) on_abort goto L2 with $t8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:82:32+58
    assume {:print "$at(191,3984,4042)"} true;
    call $t13 := $1_object_create_user_derived_object($t0, $t11);
    if ($abort_flag) {
        assume {:print "$at(191,3984,4042)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(50,14):", $t8} $t8 == $t8;
        goto L2;
    }

    // trace_local[$t9]($t13) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:82:32+58
    assume {:print "$track_local(50,14,4):", $t13} $t13 == $t13;

    // trace_local[constructor_ref]($t13) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:82:31+59
    assume {:print "$track_local(50,14,5):", $t13} $t13 == $t13;

    // $t14 := object::generate_transfer_ref($t13) on_abort goto L2 with $t8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:84:29+46
    assume {:print "$at(191,4162,4208)"} true;
    call $t14 := $1_object_generate_transfer_ref($t13);
    if ($abort_flag) {
        assume {:print "$at(191,4162,4208)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(50,14):", $t8} $t8 == $t8;
        goto L2;
    }

    // trace_local[$t12]($t14) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:84:29+46
    assume {:print "$track_local(50,14,6):", $t14} $t14 == $t14;

    // object::disable_ungated_transfer($t14) on_abort goto L2 with $t8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:85:9+46
    assume {:print "$at(191,4219,4265)"} true;
    call $1_object_disable_ungated_transfer($t14);
    if ($abort_flag) {
        assume {:print "$at(191,4219,4265)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(50,14):", $t8} $t8 == $t8;
        goto L2;
    }

    // $t15 := fungible_asset::create_store<#0>($t13, $t1) on_abort goto L2 with $t8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:87:9+55
    assume {:print "$at(191,4278,4333)"} true;
    call $t15 := $1_fungible_asset_create_store'$1_fungible_asset_Metadata'($t13, $t1);
    if ($abort_flag) {
        assume {:print "$at(191,4278,4333)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(50,14):", $t8} $t8 == $t8;
        goto L2;
    }

    // trace_return[0]($t15) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:78:52+606
    assume {:print "$at(191,3734,4340)"} true;
    assume {:print "$track_return(50,14,0):", $t15} $t15 == $t15;

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:88:5+1
    assume {:print "$at(191,4339,4340)"} true;
L1:

    // return $t15 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:88:5+1
    assume {:print "$at(191,4339,4340)"} true;
    $ret0 := $t15;
    return;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:88:5+1
L2:

    // abort($t8) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:88:5+1
    assume {:print "$at(191,4339,4340)"} true;
    $abort_code := $t8;
    $abort_flag := true;
    return;

}

// fun primary_fungible_store::create_primary_store_enabled_fungible_asset [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:37:5+716
procedure {:inline 1} $1_primary_fungible_store_create_primary_store_enabled_fungible_asset(_$t0: $1_object_ConstructorRef, _$t1: $1_option_Option'u128', _$t2: $1_string_String, _$t3: $1_string_String, _$t4: int, _$t5: $1_string_String, _$t6: $1_string_String) returns ()
{
    // declare local variables
    var $t7: $signer;
    var $t8: $1_object_Object'$1_fungible_asset_Metadata';
    var $t9: int;
    var $t10: $signer;
    var $t11: $1_object_DeriveRef;
    var $t12: $1_primary_fungible_store_DeriveRefPod;
    var $t0: $1_object_ConstructorRef;
    var $t1: $1_option_Option'u128';
    var $t2: $1_string_String;
    var $t3: $1_string_String;
    var $t4: int;
    var $t5: $1_string_String;
    var $t6: $1_string_String;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_option_Option'u128'': $1_option_Option'u128';
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'signer': $signer;
    var $temp_0'u8': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;
    $t3 := _$t3;
    $t4 := _$t4;
    $t5 := _$t5;
    $t6 := _$t6;

    // bytecode translation starts here
    // trace_local[constructor_ref]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:37:5+1
    assume {:print "$at(191,2245,2246)"} true;
    assume {:print "$track_local(50,15,0):", $t0} $t0 == $t0;

    // trace_local[maximum_supply]($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:37:5+1
    assume {:print "$track_local(50,15,1):", $t1} $t1 == $t1;

    // trace_local[name]($t2) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:37:5+1
    assume {:print "$track_local(50,15,2):", $t2} $t2 == $t2;

    // trace_local[symbol]($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:37:5+1
    assume {:print "$track_local(50,15,3):", $t3} $t3 == $t3;

    // trace_local[decimals]($t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:37:5+1
    assume {:print "$track_local(50,15,4):", $t4} $t4 == $t4;

    // trace_local[icon_uri]($t5) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:37:5+1
    assume {:print "$track_local(50,15,5):", $t5} $t5 == $t5;

    // trace_local[project_uri]($t6) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:37:5+1
    assume {:print "$track_local(50,15,6):", $t6} $t6 == $t6;

    // $t8 := fungible_asset::add_fungibility($t0, $t1, $t2, $t3, $t4, $t5, $t6) on_abort goto L2 with $t9 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:46:9+214
    assume {:print "$at(191,2529,2743)"} true;
    call $t8 := $1_fungible_asset_add_fungibility($t0, $t1, $t2, $t3, $t4, $t5, $t6);
    if ($abort_flag) {
        assume {:print "$at(191,2529,2743)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(50,15):", $t9} $t9 == $t9;
        goto L2;
    }

    // drop($t8) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:46:9+214

    // $t10 := object::generate_signer($t0) on_abort goto L2 with $t9 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:55:29+40
    assume {:print "$at(191,2774,2814)"} true;
    call $t10 := $1_object_generate_signer($t0);
    if ($abort_flag) {
        assume {:print "$at(191,2774,2814)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(50,15):", $t9} $t9 == $t9;
        goto L2;
    }

    // trace_local[$t15]($t10) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:55:29+40
    assume {:print "$track_local(50,15,7):", $t10} $t10 == $t10;

    // $t11 := object::generate_derive_ref($t0) on_abort goto L2 with $t9 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:57:34+44
    assume {:print "$at(191,2896,2940)"} true;
    call $t11 := $1_object_generate_derive_ref($t0);
    if ($abort_flag) {
        assume {:print "$at(191,2896,2940)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(50,15):", $t9} $t9 == $t9;
        goto L2;
    }

    // $t12 := pack 0x1::primary_fungible_store::DeriveRefPod($t11) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:56:31+105
    assume {:print "$at(191,2847,2952)"} true;
    $t12 := $1_primary_fungible_store_DeriveRefPod($t11);

    // move_to<0x1::primary_fungible_store::DeriveRefPod>($t12, $t10) on_abort goto L2 with $t9 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:56:9+128
    if ($ResourceExists($1_primary_fungible_store_DeriveRefPod_$memory, $t10->$addr)) {
        call $ExecFailureAbort();
    } else {
        $1_primary_fungible_store_DeriveRefPod_$memory := $ResourceUpdate($1_primary_fungible_store_DeriveRefPod_$memory, $t10->$addr, $t12);
    }
    if ($abort_flag) {
        assume {:print "$at(191,2825,2953)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(50,15):", $t9} $t9 == $t9;
        goto L2;
    }

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:59:5+1
    assume {:print "$at(191,2960,2961)"} true;
L1:

    // return () at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:59:5+1
    assume {:print "$at(191,2960,2961)"} true;
    return;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:59:5+1
L2:

    // abort($t9) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:59:5+1
    assume {:print "$at(191,2960,2961)"} true;
    $abort_code := $t9;
    $abort_flag := true;
    return;

}

// fun primary_fungible_store::ensure_primary_store_exists<0x1::fungible_asset::Metadata> [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:62:5+417
procedure {:inline 1} $1_primary_fungible_store_ensure_primary_store_exists'$1_fungible_asset_Metadata'(_$t0: int, _$t1: $1_object_Object'$1_fungible_asset_Metadata') returns ($ret0: $1_object_Object'$1_fungible_asset_FungibleStore')
{
    // declare local variables
    var $t2: int;
    var $t3: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t4: int;
    var $t5: int;
    var $t6: bool;
    var $t7: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t8: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t0: int;
    var $t1: $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'address': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[owner]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:62:5+1
    assume {:print "$at(191,3071,3072)"} true;
    assume {:print "$track_local(50,17,0):", $t0} $t0 == $t0;

    // trace_local[metadata]($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:62:5+1
    assume {:print "$track_local(50,17,1):", $t1} $t1 == $t1;

    // $t4 := primary_fungible_store::primary_store_address<#0>($t0, $t1) on_abort goto L4 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:66:26+38
    assume {:print "$at(191,3254,3292)"} true;
    call $t4 := $1_primary_fungible_store_primary_store_address'$1_fungible_asset_Metadata'($t0, $t1);
    if ($abort_flag) {
        assume {:print "$at(191,3254,3292)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(50,17):", $t5} $t5 == $t5;
        goto L4;
    }

    // trace_local[$t4]($t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:66:26+38
    assume {:print "$track_local(50,17,2):", $t4} $t4 == $t4;

    // $t6 := fungible_asset::store_exists($t4) on_abort goto L4 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:67:13+40
    assume {:print "$at(191,3307,3347)"} true;
    call $t6 := $1_fungible_asset_store_exists($t4);
    if ($abort_flag) {
        assume {:print "$at(191,3307,3347)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(50,17):", $t5} $t5 == $t5;
        goto L4;
    }

    // if ($t6) goto L1 else goto L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:67:9+178
    if ($t6) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:68:13+37
    assume {:print "$at(191,3364,3401)"} true;
L1:

    // $t7 := object::address_to_object<0x1::fungible_asset::FungibleStore>($t4) on_abort goto L4 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:68:13+37
    assume {:print "$at(191,3364,3401)"} true;
    call $t7 := $1_object_address_to_object'$1_fungible_asset_FungibleStore'($t4);
    if ($abort_flag) {
        assume {:print "$at(191,3364,3401)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(50,17):", $t5} $t5 == $t5;
        goto L4;
    }

    // $t3 := $t7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:68:13+37
    $t3 := $t7;

    // trace_local[return]($t7) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:68:13+37
    assume {:print "$track_local(50,17,3):", $t7} $t7 == $t7;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:67:9+178
    assume {:print "$at(191,3303,3481)"} true;
L2:

    // trace_return[0]($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:67:9+178
    assume {:print "$at(191,3303,3481)"} true;
    assume {:print "$track_return(50,17,0):", $t3} $t3 == $t3;

    // goto L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:67:9+178
    goto L3;

    // label L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:70:34+5
    assume {:print "$at(191,3454,3459)"} true;
L0:

    // $t8 := primary_fungible_store::create_primary_store<#0>($t0, $t1) on_abort goto L4 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:70:13+37
    assume {:print "$at(191,3433,3470)"} true;
    call $t8 := $1_primary_fungible_store_create_primary_store'$1_fungible_asset_Metadata'($t0, $t1);
    if ($abort_flag) {
        assume {:print "$at(191,3433,3470)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(50,17):", $t5} $t5 == $t5;
        goto L4;
    }

    // $t3 := $t8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:70:13+37
    $t3 := $t8;

    // trace_local[return]($t8) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:70:13+37
    assume {:print "$track_local(50,17,3):", $t8} $t8 == $t8;

    // goto L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:70:13+37
    goto L2;

    // label L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:72:5+1
    assume {:print "$at(191,3487,3488)"} true;
L3:

    // return $t3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:72:5+1
    assume {:print "$at(191,3487,3488)"} true;
    $ret0 := $t3;
    return;

    // label L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:72:5+1
L4:

    // abort($t5) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:72:5+1
    assume {:print "$at(191,3487,3488)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun primary_fungible_store::may_be_unburn [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:300:5+167
procedure {:inline 1} $1_primary_fungible_store_may_be_unburn(_$t0: $signer, _$t1: $1_object_Object'$1_fungible_asset_FungibleStore') returns ()
{
    // declare local variables
    var $t2: bool;
    var $t3: int;
    var $t4: int;
    var $t5: $1_object_TombStone;
    var $t6: int;
    var $t7: int;
    var $t0: $signer;
    var $t1: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'signer': $signer;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[owner]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:300:5+1
    assume {:print "$at(191,14088,14089)"} true;
    assume {:print "$track_local(50,19,0):", $t0} $t0 == $t0;

    // trace_local[store]($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:300:5+1
    assume {:print "$track_local(50,19,1):", $t1} $t1 == $t1;

    // $t2 := object::is_burnt<0x1::fungible_asset::FungibleStore>($t1) on_abort goto L4 with $t3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:301:13+23
    assume {:print "$at(191,14167,14190)"} true;
    call $t2 := $1_object_is_burnt'$1_fungible_asset_FungibleStore'($t1);
    if ($abort_flag) {
        assume {:print "$at(191,14167,14190)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(50,19):", $t3} $t3 == $t3;
        goto L4;
    }

    // if ($t2) goto L1 else goto L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:301:9+84
    if ($t2) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:302:28+5
    assume {:print "$at(191,14222,14227)"} true;
L1:

    // assume Identical($t4, select object::Object.inner<0x1::object::Object<0x1::fungible_asset::FungibleStore>>($t1)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.spec.move:505:9+34
    assume {:print "$at(187,20550,20584)"} true;
    assume ($t4 == $t1->$inner);

    // assume Identical($t5, global<0x1::object::TombStone>($t4)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.spec.move:508:9+58
    assume {:print "$at(187,20688,20746)"} true;
    assume ($t5 == $ResourceValue($1_object_TombStone_$memory, $t4));

    // assume Identical($t6, signer::$address_of($t0)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.spec.move:509:9+64
    assume {:print "$at(187,20756,20820)"} true;
    assume ($t6 == $1_signer_$address_of($t0));

    // assume Identical($t7, select object::ObjectCore.owner<0x1::object::ObjectCore>(global<0x1::object::ObjectCore>($t4))) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.spec.move:510:9+75
    assume {:print "$at(187,20830,20905)"} true;
    assume ($t7 == $ResourceValue($1_object_ObjectCore_$memory, $t4)->$owner);

    // object::unburn<0x1::fungible_asset::FungibleStore>($t0, $t1) on_abort goto L4 with $t3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:302:13+28
    assume {:print "$at(191,14207,14235)"} true;
    call $1_object_unburn'$1_fungible_asset_FungibleStore'($t0, $t1);
    if ($abort_flag) {
        assume {:print "$at(191,14207,14235)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(50,19):", $t3} $t3 == $t3;
        goto L4;
    }

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:300:69+103
    assume {:print "$at(191,14152,14255)"} true;
L2:

    // goto L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:300:69+103
    assume {:print "$at(191,14152,14255)"} true;
    goto L3;

    // label L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:301:9+84
    assume {:print "$at(191,14163,14247)"} true;
L0:

    // goto L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:301:9+84
    assume {:print "$at(191,14163,14247)"} true;
    goto L2;

    // label L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:304:5+1
    assume {:print "$at(191,14254,14255)"} true;
L3:

    // return () at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:304:5+1
    assume {:print "$at(191,14254,14255)"} true;
    return;

    // label L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:304:5+1
L4:

    // abort($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:304:5+1
    assume {:print "$at(191,14254,14255)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun primary_fungible_store::primary_store<0x1::fungible_asset::Metadata> [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:99:5+219
procedure {:inline 1} $1_primary_fungible_store_primary_store'$1_fungible_asset_Metadata'(_$t0: int, _$t1: $1_object_Object'$1_fungible_asset_Metadata') returns ($ret0: $1_object_Object'$1_fungible_asset_FungibleStore')
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t0: int;
    var $t1: $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'address': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[owner]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:99:5+1
    assume {:print "$at(191,4745,4746)"} true;
    assume {:print "$track_local(50,20,0):", $t0} $t0 == $t0;

    // trace_local[metadata]($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:99:5+1
    assume {:print "$track_local(50,20,1):", $t1} $t1 == $t1;

    // $t2 := primary_fungible_store::primary_store_address<#0>($t0, $t1) on_abort goto L2 with $t3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:100:21+38
    assume {:print "$at(191,4861,4899)"} true;
    call $t2 := $1_primary_fungible_store_primary_store_address'$1_fungible_asset_Metadata'($t0, $t1);
    if ($abort_flag) {
        assume {:print "$at(191,4861,4899)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(50,20):", $t3} $t3 == $t3;
        goto L2;
    }

    // $t4 := object::address_to_object<0x1::fungible_asset::FungibleStore>($t2) on_abort goto L2 with $t3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:101:9+47
    assume {:print "$at(191,4910,4957)"} true;
    call $t4 := $1_object_address_to_object'$1_fungible_asset_FungibleStore'($t2);
    if ($abort_flag) {
        assume {:print "$at(191,4910,4957)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(50,20):", $t3} $t3 == $t3;
        goto L2;
    }

    // trace_return[0]($t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:101:9+47
    assume {:print "$track_return(50,20,0):", $t4} $t4 == $t4;

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:102:5+1
    assume {:print "$at(191,4963,4964)"} true;
L1:

    // return $t4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:102:5+1
    assume {:print "$at(191,4963,4964)"} true;
    $ret0 := $t4;
    return;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:102:5+1
L2:

    // abort($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:102:5+1
    assume {:print "$at(191,4963,4964)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun primary_fungible_store::primary_store_address<0x1::fungible_asset::Metadata> [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:92:5+233
procedure {:inline 1} $1_primary_fungible_store_primary_store_address'$1_fungible_asset_Metadata'(_$t0: int, _$t1: $1_object_Object'$1_fungible_asset_Metadata') returns ($ret0: int)
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: bool;
    var $t0: int;
    var $t1: $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'address': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[owner]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:92:5+1
    assume {:print "$at(191,4430,4431)"} true;
    assume {:print "$track_local(50,21,0):", $t0} $t0 == $t0;

    // trace_local[metadata]($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:92:5+1
    assume {:print "$track_local(50,21,1):", $t1} $t1 == $t1;

    // $t3 := object::object_address<#0>($t1) on_abort goto L2 with $t4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:93:29+33
    assume {:print "$at(191,4548,4581)"} true;
    call $t3 := $1_object_object_address'$1_fungible_asset_Metadata'($t1);
    if ($abort_flag) {
        assume {:print "$at(191,4548,4581)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(50,21):", $t4} $t4 == $t4;
        goto L2;
    }

    // trace_local[metadata_addr]($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:93:29+33
    assume {:print "$track_local(50,21,2):", $t3} $t3 == $t3;

    // $t5 := opaque begin: object::create_user_derived_object_address($t0, $t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:94:9+64
    assume {:print "$at(191,4592,4656)"} true;

    // $t6 := havoc[val]() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:94:9+64
    havoc $t6;

    // if ($t6) goto L4 else goto L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:94:9+64
    if ($t6) { goto L4; } else { goto L3; }

    // label L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:94:9+64
L4:

    // trace_abort($t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:94:9+64
    assume {:print "$at(191,4592,4656)"} true;
    assume {:print "$track_abort(50,21):", $t4} $t4 == $t4;

    // goto L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:94:9+64
    goto L2;

    // label L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:94:9+64
L3:

    // assume WellFormed($t5) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:94:9+64
    assume {:print "$at(191,4592,4656)"} true;
    assume $IsValid'address'($t5);

    // assume Eq<address>($t5, object::spec_create_user_derived_object_address($t0, $t3)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:94:9+64
    assume $IsEqual'address'($t5, $1_object_spec_create_user_derived_object_address($t0, $t3));

    // $t5 := opaque end: object::create_user_derived_object_address($t0, $t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:94:9+64

    // trace_return[0]($t5) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:94:9+64
    assume {:print "$track_return(50,21,0):", $t5} $t5 == $t5;

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:95:5+1
    assume {:print "$at(191,4662,4663)"} true;
L1:

    // return $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:95:5+1
    assume {:print "$at(191,4662,4663)"} true;
    $ret0 := $t5;
    return;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:95:5+1
L2:

    // abort($t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:95:5+1
    assume {:print "$at(191,4662,4663)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun primary_fungible_store::primary_store_exists<0x1::fungible_asset::Metadata> [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:106:5+173
procedure {:inline 1} $1_primary_fungible_store_primary_store_exists'$1_fungible_asset_Metadata'(_$t0: int, _$t1: $1_object_Object'$1_fungible_asset_Metadata') returns ($ret0: bool)
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: bool;
    var $t0: int;
    var $t1: $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[account]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:106:5+1
    assume {:print "$at(191,5051,5052)"} true;
    assume {:print "$track_local(50,22,0):", $t0} $t0 == $t0;

    // trace_local[metadata]($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:106:5+1
    assume {:print "$track_local(50,22,1):", $t1} $t1 == $t1;

    // $t2 := primary_fungible_store::primary_store_address<#0>($t0, $t1) on_abort goto L2 with $t3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:107:38+40
    assume {:print "$at(191,5176,5216)"} true;
    call $t2 := $1_primary_fungible_store_primary_store_address'$1_fungible_asset_Metadata'($t0, $t1);
    if ($abort_flag) {
        assume {:print "$at(191,5176,5216)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(50,22):", $t3} $t3 == $t3;
        goto L2;
    }

    // $t4 := fungible_asset::store_exists($t2) on_abort goto L2 with $t3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:107:9+70
    call $t4 := $1_fungible_asset_store_exists($t2);
    if ($abort_flag) {
        assume {:print "$at(191,5147,5217)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(50,22):", $t3} $t3 == $t3;
        goto L2;
    }

    // trace_return[0]($t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:107:9+70
    assume {:print "$track_return(50,22,0):", $t4} $t4 == $t4;

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:108:5+1
    assume {:print "$at(191,5223,5224)"} true;
L1:

    // return $t4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:108:5+1
    assume {:print "$at(191,5223,5224)"} true;
    $ret0 := $t4;
    return;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:108:5+1
L2:

    // abort($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\primary_fungible_store.move:108:5+1
    assume {:print "$at(191,5223,5224)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.spec.move:73:10+237
function {:inline} $1_coin_spec_fun_supply_tracked'$1_aptos_coin_AptosCoin'(val: int, supply: $1_option_Option'$1_optional_aggregator_OptionalAggregator'): bool {
    ($1_option_spec_is_some'$1_optional_aggregator_OptionalAggregator'(supply) ==> $IsEqual'u64'(val, $1_optional_aggregator_optional_aggregator_value($1_option_spec_borrow'$1_optional_aggregator_OptionalAggregator'(supply))))
}

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.spec.move:73:10+237
function {:inline} $1_coin_spec_fun_supply_tracked'#0'(val: int, supply: $1_option_Option'$1_optional_aggregator_OptionalAggregator'): bool {
    ($1_option_spec_is_some'$1_optional_aggregator_OptionalAggregator'(supply) ==> $IsEqual'u64'(val, $1_optional_aggregator_optional_aggregator_value($1_option_spec_borrow'$1_optional_aggregator_OptionalAggregator'(supply))))
}

// struct coin::DepositEvent at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:204:5+66
datatype $1_coin_DepositEvent {
    $1_coin_DepositEvent($amount: int)
}
function {:inline} $Update'$1_coin_DepositEvent'_amount(s: $1_coin_DepositEvent, x: int): $1_coin_DepositEvent {
    $1_coin_DepositEvent(x)
}
function $IsValid'$1_coin_DepositEvent'(s: $1_coin_DepositEvent): bool {
    $IsValid'u64'(s->$amount)
}
function {:inline} $IsEqual'$1_coin_DepositEvent'(s1: $1_coin_DepositEvent, s2: $1_coin_DepositEvent): bool {
    s1 == s2
}

// struct coin::WithdrawEvent at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:209:5+67
datatype $1_coin_WithdrawEvent {
    $1_coin_WithdrawEvent($amount: int)
}
function {:inline} $Update'$1_coin_WithdrawEvent'_amount(s: $1_coin_WithdrawEvent, x: int): $1_coin_WithdrawEvent {
    $1_coin_WithdrawEvent(x)
}
function $IsValid'$1_coin_WithdrawEvent'(s: $1_coin_WithdrawEvent): bool {
    $IsValid'u64'(s->$amount)
}
function {:inline} $IsEqual'$1_coin_WithdrawEvent'(s1: $1_coin_WithdrawEvent, s2: $1_coin_WithdrawEvent): bool {
    s1 == s2
}

// struct coin::Coin<0x1::aptos_coin::AptosCoin> at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:125:5+115
datatype $1_coin_Coin'$1_aptos_coin_AptosCoin' {
    $1_coin_Coin'$1_aptos_coin_AptosCoin'($value: int)
}
function {:inline} $Update'$1_coin_Coin'$1_aptos_coin_AptosCoin''_value(s: $1_coin_Coin'$1_aptos_coin_AptosCoin', x: int): $1_coin_Coin'$1_aptos_coin_AptosCoin' {
    $1_coin_Coin'$1_aptos_coin_AptosCoin'(x)
}
function $IsValid'$1_coin_Coin'$1_aptos_coin_AptosCoin''(s: $1_coin_Coin'$1_aptos_coin_AptosCoin'): bool {
    $IsValid'u64'(s->$value)
}
function {:inline} $IsEqual'$1_coin_Coin'$1_aptos_coin_AptosCoin''(s1: $1_coin_Coin'$1_aptos_coin_AptosCoin', s2: $1_coin_Coin'$1_aptos_coin_AptosCoin'): bool {
    s1 == s2
}

// struct coin::Coin<#0> at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:125:5+115
datatype $1_coin_Coin'#0' {
    $1_coin_Coin'#0'($value: int)
}
function {:inline} $Update'$1_coin_Coin'#0''_value(s: $1_coin_Coin'#0', x: int): $1_coin_Coin'#0' {
    $1_coin_Coin'#0'(x)
}
function $IsValid'$1_coin_Coin'#0''(s: $1_coin_Coin'#0'): bool {
    $IsValid'u64'(s->$value)
}
function {:inline} $IsEqual'$1_coin_Coin'#0''(s1: $1_coin_Coin'#0', s2: $1_coin_Coin'#0'): bool {
    s1 == s2
}

// struct coin::CoinConversionMap at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:251:5+113
datatype $1_coin_CoinConversionMap {
    $1_coin_CoinConversionMap($coin_to_fungible_asset_map: Table int ($1_object_Object'$1_fungible_asset_Metadata'))
}
function {:inline} $Update'$1_coin_CoinConversionMap'_coin_to_fungible_asset_map(s: $1_coin_CoinConversionMap, x: Table int ($1_object_Object'$1_fungible_asset_Metadata')): $1_coin_CoinConversionMap {
    $1_coin_CoinConversionMap(x)
}
function $IsValid'$1_coin_CoinConversionMap'(s: $1_coin_CoinConversionMap): bool {
    $IsValid'$1_table_Table'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata'''(s->$coin_to_fungible_asset_map)
}
function {:inline} $IsEqual'$1_coin_CoinConversionMap'(s1: $1_coin_CoinConversionMap, s2: $1_coin_CoinConversionMap): bool {
    s1 == s2
}
var $1_coin_CoinConversionMap_$memory: $Memory $1_coin_CoinConversionMap;

// struct coin::CoinInfo<0x1::aptos_coin::AptosCoin> at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:157:5+559
datatype $1_coin_CoinInfo'$1_aptos_coin_AptosCoin' {
    $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($name: $1_string_String, $symbol: $1_string_String, $decimals: int, $supply: $1_option_Option'$1_optional_aggregator_OptionalAggregator')
}
function {:inline} $Update'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''_name(s: $1_coin_CoinInfo'$1_aptos_coin_AptosCoin', x: $1_string_String): $1_coin_CoinInfo'$1_aptos_coin_AptosCoin' {
    $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(x, s->$symbol, s->$decimals, s->$supply)
}
function {:inline} $Update'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''_symbol(s: $1_coin_CoinInfo'$1_aptos_coin_AptosCoin', x: $1_string_String): $1_coin_CoinInfo'$1_aptos_coin_AptosCoin' {
    $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s->$name, x, s->$decimals, s->$supply)
}
function {:inline} $Update'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''_decimals(s: $1_coin_CoinInfo'$1_aptos_coin_AptosCoin', x: int): $1_coin_CoinInfo'$1_aptos_coin_AptosCoin' {
    $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s->$name, s->$symbol, x, s->$supply)
}
function {:inline} $Update'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''_supply(s: $1_coin_CoinInfo'$1_aptos_coin_AptosCoin', x: $1_option_Option'$1_optional_aggregator_OptionalAggregator'): $1_coin_CoinInfo'$1_aptos_coin_AptosCoin' {
    $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s->$name, s->$symbol, s->$decimals, x)
}
function $IsValid'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''(s: $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'): bool {
    $IsValid'$1_string_String'(s->$name)
      && $IsValid'$1_string_String'(s->$symbol)
      && $IsValid'u8'(s->$decimals)
      && $IsValid'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(s->$supply)
}
function {:inline} $IsEqual'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''(s1: $1_coin_CoinInfo'$1_aptos_coin_AptosCoin', s2: $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'): bool {
    $IsEqual'$1_string_String'(s1->$name, s2->$name)
    && $IsEqual'$1_string_String'(s1->$symbol, s2->$symbol)
    && $IsEqual'u8'(s1->$decimals, s2->$decimals)
    && $IsEqual'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(s1->$supply, s2->$supply)}
var $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory: $Memory $1_coin_CoinInfo'$1_aptos_coin_AptosCoin';

// struct coin::CoinInfo<#0> at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:157:5+559
datatype $1_coin_CoinInfo'#0' {
    $1_coin_CoinInfo'#0'($name: $1_string_String, $symbol: $1_string_String, $decimals: int, $supply: $1_option_Option'$1_optional_aggregator_OptionalAggregator')
}
function {:inline} $Update'$1_coin_CoinInfo'#0''_name(s: $1_coin_CoinInfo'#0', x: $1_string_String): $1_coin_CoinInfo'#0' {
    $1_coin_CoinInfo'#0'(x, s->$symbol, s->$decimals, s->$supply)
}
function {:inline} $Update'$1_coin_CoinInfo'#0''_symbol(s: $1_coin_CoinInfo'#0', x: $1_string_String): $1_coin_CoinInfo'#0' {
    $1_coin_CoinInfo'#0'(s->$name, x, s->$decimals, s->$supply)
}
function {:inline} $Update'$1_coin_CoinInfo'#0''_decimals(s: $1_coin_CoinInfo'#0', x: int): $1_coin_CoinInfo'#0' {
    $1_coin_CoinInfo'#0'(s->$name, s->$symbol, x, s->$supply)
}
function {:inline} $Update'$1_coin_CoinInfo'#0''_supply(s: $1_coin_CoinInfo'#0', x: $1_option_Option'$1_optional_aggregator_OptionalAggregator'): $1_coin_CoinInfo'#0' {
    $1_coin_CoinInfo'#0'(s->$name, s->$symbol, s->$decimals, x)
}
function $IsValid'$1_coin_CoinInfo'#0''(s: $1_coin_CoinInfo'#0'): bool {
    $IsValid'$1_string_String'(s->$name)
      && $IsValid'$1_string_String'(s->$symbol)
      && $IsValid'u8'(s->$decimals)
      && $IsValid'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(s->$supply)
}
function {:inline} $IsEqual'$1_coin_CoinInfo'#0''(s1: $1_coin_CoinInfo'#0', s2: $1_coin_CoinInfo'#0'): bool {
    $IsEqual'$1_string_String'(s1->$name, s2->$name)
    && $IsEqual'$1_string_String'(s1->$symbol, s2->$symbol)
    && $IsEqual'u8'(s1->$decimals, s2->$decimals)
    && $IsEqual'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(s1->$supply, s2->$supply)}
var $1_coin_CoinInfo'#0'_$memory: $Memory $1_coin_CoinInfo'#0';

// struct coin::CoinStore<0x1::aptos_coin::AptosCoin> at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:142:5+211
datatype $1_coin_CoinStore'$1_aptos_coin_AptosCoin' {
    $1_coin_CoinStore'$1_aptos_coin_AptosCoin'($coin: $1_coin_Coin'$1_aptos_coin_AptosCoin', $frozen: bool, $deposit_events: $1_event_EventHandle'$1_coin_DepositEvent', $withdraw_events: $1_event_EventHandle'$1_coin_WithdrawEvent')
}
function {:inline} $Update'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''_coin(s: $1_coin_CoinStore'$1_aptos_coin_AptosCoin', x: $1_coin_Coin'$1_aptos_coin_AptosCoin'): $1_coin_CoinStore'$1_aptos_coin_AptosCoin' {
    $1_coin_CoinStore'$1_aptos_coin_AptosCoin'(x, s->$frozen, s->$deposit_events, s->$withdraw_events)
}
function {:inline} $Update'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''_frozen(s: $1_coin_CoinStore'$1_aptos_coin_AptosCoin', x: bool): $1_coin_CoinStore'$1_aptos_coin_AptosCoin' {
    $1_coin_CoinStore'$1_aptos_coin_AptosCoin'(s->$coin, x, s->$deposit_events, s->$withdraw_events)
}
function {:inline} $Update'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''_deposit_events(s: $1_coin_CoinStore'$1_aptos_coin_AptosCoin', x: $1_event_EventHandle'$1_coin_DepositEvent'): $1_coin_CoinStore'$1_aptos_coin_AptosCoin' {
    $1_coin_CoinStore'$1_aptos_coin_AptosCoin'(s->$coin, s->$frozen, x, s->$withdraw_events)
}
function {:inline} $Update'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''_withdraw_events(s: $1_coin_CoinStore'$1_aptos_coin_AptosCoin', x: $1_event_EventHandle'$1_coin_WithdrawEvent'): $1_coin_CoinStore'$1_aptos_coin_AptosCoin' {
    $1_coin_CoinStore'$1_aptos_coin_AptosCoin'(s->$coin, s->$frozen, s->$deposit_events, x)
}
function $IsValid'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''(s: $1_coin_CoinStore'$1_aptos_coin_AptosCoin'): bool {
    $IsValid'$1_coin_Coin'$1_aptos_coin_AptosCoin''(s->$coin)
      && $IsValid'bool'(s->$frozen)
      && $IsValid'$1_event_EventHandle'$1_coin_DepositEvent''(s->$deposit_events)
      && $IsValid'$1_event_EventHandle'$1_coin_WithdrawEvent''(s->$withdraw_events)
}
function {:inline} $IsEqual'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''(s1: $1_coin_CoinStore'$1_aptos_coin_AptosCoin', s2: $1_coin_CoinStore'$1_aptos_coin_AptosCoin'): bool {
    s1 == s2
}
var $1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory: $Memory $1_coin_CoinStore'$1_aptos_coin_AptosCoin';

// struct coin::CoinStore<#0> at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:142:5+211
datatype $1_coin_CoinStore'#0' {
    $1_coin_CoinStore'#0'($coin: $1_coin_Coin'#0', $frozen: bool, $deposit_events: $1_event_EventHandle'$1_coin_DepositEvent', $withdraw_events: $1_event_EventHandle'$1_coin_WithdrawEvent')
}
function {:inline} $Update'$1_coin_CoinStore'#0''_coin(s: $1_coin_CoinStore'#0', x: $1_coin_Coin'#0'): $1_coin_CoinStore'#0' {
    $1_coin_CoinStore'#0'(x, s->$frozen, s->$deposit_events, s->$withdraw_events)
}
function {:inline} $Update'$1_coin_CoinStore'#0''_frozen(s: $1_coin_CoinStore'#0', x: bool): $1_coin_CoinStore'#0' {
    $1_coin_CoinStore'#0'(s->$coin, x, s->$deposit_events, s->$withdraw_events)
}
function {:inline} $Update'$1_coin_CoinStore'#0''_deposit_events(s: $1_coin_CoinStore'#0', x: $1_event_EventHandle'$1_coin_DepositEvent'): $1_coin_CoinStore'#0' {
    $1_coin_CoinStore'#0'(s->$coin, s->$frozen, x, s->$withdraw_events)
}
function {:inline} $Update'$1_coin_CoinStore'#0''_withdraw_events(s: $1_coin_CoinStore'#0', x: $1_event_EventHandle'$1_coin_WithdrawEvent'): $1_coin_CoinStore'#0' {
    $1_coin_CoinStore'#0'(s->$coin, s->$frozen, s->$deposit_events, x)
}
function $IsValid'$1_coin_CoinStore'#0''(s: $1_coin_CoinStore'#0'): bool {
    $IsValid'$1_coin_Coin'#0''(s->$coin)
      && $IsValid'bool'(s->$frozen)
      && $IsValid'$1_event_EventHandle'$1_coin_DepositEvent''(s->$deposit_events)
      && $IsValid'$1_event_EventHandle'$1_coin_WithdrawEvent''(s->$withdraw_events)
}
function {:inline} $IsEqual'$1_coin_CoinStore'#0''(s1: $1_coin_CoinStore'#0', s2: $1_coin_CoinStore'#0'): bool {
    s1 == s2
}
var $1_coin_CoinStore'#0'_$memory: $Memory $1_coin_CoinStore'#0';

// struct coin::PairCreation at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:236:5+125
datatype $1_coin_PairCreation {
    $1_coin_PairCreation($coin_type: $1_type_info_TypeInfo, $fungible_asset_metadata_address: int)
}
function {:inline} $Update'$1_coin_PairCreation'_coin_type(s: $1_coin_PairCreation, x: $1_type_info_TypeInfo): $1_coin_PairCreation {
    $1_coin_PairCreation(x, s->$fungible_asset_metadata_address)
}
function {:inline} $Update'$1_coin_PairCreation'_fungible_asset_metadata_address(s: $1_coin_PairCreation, x: int): $1_coin_PairCreation {
    $1_coin_PairCreation(s->$coin_type, x)
}
function $IsValid'$1_coin_PairCreation'(s: $1_coin_PairCreation): bool {
    $IsValid'$1_type_info_TypeInfo'(s->$coin_type)
      && $IsValid'address'(s->$fungible_asset_metadata_address)
}
function {:inline} $IsEqual'$1_coin_PairCreation'(s1: $1_coin_PairCreation, s2: $1_coin_PairCreation): bool {
    $IsEqual'$1_type_info_TypeInfo'(s1->$coin_type, s2->$coin_type)
    && $IsEqual'address'(s1->$fungible_asset_metadata_address, s2->$fungible_asset_metadata_address)}

// struct coin::PairedCoinType at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:257:5+63
datatype $1_coin_PairedCoinType {
    $1_coin_PairedCoinType($type: $1_type_info_TypeInfo)
}
function {:inline} $Update'$1_coin_PairedCoinType'_type(s: $1_coin_PairedCoinType, x: $1_type_info_TypeInfo): $1_coin_PairedCoinType {
    $1_coin_PairedCoinType(x)
}
function $IsValid'$1_coin_PairedCoinType'(s: $1_coin_PairedCoinType): bool {
    $IsValid'$1_type_info_TypeInfo'(s->$type)
}
function {:inline} $IsEqual'$1_coin_PairedCoinType'(s1: $1_coin_PairedCoinType, s2: $1_coin_PairedCoinType): bool {
    $IsEqual'$1_type_info_TypeInfo'(s1->$type, s2->$type)}
var $1_coin_PairedCoinType_$memory: $Memory $1_coin_PairedCoinType;

// struct coin::PairedFungibleAssetRefs at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:263:5+175
datatype $1_coin_PairedFungibleAssetRefs {
    $1_coin_PairedFungibleAssetRefs($mint_ref_opt: $1_option_Option'$1_fungible_asset_MintRef', $transfer_ref_opt: $1_option_Option'$1_fungible_asset_TransferRef', $burn_ref_opt: $1_option_Option'$1_fungible_asset_BurnRef')
}
function {:inline} $Update'$1_coin_PairedFungibleAssetRefs'_mint_ref_opt(s: $1_coin_PairedFungibleAssetRefs, x: $1_option_Option'$1_fungible_asset_MintRef'): $1_coin_PairedFungibleAssetRefs {
    $1_coin_PairedFungibleAssetRefs(x, s->$transfer_ref_opt, s->$burn_ref_opt)
}
function {:inline} $Update'$1_coin_PairedFungibleAssetRefs'_transfer_ref_opt(s: $1_coin_PairedFungibleAssetRefs, x: $1_option_Option'$1_fungible_asset_TransferRef'): $1_coin_PairedFungibleAssetRefs {
    $1_coin_PairedFungibleAssetRefs(s->$mint_ref_opt, x, s->$burn_ref_opt)
}
function {:inline} $Update'$1_coin_PairedFungibleAssetRefs'_burn_ref_opt(s: $1_coin_PairedFungibleAssetRefs, x: $1_option_Option'$1_fungible_asset_BurnRef'): $1_coin_PairedFungibleAssetRefs {
    $1_coin_PairedFungibleAssetRefs(s->$mint_ref_opt, s->$transfer_ref_opt, x)
}
function $IsValid'$1_coin_PairedFungibleAssetRefs'(s: $1_coin_PairedFungibleAssetRefs): bool {
    $IsValid'$1_option_Option'$1_fungible_asset_MintRef''(s->$mint_ref_opt)
      && $IsValid'$1_option_Option'$1_fungible_asset_TransferRef''(s->$transfer_ref_opt)
      && $IsValid'$1_option_Option'$1_fungible_asset_BurnRef''(s->$burn_ref_opt)
}
function {:inline} $IsEqual'$1_coin_PairedFungibleAssetRefs'(s1: $1_coin_PairedFungibleAssetRefs, s2: $1_coin_PairedFungibleAssetRefs): bool {
    $IsEqual'$1_option_Option'$1_fungible_asset_MintRef''(s1->$mint_ref_opt, s2->$mint_ref_opt)
    && $IsEqual'$1_option_Option'$1_fungible_asset_TransferRef''(s1->$transfer_ref_opt, s2->$transfer_ref_opt)
    && $IsEqual'$1_option_Option'$1_fungible_asset_BurnRef''(s1->$burn_ref_opt, s2->$burn_ref_opt)}
var $1_coin_PairedFungibleAssetRefs_$memory: $Memory $1_coin_PairedFungibleAssetRefs;

// struct coin::supply<0x1::aptos_coin::AptosCoin> at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.spec.move:64:9+29
datatype $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin' {
    $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'($v: int)
}
function {:inline} $Update'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''_v(s: $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin', x: int): $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin' {
    $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'(x)
}
function $IsValid'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''(s: $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'): bool {
    $IsValid'num'(s->$v)
}
function {:inline} $IsEqual'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''(s1: $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin', s2: $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'): bool {
    s1 == s2
}
var $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory: $Memory $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin';

// struct coin::supply<#0> at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.spec.move:64:9+29
datatype $1_coin_Ghost$supply'#0' {
    $1_coin_Ghost$supply'#0'($v: int)
}
function {:inline} $Update'$1_coin_Ghost$supply'#0''_v(s: $1_coin_Ghost$supply'#0', x: int): $1_coin_Ghost$supply'#0' {
    $1_coin_Ghost$supply'#0'(x)
}
function $IsValid'$1_coin_Ghost$supply'#0''(s: $1_coin_Ghost$supply'#0'): bool {
    $IsValid'num'(s->$v)
}
function {:inline} $IsEqual'$1_coin_Ghost$supply'#0''(s1: $1_coin_Ghost$supply'#0', s2: $1_coin_Ghost$supply'#0'): bool {
    s1 == s2
}
var $1_coin_Ghost$supply'#0'_$memory: $Memory $1_coin_Ghost$supply'#0';

// struct coin::aggregate_supply<0x1::aptos_coin::AptosCoin> at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.spec.move:65:9+39
datatype $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin' {
    $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'($v: int)
}
function {:inline} $Update'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''_v(s: $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin', x: int): $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin' {
    $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'(x)
}
function $IsValid'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''(s: $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'): bool {
    $IsValid'num'(s->$v)
}
function {:inline} $IsEqual'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''(s1: $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin', s2: $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'): bool {
    s1 == s2
}
var $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory: $Memory $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin';

// struct coin::aggregate_supply<#0> at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.spec.move:65:9+39
datatype $1_coin_Ghost$aggregate_supply'#0' {
    $1_coin_Ghost$aggregate_supply'#0'($v: int)
}
function {:inline} $Update'$1_coin_Ghost$aggregate_supply'#0''_v(s: $1_coin_Ghost$aggregate_supply'#0', x: int): $1_coin_Ghost$aggregate_supply'#0' {
    $1_coin_Ghost$aggregate_supply'#0'(x)
}
function $IsValid'$1_coin_Ghost$aggregate_supply'#0''(s: $1_coin_Ghost$aggregate_supply'#0'): bool {
    $IsValid'num'(s->$v)
}
function {:inline} $IsEqual'$1_coin_Ghost$aggregate_supply'#0''(s1: $1_coin_Ghost$aggregate_supply'#0', s2: $1_coin_Ghost$aggregate_supply'#0'): bool {
    s1 == s2
}
var $1_coin_Ghost$aggregate_supply'#0'_$memory: $Memory $1_coin_Ghost$aggregate_supply'#0';

// fun coin::extract<#0> [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:950:5+444
procedure {:inline 1} $1_coin_extract'#0'(_$t0: $Mutation ($1_coin_Coin'#0'), _$t1: int) returns ($ret0: $1_coin_Coin'#0', $ret1: $Mutation ($1_coin_Coin'#0'))
{
    // declare local variables
    var $t2: int;
    var $t3: bool;
    var $t4: $1_coin_Ghost$supply'#0';
    var $t5: int;
    var $t6: $Mutation ($1_coin_Ghost$supply'#0');
    var $t7: int;
    var $t8: int;
    var $t9: int;
    var $t10: $Mutation (int);
    var $t11: $1_coin_Ghost$supply'#0';
    var $t12: int;
    var $t13: $Mutation ($1_coin_Ghost$supply'#0');
    var $t14: $1_coin_Coin'#0';
    var $t15: int;
    var $t16: int;
    var $t0: $Mutation ($1_coin_Coin'#0');
    var $t1: int;
    var $temp_0'$1_coin_Coin'#0'': $1_coin_Coin'#0';
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[coin]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:950:5+1
    assume {:print "$at(131,40654,40655)"} true;
    $temp_0'$1_coin_Coin'#0'' := $Dereference($t0);
    assume {:print "$track_local(51,0,0):", $temp_0'$1_coin_Coin'#0''} $temp_0'$1_coin_Coin'#0'' == $temp_0'$1_coin_Coin'#0'';

    // trace_local[amount]($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:950:5+1
    assume {:print "$track_local(51,0,1):", $t1} $t1 == $t1;

    // $t2 := get_field<0x1::coin::Coin<#0>>.value($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:951:17+10
    assume {:print "$at(131,40758,40768)"} true;
    $t2 := $Dereference($t0)->$value;

    // $t3 := >=($t2, $t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:951:17+20
    call $t3 := $Ge($t2, $t1);

    // if ($t3) goto L1 else goto L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:951:9+6
    if ($t3) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:952:9+83
    assume {:print "$at(131,40838,40921)"} true;
L1:

    // assume Identical($t4, pack coin::Ghost$supply<#0>(Sub(select coin::Ghost$supply.v<#0>(global<0x1::coin::Ghost$supply<#0>>(0x0)), $t1))) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:953:13+52
    assume {:print "$at(131,40858,40910)"} true;
    assume ($t4 == $1_coin_Ghost$supply'#0'(($ResourceValue($1_coin_Ghost$supply'#0'_$memory, 0)->$v - $t1)));

    // assume Identical($t5, 0x0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:953:13+52
    assume ($t5 == 0);

    // $t6 := borrow_global<0x1::coin::Ghost$supply<#0>>($t5) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:953:13+52
    if (!$ResourceExists($1_coin_Ghost$supply'#0'_$memory, $t5)) {
        call $ExecFailureAbort();
    } else {
        $t6 := $Mutation($Global($t5), EmptyVec(), $ResourceValue($1_coin_Ghost$supply'#0'_$memory, $t5));
    }

    // write_ref($t6, $t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:953:13+52
    $t6 := $UpdateMutation($t6, $t4);

    // write_back[0x1::coin::Ghost$supply<#0>@]($t6) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:953:13+52
    $1_coin_Ghost$supply'#0'_$memory := $ResourceUpdate($1_coin_Ghost$supply'#0'_$memory, $GlobalLocationAddress($t6),
        $Dereference($t6));

    // $t7 := get_field<0x1::coin::Coin<#0>>.value($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:955:22+10
    assume {:print "$at(131,40945,40955)"} true;
    $t7 := $Dereference($t0)->$value;

    // $t8 := -($t7, $t1) on_abort goto L3 with $t9 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:955:22+19
    call $t8 := $Sub($t7, $t1);
    if ($abort_flag) {
        assume {:print "$at(131,40945,40964)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(51,0):", $t9} $t9 == $t9;
        goto L3;
    }

    // $t10 := borrow_field<0x1::coin::Coin<#0>>.value($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:955:9+10
    $t10 := $ChildMutation($t0, 0, $Dereference($t0)->$value);

    // write_ref($t10, $t8) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:955:9+32
    $t10 := $UpdateMutation($t10, $t8);

    // write_back[Reference($t0).value (u64)]($t10) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:955:9+32
    $t0 := $UpdateMutation($t0, $Update'$1_coin_Coin'#0''_value($Dereference($t0), $Dereference($t10)));

    // trace_local[coin]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:955:9+32
    $temp_0'$1_coin_Coin'#0'' := $Dereference($t0);
    assume {:print "$track_local(51,0,0):", $temp_0'$1_coin_Coin'#0''} $temp_0'$1_coin_Coin'#0'' == $temp_0'$1_coin_Coin'#0'';

    // assume Identical($t11, pack coin::Ghost$supply<#0>(Add(select coin::Ghost$supply.v<#0>(global<0x1::coin::Ghost$supply<#0>>(0x0)), $t1))) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:957:13+52
    assume {:print "$at(131,40995,41047)"} true;
    assume ($t11 == $1_coin_Ghost$supply'#0'(($ResourceValue($1_coin_Ghost$supply'#0'_$memory, 0)->$v + $t1)));

    // assume Identical($t12, 0x0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:957:13+52
    assume ($t12 == 0);

    // $t13 := borrow_global<0x1::coin::Ghost$supply<#0>>($t12) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:957:13+52
    if (!$ResourceExists($1_coin_Ghost$supply'#0'_$memory, $t12)) {
        call $ExecFailureAbort();
    } else {
        $t13 := $Mutation($Global($t12), EmptyVec(), $ResourceValue($1_coin_Ghost$supply'#0'_$memory, $t12));
    }

    // write_ref($t13, $t11) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:957:13+52
    $t13 := $UpdateMutation($t13, $t11);

    // write_back[0x1::coin::Ghost$supply<#0>@]($t13) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:957:13+52
    $1_coin_Ghost$supply'#0'_$memory := $ResourceUpdate($1_coin_Ghost$supply'#0'_$memory, $GlobalLocationAddress($t13),
        $Dereference($t13));

    // $t14 := pack 0x1::coin::Coin<#0>($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:959:9+22
    assume {:print "$at(131,41069,41091)"} true;
    $t14 := $1_coin_Coin'#0'($t1);

    // trace_return[0]($t14) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:950:90+359
    assume {:print "$at(131,40739,41098)"} true;
    assume {:print "$track_return(51,0,0):", $t14} $t14 == $t14;

    // trace_local[coin]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:950:90+359
    $temp_0'$1_coin_Coin'#0'' := $Dereference($t0);
    assume {:print "$track_local(51,0,0):", $temp_0'$1_coin_Coin'#0''} $temp_0'$1_coin_Coin'#0'' == $temp_0'$1_coin_Coin'#0'';

    // goto L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:950:90+359
    goto L2;

    // label L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:951:9+6
    assume {:print "$at(131,40750,40756)"} true;
L0:

    // drop($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:951:9+6
    assume {:print "$at(131,40750,40756)"} true;

    // $t15 := 6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:951:63+21
    $t15 := 6;
    assume $IsValid'u64'($t15);

    // $t16 := error::invalid_argument($t15) on_abort goto L3 with $t9 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:951:39+46
    call $t16 := $1_error_invalid_argument($t15);
    if ($abort_flag) {
        assume {:print "$at(131,40780,40826)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(51,0):", $t9} $t9 == $t9;
        goto L3;
    }

    // trace_abort($t16) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:951:9+6
    assume {:print "$at(131,40750,40756)"} true;
    assume {:print "$track_abort(51,0):", $t16} $t16 == $t16;

    // $t9 := move($t16) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:951:9+6
    $t9 := $t16;

    // goto L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:951:9+6
    goto L3;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:960:5+1
    assume {:print "$at(131,41097,41098)"} true;
L2:

    // return $t14 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:960:5+1
    assume {:print "$at(131,41097,41098)"} true;
    $ret0 := $t14;
    $ret1 := $t0;
    return;

    // label L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:960:5+1
L3:

    // abort($t9) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:960:5+1
    assume {:print "$at(131,41097,41098)"} true;
    $abort_code := $t9;
    $abort_flag := true;
    return;

}

// fun coin::merge<#0> [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1068:5+481
procedure {:inline 1} $1_coin_merge'#0'(_$t0: $Mutation ($1_coin_Coin'#0'), _$t1: $1_coin_Coin'#0') returns ($ret0: $Mutation ($1_coin_Coin'#0'))
{
    // declare local variables
    var $t2: int;
    var $t3: $1_coin_Ghost$supply'#0';
    var $t4: int;
    var $t5: $Mutation ($1_coin_Ghost$supply'#0');
    var $t6: int;
    var $t7: $1_coin_Ghost$supply'#0';
    var $t8: int;
    var $t9: $Mutation ($1_coin_Ghost$supply'#0');
    var $t10: int;
    var $t11: int;
    var $t12: int;
    var $t13: $Mutation (int);
    var $t0: $Mutation ($1_coin_Coin'#0');
    var $t1: $1_coin_Coin'#0';
    var $temp_0'$1_coin_Coin'#0'': $1_coin_Coin'#0';
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[dst_coin]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1068:5+1
    assume {:print "$at(131,45571,45572)"} true;
    $temp_0'$1_coin_Coin'#0'' := $Dereference($t0);
    assume {:print "$track_local(51,2,0):", $temp_0'$1_coin_Coin'#0''} $temp_0'$1_coin_Coin'#0'' == $temp_0'$1_coin_Coin'#0'';

    // trace_local[source_coin]($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1068:5+1
    assume {:print "$track_local(51,2,1):", $t1} $t1 == $t1;

    // assume Le(Add(select coin::Coin.value<0x1::coin::Coin<#0>>($t0), select coin::Coin.value<0x1::coin::Coin<#0>>($t1)), 18446744073709551615) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1070:13+53
    assume {:print "$at(131,45689,45742)"} true;
    assume (($Dereference($t0)->$value + $t1->$value) <= 18446744073709551615);

    // assume Identical($t3, pack coin::Ghost$supply<#0>(Sub(select coin::Ghost$supply.v<#0>(global<0x1::coin::Ghost$supply<#0>>(0x0)), select coin::Coin.value<0x1::coin::Coin<#0>>($t1)))) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1073:13+63
    assume {:print "$at(131,45784,45847)"} true;
    assume ($t3 == $1_coin_Ghost$supply'#0'(($ResourceValue($1_coin_Ghost$supply'#0'_$memory, 0)->$v - $t1->$value)));

    // assume Identical($t4, 0x0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1073:13+63
    assume ($t4 == 0);

    // $t5 := borrow_global<0x1::coin::Ghost$supply<#0>>($t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1073:13+63
    if (!$ResourceExists($1_coin_Ghost$supply'#0'_$memory, $t4)) {
        call $ExecFailureAbort();
    } else {
        $t5 := $Mutation($Global($t4), EmptyVec(), $ResourceValue($1_coin_Ghost$supply'#0'_$memory, $t4));
    }

    // write_ref($t5, $t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1073:13+63
    $t5 := $UpdateMutation($t5, $t3);

    // write_back[0x1::coin::Ghost$supply<#0>@]($t5) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1073:13+63
    $1_coin_Ghost$supply'#0'_$memory := $ResourceUpdate($1_coin_Ghost$supply'#0'_$memory, $GlobalLocationAddress($t5),
        $Dereference($t5));

    // $t6 := unpack 0x1::coin::Coin<#0>($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1075:13+14
    assume {:print "$at(131,45873,45887)"} true;
    $t6 := $t1->$value;

    // trace_local[value]($t6) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1075:13+14
    assume {:print "$track_local(51,2,2):", $t6} $t6 == $t6;

    // assume Identical($t7, pack coin::Ghost$supply<#0>(Add(select coin::Ghost$supply.v<#0>(global<0x1::coin::Ghost$supply<#0>>(0x0)), $t6))) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1077:13+51
    assume {:print "$at(131,45932,45983)"} true;
    assume ($t7 == $1_coin_Ghost$supply'#0'(($ResourceValue($1_coin_Ghost$supply'#0'_$memory, 0)->$v + $t6)));

    // assume Identical($t8, 0x0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1077:13+51
    assume ($t8 == 0);

    // $t9 := borrow_global<0x1::coin::Ghost$supply<#0>>($t8) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1077:13+51
    if (!$ResourceExists($1_coin_Ghost$supply'#0'_$memory, $t8)) {
        call $ExecFailureAbort();
    } else {
        $t9 := $Mutation($Global($t8), EmptyVec(), $ResourceValue($1_coin_Ghost$supply'#0'_$memory, $t8));
    }

    // write_ref($t9, $t7) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1077:13+51
    $t9 := $UpdateMutation($t9, $t7);

    // write_back[0x1::coin::Ghost$supply<#0>@]($t9) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1077:13+51
    $1_coin_Ghost$supply'#0'_$memory := $ResourceUpdate($1_coin_Ghost$supply'#0'_$memory, $GlobalLocationAddress($t9),
        $Dereference($t9));

    // $t10 := get_field<0x1::coin::Coin<#0>>.value($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1079:26+14
    assume {:print "$at(131,46022,46036)"} true;
    $t10 := $Dereference($t0)->$value;

    // $t11 := +($t10, $t6) on_abort goto L2 with $t12 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1079:26+22
    call $t11 := $AddU64($t10, $t6);
    if ($abort_flag) {
        assume {:print "$at(131,46022,46044)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(51,2):", $t12} $t12 == $t12;
        goto L2;
    }

    // $t13 := borrow_field<0x1::coin::Coin<#0>>.value($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1079:9+14
    $t13 := $ChildMutation($t0, 0, $Dereference($t0)->$value);

    // write_ref($t13, $t11) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1079:9+39
    $t13 := $UpdateMutation($t13, $t11);

    // write_back[Reference($t0).value (u64)]($t13) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1079:9+39
    $t0 := $UpdateMutation($t0, $Update'$1_coin_Coin'#0''_value($Dereference($t0), $Dereference($t13)));

    // trace_local[dst_coin]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1079:9+39
    $temp_0'$1_coin_Coin'#0'' := $Dereference($t0);
    assume {:print "$track_local(51,2,0):", $temp_0'$1_coin_Coin'#0''} $temp_0'$1_coin_Coin'#0'' == $temp_0'$1_coin_Coin'#0'';

    // trace_local[dst_coin]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1068:92+394
    assume {:print "$at(131,45658,46052)"} true;
    $temp_0'$1_coin_Coin'#0'' := $Dereference($t0);
    assume {:print "$track_local(51,2,0):", $temp_0'$1_coin_Coin'#0''} $temp_0'$1_coin_Coin'#0'' == $temp_0'$1_coin_Coin'#0'';

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1080:5+1
    assume {:print "$at(131,46051,46052)"} true;
L1:

    // return () at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1080:5+1
    assume {:print "$at(131,46051,46052)"} true;
    $ret0 := $t0;
    return;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1080:5+1
L2:

    // abort($t12) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1080:5+1
    assume {:print "$at(131,46051,46052)"} true;
    $abort_code := $t12;
    $abort_flag := true;
    return;

}

// fun coin::transfer<#0> [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1111:5+266
procedure {:inline 1} $1_coin_transfer'#0'(_$t0: $signer, _$t1: int, _$t2: int) returns ()
{
    // declare local variables
    var $t3: $1_coin_Coin'#0';
    var $t4: int;
    var $t5: $1_coin_CoinStore'#0';
    var $t6: $1_coin_CoinStore'#0';
    var $t7: int;
    var $t8: $1_coin_CoinStore'#0';
    var $t9: int;
    var $t10: int;
    var $t11: $1_coin_CoinStore'#0';
    var $t12: int;
    var $t13: $1_coin_Coin'#0';
    var $t14: int;
    var $t15: $1_coin_CoinStore'#0';
    var $t0: $signer;
    var $t1: int;
    var $t2: int;
    var $temp_0'$1_coin_Coin'#0'': $1_coin_Coin'#0';
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // bytecode translation starts here
    // assume Identical($t4, signer::$address_of($t0)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.spec.move:496:9+49
    assume {:print "$at(132,21619,21668)"} true;
    assume ($t4 == $1_signer_$address_of($t0));

    // assume Identical($t5, global<0x1::coin::CoinStore<#0>>($t4)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.spec.move:497:9+69
    assume {:print "$at(132,21678,21747)"} true;
    assume ($t5 == $ResourceValue($1_coin_CoinStore'#0'_$memory, $t4));

    // assume Identical($t6, global<0x1::coin::CoinStore<#0>>($t1)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.spec.move:499:9+52
    assume {:print "$at(132,21846,21898)"} true;
    assume ($t6 == $ResourceValue($1_coin_CoinStore'#0'_$memory, $t1));

    // trace_local[from]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1111:5+1
    assume {:print "$at(131,47266,47267)"} true;
    assume {:print "$track_local(51,5,0):", $t0} $t0 == $t0;

    // trace_local[to]($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1111:5+1
    assume {:print "$track_local(51,5,1):", $t1} $t1 == $t1;

    // trace_local[amount]($t2) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1111:5+1
    assume {:print "$track_local(51,5,2):", $t2} $t2 == $t2;

    // assume Identical($t7, signer::$address_of($t0)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.spec.move:525:9+47
    assume {:print "$at(132,22993,23040)"} true;
    assume ($t7 == $1_signer_$address_of($t0));

    // assume Identical($t8, global<0x1::coin::CoinStore<#0>>($t7)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.spec.move:526:9+59
    assume {:print "$at(132,23050,23109)"} true;
    assume ($t8 == $ResourceValue($1_coin_CoinStore'#0'_$memory, $t7));

    // assume Identical($t9, select coin::Coin.value<0x1::coin::Coin<#0>>(select coin::CoinStore.coin<0x1::coin::CoinStore<#0>>($t8))) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.spec.move:527:9+36
    assume {:print "$at(132,23119,23155)"} true;
    assume ($t9 == $t8->$coin->$value);

    // assume Identical($t10, signer::$address_of($t0)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.spec.move:535:9+47
    assume {:print "$at(132,23460,23507)"} true;
    assume ($t10 == $1_signer_$address_of($t0));

    // assume Identical($t11, global<0x1::coin::CoinStore<#0>>($t10)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.spec.move:536:9+59
    assume {:print "$at(132,23517,23576)"} true;
    assume ($t11 == $ResourceValue($1_coin_CoinStore'#0'_$memory, $t10));

    // assume Identical($t12, select coin::Coin.value<0x1::coin::Coin<#0>>(select coin::CoinStore.coin<0x1::coin::CoinStore<#0>>($t11))) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.spec.move:537:9+36
    assume {:print "$at(132,23586,23622)"} true;
    assume ($t12 == $t11->$coin->$value);

    // $t13 := coin::withdraw<#0>($t0, $t2) on_abort goto L2 with $t14 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1116:20+32
    assume {:print "$at(131,47464,47496)"} true;
    call $t13 := $1_coin_withdraw'#0'($t0, $t2);
    if ($abort_flag) {
        assume {:print "$at(131,47464,47496)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(51,5):", $t14} $t14 == $t14;
        goto L2;
    }

    // trace_local[coin]($t13) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1116:20+32
    assume {:print "$track_local(51,5,3):", $t13} $t13 == $t13;

    // assume Identical($t15, global<0x1::coin::CoinStore<#0>>($t1)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.spec.move:323:9+59
    assume {:print "$at(132,14443,14502)"} true;
    assume ($t15 == $ResourceValue($1_coin_CoinStore'#0'_$memory, $t1));

    // coin::deposit<#0>($t1, $t13) on_abort goto L2 with $t14 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1117:9+17
    assume {:print "$at(131,47507,47524)"} true;
    call $1_coin_deposit'#0'($t1, $t13);
    if ($abort_flag) {
        assume {:print "$at(131,47507,47524)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(51,5):", $t14} $t14 == $t14;
        goto L2;
    }

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1118:5+1
    assume {:print "$at(131,47531,47532)"} true;
L1:

    // return () at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1118:5+1
    assume {:print "$at(131,47531,47532)"} true;
    return;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1118:5+1
L2:

    // abort($t14) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1118:5+1
    assume {:print "$at(131,47531,47532)"} true;
    $abort_code := $t14;
    $abort_flag := true;
    return;

}

// fun coin::name<0x1::aptos_coin::AptosCoin> [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:740:5+144
procedure {:inline 1} $1_coin_name'$1_aptos_coin_AptosCoin'() returns ($ret0: $1_string_String)
{
    // declare local variables
    var $t0: int;
    var $t1: int;
    var $t2: bool;
    var $t3: int;
    var $t4: $1_coin_CoinInfo'$1_aptos_coin_AptosCoin';
    var $t5: $1_string_String;
    var $temp_0'$1_string_String': $1_string_String;
    var $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory#64: $Memory $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin';
    var $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory#65: $Memory $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin';
    var $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory#66: $Memory $1_coin_CoinInfo'$1_aptos_coin_AptosCoin';

    // bytecode translation starts here
    // assume Identical($t0, select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of<#0>())) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.spec.move:192:9+58
    assume {:print "$at(132,9479,9537)"} true;
    assume ($t0 == $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))->$account_address);

    // $t1 := opaque begin: coin::coin_address<#0>() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:741:43+24
    assume {:print "$at(131,31627,31651)"} true;

    // $t2 := havoc[val]() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:741:43+24
    havoc $t2;

    // if ($t2) goto L4 else goto L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:741:43+24
    if ($t2) { goto L4; } else { goto L3; }

    // label L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:741:43+24
L4:

    // trace_abort($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:741:43+24
    assume {:print "$at(131,31627,31651)"} true;
    assume {:print "$track_abort(51,6):", $t3} $t3 == $t3;

    // goto L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:741:43+24
    goto L2;

    // label L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:741:43+24
L3:

    // @66 := save_mem(coin::CoinInfo<#0>) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:741:43+24
    assume {:print "$at(131,31627,31651)"} true;
    $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory#66 := $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory;

    // @64 := save_mem(coin::supply<#0>) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:741:43+24
    $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory#64 := $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory;

    // @65 := save_mem(coin::aggregate_supply<#0>) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:741:43+24
    $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory#65 := $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory;

    // assume WellFormed($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:741:43+24
    assume $IsValid'address'($t1);

    // assume Implies(coin::spec_fun_supply_tracked[]<#0>(Add(select coin::Ghost$supply.v<#0>(global[@64]<0x1::coin::Ghost$supply<#0>>(0x0)), select coin::Ghost$aggregate_supply.v<#0>(global[@65]<0x1::coin::Ghost$aggregate_supply<#0>>(0x0))), select coin::CoinInfo.supply<0x1::coin::CoinInfo<#0>>(global[@66]<0x1::coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of[]<#0>())))), coin::spec_fun_supply_tracked<#0>(Add(select coin::Ghost$supply.v<#0>(global<0x1::coin::Ghost$supply<#0>>(0x0)), select coin::Ghost$aggregate_supply.v<#0>(global<0x1::coin::Ghost$aggregate_supply<#0>>(0x0))), select coin::CoinInfo.supply<0x1::coin::CoinInfo<#0>>(global<0x1::coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of<#0>()))))) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:741:43+24
    assume ($1_coin_spec_fun_supply_tracked'$1_aptos_coin_AptosCoin'(($ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory#64, 0)->$v + $ResourceValue($1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory#65, 0)->$v), $ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory#66, $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))->$account_address)->$supply) ==> $1_coin_spec_fun_supply_tracked'$1_aptos_coin_AptosCoin'(($ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, 0)->$v + $ResourceValue($1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory, 0)->$v), $ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))->$account_address)->$supply));

    // assume Eq<address>($t1, select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of<#0>())) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:741:43+24
    assume $IsEqual'address'($t1, $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))->$account_address);

    // $t1 := opaque end: coin::coin_address<#0>() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:741:43+24

    // $t4 := get_global<0x1::coin::CoinInfo<#0>>($t1) on_abort goto L2 with $t3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:741:9+59
    if (!$ResourceExists($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $t1)) {
        call $ExecFailureAbort();
    } else {
        $t4 := $ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $t1);
    }
    if ($abort_flag) {
        assume {:print "$at(131,31593,31652)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(51,6):", $t3} $t3 == $t3;
        goto L2;
    }

    // $t5 := get_field<0x1::coin::CoinInfo<#0>>.name($t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:741:9+64
    $t5 := $t4->$name;

    // trace_return[0]($t5) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:741:9+64
    assume {:print "$track_return(51,6,0):", $t5} $t5 == $t5;

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:742:5+1
    assume {:print "$at(131,31663,31664)"} true;
L1:

    // return $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:742:5+1
    assume {:print "$at(131,31663,31664)"} true;
    $ret0 := $t5;
    return;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:742:5+1
L2:

    // abort($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:742:5+1
    assume {:print "$at(131,31663,31664)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun coin::name<#0> [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:740:5+144
procedure {:inline 1} $1_coin_name'#0'() returns ($ret0: $1_string_String)
{
    // declare local variables
    var $t0: int;
    var $t1: int;
    var $t2: bool;
    var $t3: int;
    var $t4: $1_coin_CoinInfo'#0';
    var $t5: $1_string_String;
    var $temp_0'$1_string_String': $1_string_String;
    var $1_coin_Ghost$supply'#0'_$memory#64: $Memory $1_coin_Ghost$supply'#0';
    var $1_coin_Ghost$aggregate_supply'#0'_$memory#65: $Memory $1_coin_Ghost$aggregate_supply'#0';
    var $1_coin_CoinInfo'#0'_$memory#66: $Memory $1_coin_CoinInfo'#0';

    // bytecode translation starts here
    // assume Identical($t0, select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of<#0>())) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.spec.move:192:9+58
    assume {:print "$at(132,9479,9537)"} true;
    assume ($t0 == $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s)->$account_address);

    // $t1 := opaque begin: coin::coin_address<#0>() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:741:43+24
    assume {:print "$at(131,31627,31651)"} true;

    // $t2 := havoc[val]() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:741:43+24
    havoc $t2;

    // if ($t2) goto L4 else goto L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:741:43+24
    if ($t2) { goto L4; } else { goto L3; }

    // label L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:741:43+24
L4:

    // trace_abort($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:741:43+24
    assume {:print "$at(131,31627,31651)"} true;
    assume {:print "$track_abort(51,6):", $t3} $t3 == $t3;

    // goto L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:741:43+24
    goto L2;

    // label L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:741:43+24
L3:

    // @66 := save_mem(coin::CoinInfo<#0>) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:741:43+24
    assume {:print "$at(131,31627,31651)"} true;
    $1_coin_CoinInfo'#0'_$memory#66 := $1_coin_CoinInfo'#0'_$memory;

    // @64 := save_mem(coin::supply<#0>) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:741:43+24
    $1_coin_Ghost$supply'#0'_$memory#64 := $1_coin_Ghost$supply'#0'_$memory;

    // @65 := save_mem(coin::aggregate_supply<#0>) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:741:43+24
    $1_coin_Ghost$aggregate_supply'#0'_$memory#65 := $1_coin_Ghost$aggregate_supply'#0'_$memory;

    // assume WellFormed($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:741:43+24
    assume $IsValid'address'($t1);

    // assume Implies(coin::spec_fun_supply_tracked[]<#0>(Add(select coin::Ghost$supply.v<#0>(global[@64]<0x1::coin::Ghost$supply<#0>>(0x0)), select coin::Ghost$aggregate_supply.v<#0>(global[@65]<0x1::coin::Ghost$aggregate_supply<#0>>(0x0))), select coin::CoinInfo.supply<0x1::coin::CoinInfo<#0>>(global[@66]<0x1::coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of[]<#0>())))), coin::spec_fun_supply_tracked<#0>(Add(select coin::Ghost$supply.v<#0>(global<0x1::coin::Ghost$supply<#0>>(0x0)), select coin::Ghost$aggregate_supply.v<#0>(global<0x1::coin::Ghost$aggregate_supply<#0>>(0x0))), select coin::CoinInfo.supply<0x1::coin::CoinInfo<#0>>(global<0x1::coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of<#0>()))))) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:741:43+24
    assume ($1_coin_spec_fun_supply_tracked'#0'(($ResourceValue($1_coin_Ghost$supply'#0'_$memory#64, 0)->$v + $ResourceValue($1_coin_Ghost$aggregate_supply'#0'_$memory#65, 0)->$v), $ResourceValue($1_coin_CoinInfo'#0'_$memory#66, $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s)->$account_address)->$supply) ==> $1_coin_spec_fun_supply_tracked'#0'(($ResourceValue($1_coin_Ghost$supply'#0'_$memory, 0)->$v + $ResourceValue($1_coin_Ghost$aggregate_supply'#0'_$memory, 0)->$v), $ResourceValue($1_coin_CoinInfo'#0'_$memory, $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s)->$account_address)->$supply));

    // assume Eq<address>($t1, select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of<#0>())) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:741:43+24
    assume $IsEqual'address'($t1, $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s)->$account_address);

    // $t1 := opaque end: coin::coin_address<#0>() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:741:43+24

    // $t4 := get_global<0x1::coin::CoinInfo<#0>>($t1) on_abort goto L2 with $t3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:741:9+59
    if (!$ResourceExists($1_coin_CoinInfo'#0'_$memory, $t1)) {
        call $ExecFailureAbort();
    } else {
        $t4 := $ResourceValue($1_coin_CoinInfo'#0'_$memory, $t1);
    }
    if ($abort_flag) {
        assume {:print "$at(131,31593,31652)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(51,6):", $t3} $t3 == $t3;
        goto L2;
    }

    // $t5 := get_field<0x1::coin::CoinInfo<#0>>.name($t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:741:9+64
    $t5 := $t4->$name;

    // trace_return[0]($t5) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:741:9+64
    assume {:print "$track_return(51,6,0):", $t5} $t5 == $t5;

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:742:5+1
    assume {:print "$at(131,31663,31664)"} true;
L1:

    // return $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:742:5+1
    assume {:print "$at(131,31663,31664)"} true;
    $ret0 := $t5;
    return;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:742:5+1
L2:

    // abort($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:742:5+1
    assume {:print "$at(131,31663,31664)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun coin::symbol<0x1::aptos_coin::AptosCoin> [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:746:5+148
procedure {:inline 1} $1_coin_symbol'$1_aptos_coin_AptosCoin'() returns ($ret0: $1_string_String)
{
    // declare local variables
    var $t0: int;
    var $t1: int;
    var $t2: bool;
    var $t3: int;
    var $t4: $1_coin_CoinInfo'$1_aptos_coin_AptosCoin';
    var $t5: $1_string_String;
    var $temp_0'$1_string_String': $1_string_String;
    var $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory#58: $Memory $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin';
    var $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory#59: $Memory $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin';
    var $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory#60: $Memory $1_coin_CoinInfo'$1_aptos_coin_AptosCoin';

    // bytecode translation starts here
    // assume Identical($t0, select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of<#0>())) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.spec.move:192:9+58
    assume {:print "$at(132,9479,9537)"} true;
    assume ($t0 == $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))->$account_address);

    // $t1 := opaque begin: coin::coin_address<#0>() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:747:43+24
    assume {:print "$at(131,31874,31898)"} true;

    // $t2 := havoc[val]() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:747:43+24
    havoc $t2;

    // if ($t2) goto L4 else goto L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:747:43+24
    if ($t2) { goto L4; } else { goto L3; }

    // label L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:747:43+24
L4:

    // trace_abort($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:747:43+24
    assume {:print "$at(131,31874,31898)"} true;
    assume {:print "$track_abort(51,7):", $t3} $t3 == $t3;

    // goto L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:747:43+24
    goto L2;

    // label L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:747:43+24
L3:

    // @60 := save_mem(coin::CoinInfo<#0>) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:747:43+24
    assume {:print "$at(131,31874,31898)"} true;
    $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory#60 := $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory;

    // @58 := save_mem(coin::supply<#0>) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:747:43+24
    $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory#58 := $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory;

    // @59 := save_mem(coin::aggregate_supply<#0>) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:747:43+24
    $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory#59 := $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory;

    // assume WellFormed($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:747:43+24
    assume $IsValid'address'($t1);

    // assume Implies(coin::spec_fun_supply_tracked[]<#0>(Add(select coin::Ghost$supply.v<#0>(global[@58]<0x1::coin::Ghost$supply<#0>>(0x0)), select coin::Ghost$aggregate_supply.v<#0>(global[@59]<0x1::coin::Ghost$aggregate_supply<#0>>(0x0))), select coin::CoinInfo.supply<0x1::coin::CoinInfo<#0>>(global[@60]<0x1::coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of[]<#0>())))), coin::spec_fun_supply_tracked<#0>(Add(select coin::Ghost$supply.v<#0>(global<0x1::coin::Ghost$supply<#0>>(0x0)), select coin::Ghost$aggregate_supply.v<#0>(global<0x1::coin::Ghost$aggregate_supply<#0>>(0x0))), select coin::CoinInfo.supply<0x1::coin::CoinInfo<#0>>(global<0x1::coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of<#0>()))))) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:747:43+24
    assume ($1_coin_spec_fun_supply_tracked'$1_aptos_coin_AptosCoin'(($ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory#58, 0)->$v + $ResourceValue($1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory#59, 0)->$v), $ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory#60, $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))->$account_address)->$supply) ==> $1_coin_spec_fun_supply_tracked'$1_aptos_coin_AptosCoin'(($ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, 0)->$v + $ResourceValue($1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory, 0)->$v), $ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))->$account_address)->$supply));

    // assume Eq<address>($t1, select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of<#0>())) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:747:43+24
    assume $IsEqual'address'($t1, $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))->$account_address);

    // $t1 := opaque end: coin::coin_address<#0>() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:747:43+24

    // $t4 := get_global<0x1::coin::CoinInfo<#0>>($t1) on_abort goto L2 with $t3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:747:9+59
    if (!$ResourceExists($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $t1)) {
        call $ExecFailureAbort();
    } else {
        $t4 := $ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $t1);
    }
    if ($abort_flag) {
        assume {:print "$at(131,31840,31899)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(51,7):", $t3} $t3 == $t3;
        goto L2;
    }

    // $t5 := get_field<0x1::coin::CoinInfo<#0>>.symbol($t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:747:9+66
    $t5 := $t4->$symbol;

    // trace_return[0]($t5) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:747:9+66
    assume {:print "$track_return(51,7,0):", $t5} $t5 == $t5;

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:748:5+1
    assume {:print "$at(131,31912,31913)"} true;
L1:

    // return $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:748:5+1
    assume {:print "$at(131,31912,31913)"} true;
    $ret0 := $t5;
    return;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:748:5+1
L2:

    // abort($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:748:5+1
    assume {:print "$at(131,31912,31913)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun coin::symbol<#0> [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:746:5+148
procedure {:inline 1} $1_coin_symbol'#0'() returns ($ret0: $1_string_String)
{
    // declare local variables
    var $t0: int;
    var $t1: int;
    var $t2: bool;
    var $t3: int;
    var $t4: $1_coin_CoinInfo'#0';
    var $t5: $1_string_String;
    var $temp_0'$1_string_String': $1_string_String;
    var $1_coin_Ghost$supply'#0'_$memory#58: $Memory $1_coin_Ghost$supply'#0';
    var $1_coin_Ghost$aggregate_supply'#0'_$memory#59: $Memory $1_coin_Ghost$aggregate_supply'#0';
    var $1_coin_CoinInfo'#0'_$memory#60: $Memory $1_coin_CoinInfo'#0';

    // bytecode translation starts here
    // assume Identical($t0, select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of<#0>())) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.spec.move:192:9+58
    assume {:print "$at(132,9479,9537)"} true;
    assume ($t0 == $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s)->$account_address);

    // $t1 := opaque begin: coin::coin_address<#0>() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:747:43+24
    assume {:print "$at(131,31874,31898)"} true;

    // $t2 := havoc[val]() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:747:43+24
    havoc $t2;

    // if ($t2) goto L4 else goto L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:747:43+24
    if ($t2) { goto L4; } else { goto L3; }

    // label L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:747:43+24
L4:

    // trace_abort($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:747:43+24
    assume {:print "$at(131,31874,31898)"} true;
    assume {:print "$track_abort(51,7):", $t3} $t3 == $t3;

    // goto L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:747:43+24
    goto L2;

    // label L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:747:43+24
L3:

    // @60 := save_mem(coin::CoinInfo<#0>) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:747:43+24
    assume {:print "$at(131,31874,31898)"} true;
    $1_coin_CoinInfo'#0'_$memory#60 := $1_coin_CoinInfo'#0'_$memory;

    // @58 := save_mem(coin::supply<#0>) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:747:43+24
    $1_coin_Ghost$supply'#0'_$memory#58 := $1_coin_Ghost$supply'#0'_$memory;

    // @59 := save_mem(coin::aggregate_supply<#0>) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:747:43+24
    $1_coin_Ghost$aggregate_supply'#0'_$memory#59 := $1_coin_Ghost$aggregate_supply'#0'_$memory;

    // assume WellFormed($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:747:43+24
    assume $IsValid'address'($t1);

    // assume Implies(coin::spec_fun_supply_tracked[]<#0>(Add(select coin::Ghost$supply.v<#0>(global[@58]<0x1::coin::Ghost$supply<#0>>(0x0)), select coin::Ghost$aggregate_supply.v<#0>(global[@59]<0x1::coin::Ghost$aggregate_supply<#0>>(0x0))), select coin::CoinInfo.supply<0x1::coin::CoinInfo<#0>>(global[@60]<0x1::coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of[]<#0>())))), coin::spec_fun_supply_tracked<#0>(Add(select coin::Ghost$supply.v<#0>(global<0x1::coin::Ghost$supply<#0>>(0x0)), select coin::Ghost$aggregate_supply.v<#0>(global<0x1::coin::Ghost$aggregate_supply<#0>>(0x0))), select coin::CoinInfo.supply<0x1::coin::CoinInfo<#0>>(global<0x1::coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of<#0>()))))) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:747:43+24
    assume ($1_coin_spec_fun_supply_tracked'#0'(($ResourceValue($1_coin_Ghost$supply'#0'_$memory#58, 0)->$v + $ResourceValue($1_coin_Ghost$aggregate_supply'#0'_$memory#59, 0)->$v), $ResourceValue($1_coin_CoinInfo'#0'_$memory#60, $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s)->$account_address)->$supply) ==> $1_coin_spec_fun_supply_tracked'#0'(($ResourceValue($1_coin_Ghost$supply'#0'_$memory, 0)->$v + $ResourceValue($1_coin_Ghost$aggregate_supply'#0'_$memory, 0)->$v), $ResourceValue($1_coin_CoinInfo'#0'_$memory, $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s)->$account_address)->$supply));

    // assume Eq<address>($t1, select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of<#0>())) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:747:43+24
    assume $IsEqual'address'($t1, $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s)->$account_address);

    // $t1 := opaque end: coin::coin_address<#0>() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:747:43+24

    // $t4 := get_global<0x1::coin::CoinInfo<#0>>($t1) on_abort goto L2 with $t3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:747:9+59
    if (!$ResourceExists($1_coin_CoinInfo'#0'_$memory, $t1)) {
        call $ExecFailureAbort();
    } else {
        $t4 := $ResourceValue($1_coin_CoinInfo'#0'_$memory, $t1);
    }
    if ($abort_flag) {
        assume {:print "$at(131,31840,31899)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(51,7):", $t3} $t3 == $t3;
        goto L2;
    }

    // $t5 := get_field<0x1::coin::CoinInfo<#0>>.symbol($t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:747:9+66
    $t5 := $t4->$symbol;

    // trace_return[0]($t5) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:747:9+66
    assume {:print "$track_return(51,7,0):", $t5} $t5 == $t5;

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:748:5+1
    assume {:print "$at(131,31912,31913)"} true;
L1:

    // return $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:748:5+1
    assume {:print "$at(131,31912,31913)"} true;
    $ret0 := $t5;
    return;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:748:5+1
L2:

    // abort($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:748:5+1
    assume {:print "$at(131,31912,31913)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun coin::decimals<0x1::aptos_coin::AptosCoin> [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:754:5+140
procedure {:inline 1} $1_coin_decimals'$1_aptos_coin_AptosCoin'() returns ($ret0: int)
{
    // declare local variables
    var $t0: int;
    var $t1: int;
    var $t2: bool;
    var $t3: int;
    var $t4: $1_coin_CoinInfo'$1_aptos_coin_AptosCoin';
    var $t5: int;
    var $temp_0'u8': int;
    var $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory#52: $Memory $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin';
    var $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory#53: $Memory $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin';
    var $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory#54: $Memory $1_coin_CoinInfo'$1_aptos_coin_AptosCoin';

    // bytecode translation starts here
    // assume Identical($t0, select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of<#0>())) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.spec.move:192:9+58
    assume {:print "$at(132,9479,9537)"} true;
    assume ($t0 == $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))->$account_address);

    // $t1 := opaque begin: coin::coin_address<#0>() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:755:43+24
    assume {:print "$at(131,32251,32275)"} true;

    // $t2 := havoc[val]() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:755:43+24
    havoc $t2;

    // if ($t2) goto L4 else goto L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:755:43+24
    if ($t2) { goto L4; } else { goto L3; }

    // label L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:755:43+24
L4:

    // trace_abort($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:755:43+24
    assume {:print "$at(131,32251,32275)"} true;
    assume {:print "$track_abort(51,8):", $t3} $t3 == $t3;

    // goto L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:755:43+24
    goto L2;

    // label L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:755:43+24
L3:

    // @54 := save_mem(coin::CoinInfo<#0>) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:755:43+24
    assume {:print "$at(131,32251,32275)"} true;
    $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory#54 := $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory;

    // @52 := save_mem(coin::supply<#0>) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:755:43+24
    $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory#52 := $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory;

    // @53 := save_mem(coin::aggregate_supply<#0>) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:755:43+24
    $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory#53 := $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory;

    // assume WellFormed($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:755:43+24
    assume $IsValid'address'($t1);

    // assume Implies(coin::spec_fun_supply_tracked[]<#0>(Add(select coin::Ghost$supply.v<#0>(global[@52]<0x1::coin::Ghost$supply<#0>>(0x0)), select coin::Ghost$aggregate_supply.v<#0>(global[@53]<0x1::coin::Ghost$aggregate_supply<#0>>(0x0))), select coin::CoinInfo.supply<0x1::coin::CoinInfo<#0>>(global[@54]<0x1::coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of[]<#0>())))), coin::spec_fun_supply_tracked<#0>(Add(select coin::Ghost$supply.v<#0>(global<0x1::coin::Ghost$supply<#0>>(0x0)), select coin::Ghost$aggregate_supply.v<#0>(global<0x1::coin::Ghost$aggregate_supply<#0>>(0x0))), select coin::CoinInfo.supply<0x1::coin::CoinInfo<#0>>(global<0x1::coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of<#0>()))))) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:755:43+24
    assume ($1_coin_spec_fun_supply_tracked'$1_aptos_coin_AptosCoin'(($ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory#52, 0)->$v + $ResourceValue($1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory#53, 0)->$v), $ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory#54, $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))->$account_address)->$supply) ==> $1_coin_spec_fun_supply_tracked'$1_aptos_coin_AptosCoin'(($ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, 0)->$v + $ResourceValue($1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory, 0)->$v), $ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))->$account_address)->$supply));

    // assume Eq<address>($t1, select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of<#0>())) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:755:43+24
    assume $IsEqual'address'($t1, $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))->$account_address);

    // $t1 := opaque end: coin::coin_address<#0>() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:755:43+24

    // $t4 := get_global<0x1::coin::CoinInfo<#0>>($t1) on_abort goto L2 with $t3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:755:9+59
    if (!$ResourceExists($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $t1)) {
        call $ExecFailureAbort();
    } else {
        $t4 := $ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $t1);
    }
    if ($abort_flag) {
        assume {:print "$at(131,32217,32276)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(51,8):", $t3} $t3 == $t3;
        goto L2;
    }

    // $t5 := get_field<0x1::coin::CoinInfo<#0>>.decimals($t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:755:9+68
    $t5 := $t4->$decimals;

    // trace_return[0]($t5) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:755:9+68
    assume {:print "$track_return(51,8,0):", $t5} $t5 == $t5;

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:756:5+1
    assume {:print "$at(131,32291,32292)"} true;
L1:

    // return $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:756:5+1
    assume {:print "$at(131,32291,32292)"} true;
    $ret0 := $t5;
    return;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:756:5+1
L2:

    // abort($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:756:5+1
    assume {:print "$at(131,32291,32292)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun coin::decimals<#0> [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:754:5+140
procedure {:inline 1} $1_coin_decimals'#0'() returns ($ret0: int)
{
    // declare local variables
    var $t0: int;
    var $t1: int;
    var $t2: bool;
    var $t3: int;
    var $t4: $1_coin_CoinInfo'#0';
    var $t5: int;
    var $temp_0'u8': int;
    var $1_coin_Ghost$supply'#0'_$memory#52: $Memory $1_coin_Ghost$supply'#0';
    var $1_coin_Ghost$aggregate_supply'#0'_$memory#53: $Memory $1_coin_Ghost$aggregate_supply'#0';
    var $1_coin_CoinInfo'#0'_$memory#54: $Memory $1_coin_CoinInfo'#0';

    // bytecode translation starts here
    // assume Identical($t0, select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of<#0>())) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.spec.move:192:9+58
    assume {:print "$at(132,9479,9537)"} true;
    assume ($t0 == $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s)->$account_address);

    // $t1 := opaque begin: coin::coin_address<#0>() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:755:43+24
    assume {:print "$at(131,32251,32275)"} true;

    // $t2 := havoc[val]() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:755:43+24
    havoc $t2;

    // if ($t2) goto L4 else goto L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:755:43+24
    if ($t2) { goto L4; } else { goto L3; }

    // label L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:755:43+24
L4:

    // trace_abort($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:755:43+24
    assume {:print "$at(131,32251,32275)"} true;
    assume {:print "$track_abort(51,8):", $t3} $t3 == $t3;

    // goto L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:755:43+24
    goto L2;

    // label L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:755:43+24
L3:

    // @54 := save_mem(coin::CoinInfo<#0>) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:755:43+24
    assume {:print "$at(131,32251,32275)"} true;
    $1_coin_CoinInfo'#0'_$memory#54 := $1_coin_CoinInfo'#0'_$memory;

    // @52 := save_mem(coin::supply<#0>) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:755:43+24
    $1_coin_Ghost$supply'#0'_$memory#52 := $1_coin_Ghost$supply'#0'_$memory;

    // @53 := save_mem(coin::aggregate_supply<#0>) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:755:43+24
    $1_coin_Ghost$aggregate_supply'#0'_$memory#53 := $1_coin_Ghost$aggregate_supply'#0'_$memory;

    // assume WellFormed($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:755:43+24
    assume $IsValid'address'($t1);

    // assume Implies(coin::spec_fun_supply_tracked[]<#0>(Add(select coin::Ghost$supply.v<#0>(global[@52]<0x1::coin::Ghost$supply<#0>>(0x0)), select coin::Ghost$aggregate_supply.v<#0>(global[@53]<0x1::coin::Ghost$aggregate_supply<#0>>(0x0))), select coin::CoinInfo.supply<0x1::coin::CoinInfo<#0>>(global[@54]<0x1::coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of[]<#0>())))), coin::spec_fun_supply_tracked<#0>(Add(select coin::Ghost$supply.v<#0>(global<0x1::coin::Ghost$supply<#0>>(0x0)), select coin::Ghost$aggregate_supply.v<#0>(global<0x1::coin::Ghost$aggregate_supply<#0>>(0x0))), select coin::CoinInfo.supply<0x1::coin::CoinInfo<#0>>(global<0x1::coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of<#0>()))))) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:755:43+24
    assume ($1_coin_spec_fun_supply_tracked'#0'(($ResourceValue($1_coin_Ghost$supply'#0'_$memory#52, 0)->$v + $ResourceValue($1_coin_Ghost$aggregate_supply'#0'_$memory#53, 0)->$v), $ResourceValue($1_coin_CoinInfo'#0'_$memory#54, $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s)->$account_address)->$supply) ==> $1_coin_spec_fun_supply_tracked'#0'(($ResourceValue($1_coin_Ghost$supply'#0'_$memory, 0)->$v + $ResourceValue($1_coin_Ghost$aggregate_supply'#0'_$memory, 0)->$v), $ResourceValue($1_coin_CoinInfo'#0'_$memory, $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s)->$account_address)->$supply));

    // assume Eq<address>($t1, select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of<#0>())) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:755:43+24
    assume $IsEqual'address'($t1, $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s)->$account_address);

    // $t1 := opaque end: coin::coin_address<#0>() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:755:43+24

    // $t4 := get_global<0x1::coin::CoinInfo<#0>>($t1) on_abort goto L2 with $t3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:755:9+59
    if (!$ResourceExists($1_coin_CoinInfo'#0'_$memory, $t1)) {
        call $ExecFailureAbort();
    } else {
        $t4 := $ResourceValue($1_coin_CoinInfo'#0'_$memory, $t1);
    }
    if ($abort_flag) {
        assume {:print "$at(131,32217,32276)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(51,8):", $t3} $t3 == $t3;
        goto L2;
    }

    // $t5 := get_field<0x1::coin::CoinInfo<#0>>.decimals($t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:755:9+68
    $t5 := $t4->$decimals;

    // trace_return[0]($t5) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:755:9+68
    assume {:print "$track_return(51,8,0):", $t5} $t5 == $t5;

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:756:5+1
    assume {:print "$at(131,32291,32292)"} true;
L1:

    // return $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:756:5+1
    assume {:print "$at(131,32291,32292)"} true;
    $ret0 := $t5;
    return;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:756:5+1
L2:

    // abort($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:756:5+1
    assume {:print "$at(131,32291,32292)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun coin::balance<#0> [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:670:5+400
procedure {:inline 1} $1_coin_balance'#0'(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'';
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: bool;
    var $t7: $1_coin_CoinStore'#0';
    var $t8: $1_coin_Coin'#0';
    var $t9: int;
    var $t10: $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'';
    var $t11: bool;
    var $t12: $Mutation ($1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'');
    var $t13: $1_object_Object'$1_fungible_asset_Metadata';
    var $t14: $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'';
    var $t15: bool;
    var $t16: int;
    var $t17: int;
    var $t18: int;
    var $t19: int;
    var $t0: int;
    var $temp_0'$1_option_Option'$1_object_Object'$1_fungible_asset_Metadata''': $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'';
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[owner]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:670:5+1
    assume {:print "$at(131,28823,28824)"} true;
    assume {:print "$track_local(51,9,0):", $t0} $t0 == $t0;

    // $t1 := coin::paired_metadata<#0>() on_abort goto L7 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:671:31+27
    assume {:print "$at(131,28944,28971)"} true;
    call $t1 := $1_coin_paired_metadata'#0'();
    if ($abort_flag) {
        assume {:print "$at(131,28944,28971)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(51,9):", $t5} $t5 == $t5;
        goto L7;
    }

    // trace_local[paired_metadata]($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:671:31+27
    assume {:print "$track_local(51,9,1):", $t1} $t1 == $t1;

    // trace_local[owner]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:699:16+12
    assume {:print "$at(131,29996,30008)"} true;
    assume {:print "$track_local(51,9,2):", $t0} $t0 == $t0;

    // $t6 := exists<0x1::coin::CoinStore<#0>>($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:700:13+34
    assume {:print "$at(131,30055,30089)"} true;
    $t6 := $ResourceExists($1_coin_CoinStore'#0'_$memory, $t0);

    // if ($t6) goto L1 else goto L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:700:9+151
    if ($t6) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:701:13+41
    assume {:print "$at(131,30106,30147)"} true;
L1:

    // $t7 := get_global<0x1::coin::CoinStore<#0>>($t0) on_abort goto L7 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:701:13+41
    assume {:print "$at(131,30106,30147)"} true;
    if (!$ResourceExists($1_coin_CoinStore'#0'_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t7 := $ResourceValue($1_coin_CoinStore'#0'_$memory, $t0);
    }
    if ($abort_flag) {
        assume {:print "$at(131,30106,30147)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(51,9):", $t5} $t5 == $t5;
        goto L7;
    }

    // $t8 := get_field<0x1::coin::CoinStore<#0>>.coin($t7) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:701:13+46
    $t8 := $t7->$coin;

    // $t9 := get_field<0x1::coin::Coin<#0>>.value($t8) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:701:13+52
    $t9 := $t8->$value;

    // $t3 := $t9 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:701:13+52
    $t3 := $t9;

    // trace_local[$t3]($t9) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:701:13+52
    assume {:print "$track_local(51,9,3):", $t9} $t9 == $t9;

    // label L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:672:61+16
    assume {:print "$at(131,29034,29050)"} true;
L5:

    // $t10 := copy($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:672:61+16
    assume {:print "$at(131,29034,29050)"} true;
    $t10 := $t1;

    // $t11 := opaque begin: option::is_some<0x1::object::Object<0x1::fungible_asset::Metadata>>($t10) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:672:45+33

    // assume WellFormed($t11) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:672:45+33
    assume $IsValid'bool'($t11);

    // assume Eq<bool>($t11, option::spec_is_some<0x1::object::Object<0x1::fungible_asset::Metadata>>($t10)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:672:45+33
    assume $IsEqual'bool'($t11, $1_option_spec_is_some'$1_object_Object'$1_fungible_asset_Metadata''($t10));

    // $t11 := opaque end: option::is_some<0x1::object::Object<0x1::fungible_asset::Metadata>>($t10) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:672:45+33

    // if ($t11) goto L3 else goto L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:672:41+202
    if ($t11) { goto L3; } else { goto L2; }

    // label L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:674:17+5
    assume {:print "$at(131,29118,29123)"} true;
L3:

    // $t12 := borrow_local($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:675:33+20
    assume {:print "$at(131,29158,29178)"} true;
    $t12 := $Mutation($Local(1), EmptyVec(), $t1);

    // $t13 := opaque begin: option::extract<0x1::object::Object<0x1::fungible_asset::Metadata>>($t12) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:675:17+37

    // $t14 := read_ref($t12) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:675:17+37
    $t14 := $Dereference($t12);

    // assume Identical($t15, option::spec_is_none<0x1::object::Object<0x1::fungible_asset::Metadata>>($t12)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:675:17+37
    assume ($t15 == $1_option_spec_is_none'$1_object_Object'$1_fungible_asset_Metadata''($Dereference($t12)));

    // if ($t15) goto L9 else goto L10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:675:17+37
    if ($t15) { goto L9; } else { goto L10; }

    // label L9 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:675:17+37
L9:

    // assume And(option::spec_is_none<0x1::object::Object<0x1::fungible_asset::Metadata>>($t12), Eq(262145, $t5)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:675:17+37
    assume {:print "$at(131,29142,29179)"} true;
    assume ($1_option_spec_is_none'$1_object_Object'$1_fungible_asset_Metadata''($Dereference($t12)) && $IsEqual'num'(262145, $t5));

    // trace_abort($t5) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:675:17+37
    assume {:print "$at(131,29142,29179)"} true;
    assume {:print "$track_abort(51,9):", $t5} $t5 == $t5;

    // goto L7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:675:17+37
    goto L7;

    // label L8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:675:17+37
L8:

    // $t12 := havoc[mut]() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:675:17+37
    assume {:print "$at(131,29142,29179)"} true;
    havoc $temp_0'$1_option_Option'$1_object_Object'$1_fungible_asset_Metadata''';
    $t12 := $UpdateMutation($t12, $temp_0'$1_option_Option'$1_object_Object'$1_fungible_asset_Metadata''');

    // assume And(WellFormed($t12), Le(Len<0x1::object::Object<0x1::fungible_asset::Metadata>>(select option::Option.vec($t12)), 1)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:675:17+37
    assume ($IsValid'$1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'''($Dereference($t12)) && (LenVec($Dereference($t12)->$vec) <= 1));

    // assume WellFormed($t13) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:675:17+37
    assume $IsValid'$1_object_Object'$1_fungible_asset_Metadata''($t13);

    // assume Eq<0x1::object::Object<0x1::fungible_asset::Metadata>>($t13, option::spec_borrow<0x1::object::Object<0x1::fungible_asset::Metadata>>($t14)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:675:17+37
    assume $IsEqual'$1_object_Object'$1_fungible_asset_Metadata''($t13, $1_option_spec_borrow'$1_object_Object'$1_fungible_asset_Metadata''($t14));

    // assume option::spec_is_none<0x1::object::Object<0x1::fungible_asset::Metadata>>($t12) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:675:17+37
    assume $1_option_spec_is_none'$1_object_Object'$1_fungible_asset_Metadata''($Dereference($t12));

    // $t13 := opaque end: option::extract<0x1::object::Object<0x1::fungible_asset::Metadata>>($t12) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:675:17+37

    // pack_ref_deep($t12) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:675:17+37

    // write_back[LocalRoot($t1)@]($t12) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:675:17+37
    $t1 := $Dereference($t12);

    // trace_local[paired_metadata]($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:675:17+37
    assume {:print "$track_local(51,9,1):", $t1} $t1 == $t1;

    // $t16 := primary_fungible_store::balance<0x1::fungible_asset::Metadata>($t0, $t13) on_abort goto L7 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:673:13+126
    assume {:print "$at(131,29068,29194)"} true;
    call $t16 := $1_primary_fungible_store_balance'$1_fungible_asset_Metadata'($t0, $t13);
    if ($abort_flag) {
        assume {:print "$at(131,29068,29194)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(51,9):", $t5} $t5 == $t5;
        goto L7;
    }

    // $t4 := $t16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:673:13+126
    $t4 := $t16;

    // trace_local[$t9]($t16) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:673:13+126
    assume {:print "$track_local(51,9,4):", $t16} $t16 == $t16;

    // label L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:672:9+234
    assume {:print "$at(131,28982,29216)"} true;
L4:

    // $t17 := +($t3, $t4) on_abort goto L7 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:672:9+234
    assume {:print "$at(131,28982,29216)"} true;
    call $t17 := $AddU64($t3, $t4);
    if ($abort_flag) {
        assume {:print "$at(131,28982,29216)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(51,9):", $t5} $t5 == $t5;
        goto L7;
    }

    // trace_return[0]($t17) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:672:9+234
    assume {:print "$track_return(51,9,0):", $t17} $t17 == $t17;

    // goto L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:672:9+234
    goto L6;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:677:18+1
    assume {:print "$at(131,29213,29214)"} true;
L2:

    // $t18 := 0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:677:18+1
    assume {:print "$at(131,29213,29214)"} true;
    $t18 := 0;
    assume $IsValid'u64'($t18);

    // $t4 := $t18 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:677:18+1
    $t4 := $t18;

    // trace_local[$t9]($t18) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:677:18+1
    assume {:print "$track_local(51,9,4):", $t18} $t18 == $t18;

    // goto L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:677:18+1
    goto L4;

    // label L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:703:13+1
    assume {:print "$at(131,30190,30191)"} true;
L0:

    // $t19 := 0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:703:13+1
    assume {:print "$at(131,30190,30191)"} true;
    $t19 := 0;
    assume $IsValid'u64'($t19);

    // $t3 := $t19 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:703:13+1
    $t3 := $t19;

    // trace_local[$t3]($t19) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:703:13+1
    assume {:print "$track_local(51,9,3):", $t19} $t19 == $t19;

    // goto L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:703:13+1
    goto L5;

    // label L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:678:5+1
    assume {:print "$at(131,29222,29223)"} true;
L6:

    // return $t17 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:678:5+1
    assume {:print "$at(131,29222,29223)"} true;
    $ret0 := $t17;
    return;

    // label L7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:678:5+1
L7:

    // abort($t5) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:678:5+1
    assume {:print "$at(131,29222,29223)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

    // label L10 at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;
L10:

    // drop($t12) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L8 at <internal>:1:1+10
    goto L8;

}

// fun coin::burn_internal<#0> [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1225:5+587
procedure {:inline 1} $1_coin_burn_internal'#0'(_$t0: $1_coin_Coin'#0') returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: $Mutation ($1_option_Option'$1_optional_aggregator_OptionalAggregator');
    var $t3: int;
    var $t4: $1_coin_Ghost$supply'#0';
    var $t5: int;
    var $t6: $Mutation ($1_coin_Ghost$supply'#0');
    var $t7: int;
    var $t8: int;
    var $t9: bool;
    var $t10: int;
    var $t11: bool;
    var $t12: int;
    var $t13: $Mutation ($1_coin_CoinInfo'#0');
    var $t14: $Mutation ($1_option_Option'$1_optional_aggregator_OptionalAggregator');
    var $t15: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t16: bool;
    var $t17: $Mutation ($1_optional_aggregator_OptionalAggregator);
    var $t18: int;
    var $t0: $1_coin_Coin'#0';
    var $1_coin_CoinInfo'#0'_$modifies: [int]bool;
    var $temp_0'$1_coin_Coin'#0'': $1_coin_Coin'#0';
    var $temp_0'$1_option_Option'$1_optional_aggregator_OptionalAggregator'': $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $temp_0'u64': int;
    var $1_coin_Ghost$supply'#0'_$memory#82: $Memory $1_coin_Ghost$supply'#0';
    var $1_coin_Ghost$aggregate_supply'#0'_$memory#83: $Memory $1_coin_Ghost$aggregate_supply'#0';
    var $1_coin_CoinInfo'#0'_$memory#84: $Memory $1_coin_CoinInfo'#0';
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t3, select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of<#0>())) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.spec.move:247:9+58
    assume {:print "$at(132,11371,11429)"} true;
    assume ($t3 == $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s)->$account_address);

    // trace_local[coin]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1225:5+1
    assume {:print "$at(131,51810,51811)"} true;
    assume {:print "$track_local(51,11,0):", $t0} $t0 == $t0;

    // assume Identical($t4, pack coin::Ghost$supply<#0>(Sub(select coin::Ghost$supply.v<#0>(global<0x1::coin::Ghost$supply<#0>>(0x0)), select coin::Coin.value<0x1::coin::Coin<#0>>($t0)))) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1227:13+56
    assume {:print "$at(131,51914,51970)"} true;
    assume ($t4 == $1_coin_Ghost$supply'#0'(($ResourceValue($1_coin_Ghost$supply'#0'_$memory, 0)->$v - $t0->$value)));

    // assume Identical($t5, 0x0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1227:13+56
    assume ($t5 == 0);

    // $t6 := borrow_global<0x1::coin::Ghost$supply<#0>>($t5) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1227:13+56
    if (!$ResourceExists($1_coin_Ghost$supply'#0'_$memory, $t5)) {
        call $ExecFailureAbort();
    } else {
        $t6 := $Mutation($Global($t5), EmptyVec(), $ResourceValue($1_coin_Ghost$supply'#0'_$memory, $t5));
    }

    // write_ref($t6, $t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1227:13+56
    $t6 := $UpdateMutation($t6, $t4);

    // write_back[0x1::coin::Ghost$supply<#0>@]($t6) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1227:13+56
    $1_coin_Ghost$supply'#0'_$memory := $ResourceUpdate($1_coin_Ghost$supply'#0'_$memory, $GlobalLocationAddress($t6),
        $Dereference($t6));

    // $t7 := unpack 0x1::coin::Coin<#0>($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1229:13+22
    assume {:print "$at(131,51996,52018)"} true;
    $t7 := $t0->$value;

    // trace_local[amount]($t7) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1229:13+22
    assume {:print "$track_local(51,11,1):", $t7} $t7 == $t7;

    // $t8 := 0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1230:23+1
    assume {:print "$at(131,52050,52051)"} true;
    $t8 := 0;
    assume $IsValid'u64'($t8);

    // $t9 := !=($t7, $t8) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1230:13+11
    $t9 := !$IsEqual'u64'($t7, $t8);

    // if ($t9) goto L0 else goto L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1230:9+337
    if ($t9) { goto L0; } else { goto L2; }

    // label L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1231:75+24
    assume {:print "$at(131,52130,52154)"} true;
L0:

    // $t10 := opaque begin: coin::coin_address<#0>() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1231:75+24
    assume {:print "$at(131,52130,52154)"} true;

    // $t11 := havoc[val]() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1231:75+24
    havoc $t11;

    // if ($t11) goto L8 else goto L7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1231:75+24
    if ($t11) { goto L8; } else { goto L7; }

    // label L8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1231:75+24
L8:

    // trace_abort($t12) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1231:75+24
    assume {:print "$at(131,52130,52154)"} true;
    assume {:print "$track_abort(51,11):", $t12} $t12 == $t12;

    // goto L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1231:75+24
    goto L6;

    // label L7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1231:75+24
L7:

    // @84 := save_mem(coin::CoinInfo<#0>) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1231:75+24
    assume {:print "$at(131,52130,52154)"} true;
    $1_coin_CoinInfo'#0'_$memory#84 := $1_coin_CoinInfo'#0'_$memory;

    // @82 := save_mem(coin::supply<#0>) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1231:75+24
    $1_coin_Ghost$supply'#0'_$memory#82 := $1_coin_Ghost$supply'#0'_$memory;

    // @83 := save_mem(coin::aggregate_supply<#0>) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1231:75+24
    $1_coin_Ghost$aggregate_supply'#0'_$memory#83 := $1_coin_Ghost$aggregate_supply'#0'_$memory;

    // assume WellFormed($t10) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1231:75+24
    assume $IsValid'address'($t10);

    // assume Implies(coin::spec_fun_supply_tracked[]<#0>(Add(select coin::Ghost$supply.v<#0>(global[@82]<0x1::coin::Ghost$supply<#0>>(0x0)), select coin::Ghost$aggregate_supply.v<#0>(global[@83]<0x1::coin::Ghost$aggregate_supply<#0>>(0x0))), select coin::CoinInfo.supply<0x1::coin::CoinInfo<#0>>(global[@84]<0x1::coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of[]<#0>())))), coin::spec_fun_supply_tracked<#0>(Add(select coin::Ghost$supply.v<#0>(global<0x1::coin::Ghost$supply<#0>>(0x0)), select coin::Ghost$aggregate_supply.v<#0>(global<0x1::coin::Ghost$aggregate_supply<#0>>(0x0))), select coin::CoinInfo.supply<0x1::coin::CoinInfo<#0>>(global<0x1::coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of<#0>()))))) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1231:75+24
    assume ($1_coin_spec_fun_supply_tracked'#0'(($ResourceValue($1_coin_Ghost$supply'#0'_$memory#82, 0)->$v + $ResourceValue($1_coin_Ghost$aggregate_supply'#0'_$memory#83, 0)->$v), $ResourceValue($1_coin_CoinInfo'#0'_$memory#84, $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s)->$account_address)->$supply) ==> $1_coin_spec_fun_supply_tracked'#0'(($ResourceValue($1_coin_Ghost$supply'#0'_$memory, 0)->$v + $ResourceValue($1_coin_Ghost$aggregate_supply'#0'_$memory, 0)->$v), $ResourceValue($1_coin_CoinInfo'#0'_$memory, $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s)->$account_address)->$supply));

    // assume Eq<address>($t10, select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of<#0>())) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1231:75+24
    assume $IsEqual'address'($t10, $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s)->$account_address);

    // $t10 := opaque end: coin::coin_address<#0>() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1231:75+24

    // $t13 := borrow_global<0x1::coin::CoinInfo<#0>>($t10) on_abort goto L6 with $t12 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1231:37+63
    if (!$ResourceExists($1_coin_CoinInfo'#0'_$memory, $t10)) {
        call $ExecFailureAbort();
    } else {
        $t13 := $Mutation($Global($t10), EmptyVec(), $ResourceValue($1_coin_CoinInfo'#0'_$memory, $t10));
    }
    if ($abort_flag) {
        assume {:print "$at(131,52092,52155)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(51,11):", $t12} $t12 == $t12;
        goto L6;
    }

    // $t14 := borrow_field<0x1::coin::CoinInfo<#0>>.supply($t13) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1231:32+75
    $t14 := $ChildMutation($t13, 3, $Dereference($t13)->$supply);

    // trace_local[maybe_supply]($t14) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1231:32+75
    $temp_0'$1_option_Option'$1_optional_aggregator_OptionalAggregator'' := $Dereference($t14);
    assume {:print "$track_local(51,11,2):", $temp_0'$1_option_Option'$1_optional_aggregator_OptionalAggregator''} $temp_0'$1_option_Option'$1_optional_aggregator_OptionalAggregator'' == $temp_0'$1_option_Option'$1_optional_aggregator_OptionalAggregator'';

    // $t15 := read_ref($t14) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1232:33+12
    assume {:print "$at(131,52197,52209)"} true;
    $t15 := $Dereference($t14);

    // $t16 := opaque begin: option::is_some<0x1::optional_aggregator::OptionalAggregator>($t15) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1232:17+29

    // assume WellFormed($t16) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1232:17+29
    assume $IsValid'bool'($t16);

    // assume Eq<bool>($t16, option::spec_is_some<0x1::optional_aggregator::OptionalAggregator>($t15)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1232:17+29
    assume $IsEqual'bool'($t16, $1_option_spec_is_some'$1_optional_aggregator_OptionalAggregator'($t15));

    // $t16 := opaque end: option::is_some<0x1::optional_aggregator::OptionalAggregator>($t15) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1232:17+29

    // if ($t16) goto L4 else goto L9 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1232:13+184
    if ($t16) { goto L4; } else { goto L9; }

    // label L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1233:30+32
    assume {:print "$at(131,52244,52276)"} true;
L4:

    // $t17 := option::borrow_mut<0x1::optional_aggregator::OptionalAggregator>($t14) on_abort goto L6 with $t12 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1233:30+32
    assume {:print "$at(131,52244,52276)"} true;
    call $t17,$t14 := $1_option_borrow_mut'$1_optional_aggregator_OptionalAggregator'($t14);
    if ($abort_flag) {
        assume {:print "$at(131,52244,52276)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(51,11):", $t12} $t12 == $t12;
        goto L6;
    }

    // $t18 := (u128)($t7) on_abort goto L6 with $t12 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1234:50+16
    assume {:print "$at(131,52328,52344)"} true;
    call $t18 := $CastU128($t7);
    if ($abort_flag) {
        assume {:print "$at(131,52328,52344)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(51,11):", $t12} $t12 == $t12;
        goto L6;
    }

    // optional_aggregator::sub($t17, $t18) on_abort goto L6 with $t12 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1234:17+50
    call $t17 := $1_optional_aggregator_sub($t17, $t18);
    if ($abort_flag) {
        assume {:print "$at(131,52295,52345)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(51,11):", $t12} $t12 == $t12;
        goto L6;
    }

    // write_back[Reference($t14).vec (vector<0x1::optional_aggregator::OptionalAggregator>)/[]]($t17) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1234:17+50
    $t14 := $UpdateMutation($t14, (var $$sel0 := $Dereference($t14)->$vec; $Update'$1_option_Option'$1_optional_aggregator_OptionalAggregator''_vec($Dereference($t14), UpdateVec($$sel0, ReadVec($t17->p, LenVec($t14->p) + 1), $Dereference($t17)))));

    // write_back[Reference($t13).supply (0x1::option::Option<0x1::optional_aggregator::OptionalAggregator>)]($t14) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1234:17+50
    $t13 := $UpdateMutation($t13, $Update'$1_coin_CoinInfo'#0''_supply($Dereference($t13), $Dereference($t14)));

    // pack_ref_deep($t13) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1234:17+50

    // write_back[0x1::coin::CoinInfo<#0>@]($t13) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1234:17+50
    $1_coin_CoinInfo'#0'_$memory := $ResourceUpdate($1_coin_CoinInfo'#0'_$memory, $GlobalLocationAddress($t13),
        $Dereference($t13));

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1237:9+6
    assume {:print "$at(131,52384,52390)"} true;
L2:

    // trace_return[0]($t7) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1225:78+514
    assume {:print "$at(131,51883,52397)"} true;
    assume {:print "$track_return(51,11,0):", $t7} $t7 == $t7;

    // goto L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1225:78+514
    goto L5;

    // label L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1232:13+184
    assume {:print "$at(131,52177,52361)"} true;
L3:

    // drop($t14) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1232:13+184
    assume {:print "$at(131,52177,52361)"} true;

    // goto L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1232:13+184
    goto L2;

    // label L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1238:5+1
    assume {:print "$at(131,52396,52397)"} true;
L5:

    // return $t7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1238:5+1
    assume {:print "$at(131,52396,52397)"} true;
    $ret0 := $t7;
    return;

    // label L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1238:5+1
L6:

    // abort($t12) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1238:5+1
    assume {:print "$at(131,52396,52397)"} true;
    $abort_code := $t12;
    $abort_flag := true;
    return;

    // label L9 at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;
L9:

    // drop($t13) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L3 at <internal>:1:1+10
    goto L3;

}

// fun coin::deposit<#0> [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:858:5+1024
procedure {:inline 1} $1_coin_deposit'#0'(_$t0: int, _$t1: $1_coin_Coin'#0') returns ()
{
    // declare local variables
    var $t2: $Mutation ($1_coin_CoinStore'#0');
    var $t3: int;
    var $t4: $1_object_Object'$1_fungible_asset_Metadata';
    var $t5: bool;
    var $t6: bool;
    var $t7: $1_coin_CoinStore'#0';
    var $t8: bool;
    var $t9: $Mutation ($1_coin_CoinStore'#0');
    var $t10: int;
    var $t11: bool;
    var $t12: $Mutation ($1_event_EventHandle'$1_coin_DepositEvent');
    var $t13: int;
    var $t14: $1_coin_DepositEvent;
    var $t15: $Mutation ($1_coin_Coin'#0');
    var $t16: int;
    var $t17: int;
    var $t18: $1_object_Object'$1_fungible_asset_Metadata';
    var $t19: bool;
    var $t20: bool;
    var $t21: bool;
    var $t22: int;
    var $t23: $1_fungible_asset_FungibleAsset;
    var $t24: int;
    var $t25: int;
    var $t26: int;
    var $t27: bool;
    var $t28: bool;
    var $t29: int;
    var $t30: int;
    var $t31: bool;
    var $t32: bool;
    var $t0: int;
    var $t1: $1_coin_Coin'#0';
    var $1_coin_CoinInfo'#0'_$modifies: [int]bool;
    var $temp_0'$1_coin_Coin'#0'': $1_coin_Coin'#0';
    var $temp_0'$1_coin_CoinStore'#0'': $1_coin_CoinStore'#0';
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t7, global<0x1::coin::CoinStore<#0>>($t0)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.spec.move:323:9+59
    assume {:print "$at(132,14443,14502)"} true;
    assume ($t7 == $ResourceValue($1_coin_CoinStore'#0'_$memory, $t0));

    // trace_local[account_addr]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:858:5+1
    assume {:print "$at(131,36611,36612)"} true;
    assume {:print "$track_local(51,12,0):", $t0} $t0 == $t0;

    // trace_local[coin]($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:858:5+1
    assume {:print "$track_local(51,12,1):", $t1} $t1 == $t1;

    // $t8 := exists<0x1::coin::CoinStore<#0>>($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:862:13+41
    assume {:print "$at(131,36773,36814)"} true;
    $t8 := $ResourceExists($1_coin_CoinStore'#0'_$memory, $t0);

    // if ($t8) goto L1 else goto L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:862:9+859
    if ($t8) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:863:30+52
    assume {:print "$at(131,36848,36900)"} true;
L1:

    // $t9 := borrow_global<0x1::coin::CoinStore<#0>>($t0) on_abort goto L16 with $t10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:863:30+52
    assume {:print "$at(131,36848,36900)"} true;
    if (!$ResourceExists($1_coin_CoinStore'#0'_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t9 := $Mutation($Global($t0), EmptyVec(), $ResourceValue($1_coin_CoinStore'#0'_$memory, $t0));
    }
    if ($abort_flag) {
        assume {:print "$at(131,36848,36900)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(51,12):", $t10} $t10 == $t10;
        goto L16;
    }

    // trace_local[coin_store]($t9) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:863:30+52
    $temp_0'$1_coin_CoinStore'#0'' := $Dereference($t9);
    assume {:print "$track_local(51,12,2):", $temp_0'$1_coin_CoinStore'#0''} $temp_0'$1_coin_CoinStore'#0'' == $temp_0'$1_coin_CoinStore'#0'';

    // $t11 := get_field<0x1::coin::CoinStore<#0>>.frozen($t9) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:865:18+17
    assume {:print "$at(131,36942,36959)"} true;
    $t11 := $Dereference($t9)->$frozen;

    // if ($t11) goto L2 else goto L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:865:17+18
    if ($t11) { goto L2; } else { goto L3; }

    // label L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:869:21+30
    assume {:print "$at(131,37100,37130)"} true;
L3:

    // $t12 := borrow_field<0x1::coin::CoinStore<#0>>.deposit_events($t9) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:869:21+30
    assume {:print "$at(131,37100,37130)"} true;
    $t12 := $ChildMutation($t9, 2, $Dereference($t9)->$deposit_events);

    // $t13 := get_field<0x1::coin::Coin<#0>>.value($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:870:44+10
    assume {:print "$at(131,37176,37186)"} true;
    $t13 := $t1->$value;

    // $t14 := pack 0x1::coin::DepositEvent($t13) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:870:21+35
    $t14 := $1_coin_DepositEvent($t13);

    // opaque begin: event::emit_event<0x1::coin::DepositEvent>($t12, $t14) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:868:17+162
    assume {:print "$at(131,37046,37208)"} true;

    // opaque end: event::emit_event<0x1::coin::DepositEvent>($t12, $t14) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:868:17+162

    // write_back[Reference($t9).deposit_events (0x1::event::EventHandle<0x1::coin::DepositEvent>)]($t12) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:868:17+162
    $t9 := $UpdateMutation($t9, $Update'$1_coin_CoinStore'#0''_deposit_events($Dereference($t9), $Dereference($t12)));

    // $t15 := borrow_field<0x1::coin::CoinStore<#0>>.coin($t9) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:872:19+20
    assume {:print "$at(131,37229,37249)"} true;
    $t15 := $ChildMutation($t9, 0, $Dereference($t9)->$coin);

    // coin::merge<#0>($t15, $t1) on_abort goto L16 with $t10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:872:13+33
    call $t15 := $1_coin_merge'#0'($t15, $t1);
    if ($abort_flag) {
        assume {:print "$at(131,37223,37256)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(51,12):", $t10} $t10 == $t10;
        goto L16;
    }

    // write_back[Reference($t9).coin (0x1::coin::Coin<#0>)]($t15) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:872:13+33
    $t9 := $UpdateMutation($t9, $Update'$1_coin_CoinStore'#0''_coin($Dereference($t9), $Dereference($t15)));

    // write_back[0x1::coin::CoinStore<#0>@]($t9) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:872:13+33
    $1_coin_CoinStore'#0'_$memory := $ResourceUpdate($1_coin_CoinStore'#0'_$memory, $GlobalLocationAddress($t9),
        $Dereference($t9));

    // label L10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:862:9+859
    assume {:print "$at(131,36769,37628)"} true;
L10:

    // goto L15 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:862:9+859
    assume {:print "$at(131,36769,37628)"} true;
    goto L15;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:864:13+6
    assume {:print "$at(131,36915,36921)"} true;
L2:

    // drop($t9) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:864:13+6
    assume {:print "$at(131,36915,36921)"} true;

    // $t16 := 10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:866:42+7
    assume {:print "$at(131,37003,37010)"} true;
    $t16 := 10;
    assume $IsValid'u64'($t16);

    // $t17 := error::permission_denied($t16) on_abort goto L16 with $t10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:866:17+33
    call $t17 := $1_error_permission_denied($t16);
    if ($abort_flag) {
        assume {:print "$at(131,36978,37011)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(51,12):", $t10} $t10 == $t10;
        goto L16;
    }

    // trace_abort($t17) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:864:13+6
    assume {:print "$at(131,36915,36921)"} true;
    assume {:print "$track_abort(51,12):", $t17} $t17 == $t17;

    // $t10 := move($t17) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:864:13+6
    $t10 := $t17;

    // goto L16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:864:13+6
    goto L16;

    // label L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:874:28+34
    assume {:print "$at(131,37304,37338)"} true;
L0:

    // $t18 := coin::ensure_paired_metadata<#0>() on_abort goto L16 with $t10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:874:28+34
    assume {:print "$at(131,37304,37338)"} true;
    call $t18 := $1_coin_ensure_paired_metadata'#0'();
    if ($abort_flag) {
        assume {:print "$at(131,37304,37338)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(51,12):", $t10} $t10 == $t10;
        goto L16;
    }

    // trace_local[account_address]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:900:16+33
    assume {:print "$at(131,38232,38265)"} true;
    assume {:print "$track_local(51,12,3):", $t0} $t0 == $t0;

    // trace_local[metadata]($t18) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:900:16+33
    assume {:print "$track_local(51,12,4):", $t18} $t18 == $t18;

    // $t19 := features::new_accounts_default_to_fa_store_enabled() on_abort goto L16 with $t10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:9+52
    assume {:print "$at(131,38362,38414)"} true;
    call $t19 := $1_features_new_accounts_default_to_fa_store_enabled();
    if ($abort_flag) {
        assume {:print "$at(131,38362,38414)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(51,12):", $t10} $t10 == $t10;
        goto L16;
    }

    // if ($t19) goto L5 else goto L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:9+159
    if ($t19) { goto L5; } else { goto L4; }

    // label L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:9+159
L5:

    // $t20 := true at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:9+159
    assume {:print "$at(131,38362,38521)"} true;
    $t20 := true;
    assume $IsValid'bool'($t20);

    // $t5 := $t20 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:9+159
    $t5 := $t20;

    // trace_local[$t2]($t20) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:9+159
    assume {:print "$track_local(51,12,5):", $t20} $t20 == $t20;

    // label L14 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:9+414
L14:

    // if ($t5) goto L7 else goto L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:9+414
    assume {:print "$at(131,38362,38776)"} true;
    if ($t5) { goto L7; } else { goto L6; }

    // label L7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:9+414
L7:

    // $t21 := true at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:9+414
    assume {:print "$at(131,38362,38776)"} true;
    $t21 := true;
    assume $IsValid'bool'($t21);

    // $t6 := $t21 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:9+414
    $t6 := $t21;

    // trace_local[$t16]($t21) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:9+414
    assume {:print "$track_local(51,12,6):", $t21} $t21 == $t21;

    // label L11 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:875:13+263
    assume {:print "$at(131,37353,37616)"} true;
L11:

    // if ($t6) goto L9 else goto L8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:875:13+263
    assume {:print "$at(131,37353,37616)"} true;
    if ($t6) { goto L9; } else { goto L8; }

    // label L9 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:876:49+12
    assume {:print "$at(131,37468,37480)"} true;
L9:

    // assume Identical($t22, select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of<#0>())) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.spec.move:305:9+58
    assume {:print "$at(132,13818,13876)"} true;
    assume ($t22 == $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s)->$account_address);

    // $t23 := coin::coin_to_fungible_asset<#0>($t1) on_abort goto L16 with $t10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:876:63+28
    assume {:print "$at(131,37482,37510)"} true;
    call $t23 := $1_coin_coin_to_fungible_asset'#0'($t1);
    if ($abort_flag) {
        assume {:print "$at(131,37482,37510)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(51,12):", $t10} $t10 == $t10;
        goto L16;
    }

    // primary_fungible_store::deposit($t0, $t23) on_abort goto L16 with $t10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:876:17+75
    call $1_primary_fungible_store_deposit($t0, $t23);
    if ($abort_flag) {
        assume {:print "$at(131,37436,37511)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(51,12):", $t10} $t10 == $t10;
        goto L16;
    }

    // goto L10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:876:17+75
    goto L10;

    // label L8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:878:40+25
    assume {:print "$at(131,37575,37600)"} true;
L8:

    // $t24 := 5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:878:40+25
    assume {:print "$at(131,37575,37600)"} true;
    $t24 := 5;
    assume $IsValid'u64'($t24);

    // $t25 := error::not_found($t24) on_abort goto L16 with $t10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:878:23+43
    call $t25 := $1_error_not_found($t24);
    if ($abort_flag) {
        assume {:print "$at(131,37558,37601)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(51,12):", $t10} $t10 == $t10;
        goto L16;
    }

    // trace_abort($t25) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:878:17+49
    assume {:print "$at(131,37552,37601)"} true;
    assume {:print "$track_abort(51,12):", $t25} $t25 == $t25;

    // $t10 := move($t25) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:878:17+49
    $t10 := $t25;

    // goto L16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:878:17+49
    goto L16;

    // label L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:906:17+15
    assume {:print "$at(131,38642,38657)"} true;
L6:

    // $t26 := primary_fungible_store::primary_store_address<0x1::fungible_asset::Metadata>($t0, $t18) on_abort goto L16 with $t10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:905:41+131
    assume {:print "$at(131,38568,38699)"} true;
    call $t26 := $1_primary_fungible_store_primary_store_address'$1_fungible_asset_Metadata'($t0, $t18);
    if ($abort_flag) {
        assume {:print "$at(131,38568,38699)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(51,12):", $t10} $t10 == $t10;
        goto L16;
    }

    // $t27 := fungible_asset::store_exists($t26) on_abort goto L16 with $t10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:909:13+51
    assume {:print "$at(131,38714,38765)"} true;
    call $t27 := $1_fungible_asset_store_exists($t26);
    if ($abort_flag) {
        assume {:print "$at(131,38714,38765)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(51,12):", $t10} $t10 == $t10;
        goto L16;
    }

    // $t6 := $t27 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:909:13+51
    $t6 := $t27;

    // trace_local[$t16]($t27) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:909:13+51
    assume {:print "$track_local(51,12,6):", $t27} $t27 == $t27;

    // goto L11 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:909:13+51
    goto L11;

    // label L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:66+56
    assume {:print "$at(131,38419,38475)"} true;
L4:

    // $t28 := features::new_accounts_default_to_fa_apt_store_enabled() on_abort goto L16 with $t10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:66+56
    assume {:print "$at(131,38419,38475)"} true;
    call $t28 := $1_features_new_accounts_default_to_fa_apt_store_enabled();
    if ($abort_flag) {
        assume {:print "$at(131,38419,38475)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(51,12):", $t10} $t10 == $t10;
        goto L16;
    }

    // if ($t28) goto L13 else goto L12 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:65+103
    if ($t28) { goto L13; } else { goto L12; }

    // label L13 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:149+9
L13:

    // $t29 := object::object_address<0x1::fungible_asset::Metadata>($t18) on_abort goto L16 with $t10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:126+33
    assume {:print "$at(131,38479,38512)"} true;
    call $t29 := $1_object_object_address'$1_fungible_asset_Metadata'($t18);
    if ($abort_flag) {
        assume {:print "$at(131,38479,38512)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(51,12):", $t10} $t10 == $t10;
        goto L16;
    }

    // $t30 := 0xa at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:163+4
    $t30 := 10;
    assume $IsValid'address'($t30);

    // $t31 := ==($t29, $t30) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:126+41
    $t31 := $IsEqual'address'($t29, $t30);

    // $t5 := $t31 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:126+41
    $t5 := $t31;

    // trace_local[$t2]($t31) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:126+41
    assume {:print "$track_local(51,12,5):", $t31} $t31 == $t31;

    // goto L14 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:65+103
    goto L14;

    // label L12 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:65+103
L12:

    // $t32 := false at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:65+103
    assume {:print "$at(131,38418,38521)"} true;
    $t32 := false;
    assume $IsValid'bool'($t32);

    // $t5 := $t32 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:65+103
    $t5 := $t32;

    // trace_local[$t2]($t32) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:65+103
    assume {:print "$track_local(51,12,5):", $t32} $t32 == $t32;

    // goto L14 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:65+103
    goto L14;

    // label L15 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:881:5+1
    assume {:print "$at(131,37634,37635)"} true;
L15:

    // return () at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:881:5+1
    assume {:print "$at(131,37634,37635)"} true;
    return;

    // label L16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:881:5+1
L16:

    // abort($t10) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:881:5+1
    assume {:print "$at(131,37634,37635)"} true;
    $abort_code := $t10;
    $abort_flag := true;
    return;

}

// fun coin::mint_internal<#0> [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1197:5+1242
procedure {:inline 1} $1_coin_mint_internal'#0'(_$t0: int) returns ($ret0: $1_coin_Coin'#0')
{
    // declare local variables
    var $t1: $Mutation ($1_option_Option'$1_optional_aggregator_OptionalAggregator');
    var $t2: $Mutation ($1_optional_aggregator_OptionalAggregator);
    var $t3: int;
    var $t4: int;
    var $t5: bool;
    var $t6: int;
    var $t7: $1_coin_Coin'#0';
    var $t8: $1_coin_Coin'#0';
    var $t9: int;
    var $t10: bool;
    var $t11: int;
    var $t12: $Mutation ($1_coin_CoinInfo'#0');
    var $t13: $Mutation ($1_option_Option'$1_optional_aggregator_OptionalAggregator');
    var $t14: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t15: bool;
    var $t16: $Mutation ($1_optional_aggregator_OptionalAggregator);
    var $t17: int;
    var $t18: $1_coin_Ghost$supply'#0';
    var $t19: int;
    var $t20: $Mutation ($1_coin_Ghost$supply'#0');
    var $t21: $1_coin_Coin'#0';
    var $t0: int;
    var $1_coin_CoinInfo'#0'_$modifies: [int]bool;
    var $temp_0'$1_coin_Coin'#0'': $1_coin_Coin'#0';
    var $temp_0'$1_option_Option'$1_optional_aggregator_OptionalAggregator'': $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $temp_0'$1_optional_aggregator_OptionalAggregator': $1_optional_aggregator_OptionalAggregator;
    var $temp_0'u64': int;
    var $1_coin_Ghost$supply'#0'_$memory#91: $Memory $1_coin_Ghost$supply'#0';
    var $1_coin_Ghost$aggregate_supply'#0'_$memory#92: $Memory $1_coin_Ghost$aggregate_supply'#0';
    var $1_coin_CoinInfo'#0'_$memory#93: $Memory $1_coin_CoinInfo'#0';
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t3, select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of<#0>())) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.spec.move:109:9+58
    assume {:print "$at(132,6230,6288)"} true;
    assume ($t3 == $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s)->$account_address);

    // trace_local[amount]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1197:5+1
    assume {:print "$at(131,50560,50561)"} true;
    assume {:print "$track_local(51,16,0):", $t0} $t0 == $t0;

    // $t4 := 0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1198:23+1
    assume {:print "$at(131,50660,50661)"} true;
    $t4 := 0;
    assume $IsValid'u64'($t4);

    // $t5 := ==($t0, $t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1198:13+11
    $t5 := $IsEqual'u64'($t0, $t4);

    // if ($t5) goto L1 else goto L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1198:9+107
    if ($t5) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1200:24+1
    assume {:print "$at(131,50726,50727)"} true;
L1:

    // $t6 := 0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1200:24+1
    assume {:print "$at(131,50726,50727)"} true;
    $t6 := 0;
    assume $IsValid'u64'($t6);

    // $t7 := pack 0x1::coin::Coin<#0>($t6) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1199:20+57
    assume {:print "$at(131,50685,50742)"} true;
    $t7 := $1_coin_Coin'#0'($t6);

    // trace_return[0]($t7) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1199:13+64
    assume {:print "$track_return(51,16,0):", $t7} $t7 == $t7;

    // $t8 := move($t7) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1199:13+64
    $t8 := $t7;

    // goto L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1199:13+64
    goto L5;

    // label L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1204:71+24
    assume {:print "$at(131,50828,50852)"} true;
L0:

    // $t9 := opaque begin: coin::coin_address<#0>() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1204:71+24
    assume {:print "$at(131,50828,50852)"} true;

    // $t10 := havoc[val]() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1204:71+24
    havoc $t10;

    // if ($t10) goto L8 else goto L7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1204:71+24
    if ($t10) { goto L8; } else { goto L7; }

    // label L8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1204:71+24
L8:

    // trace_abort($t11) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1204:71+24
    assume {:print "$at(131,50828,50852)"} true;
    assume {:print "$track_abort(51,16):", $t11} $t11 == $t11;

    // goto L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1204:71+24
    goto L6;

    // label L7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1204:71+24
L7:

    // @93 := save_mem(coin::CoinInfo<#0>) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1204:71+24
    assume {:print "$at(131,50828,50852)"} true;
    $1_coin_CoinInfo'#0'_$memory#93 := $1_coin_CoinInfo'#0'_$memory;

    // @91 := save_mem(coin::supply<#0>) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1204:71+24
    $1_coin_Ghost$supply'#0'_$memory#91 := $1_coin_Ghost$supply'#0'_$memory;

    // @92 := save_mem(coin::aggregate_supply<#0>) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1204:71+24
    $1_coin_Ghost$aggregate_supply'#0'_$memory#92 := $1_coin_Ghost$aggregate_supply'#0'_$memory;

    // assume WellFormed($t9) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1204:71+24
    assume $IsValid'address'($t9);

    // assume Implies(coin::spec_fun_supply_tracked[]<#0>(Add(select coin::Ghost$supply.v<#0>(global[@91]<0x1::coin::Ghost$supply<#0>>(0x0)), select coin::Ghost$aggregate_supply.v<#0>(global[@92]<0x1::coin::Ghost$aggregate_supply<#0>>(0x0))), select coin::CoinInfo.supply<0x1::coin::CoinInfo<#0>>(global[@93]<0x1::coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of[]<#0>())))), coin::spec_fun_supply_tracked<#0>(Add(select coin::Ghost$supply.v<#0>(global<0x1::coin::Ghost$supply<#0>>(0x0)), select coin::Ghost$aggregate_supply.v<#0>(global<0x1::coin::Ghost$aggregate_supply<#0>>(0x0))), select coin::CoinInfo.supply<0x1::coin::CoinInfo<#0>>(global<0x1::coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of<#0>()))))) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1204:71+24
    assume ($1_coin_spec_fun_supply_tracked'#0'(($ResourceValue($1_coin_Ghost$supply'#0'_$memory#91, 0)->$v + $ResourceValue($1_coin_Ghost$aggregate_supply'#0'_$memory#92, 0)->$v), $ResourceValue($1_coin_CoinInfo'#0'_$memory#93, $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s)->$account_address)->$supply) ==> $1_coin_spec_fun_supply_tracked'#0'(($ResourceValue($1_coin_Ghost$supply'#0'_$memory, 0)->$v + $ResourceValue($1_coin_Ghost$aggregate_supply'#0'_$memory, 0)->$v), $ResourceValue($1_coin_CoinInfo'#0'_$memory, $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s)->$account_address)->$supply));

    // assume Eq<address>($t9, select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of<#0>())) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1204:71+24
    assume $IsEqual'address'($t9, $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s)->$account_address);

    // $t9 := opaque end: coin::coin_address<#0>() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1204:71+24

    // $t12 := borrow_global<0x1::coin::CoinInfo<#0>>($t9) on_abort goto L6 with $t11 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1204:33+63
    if (!$ResourceExists($1_coin_CoinInfo'#0'_$memory, $t9)) {
        call $ExecFailureAbort();
    } else {
        $t12 := $Mutation($Global($t9), EmptyVec(), $ResourceValue($1_coin_CoinInfo'#0'_$memory, $t9));
    }
    if ($abort_flag) {
        assume {:print "$at(131,50790,50853)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(51,16):", $t11} $t11 == $t11;
        goto L6;
    }

    // $t13 := borrow_field<0x1::coin::CoinInfo<#0>>.supply($t12) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1204:28+75
    $t13 := $ChildMutation($t12, 3, $Dereference($t12)->$supply);

    // trace_local[maybe_supply]($t13) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1204:28+75
    $temp_0'$1_option_Option'$1_optional_aggregator_OptionalAggregator'' := $Dereference($t13);
    assume {:print "$track_local(51,16,1):", $temp_0'$1_option_Option'$1_optional_aggregator_OptionalAggregator''} $temp_0'$1_option_Option'$1_optional_aggregator_OptionalAggregator'' == $temp_0'$1_option_Option'$1_optional_aggregator_OptionalAggregator'';

    // $t14 := read_ref($t13) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1205:29+12
    assume {:print "$at(131,50891,50903)"} true;
    $t14 := $Dereference($t13);

    // $t15 := opaque begin: option::is_some<0x1::optional_aggregator::OptionalAggregator>($t14) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1205:13+29

    // assume WellFormed($t15) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1205:13+29
    assume $IsValid'bool'($t15);

    // assume Eq<bool>($t15, option::spec_is_some<0x1::optional_aggregator::OptionalAggregator>($t14)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1205:13+29
    assume $IsEqual'bool'($t15, $1_option_spec_is_some'$1_optional_aggregator_OptionalAggregator'($t14));

    // $t15 := opaque end: option::is_some<0x1::optional_aggregator::OptionalAggregator>($t14) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1205:13+29

    // if ($t15) goto L3 else goto L9 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1205:9+787
    if ($t15) { goto L3; } else { goto L9; }

    // label L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1206:26+32
    assume {:print "$at(131,50934,50966)"} true;
L3:

    // $t16 := option::borrow_mut<0x1::optional_aggregator::OptionalAggregator>($t13) on_abort goto L6 with $t11 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1206:26+32
    assume {:print "$at(131,50934,50966)"} true;
    call $t16,$t13 := $1_option_borrow_mut'$1_optional_aggregator_OptionalAggregator'($t13);
    if ($abort_flag) {
        assume {:print "$at(131,50934,50966)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(51,16):", $t11} $t11 == $t11;
        goto L6;
    }

    // trace_local[supply]($t16) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1206:26+32
    $temp_0'$1_optional_aggregator_OptionalAggregator' := $Dereference($t16);
    assume {:print "$track_local(51,16,2):", $temp_0'$1_optional_aggregator_OptionalAggregator'} $temp_0'$1_optional_aggregator_OptionalAggregator' == $temp_0'$1_optional_aggregator_OptionalAggregator';

    // assume Implies(optional_aggregator::$is_parallelizable(Freeze(false)($t16)), Le(Add(aggregator::spec_aggregator_get_val(option::$borrow<0x1::aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator<0x1::optional_aggregator::OptionalAggregator>($t16))), $t0), aggregator::spec_get_limit(option::$borrow<0x1::aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator<0x1::optional_aggregator::OptionalAggregator>($t16))))) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1210:17+266
    assume {:print "$at(131,51114,51380)"} true;
    assume ($1_optional_aggregator_$is_parallelizable($Dereference($t16)) ==> (($1_aggregator_spec_aggregator_get_val($1_option_$borrow'$1_aggregator_Aggregator'($Dereference($t16)->$aggregator)) + $t0) <= $1_aggregator_spec_get_limit($1_option_$borrow'$1_aggregator_Aggregator'($Dereference($t16)->$aggregator))));

    // assume Implies(Not(optional_aggregator::$is_parallelizable(Freeze(false)($t16))), Le(Add(select optional_aggregator::Integer.value<0x1::optional_aggregator::Integer>(option::$borrow<0x1::optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer<0x1::optional_aggregator::OptionalAggregator>($t16))), $t0), select optional_aggregator::Integer.limit<0x1::optional_aggregator::Integer>(option::$borrow<0x1::optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer<0x1::optional_aggregator::OptionalAggregator>($t16))))) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1214:17+168
    assume {:print "$at(131,51398,51566)"} true;
    assume (!$1_optional_aggregator_$is_parallelizable($Dereference($t16)) ==> (($1_option_$borrow'$1_optional_aggregator_Integer'($Dereference($t16)->$integer)->$value + $t0) <= $1_option_$borrow'$1_optional_aggregator_Integer'($Dereference($t16)->$integer)->$limit));

    // $t17 := (u128)($t0) on_abort goto L6 with $t11 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1217:46+16
    assume {:print "$at(131,51629,51645)"} true;
    call $t17 := $CastU128($t0);
    if ($abort_flag) {
        assume {:print "$at(131,51629,51645)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(51,16):", $t11} $t11 == $t11;
        goto L6;
    }

    // optional_aggregator::add($t16, $t17) on_abort goto L6 with $t11 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1217:13+50
    call $t16 := $1_optional_aggregator_add($t16, $t17);
    if ($abort_flag) {
        assume {:print "$at(131,51596,51646)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(51,16):", $t11} $t11 == $t11;
        goto L6;
    }

    // write_back[Reference($t13).vec (vector<0x1::optional_aggregator::OptionalAggregator>)/[]]($t16) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1217:13+50
    $t13 := $UpdateMutation($t13, (var $$sel0 := $Dereference($t13)->$vec; $Update'$1_option_Option'$1_optional_aggregator_OptionalAggregator''_vec($Dereference($t13), UpdateVec($$sel0, ReadVec($t16->p, LenVec($t13->p) + 1), $Dereference($t16)))));

    // write_back[Reference($t12).supply (0x1::option::Option<0x1::optional_aggregator::OptionalAggregator>)]($t13) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1217:13+50
    $t12 := $UpdateMutation($t12, $Update'$1_coin_CoinInfo'#0''_supply($Dereference($t12), $Dereference($t13)));

    // pack_ref_deep($t12) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1217:13+50

    // write_back[0x1::coin::CoinInfo<#0>@]($t12) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1217:13+50
    $1_coin_CoinInfo'#0'_$memory := $ResourceUpdate($1_coin_CoinInfo'#0'_$memory, $GlobalLocationAddress($t12),
        $Dereference($t12));

    // label L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1219:9+83
    assume {:print "$at(131,51669,51752)"} true;
L4:

    // assume Identical($t18, pack coin::Ghost$supply<#0>(Add(select coin::Ghost$supply.v<#0>(global<0x1::coin::Ghost$supply<#0>>(0x0)), $t0))) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1220:13+52
    assume {:print "$at(131,51689,51741)"} true;
    assume ($t18 == $1_coin_Ghost$supply'#0'(($ResourceValue($1_coin_Ghost$supply'#0'_$memory, 0)->$v + $t0)));

    // assume Identical($t19, 0x0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1220:13+52
    assume ($t19 == 0);

    // $t20 := borrow_global<0x1::coin::Ghost$supply<#0>>($t19) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1220:13+52
    if (!$ResourceExists($1_coin_Ghost$supply'#0'_$memory, $t19)) {
        call $ExecFailureAbort();
    } else {
        $t20 := $Mutation($Global($t19), EmptyVec(), $ResourceValue($1_coin_Ghost$supply'#0'_$memory, $t19));
    }

    // write_ref($t20, $t18) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1220:13+52
    $t20 := $UpdateMutation($t20, $t18);

    // write_back[0x1::coin::Ghost$supply<#0>@]($t20) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1220:13+52
    $1_coin_Ghost$supply'#0'_$memory := $ResourceUpdate($1_coin_Ghost$supply'#0'_$memory, $GlobalLocationAddress($t20),
        $Dereference($t20));

    // $t21 := pack 0x1::coin::Coin<#0>($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1222:9+32
    assume {:print "$at(131,51763,51795)"} true;
    $t21 := $1_coin_Coin'#0'($t0);

    // trace_return[0]($t21) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1197:80+1167
    assume {:print "$at(131,50635,51802)"} true;
    assume {:print "$track_return(51,16,0):", $t21} $t21 == $t21;

    // $t8 := move($t21) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1197:80+1167
    $t8 := $t21;

    // goto L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1197:80+1167
    goto L5;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1205:9+787
    assume {:print "$at(131,50871,51658)"} true;
L2:

    // drop($t13) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1205:9+787
    assume {:print "$at(131,50871,51658)"} true;

    // goto L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1205:9+787
    goto L4;

    // label L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1223:5+1
    assume {:print "$at(131,51801,51802)"} true;
L5:

    // return $t8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1223:5+1
    assume {:print "$at(131,51801,51802)"} true;
    $ret0 := $t8;
    return;

    // label L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1223:5+1
L6:

    // abort($t11) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1223:5+1
    assume {:print "$at(131,51801,51802)"} true;
    $abort_code := $t11;
    $abort_flag := true;
    return;

    // label L9 at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;
L9:

    // drop($t12) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L2 at <internal>:1:1+10
    goto L2;

}

// fun coin::withdraw<#0> [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1126:5+1897
procedure {:inline 1} $1_coin_withdraw'#0'(_$t0: $signer, _$t1: int) returns ($ret0: $1_coin_Coin'#0')
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: int;
    var $t8: $1_object_Object'$1_fungible_asset_Metadata';
    var $t9: $Mutation ($1_coin_CoinStore'#0');
    var $t10: $1_coin_Coin'#0';
    var $t11: $1_fungible_asset_FungibleAsset;
    var $t12: $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'';
    var $t13: bool;
    var $t14: int;
    var $t15: $1_coin_CoinStore'#0';
    var $t16: int;
    var $t17: int;
    var $t18: $1_coin_CoinStore'#0';
    var $t19: int;
    var $t20: int;
    var $t21: int;
    var $t22: bool;
    var $t23: $1_coin_CoinStore'#0';
    var $t24: $1_coin_Coin'#0';
    var $t25: int;
    var $t26: bool;
    var $t27: int;
    var $t28: int;
    var $t29: bool;
    var $t30: $1_object_Object'$1_fungible_asset_Metadata';
    var $t31: bool;
    var $t32: int;
    var $t33: $Mutation ($1_coin_CoinStore'#0');
    var $t34: bool;
    var $t35: $Mutation ($1_event_EventHandle'$1_coin_WithdrawEvent');
    var $t36: $1_coin_WithdrawEvent;
    var $t37: $Mutation ($1_coin_Coin'#0');
    var $t38: int;
    var $t39: bool;
    var $t40: $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'';
    var $t41: $1_object_Object'$1_fungible_asset_Metadata';
    var $t42: bool;
    var $t43: $1_fungible_asset_FungibleAsset;
    var $t44: $Mutation ($1_coin_Coin'#0');
    var $t45: $1_coin_Coin'#0';
    var $t46: $1_coin_Coin'#0';
    var $t47: int;
    var $t48: int;
    var $t49: $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'';
    var $t50: bool;
    var $t51: $1_object_Object'$1_fungible_asset_Metadata';
    var $t52: bool;
    var $t53: bool;
    var $t54: int;
    var $t55: int;
    var $t56: int;
    var $t57: bool;
    var $t58: int;
    var $t0: $signer;
    var $t1: int;
    var $1_coin_CoinStore'#0'_$modifies: [int]bool;
    var $temp_0'$1_coin_Coin'#0'': $1_coin_Coin'#0';
    var $temp_0'$1_coin_CoinStore'#0'': $1_coin_CoinStore'#0';
    var $temp_0'$1_fungible_asset_FungibleAsset': $1_fungible_asset_FungibleAsset;
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'$1_option_Option'$1_object_Object'$1_fungible_asset_Metadata''': $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'';
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t14, signer::$address_of($t0)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.spec.move:525:9+47
    assume {:print "$at(132,22993,23040)"} true;
    assume ($t14 == $1_signer_$address_of($t0));

    // assume Identical($t15, global<0x1::coin::CoinStore<#0>>($t14)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.spec.move:526:9+59
    assume {:print "$at(132,23050,23109)"} true;
    assume ($t15 == $ResourceValue($1_coin_CoinStore'#0'_$memory, $t14));

    // assume Identical($t16, select coin::Coin.value<0x1::coin::Coin<#0>>(select coin::CoinStore.coin<0x1::coin::CoinStore<#0>>($t15))) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.spec.move:527:9+36
    assume {:print "$at(132,23119,23155)"} true;
    assume ($t16 == $t15->$coin->$value);

    // assume Identical($t17, signer::$address_of($t0)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.spec.move:535:9+47
    assume {:print "$at(132,23460,23507)"} true;
    assume ($t17 == $1_signer_$address_of($t0));

    // assume Identical($t18, global<0x1::coin::CoinStore<#0>>($t17)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.spec.move:536:9+59
    assume {:print "$at(132,23517,23576)"} true;
    assume ($t18 == $ResourceValue($1_coin_CoinStore'#0'_$memory, $t17));

    // assume Identical($t19, select coin::Coin.value<0x1::coin::Coin<#0>>(select coin::CoinStore.coin<0x1::coin::CoinStore<#0>>($t18))) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.spec.move:537:9+36
    assume {:print "$at(132,23586,23622)"} true;
    assume ($t19 == $t18->$coin->$value);

    // trace_local[account]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1126:5+1
    assume {:print "$at(131,47760,47761)"} true;
    assume {:print "$track_local(51,18,0):", $t0} $t0 == $t0;

    // trace_local[amount]($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1126:5+1
    assume {:print "$track_local(51,18,1):", $t1} $t1 == $t1;

    // $t20 := signer::address_of($t0) on_abort goto L23 with $t21 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1130:28+27
    assume {:print "$at(131,47957,47984)"} true;
    call $t20 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(131,47957,47984)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(51,18):", $t21} $t21 == $t21;
        goto L23;
    }

    // trace_local[account_addr]($t20) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1130:28+27
    assume {:print "$track_local(51,18,2):", $t20} $t20 == $t20;

    // trace_local[account_addr]($t20) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:561:16+28
    assume {:print "$at(131,24005,24033)"} true;
    assume {:print "$track_local(51,18,3):", $t20} $t20 == $t20;

    // trace_local[owner]($t20) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:699:16+12
    assume {:print "$at(131,29996,30008)"} true;
    assume {:print "$track_local(51,18,4):", $t20} $t20 == $t20;

    // $t22 := exists<0x1::coin::CoinStore<#0>>($t20) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:700:13+34
    assume {:print "$at(131,30055,30089)"} true;
    $t22 := $ResourceExists($1_coin_CoinStore'#0'_$memory, $t20);

    // if ($t22) goto L1 else goto L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:700:9+151
    if ($t22) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:701:13+41
    assume {:print "$at(131,30106,30147)"} true;
L1:

    // $t23 := get_global<0x1::coin::CoinStore<#0>>($t20) on_abort goto L23 with $t21 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:701:13+41
    assume {:print "$at(131,30106,30147)"} true;
    if (!$ResourceExists($1_coin_CoinStore'#0'_$memory, $t20)) {
        call $ExecFailureAbort();
    } else {
        $t23 := $ResourceValue($1_coin_CoinStore'#0'_$memory, $t20);
    }
    if ($abort_flag) {
        assume {:print "$at(131,30106,30147)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(51,18):", $t21} $t21 == $t21;
        goto L23;
    }

    // $t24 := get_field<0x1::coin::CoinStore<#0>>.coin($t23) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:701:13+46
    $t24 := $t23->$coin;

    // $t25 := get_field<0x1::coin::Coin<#0>>.value($t24) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:701:13+52
    $t25 := $t24->$value;

    // $t5 := $t25 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:701:13+52
    $t5 := $t25;

    // trace_local[coin_balance]($t25) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:701:13+52
    assume {:print "$track_local(51,18,5):", $t25} $t25 == $t25;

    // label L21 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:566:13+12
    assume {:print "$at(131,24198,24210)"} true;
L21:

    // $t26 := >=($t5, $t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:566:13+22
    assume {:print "$at(131,24198,24220)"} true;
    call $t26 := $Ge($t5, $t1);

    // if ($t26) goto L3 else goto L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:566:9+471
    if ($t26) { goto L3; } else { goto L2; }

    // label L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:567:14+6
    assume {:print "$at(131,24238,24244)"} true;
L3:

    // $t6 := $t1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:567:14+6
    assume {:print "$at(131,24238,24244)"} true;
    $t6 := $t1;

    // trace_local[$t15]($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:567:14+6
    assume {:print "$track_local(51,18,6):", $t1} $t1 == $t1;

    // $t27 := 0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:567:22+1
    $t27 := 0;
    assume $IsValid'u64'($t27);

    // $t7 := $t27 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:567:22+1
    $t7 := $t27;

    // trace_local[fa_amount_to_withdraw]($t27) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:567:22+1
    assume {:print "$track_local(51,18,7):", $t27} $t27 == $t27;

    // label L19 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1136:34+23
    assume {:print "$at(131,48185,48208)"} true;
L19:

    // $t28 := 0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1136:60+1
    assume {:print "$at(131,48211,48212)"} true;
    $t28 := 0;
    assume $IsValid'u64'($t28);

    // $t29 := >($t6, $t28) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1136:34+27
    call $t29 := $Gt($t6, $t28);

    // if ($t29) goto L5 else goto L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1136:30+1116
    if ($t29) { goto L5; } else { goto L4; }

    // label L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1137:28+34
    assume {:print "$at(131,48244,48278)"} true;
L5:

    // $t30 := coin::ensure_paired_metadata<#0>() on_abort goto L23 with $t21 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1137:28+34
    assume {:print "$at(131,48244,48278)"} true;
    call $t30 := $1_coin_ensure_paired_metadata'#0'();
    if ($abort_flag) {
        assume {:print "$at(131,48244,48278)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(51,18):", $t21} $t21 == $t21;
        goto L23;
    }

    // trace_local[metadata]($t30) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1137:28+34
    assume {:print "$track_local(51,18,8):", $t30} $t30 == $t30;

    // $t31 := opaque begin: permissioned_signer::is_permissioned_signer($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1138:16+52
    assume {:print "$at(131,48296,48348)"} true;

    // assume WellFormed($t31) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1138:16+52
    assume $IsValid'bool'($t31);

    // assume Eq<bool>($t31, permissioned_signer::spec_is_permissioned_signer($t0)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1138:16+52
    assume $IsEqual'bool'($t31, $1_permissioned_signer_spec_is_permissioned_signer($t0));

    // $t31 := opaque end: permissioned_signer::is_permissioned_signer($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1138:16+52

    // if ($t31) goto L6 else goto L8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1138:13+492
    if ($t31) { goto L6; } else { goto L8; }

    // label L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1142:21+7
    assume {:print "$at(131,48605,48612)"} true;
L6:

    // $t32 := primary_fungible_store::primary_store_address<0x1::fungible_asset::Metadata>($t20, $t30) on_abort goto L23 with $t21 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1143:21+69
    assume {:print "$at(131,48635,48704)"} true;
    call $t32 := $1_primary_fungible_store_primary_store_address'$1_fungible_asset_Metadata'($t20, $t30);
    if ($abort_flag) {
        assume {:print "$at(131,48635,48704)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(51,18):", $t21} $t21 == $t21;
        goto L23;
    }

    // fungible_asset::withdraw_permission_check_by_address($t0, $t32, $t6) on_abort goto L23 with $t21 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1141:17+239
    assume {:print "$at(131,48530,48769)"} true;
    call $1_fungible_asset_withdraw_permission_check_by_address($t0, $t32, $t6);
    if ($abort_flag) {
        assume {:print "$at(131,48530,48769)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(51,18):", $t21} $t21 == $t21;
        goto L23;
    }

    // label L8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1148:30+52
    assume {:print "$at(131,48819,48871)"} true;
L8:

    // $t33 := borrow_global<0x1::coin::CoinStore<#0>>($t20) on_abort goto L23 with $t21 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1148:30+52
    assume {:print "$at(131,48819,48871)"} true;
    if (!$ResourceExists($1_coin_CoinStore'#0'_$memory, $t20)) {
        call $ExecFailureAbort();
    } else {
        $t33 := $Mutation($Global($t20), EmptyVec(), $ResourceValue($1_coin_CoinStore'#0'_$memory, $t20));
    }
    if ($abort_flag) {
        assume {:print "$at(131,48819,48871)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(51,18):", $t21} $t21 == $t21;
        goto L23;
    }

    // trace_local[coin_store]($t33) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1148:30+52
    $temp_0'$1_coin_CoinStore'#0'' := $Dereference($t33);
    assume {:print "$track_local(51,18,9):", $temp_0'$1_coin_CoinStore'#0''} $temp_0'$1_coin_CoinStore'#0'' == $temp_0'$1_coin_CoinStore'#0'';

    // $t34 := get_field<0x1::coin::CoinStore<#0>>.frozen($t33) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1150:18+17
    assume {:print "$at(131,48913,48930)"} true;
    $t34 := $Dereference($t33)->$frozen;

    // if ($t34) goto L9 else goto L10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1150:17+18
    if ($t34) { goto L9; } else { goto L10; }

    // label L10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1154:17+31
    assume {:print "$at(131,49064,49095)"} true;
L10:

    // $t35 := borrow_field<0x1::coin::CoinStore<#0>>.withdraw_events($t33) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1154:17+31
    assume {:print "$at(131,49064,49095)"} true;
    $t35 := $ChildMutation($t33, 3, $Dereference($t33)->$withdraw_events);

    // $t36 := pack 0x1::coin::WithdrawEvent($t6) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1155:17+49
    assume {:print "$at(131,49114,49163)"} true;
    $t36 := $1_coin_WithdrawEvent($t6);

    // opaque begin: event::emit_event<0x1::coin::WithdrawEvent>($t35, $t36) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1153:13+166
    assume {:print "$at(131,49013,49179)"} true;

    // opaque end: event::emit_event<0x1::coin::WithdrawEvent>($t35, $t36) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1153:13+166

    // write_back[Reference($t33).withdraw_events (0x1::event::EventHandle<0x1::coin::WithdrawEvent>)]($t35) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1153:13+166
    $t33 := $UpdateMutation($t33, $Update'$1_coin_CoinStore'#0''_withdraw_events($Dereference($t33), $Dereference($t35)));

    // $t37 := borrow_field<0x1::coin::CoinStore<#0>>.coin($t33) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1157:21+20
    assume {:print "$at(131,49202,49222)"} true;
    $t37 := $ChildMutation($t33, 0, $Dereference($t33)->$coin);

    // $t10 := coin::extract<#0>($t37, $t6) on_abort goto L23 with $t21 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1157:13+54
    call $t10,$t37 := $1_coin_extract'#0'($t37, $t6);
    if ($abort_flag) {
        assume {:print "$at(131,49194,49248)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(51,18):", $t21} $t21 == $t21;
        goto L23;
    }

    // write_back[Reference($t33).coin (0x1::coin::Coin<#0>)]($t37) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1157:13+54
    $t33 := $UpdateMutation($t33, $Update'$1_coin_CoinStore'#0''_coin($Dereference($t33), $Dereference($t37)));

    // write_back[0x1::coin::CoinStore<#0>@]($t33) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1157:13+54
    $1_coin_CoinStore'#0'_$memory := $ResourceUpdate($1_coin_CoinStore'#0'_$memory, $GlobalLocationAddress($t33),
        $Dereference($t33));

    // trace_local[withdrawn_coin]($t10) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1157:13+54
    assume {:print "$track_local(51,18,10):", $t10} $t10 == $t10;

    // label L14 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1161:13+21
    assume {:print "$at(131,49312,49333)"} true;
L14:

    // $t38 := 0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1161:37+1
    assume {:print "$at(131,49336,49337)"} true;
    $t38 := 0;
    assume $IsValid'u64'($t38);

    // $t39 := >($t7, $t38) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1161:13+25
    call $t39 := $Gt($t7, $t38);

    // if ($t39) goto L12 else goto L11 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1161:9+317
    if ($t39) { goto L12; } else { goto L11; }

    // label L12 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1163:17+7
    assume {:print "$at(131,49414,49421)"} true;
L12:

    // $t40 := coin::paired_metadata<#0>() on_abort goto L23 with $t21 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1164:38+27
    assume {:print "$at(131,49461,49488)"} true;
    call $t40 := $1_coin_paired_metadata'#0'();
    if ($abort_flag) {
        assume {:print "$at(131,49461,49488)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(51,18):", $t21} $t21 == $t21;
        goto L23;
    }

    // $t41 := opaque begin: option::destroy_some<0x1::object::Object<0x1::fungible_asset::Metadata>>($t40) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1164:17+49

    // assume Identical($t42, option::spec_is_none<0x1::object::Object<0x1::fungible_asset::Metadata>>($t40)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1164:17+49
    assume ($t42 == $1_option_spec_is_none'$1_object_Object'$1_fungible_asset_Metadata''($t40));

    // if ($t42) goto L25 else goto L24 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1164:17+49
    if ($t42) { goto L25; } else { goto L24; }

    // label L25 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1164:17+49
L25:

    // assume And(option::spec_is_none<0x1::object::Object<0x1::fungible_asset::Metadata>>($t40), Eq(262145, $t21)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1164:17+49
    assume {:print "$at(131,49440,49489)"} true;
    assume ($1_option_spec_is_none'$1_object_Object'$1_fungible_asset_Metadata''($t40) && $IsEqual'num'(262145, $t21));

    // trace_abort($t21) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1164:17+49
    assume {:print "$at(131,49440,49489)"} true;
    assume {:print "$track_abort(51,18):", $t21} $t21 == $t21;

    // goto L23 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1164:17+49
    goto L23;

    // label L24 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1164:17+49
L24:

    // assume WellFormed($t41) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1164:17+49
    assume {:print "$at(131,49440,49489)"} true;
    assume $IsValid'$1_object_Object'$1_fungible_asset_Metadata''($t41);

    // assume Eq<0x1::object::Object<0x1::fungible_asset::Metadata>>($t41, option::spec_borrow<0x1::object::Object<0x1::fungible_asset::Metadata>>($t40)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1164:17+49
    assume $IsEqual'$1_object_Object'$1_fungible_asset_Metadata''($t41, $1_option_spec_borrow'$1_object_Object'$1_fungible_asset_Metadata''($t40));

    // $t41 := opaque end: option::destroy_some<0x1::object::Object<0x1::fungible_asset::Metadata>>($t40) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1164:17+49

    // $t43 := primary_fungible_store::withdraw<0x1::fungible_asset::Metadata>($t0, $t41, $t7) on_abort goto L23 with $t21 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1162:22+181
    assume {:print "$at(131,49363,49544)"} true;
    call $t43 := $1_primary_fungible_store_withdraw'$1_fungible_asset_Metadata'($t0, $t41, $t7);
    if ($abort_flag) {
        assume {:print "$at(131,49363,49544)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(51,18):", $t21} $t21 == $t21;
        goto L23;
    }

    // trace_local[fa]($t43) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1162:22+181
    assume {:print "$track_local(51,18,11):", $t43} $t43 == $t43;

    // $t44 := borrow_local($t10) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1167:19+19
    assume {:print "$at(131,49565,49584)"} true;
    $t44 := $Mutation($Local(10), EmptyVec(), $t10);

    // $t45 := coin::fungible_asset_to_coin<#0>($t43) on_abort goto L23 with $t21 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1167:40+26
    call $t45 := $1_coin_fungible_asset_to_coin'#0'($t43);
    if ($abort_flag) {
        assume {:print "$at(131,49586,49612)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(51,18):", $t21} $t21 == $t21;
        goto L23;
    }

    // coin::merge<#0>($t44, $t45) on_abort goto L23 with $t21 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1167:13+54
    call $t44 := $1_coin_merge'#0'($t44, $t45);
    if ($abort_flag) {
        assume {:print "$at(131,49559,49613)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(51,18):", $t21} $t21 == $t21;
        goto L23;
    }

    // write_back[LocalRoot($t10)@]($t44) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1167:13+54
    $t10 := $Dereference($t44);

    // trace_local[withdrawn_coin]($t10) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1167:13+54
    assume {:print "$track_local(51,18,10):", $t10} $t10 == $t10;

    // label L13 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1169:9+14
    assume {:print "$at(131,49636,49650)"} true;
L13:

    // $t46 := move($t10) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1169:9+14
    assume {:print "$at(131,49636,49650)"} true;
    $t46 := $t10;

    // trace_return[0]($t46) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1129:87+1730
    assume {:print "$at(131,47927,49657)"} true;
    assume {:print "$track_return(51,18,0):", $t46} $t46 == $t46;

    // goto L22 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1129:87+1730
    goto L22;

    // label L11 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1161:9+317
    assume {:print "$at(131,49308,49625)"} true;
L11:

    // goto L13 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1161:9+317
    assume {:print "$at(131,49308,49625)"} true;
    goto L13;

    // label L9 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1149:13+6
    assume {:print "$at(131,48886,48892)"} true;
L9:

    // drop($t33) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1149:13+6
    assume {:print "$at(131,48886,48892)"} true;

    // $t47 := 10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1151:42+7
    assume {:print "$at(131,48974,48981)"} true;
    $t47 := 10;
    assume $IsValid'u64'($t47);

    // $t48 := error::permission_denied($t47) on_abort goto L23 with $t21 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1151:17+33
    call $t48 := $1_error_permission_denied($t47);
    if ($abort_flag) {
        assume {:print "$at(131,48949,48982)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(51,18):", $t21} $t21 == $t21;
        goto L23;
    }

    // trace_abort($t48) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1149:13+6
    assume {:print "$at(131,48886,48892)"} true;
    assume {:print "$track_abort(51,18):", $t48} $t48 == $t48;

    // $t21 := move($t48) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1149:13+6
    $t21 := $t48;

    // goto L23 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1149:13+6
    goto L23;

    // label L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1159:13+6
    assume {:print "$at(131,49280,49286)"} true;
L4:

    // $t10 := coin::zero<#0>() on_abort goto L23 with $t21 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1159:13+6
    assume {:print "$at(131,49280,49286)"} true;
    call $t10 := $1_coin_zero'#0'();
    if ($abort_flag) {
        assume {:print "$at(131,49280,49286)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(51,18):", $t21} $t21 == $t21;
        goto L23;
    }

    // trace_local[withdrawn_coin]($t10) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1159:13+6
    assume {:print "$track_local(51,18,10):", $t10} $t10 == $t10;

    // goto L14 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1159:13+6
    goto L14;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:569:28+27
    assume {:print "$at(131,24295,24322)"} true;
L2:

    // $t49 := coin::paired_metadata<#0>() on_abort goto L23 with $t21 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:569:28+27
    assume {:print "$at(131,24295,24322)"} true;
    call $t49 := $1_coin_paired_metadata'#0'();
    if ($abort_flag) {
        assume {:print "$at(131,24295,24322)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(51,18):", $t21} $t21 == $t21;
        goto L23;
    }

    // trace_local[metadata]($t49) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:569:28+27
    assume {:print "$track_local(51,18,12):", $t49} $t49 == $t49;

    // $t50 := opaque begin: option::is_some<0x1::object::Object<0x1::fungible_asset::Metadata>>($t49) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:570:17+26
    assume {:print "$at(131,24341,24367)"} true;

    // assume WellFormed($t50) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:570:17+26
    assume $IsValid'bool'($t50);

    // assume Eq<bool>($t50, option::spec_is_some<0x1::object::Object<0x1::fungible_asset::Metadata>>($t49)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:570:17+26
    assume $IsEqual'bool'($t50, $1_option_spec_is_some'$1_object_Object'$1_fungible_asset_Metadata''($t49));

    // $t50 := opaque end: option::is_some<0x1::object::Object<0x1::fungible_asset::Metadata>>($t49) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:570:17+26

    // if ($t50) goto L16 else goto L15 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:570:17+169
    if ($t50) { goto L16; } else { goto L15; }

    // label L16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:571:17+12
    assume {:print "$at(131,24434,24446)"} true;
L16:

    // $t51 := opaque begin: option::destroy_some<0x1::object::Object<0x1::fungible_asset::Metadata>>($t49) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:572:17+30
    assume {:print "$at(131,24465,24495)"} true;

    // assume Identical($t52, option::spec_is_none<0x1::object::Object<0x1::fungible_asset::Metadata>>($t49)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:572:17+30
    assume ($t52 == $1_option_spec_is_none'$1_object_Object'$1_fungible_asset_Metadata''($t49));

    // if ($t52) goto L27 else goto L26 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:572:17+30
    if ($t52) { goto L27; } else { goto L26; }

    // label L27 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:572:17+30
L27:

    // assume And(option::spec_is_none<0x1::object::Object<0x1::fungible_asset::Metadata>>($t49), Eq(262145, $t21)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:572:17+30
    assume {:print "$at(131,24465,24495)"} true;
    assume ($1_option_spec_is_none'$1_object_Object'$1_fungible_asset_Metadata''($t49) && $IsEqual'num'(262145, $t21));

    // trace_abort($t21) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:572:17+30
    assume {:print "$at(131,24465,24495)"} true;
    assume {:print "$track_abort(51,18):", $t21} $t21 == $t21;

    // goto L23 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:572:17+30
    goto L23;

    // label L26 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:572:17+30
L26:

    // assume WellFormed($t51) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:572:17+30
    assume {:print "$at(131,24465,24495)"} true;
    assume $IsValid'$1_object_Object'$1_fungible_asset_Metadata''($t51);

    // assume Eq<0x1::object::Object<0x1::fungible_asset::Metadata>>($t51, option::spec_borrow<0x1::object::Object<0x1::fungible_asset::Metadata>>($t49)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:572:17+30
    assume $IsEqual'$1_object_Object'$1_fungible_asset_Metadata''($t51, $1_option_spec_borrow'$1_object_Object'$1_fungible_asset_Metadata''($t49));

    // $t51 := opaque end: option::destroy_some<0x1::object::Object<0x1::fungible_asset::Metadata>>($t49) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:572:17+30

    // $t53 := primary_fungible_store::primary_store_exists<0x1::fungible_asset::Metadata>($t20, $t51) on_abort goto L23 with $t21 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:570:47+139
    assume {:print "$at(131,24371,24510)"} true;
    call $t53 := $1_primary_fungible_store_primary_store_exists'$1_fungible_asset_Metadata'($t20, $t51);
    if ($abort_flag) {
        assume {:print "$at(131,24371,24510)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(51,18):", $t21} $t21 == $t21;
        goto L23;
    }

    // $t13 := $t53 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:570:47+139
    $t13 := $t53;

    // trace_local[$t10]($t53) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:570:47+139
    assume {:print "$track_local(51,18,13):", $t53} $t53 == $t53;

    // label L20 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:570:13+317
L20:

    // if ($t13) goto L18 else goto L17 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:570:13+317
    assume {:print "$at(131,24337,24654)"} true;
    if ($t13) { goto L18; } else { goto L17; }

    // label L18 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:574:18+12
    assume {:print "$at(131,24530,24542)"} true;
L18:

    // $t6 := $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:574:18+12
    assume {:print "$at(131,24530,24542)"} true;
    $t6 := $t5;

    // trace_local[$t15]($t5) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:574:18+12
    assume {:print "$track_local(51,18,6):", $t5} $t5 == $t5;

    // $t54 := -($t1, $t5) on_abort goto L23 with $t21 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:574:32+21
    call $t54 := $Sub($t1, $t5);
    if ($abort_flag) {
        assume {:print "$at(131,24544,24565)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(51,18):", $t21} $t21 == $t21;
        goto L23;
    }

    // $t7 := $t54 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:574:32+21
    $t7 := $t54;

    // trace_local[fa_amount_to_withdraw]($t54) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:574:32+21
    assume {:print "$track_local(51,18,7):", $t54} $t54 == $t54;

    // goto L19 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:574:32+21
    goto L19;

    // label L17 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:576:17+52
    assume {:print "$at(131,24602,24654)"} true;
L17:

    // $t55 := 6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:576:47+21
    assume {:print "$at(131,24632,24653)"} true;
    $t55 := 6;
    assume $IsValid'u64'($t55);

    // $t56 := error::invalid_argument($t55) on_abort goto L23 with $t21 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:576:23+46
    call $t56 := $1_error_invalid_argument($t55);
    if ($abort_flag) {
        assume {:print "$at(131,24608,24654)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(51,18):", $t21} $t21 == $t21;
        goto L23;
    }

    // trace_abort($t56) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:576:17+52
    assume {:print "$at(131,24602,24654)"} true;
    assume {:print "$track_abort(51,18):", $t56} $t56 == $t56;

    // $t21 := move($t56) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:576:17+52
    $t21 := $t56;

    // goto L23 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:576:17+52
    goto L23;

    // label L15 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:570:17+169
    assume {:print "$at(131,24341,24510)"} true;
L15:

    // $t57 := false at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:570:17+169
    assume {:print "$at(131,24341,24510)"} true;
    $t57 := false;
    assume $IsValid'bool'($t57);

    // $t13 := $t57 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:570:17+169
    $t13 := $t57;

    // trace_local[$t10]($t57) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:570:17+169
    assume {:print "$track_local(51,18,13):", $t57} $t57 == $t57;

    // goto L20 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:570:17+169
    goto L20;

    // label L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:703:13+1
    assume {:print "$at(131,30190,30191)"} true;
L0:

    // $t58 := 0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:703:13+1
    assume {:print "$at(131,30190,30191)"} true;
    $t58 := 0;
    assume $IsValid'u64'($t58);

    // $t5 := $t58 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:703:13+1
    $t5 := $t58;

    // trace_local[coin_balance]($t58) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:703:13+1
    assume {:print "$track_local(51,18,5):", $t58} $t58 == $t58;

    // goto L21 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:703:13+1
    goto L21;

    // label L22 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1170:5+1
    assume {:print "$at(131,49656,49657)"} true;
L22:

    // return $t46 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1170:5+1
    assume {:print "$at(131,49656,49657)"} true;
    $ret0 := $t46;
    return;

    // label L23 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1170:5+1
L23:

    // abort($t21) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1170:5+1
    assume {:print "$at(131,49656,49657)"} true;
    $abort_code := $t21;
    $abort_flag := true;
    return;

}

// fun coin::zero<#0> [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1173:5+200
procedure {:inline 1} $1_coin_zero'#0'() returns ($ret0: $1_coin_Coin'#0')
{
    // declare local variables
    var $t0: $1_coin_Ghost$supply'#0';
    var $t1: int;
    var $t2: $Mutation ($1_coin_Ghost$supply'#0');
    var $t3: int;
    var $t4: $1_coin_Coin'#0';
    var $temp_0'$1_coin_Coin'#0'': $1_coin_Coin'#0';

    // bytecode translation starts here
    // assume Identical($t0, pack coin::Ghost$supply<#0>(Add(select coin::Ghost$supply.v<#0>(global<0x1::coin::Ghost$supply<#0>>(0x0)), 0))) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1175:13+47
    assume {:print "$at(131,49800,49847)"} true;
    assume ($t0 == $1_coin_Ghost$supply'#0'(($ResourceValue($1_coin_Ghost$supply'#0'_$memory, 0)->$v + 0)));

    // assume Identical($t1, 0x0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1175:13+47
    assume ($t1 == 0);

    // $t2 := borrow_global<0x1::coin::Ghost$supply<#0>>($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1175:13+47
    if (!$ResourceExists($1_coin_Ghost$supply'#0'_$memory, $t1)) {
        call $ExecFailureAbort();
    } else {
        $t2 := $Mutation($Global($t1), EmptyVec(), $ResourceValue($1_coin_Ghost$supply'#0'_$memory, $t1));
    }

    // write_ref($t2, $t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1175:13+47
    $t2 := $UpdateMutation($t2, $t0);

    // write_back[0x1::coin::Ghost$supply<#0>@]($t2) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1175:13+47
    $1_coin_Ghost$supply'#0'_$memory := $ResourceUpdate($1_coin_Ghost$supply'#0'_$memory, $GlobalLocationAddress($t2),
        $Dereference($t2));

    // $t3 := 0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1178:20+1
    assume {:print "$at(131,49906,49907)"} true;
    $t3 := 0;
    assume $IsValid'u64'($t3);

    // $t4 := pack 0x1::coin::Coin<#0>($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1177:9+49
    assume {:print "$at(131,49869,49918)"} true;
    $t4 := $1_coin_Coin'#0'($t3);

    // trace_return[0]($t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1173:49+156
    assume {:print "$at(131,49769,49925)"} true;
    assume {:print "$track_return(51,19,0):", $t4} $t4 == $t4;

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1180:5+1
    assume {:print "$at(131,49924,49925)"} true;
L1:

    // return $t4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1180:5+1
    assume {:print "$at(131,49924,49925)"} true;
    $ret0 := $t4;
    return;

}

// fun coin::coin_to_fungible_asset<#0> [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:392:5+302
procedure {:inline 1} $1_coin_coin_to_fungible_asset'#0'(_$t0: $1_coin_Coin'#0') returns ($ret0: $1_fungible_asset_FungibleAsset)
{
    // declare local variables
    var $t1: int;
    var $t2: $1_object_Object'$1_fungible_asset_Metadata';
    var $t3: int;
    var $t4: $1_object_Object'$1_fungible_asset_Metadata';
    var $t5: int;
    var $t6: int;
    var $t7: int;
    var $t8: $1_fungible_asset_FungibleAsset;
    var $t0: $1_coin_Coin'#0';
    var $1_coin_CoinInfo'#0'_$modifies: [int]bool;
    var $temp_0'$1_coin_Coin'#0'': $1_coin_Coin'#0';
    var $temp_0'$1_fungible_asset_FungibleAsset': $1_fungible_asset_FungibleAsset;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t3, select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of<#0>())) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.spec.move:305:9+58
    assume {:print "$at(132,13818,13876)"} true;
    assume ($t3 == $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s)->$account_address);

    // trace_local[coin]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:392:5+1
    assume {:print "$at(131,14896,14897)"} true;
    assume {:print "$track_local(51,25,0):", $t0} $t0 == $t0;

    // $t4 := coin::ensure_paired_metadata<#0>() on_abort goto L2 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:395:24+34
    assume {:print "$at(131,15056,15090)"} true;
    call $t4 := $1_coin_ensure_paired_metadata'#0'();
    if ($abort_flag) {
        assume {:print "$at(131,15056,15090)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(51,25):", $t5} $t5 == $t5;
        goto L2;
    }

    // assume Identical($t6, select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of<#0>())) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.spec.move:247:9+58
    assume {:print "$at(132,11371,11429)"} true;
    assume ($t6 == $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s)->$account_address);

    // $t7 := coin::burn_internal<#0>($t0) on_abort goto L2 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:396:22+19
    assume {:print "$at(131,15114,15133)"} true;
    call $t7 := $1_coin_burn_internal'#0'($t0);
    if ($abort_flag) {
        assume {:print "$at(131,15114,15133)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(51,25):", $t5} $t5 == $t5;
        goto L2;
    }

    // $t8 := fungible_asset::mint_internal($t4, $t7) on_abort goto L2 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:397:9+47
    assume {:print "$at(131,15144,15191)"} true;
    call $t8 := $1_fungible_asset_mint_internal($t4, $t7);
    if ($abort_flag) {
        assume {:print "$at(131,15144,15191)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(51,25):", $t5} $t5 == $t5;
        goto L2;
    }

    // trace_return[0]($t8) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:397:9+47
    assume {:print "$track_return(51,25,0):", $t8} $t8 == $t8;

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:398:5+1
    assume {:print "$at(131,15197,15198)"} true;
L1:

    // return $t8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:398:5+1
    assume {:print "$at(131,15197,15198)"} true;
    $ret0 := $t8;
    return;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:398:5+1
L2:

    // abort($t5) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:398:5+1
    assume {:print "$at(131,15197,15198)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun coin::ensure_paired_metadata<0x1::aptos_coin::AptosCoin> [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:376:5+190
procedure {:inline 1} $1_coin_ensure_paired_metadata'$1_aptos_coin_AptosCoin'() returns ($ret0: $1_object_Object'$1_fungible_asset_Metadata')
{
    // declare local variables
    var $t0: $Mutation ($1_coin_CoinConversionMap);
    var $t1: $1_type_info_TypeInfo;
    var $t2: bool;
    var $t3: bool;
    var $t4: $1_object_ConstructorRef;
    var $t5: $signer;
    var $t6: $signer;
    var $t7: $1_type_info_TypeInfo;
    var $t8: $1_object_Object'$1_fungible_asset_Metadata';
    var $t9: $1_fungible_asset_TransferRef;
    var $t10: $1_fungible_asset_BurnRef;
    var $t11: $1_fungible_asset_MintRef;
    var $t12: $1_coin_PairedFungibleAssetRefs;
    var $t13: $signer;
    var $t14: $1_string_String;
    var $t15: bool;
    var $t16: int;
    var $t17: int;
    var $t18: bool;
    var $t19: int;
    var $t20: $Mutation ($1_coin_CoinConversionMap);
    var $t21: $1_type_info_TypeInfo;
    var $t22: Table int ($1_object_Object'$1_fungible_asset_Metadata');
    var $t23: bool;
    var $t24: $1_string_String;
    var $t25: Vec (int);
    var $t26: $1_string_String;
    var $t27: bool;
    var $t28: bool;
    var $t29: int;
    var $t30: int;
    var $t31: $1_object_ConstructorRef;
    var $t32: $1_option_Option'u128';
    var $t33: int;
    var $t34: $1_string_String;
    var $t35: int;
    var $t36: $1_string_String;
    var $t37: int;
    var $t38: int;
    var $t39: Vec (int);
    var $t40: $1_string_String;
    var $t41: Vec (int);
    var $t42: $1_string_String;
    var $t43: $signer;
    var $t44: $1_type_info_TypeInfo;
    var $t45: $1_coin_PairedCoinType;
    var $t46: $1_object_Object'$1_fungible_asset_Metadata';
    var $t47: $Mutation (Table int ($1_object_Object'$1_fungible_asset_Metadata'));
    var $t48: int;
    var $t49: $1_coin_PairCreation;
    var $t50: $1_fungible_asset_MintRef;
    var $t51: $1_fungible_asset_TransferRef;
    var $t52: $1_fungible_asset_BurnRef;
    var $t53: $1_option_Option'$1_fungible_asset_MintRef';
    var $t54: $1_option_Option'$1_fungible_asset_TransferRef';
    var $t55: $1_option_Option'$1_fungible_asset_BurnRef';
    var $t56: $1_coin_PairedFungibleAssetRefs;
    var $t57: Table int ($1_object_Object'$1_fungible_asset_Metadata');
    var $t58: $1_object_Object'$1_fungible_asset_Metadata';
    var $t59: int;
    var $t60: $signer;
    var $t61: $1_string_String;
    var $t62: Vec (int);
    var $t63: int;
    var $t64: int;
    var $t65: $1_object_ConstructorRef;
    var $t66: int;
    var $t67: int;
    var $t68: bool;
    var $t69: int;
    var $t70: int;
    var $t71: int;
    var $t72: int;
    var $temp_0'$1_coin_CoinConversionMap': $1_coin_CoinConversionMap;
    var $temp_0'$1_coin_PairedFungibleAssetRefs': $1_coin_PairedFungibleAssetRefs;
    var $temp_0'$1_fungible_asset_BurnRef': $1_fungible_asset_BurnRef;
    var $temp_0'$1_fungible_asset_TransferRef': $1_fungible_asset_TransferRef;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'$1_type_info_TypeInfo': $1_type_info_TypeInfo;
    var $temp_0'bool': bool;
    var $temp_0'signer': $signer;

    // bytecode translation starts here
    // $t15 := features::coin_to_fungible_asset_migration_feature_enabled() on_abort goto L16 with $t16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:321:13+60
    assume {:print "$at(131,11436,11496)"} true;
    call $t15 := $1_features_coin_to_fungible_asset_migration_feature_enabled();
    if ($abort_flag) {
        assume {:print "$at(131,11436,11496)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // if ($t15) goto L1 else goto L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:320:9+6
    assume {:print "$at(131,11414,11420)"} true;
    if ($t15) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:324:43+16
    assume {:print "$at(131,11621,11637)"} true;
L1:

    // $t17 := 0x1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:324:43+16
    assume {:print "$at(131,11621,11637)"} true;
    $t17 := 1;
    assume $IsValid'address'($t17);

    // $t18 := exists<0x1::coin::CoinConversionMap>($t17) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:324:17+43
    $t18 := $ResourceExists($1_coin_CoinConversionMap_$memory, $t17);

    // if ($t18) goto L3 else goto L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:324:9+6
    if ($t18) { goto L3; } else { goto L2; }

    // label L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:325:56+16
    assume {:print "$at(131,11747,11763)"} true;
L3:

    // $t19 := 0x1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:325:56+16
    assume {:print "$at(131,11747,11763)"} true;
    $t19 := 1;
    assume $IsValid'address'($t19);

    // $t20 := borrow_global<0x1::coin::CoinConversionMap>($t19) on_abort goto L16 with $t16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:325:19+54
    if (!$ResourceExists($1_coin_CoinConversionMap_$memory, $t19)) {
        call $ExecFailureAbort();
    } else {
        $t20 := $Mutation($Global($t19), EmptyVec(), $ResourceValue($1_coin_CoinConversionMap_$memory, $t19));
    }
    if ($abort_flag) {
        assume {:print "$at(131,11710,11764)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // trace_local[map]($t20) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:325:19+54
    $temp_0'$1_coin_CoinConversionMap' := $Dereference($t20);
    assume {:print "$track_local(51,33,0):", $temp_0'$1_coin_CoinConversionMap'} $temp_0'$1_coin_CoinConversionMap' == $temp_0'$1_coin_CoinConversionMap';

    // $t21 := type_info::type_of<#0>() on_abort goto L16 with $t16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:326:20+30
    assume {:print "$at(131,11786,11816)"} true;
    if (!true) {
        call $ExecFailureAbort();
    }
    else {
        $t21 := $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9));
    }
    if ($abort_flag) {
        assume {:print "$at(131,11786,11816)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // trace_local[type]($t21) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:326:20+30
    assume {:print "$track_local(51,33,1):", $t21} $t21 == $t21;

    // $t22 := get_field<0x1::coin::CoinConversionMap>.coin_to_fungible_asset_map($t20) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:327:30+31
    assume {:print "$at(131,11848,11879)"} true;
    $t22 := $Dereference($t20)->$coin_to_fungible_asset_map;

    // $t23 := table::contains<0x1::type_info::TypeInfo, 0x1::object::Object<0x1::fungible_asset::Metadata>>($t22, $t21) on_abort goto L16 with $t16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:327:14+54
    call $t23 := $1_table_contains'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata''($t22, $t21);
    if ($abort_flag) {
        assume {:print "$at(131,11832,11886)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // if ($t23) goto L5 else goto L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:327:13+55
    if ($t23) { goto L5; } else { goto L4; }

    // label L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:327:9+2207
L5:

    // goto L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:327:9+2207
    assume {:print "$at(131,11827,14034)"} true;
    goto L6;

    // label L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:316:9+32
    assume {:print "$at(131,11197,11229)"} true;
L4:

    // $t24 := type_info::type_name<#0>() on_abort goto L16 with $t16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:316:9+32
    assume {:print "$at(131,11197,11229)"} true;
    $t24 := $1_string_String(Vec(DefaultVecMap()[0 := 48][1 := 120][2 := 49][3 := 58][4 := 58][5 := 97][6 := 112][7 := 116][8 := 111][9 := 115][10 := 95][11 := 99][12 := 111][13 := 105][14 := 110][15 := 58][16 := 58][17 := 65][18 := 112][19 := 116][20 := 111][21 := 115][22 := 67][23 := 111][24 := 105][25 := 110], 26));
    if ($abort_flag) {
        assume {:print "$at(131,11197,11229)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // $t25 := [48, 120, 49, 58, 58, 97, 112, 116, 111, 115, 95, 99, 111, 105, 110, 58, 58, 65, 112, 116, 111, 115, 67, 111, 105, 110] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:316:58+29
    $t25 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(48, 120, 49, 58), MakeVec4(58, 97, 112, 116)), MakeVec4(111, 115, 95, 99)), MakeVec4(111, 105, 110, 58)), MakeVec4(58, 65, 112, 116)), MakeVec4(111, 115, 67, 111)), MakeVec2(105, 110));
    assume $IsValid'vec'u8''($t25);

    // $t26 := string::utf8($t25) on_abort goto L16 with $t16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:316:45+43
    call $t26 := $1_string_utf8($t25);
    if ($abort_flag) {
        assume {:print "$at(131,11233,11276)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // $t27 := ==($t24, $t26) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:316:9+79
    $t27 := $IsEqual'$1_string_String'($t24, $t26);

    // trace_local[$t1]($t27) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:316:9+79
    assume {:print "$track_local(51,33,2):", $t27} $t27 == $t27;

    // if ($t27) goto L7 else goto L8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:329:21+7
    assume {:print "$at(131,11957,11964)"} true;
    if ($t27) { goto L7; } else { goto L8; }

    // label L8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:329:21+29
L8:

    // $t28 := true at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:329:21+29
    assume {:print "$at(131,11957,11986)"} true;
    $t28 := true;
    assume $IsValid'bool'($t28);

    // $t3 := $t28 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:329:21+29
    $t3 := $t28;

    // trace_local[$t19]($t28) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:329:21+29
    assume {:print "$track_local(51,33,3):", $t28} $t28 == $t28;

    // label L14 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:329:13+6
L14:

    // if ($t3) goto L10 else goto L9 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:329:13+6
    assume {:print "$at(131,11949,11955)"} true;
    if ($t3) { goto L10; } else { goto L9; }

    // label L10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:331:17+387
    assume {:print "$at(131,12097,12484)"} true;
L10:

    // if ($t27) goto L12 else goto L11 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:331:17+387
    assume {:print "$at(131,12097,12484)"} true;
    if ($t27) { goto L12; } else { goto L11; }

    // label L12 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:332:61+16
    assume {:print "$at(131,12172,12188)"} true;
L12:

    // $t29 := 0x1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:332:61+16
    assume {:print "$at(131,12172,12188)"} true;
    $t29 := 1;
    assume $IsValid'address'($t29);

    // $t30 := 0xa at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:332:79+21
    $t30 := 10;
    assume $IsValid'address'($t30);

    // $t31 := object::create_sticky_object_at_address($t29, $t30) on_abort goto L16 with $t16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:332:21+80
    call $t31 := $1_object_create_sticky_object_at_address($t29, $t30);
    if ($abort_flag) {
        assume {:print "$at(131,12132,12212)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // $t4 := $t31 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:332:21+80
    $t4 := $t31;

    // trace_local[metadata_object_cref]($t31) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:332:21+80
    assume {:print "$track_local(51,33,4):", $t31} $t31 == $t31;

    // label L13 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:340:17+21
    assume {:print "$at(131,12585,12606)"} true;
L13:

    // $t32 := opaque begin: option::none<u128>() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:341:17+14
    assume {:print "$at(131,12625,12639)"} true;

    // assume And(WellFormed($t32), Le(Len<u128>(select option::Option.vec($t32)), 1)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:341:17+14
    assume ($IsValid'$1_option_Option'u128''($t32) && (LenVec($t32->$vec) <= 1));

    // assume Eq<0x1::option::Option<u128>>($t32, option::spec_none<u128>()) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:341:17+14
    assume $IsEqual'$1_option_Option'u128''($t32, $1_option_spec_none'u128'());

    // $t32 := opaque end: option::none<u128>() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:341:17+14

    // assume Identical($t33, select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of<#0>())) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.spec.move:192:9+58
    assume {:print "$at(132,9479,9537)"} true;
    assume ($t33 == $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))->$account_address);

    // $t34 := coin::name<#0>() on_abort goto L16 with $t16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:342:17+16
    assume {:print "$at(131,12658,12674)"} true;
    call $t34 := $1_coin_name'$1_aptos_coin_AptosCoin'();
    if ($abort_flag) {
        assume {:print "$at(131,12658,12674)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // assume Identical($t35, select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of<#0>())) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.spec.move:192:9+58
    assume {:print "$at(132,9479,9537)"} true;
    assume ($t35 == $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))->$account_address);

    // $t36 := coin::symbol<#0>() on_abort goto L16 with $t16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:343:17+18
    assume {:print "$at(131,12693,12711)"} true;
    call $t36 := $1_coin_symbol'$1_aptos_coin_AptosCoin'();
    if ($abort_flag) {
        assume {:print "$at(131,12693,12711)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // assume Identical($t37, select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of<#0>())) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.spec.move:192:9+58
    assume {:print "$at(132,9479,9537)"} true;
    assume ($t37 == $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))->$account_address);

    // $t38 := coin::decimals<#0>() on_abort goto L16 with $t16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:344:17+20
    assume {:print "$at(131,12730,12750)"} true;
    call $t38 := $1_coin_decimals'$1_aptos_coin_AptosCoin'();
    if ($abort_flag) {
        assume {:print "$at(131,12730,12750)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // $t39 := [] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:345:30+3
    assume {:print "$at(131,12782,12785)"} true;
    $t39 := $EmptyVec'u8'();
    assume $IsValid'vec'u8''($t39);

    // $t40 := string::utf8($t39) on_abort goto L16 with $t16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:345:17+17
    call $t40 := $1_string_utf8($t39);
    if ($abort_flag) {
        assume {:print "$at(131,12769,12786)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // $t41 := [] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:346:30+3
    assume {:print "$at(131,12818,12821)"} true;
    $t41 := $EmptyVec'u8'();
    assume $IsValid'vec'u8''($t41);

    // $t42 := string::utf8($t41) on_abort goto L16 with $t16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:346:17+17
    call $t42 := $1_string_utf8($t41);
    if ($abort_flag) {
        assume {:print "$at(131,12805,12822)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // primary_fungible_store::create_primary_store_enabled_fungible_asset($t4, $t32, $t34, $t36, $t38, $t40, $t42) on_abort goto L16 with $t16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:339:13+339
    assume {:print "$at(131,12499,12838)"} true;
    call $1_primary_fungible_store_create_primary_store_enabled_fungible_asset($t4, $t32, $t34, $t36, $t38, $t40, $t42);
    if ($abort_flag) {
        assume {:print "$at(131,12499,12838)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // $t43 := object::generate_signer($t4) on_abort goto L16 with $t16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:349:43+46
    assume {:print "$at(131,12885,12931)"} true;
    call $t43 := $1_object_generate_signer($t4);
    if ($abort_flag) {
        assume {:print "$at(131,12885,12931)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // trace_local[$t42]($t43) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:349:43+46
    assume {:print "$track_local(51,33,5):", $t43} $t43 == $t43;

    // trace_local[metadata_object_signer]($t43) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:349:42+47
    assume {:print "$track_local(51,33,6):", $t43} $t43 == $t43;

    // $t44 := type_info::type_of<#0>() on_abort goto L16 with $t16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:350:24+30
    assume {:print "$at(131,12957,12987)"} true;
    if (!true) {
        call $ExecFailureAbort();
    }
    else {
        $t44 := $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9));
    }
    if ($abort_flag) {
        assume {:print "$at(131,12957,12987)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // trace_local[type]($t44) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:350:24+30
    assume {:print "$track_local(51,33,7):", $t44} $t44 == $t44;

    // $t45 := pack 0x1::coin::PairedCoinType($t44) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:351:45+23
    assume {:print "$at(131,13034,13057)"} true;
    $t45 := $1_coin_PairedCoinType($t44);

    // move_to<0x1::coin::PairedCoinType>($t45, $t43) on_abort goto L16 with $t16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:351:13+56
    if ($ResourceExists($1_coin_PairedCoinType_$memory, $t43->$addr)) {
        call $ExecFailureAbort();
    } else {
        $1_coin_PairedCoinType_$memory := $ResourceUpdate($1_coin_PairedCoinType_$memory, $t43->$addr, $t45);
    }
    if ($abort_flag) {
        assume {:print "$at(131,13002,13058)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // $t46 := object::object_from_constructor_ref<0x1::fungible_asset::Metadata>($t4) on_abort goto L16 with $t16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:352:32+58
    assume {:print "$at(131,13092,13150)"} true;
    call $t46 := $1_object_object_from_constructor_ref'$1_fungible_asset_Metadata'($t4);
    if ($abort_flag) {
        assume {:print "$at(131,13092,13150)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // trace_local[metadata_obj]($t46) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:352:32+58
    assume {:print "$track_local(51,33,8):", $t46} $t46 == $t46;

    // $t47 := borrow_field<0x1::coin::CoinConversionMap>.coin_to_fungible_asset_map($t20) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:354:24+35
    assume {:print "$at(131,13178,13213)"} true;
    $t47 := $ChildMutation($t20, 0, $Dereference($t20)->$coin_to_fungible_asset_map);

    // table::add<0x1::type_info::TypeInfo, 0x1::object::Object<0x1::fungible_asset::Metadata>>($t47, $t44, $t46) on_abort goto L16 with $t16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:354:13+67
    call $t47 := $1_table_add'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata''($t47, $t44, $t46);
    if ($abort_flag) {
        assume {:print "$at(131,13167,13234)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // write_back[Reference($t20).coin_to_fungible_asset_map (0x1::table::Table<0x1::type_info::TypeInfo, 0x1::object::Object<0x1::fungible_asset::Metadata>>)]($t47) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:354:13+67
    $t20 := $UpdateMutation($t20, $Update'$1_coin_CoinConversionMap'_coin_to_fungible_asset_map($Dereference($t20), $Dereference($t47)));

    // $t48 := object::object_address<0x1::fungible_asset::Metadata>($t46) on_abort goto L16 with $t16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:357:50+29
    assume {:print "$at(131,13360,13389)"} true;
    call $t48 := $1_object_object_address'$1_fungible_asset_Metadata'($t46);
    if ($abort_flag) {
        assume {:print "$at(131,13360,13389)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // $t49 := pack 0x1::coin::PairCreation($t44, $t48) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:355:25+143
    assume {:print "$at(131,13261,13404)"} true;
    $t49 := $1_coin_PairCreation($t44, $t48);

    // opaque begin: event::emit<0x1::coin::PairCreation>($t49) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:355:13+156

    // opaque end: event::emit<0x1::coin::PairCreation>($t49) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:355:13+156

    // $t50 := fungible_asset::generate_mint_ref($t4) on_abort goto L16 with $t16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:361:28+56
    assume {:print "$at(131,13478,13534)"} true;
    call $t50 := $1_fungible_asset_generate_mint_ref($t4);
    if ($abort_flag) {
        assume {:print "$at(131,13478,13534)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // $t51 := fungible_asset::generate_transfer_ref($t4) on_abort goto L16 with $t16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:362:32+60
    assume {:print "$at(131,13568,13628)"} true;
    call $t51 := $1_fungible_asset_generate_transfer_ref($t4);
    if ($abort_flag) {
        assume {:print "$at(131,13568,13628)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // trace_local[transfer_ref]($t51) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:362:32+60
    assume {:print "$track_local(51,33,9):", $t51} $t51 == $t51;

    // $t52 := fungible_asset::generate_burn_ref($t4) on_abort goto L16 with $t16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:363:28+56
    assume {:print "$at(131,13658,13714)"} true;
    call $t52 := $1_fungible_asset_generate_burn_ref($t4);
    if ($abort_flag) {
        assume {:print "$at(131,13658,13714)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // trace_local[burn_ref]($t52) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:363:28+56
    assume {:print "$track_local(51,33,10):", $t52} $t52 == $t52;

    // $t53 := opaque begin: option::some<0x1::fungible_asset::MintRef>($t50) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:366:35+22
    assume {:print "$at(131,13839,13861)"} true;

    // assume And(WellFormed($t53), Le(Len<0x1::fungible_asset::MintRef>(select option::Option.vec($t53)), 1)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:366:35+22
    assume ($IsValid'$1_option_Option'$1_fungible_asset_MintRef''($t53) && (LenVec($t53->$vec) <= 1));

    // assume Eq<0x1::option::Option<0x1::fungible_asset::MintRef>>($t53, option::spec_some<0x1::fungible_asset::MintRef>($t50)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:366:35+22
    assume $IsEqual'$1_option_Option'$1_fungible_asset_MintRef''($t53, $1_option_spec_some'$1_fungible_asset_MintRef'($t50));

    // $t53 := opaque end: option::some<0x1::fungible_asset::MintRef>($t50) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:366:35+22

    // $t54 := opaque begin: option::some<0x1::fungible_asset::TransferRef>($t51) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:367:39+26
    assume {:print "$at(131,13902,13928)"} true;

    // assume And(WellFormed($t54), Le(Len<0x1::fungible_asset::TransferRef>(select option::Option.vec($t54)), 1)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:367:39+26
    assume ($IsValid'$1_option_Option'$1_fungible_asset_TransferRef''($t54) && (LenVec($t54->$vec) <= 1));

    // assume Eq<0x1::option::Option<0x1::fungible_asset::TransferRef>>($t54, option::spec_some<0x1::fungible_asset::TransferRef>($t51)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:367:39+26
    assume $IsEqual'$1_option_Option'$1_fungible_asset_TransferRef''($t54, $1_option_spec_some'$1_fungible_asset_TransferRef'($t51));

    // $t54 := opaque end: option::some<0x1::fungible_asset::TransferRef>($t51) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:367:39+26

    // $t55 := opaque begin: option::some<0x1::fungible_asset::BurnRef>($t52) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:368:35+22
    assume {:print "$at(131,13965,13987)"} true;

    // assume And(WellFormed($t55), Le(Len<0x1::fungible_asset::BurnRef>(select option::Option.vec($t55)), 1)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:368:35+22
    assume ($IsValid'$1_option_Option'$1_fungible_asset_BurnRef''($t55) && (LenVec($t55->$vec) <= 1));

    // assume Eq<0x1::option::Option<0x1::fungible_asset::BurnRef>>($t55, option::spec_some<0x1::fungible_asset::BurnRef>($t52)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:368:35+22
    assume $IsEqual'$1_option_Option'$1_fungible_asset_BurnRef''($t55, $1_option_spec_some'$1_fungible_asset_BurnRef'($t52));

    // $t55 := opaque end: option::some<0x1::fungible_asset::BurnRef>($t52) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:368:35+22

    // $t56 := pack 0x1::coin::PairedFungibleAssetRefs($t53, $t54, $t55) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:365:17+229
    assume {:print "$at(131,13778,14007)"} true;
    $t56 := $1_coin_PairedFungibleAssetRefs($t53, $t54, $t55);

    // trace_local[$t62]($t56) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:364:13+293
    assume {:print "$at(131,13729,14022)"} true;
    assume {:print "$track_local(51,33,12):", $t56} $t56 == $t56;

    // move_to<0x1::coin::PairedFungibleAssetRefs>($t56, $t43) on_abort goto L16 with $t16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:364:13+293
    if ($ResourceExists($1_coin_PairedFungibleAssetRefs_$memory, $t43->$addr)) {
        call $ExecFailureAbort();
    } else {
        $1_coin_PairedFungibleAssetRefs_$memory := $ResourceUpdate($1_coin_PairedFungibleAssetRefs_$memory, $t43->$addr, $t56);
    }
    if ($abort_flag) {
        assume {:print "$at(131,13729,14022)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // label L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:372:24+31
    assume {:print "$at(131,14060,14091)"} true;
L6:

    // $t57 := get_field<0x1::coin::CoinConversionMap>.coin_to_fungible_asset_map($t20) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:372:24+31
    assume {:print "$at(131,14060,14091)"} true;
    $t57 := $Dereference($t20)->$coin_to_fungible_asset_map;

    // write_back[0x1::coin::CoinConversionMap@]($t20) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:372:24+31
    $1_coin_CoinConversionMap_$memory := $ResourceUpdate($1_coin_CoinConversionMap_$memory, $GlobalLocationAddress($t20),
        $Dereference($t20));

    // $t58 := table::borrow<0x1::type_info::TypeInfo, 0x1::object::Object<0x1::fungible_asset::Metadata>>($t57, $t21) on_abort goto L16 with $t16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:372:10+52
    call $t58 := $1_table_borrow'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata''($t57, $t21);
    if ($abort_flag) {
        assume {:print "$at(131,14046,14098)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // trace_return[0]($t58) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:319:117+2702
    assume {:print "$at(131,11403,14105)"} true;
    assume {:print "$track_return(51,33,0):", $t58} $t58 == $t58;

    // goto L15 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:319:117+2702
    goto L15;

    // label L11 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:335:55+21
    assume {:print "$at(131,12344,12365)"} true;
L11:

    // $t59 := 0xa at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:335:55+21
    assume {:print "$at(131,12344,12365)"} true;
    $t59 := 10;
    assume $IsValid'address'($t59);

    // $t60 := opaque begin: create_signer::create_signer($t59) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:335:26+51

    // assume WellFormed($t60) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:335:26+51
    assume $IsValid'signer'($t60) && $1_signer_is_txn_signer($t60) && $1_signer_is_txn_signer_addr($t60->$addr);

    // assume Eq<address>(signer::$address_of($t60), $t59) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:335:26+51
    assume $IsEqual'address'($1_signer_$address_of($t60), $t59);

    // assume Eq<signer>($t60, create_signer::spec_create_signer($t59)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:335:26+51
    assume $IsEqual'signer'($t60, $1_create_signer_spec_create_signer($t59));

    // $t60 := opaque end: create_signer::create_signer($t59) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:335:26+51

    // trace_local[$t26]($t60) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:335:26+51
    assume {:print "$track_local(51,33,13):", $t60} $t60 == $t60;

    // $t61 := type_info::type_name<#0>() on_abort goto L16 with $t16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:336:41+32
    assume {:print "$at(131,12409,12441)"} true;
    $t61 := $1_string_String(Vec(DefaultVecMap()[0 := 48][1 := 120][2 := 49][3 := 58][4 := 58][5 := 97][6 := 112][7 := 116][8 := 111][9 := 115][10 := 95][11 := 99][12 := 111][13 := 105][14 := 110][15 := 58][16 := 58][17 := 65][18 := 112][19 := 116][20 := 111][21 := 115][22 := 67][23 := 111][24 := 105][25 := 110], 26));
    if ($abort_flag) {
        assume {:print "$at(131,12409,12441)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // trace_local[$t31]($t61) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:336:41+32
    assume {:print "$track_local(51,33,14):", $t61} $t61 == $t61;

    // $t62 := string::bytes($t61) on_abort goto L16 with $t16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:336:26+48
    call $t62 := $1_string_bytes($t61);
    if ($abort_flag) {
        assume {:print "$at(131,12394,12442)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // assume Identical($t63, signer::$address_of($t60)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.spec.move:162:9+50
    assume {:print "$at(187,7097,7147)"} true;
    assume ($t63 == $1_signer_$address_of($t60));

    // assume Identical($t64, object::spec_create_object_address($t63, $t62)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.spec.move:163:9+65
    assume {:print "$at(187,7157,7222)"} true;
    assume ($t64 == $1_object_spec_create_object_address($t63, $t62));

    // $t65 := object::create_named_object($t60, $t62) on_abort goto L16 with $t16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:334:21+205
    assume {:print "$at(131,12260,12465)"} true;
    call $t65 := $1_object_create_named_object($t60, $t62);
    if ($abort_flag) {
        assume {:print "$at(131,12260,12465)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // $t4 := $t65 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:334:21+205
    $t4 := $t65;

    // trace_local[metadata_object_cref]($t65) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:334:21+205
    assume {:print "$track_local(51,33,4):", $t65} $t65 == $t65;

    // goto L13 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:334:21+205
    goto L13;

    // label L9 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:329:13+6
    assume {:print "$at(131,11949,11955)"} true;
L9:

    // drop($t20) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:329:13+6
    assume {:print "$at(131,11949,11955)"} true;

    // $t66 := 28 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:329:73+27
    $t66 := 28;
    assume $IsValid'u64'($t66);

    // $t67 := error::invalid_state($t66) on_abort goto L16 with $t16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:329:52+49
    call $t67 := $1_error_invalid_state($t66);
    if ($abort_flag) {
        assume {:print "$at(131,11988,12037)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // trace_abort($t67) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:329:13+6
    assume {:print "$at(131,11949,11955)"} true;
    assume {:print "$track_abort(51,33):", $t67} $t67 == $t67;

    // $t16 := move($t67) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:329:13+6
    $t16 := $t67;

    // goto L16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:329:13+6
    goto L16;

    // label L7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:329:32+18
L7:

    // $t68 := false at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:329:32+18
    assume {:print "$at(131,11968,11986)"} true;
    $t68 := false;
    assume $IsValid'bool'($t68);

    // $t3 := $t68 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:329:32+18
    $t3 := $t68;

    // trace_local[$t19]($t68) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:329:32+18
    assume {:print "$track_local(51,33,3):", $t68} $t68 == $t68;

    // goto L14 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:329:32+18
    goto L14;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:324:79+30
    assume {:print "$at(131,11657,11687)"} true;
L2:

    // $t69 := 27 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:324:79+30
    assume {:print "$at(131,11657,11687)"} true;
    $t69 := 27;
    assume $IsValid'u64'($t69);

    // $t70 := error::not_found($t69) on_abort goto L16 with $t16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:324:62+48
    call $t70 := $1_error_not_found($t69);
    if ($abort_flag) {
        assume {:print "$at(131,11640,11688)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // trace_abort($t70) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:324:9+6
    assume {:print "$at(131,11587,11593)"} true;
    assume {:print "$track_abort(51,33):", $t70} $t70 == $t70;

    // $t16 := move($t70) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:324:9+6
    $t16 := $t70;

    // goto L16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:324:9+6
    goto L16;

    // label L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:322:34+32
    assume {:print "$at(131,11532,11564)"} true;
L0:

    // $t71 := 26 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:322:34+32
    assume {:print "$at(131,11532,11564)"} true;
    $t71 := 26;
    assume $IsValid'u64'($t71);

    // $t72 := error::invalid_state($t71) on_abort goto L16 with $t16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:322:13+54
    call $t72 := $1_error_invalid_state($t71);
    if ($abort_flag) {
        assume {:print "$at(131,11511,11565)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // trace_abort($t72) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:320:9+6
    assume {:print "$at(131,11414,11420)"} true;
    assume {:print "$track_abort(51,33):", $t72} $t72 == $t72;

    // $t16 := move($t72) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:320:9+6
    $t16 := $t72;

    // goto L16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:320:9+6
    goto L16;

    // label L15 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:378:5+1
    assume {:print "$at(131,14394,14395)"} true;
L15:

    // return $t58 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:378:5+1
    assume {:print "$at(131,14394,14395)"} true;
    $ret0 := $t58;
    return;

    // label L16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:378:5+1
L16:

    // abort($t16) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:378:5+1
    assume {:print "$at(131,14394,14395)"} true;
    $abort_code := $t16;
    $abort_flag := true;
    return;

}

// fun coin::ensure_paired_metadata<#0> [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:376:5+190
procedure {:inline 1} $1_coin_ensure_paired_metadata'#0'() returns ($ret0: $1_object_Object'$1_fungible_asset_Metadata')
{
    // declare local variables
    var $t0: $Mutation ($1_coin_CoinConversionMap);
    var $t1: $1_type_info_TypeInfo;
    var $t2: bool;
    var $t3: bool;
    var $t4: $1_object_ConstructorRef;
    var $t5: $signer;
    var $t6: $signer;
    var $t7: $1_type_info_TypeInfo;
    var $t8: $1_object_Object'$1_fungible_asset_Metadata';
    var $t9: $1_fungible_asset_TransferRef;
    var $t10: $1_fungible_asset_BurnRef;
    var $t11: $1_fungible_asset_MintRef;
    var $t12: $1_coin_PairedFungibleAssetRefs;
    var $t13: $signer;
    var $t14: $1_string_String;
    var $t15: bool;
    var $t16: int;
    var $t17: int;
    var $t18: bool;
    var $t19: int;
    var $t20: $Mutation ($1_coin_CoinConversionMap);
    var $t21: $1_type_info_TypeInfo;
    var $t22: Table int ($1_object_Object'$1_fungible_asset_Metadata');
    var $t23: bool;
    var $t24: $1_string_String;
    var $t25: Vec (int);
    var $t26: $1_string_String;
    var $t27: bool;
    var $t28: bool;
    var $t29: int;
    var $t30: int;
    var $t31: $1_object_ConstructorRef;
    var $t32: $1_option_Option'u128';
    var $t33: int;
    var $t34: $1_string_String;
    var $t35: int;
    var $t36: $1_string_String;
    var $t37: int;
    var $t38: int;
    var $t39: Vec (int);
    var $t40: $1_string_String;
    var $t41: Vec (int);
    var $t42: $1_string_String;
    var $t43: $signer;
    var $t44: $1_type_info_TypeInfo;
    var $t45: $1_coin_PairedCoinType;
    var $t46: $1_object_Object'$1_fungible_asset_Metadata';
    var $t47: $Mutation (Table int ($1_object_Object'$1_fungible_asset_Metadata'));
    var $t48: int;
    var $t49: $1_coin_PairCreation;
    var $t50: $1_fungible_asset_MintRef;
    var $t51: $1_fungible_asset_TransferRef;
    var $t52: $1_fungible_asset_BurnRef;
    var $t53: $1_option_Option'$1_fungible_asset_MintRef';
    var $t54: $1_option_Option'$1_fungible_asset_TransferRef';
    var $t55: $1_option_Option'$1_fungible_asset_BurnRef';
    var $t56: $1_coin_PairedFungibleAssetRefs;
    var $t57: Table int ($1_object_Object'$1_fungible_asset_Metadata');
    var $t58: $1_object_Object'$1_fungible_asset_Metadata';
    var $t59: int;
    var $t60: $signer;
    var $t61: $1_string_String;
    var $t62: Vec (int);
    var $t63: int;
    var $t64: int;
    var $t65: $1_object_ConstructorRef;
    var $t66: int;
    var $t67: int;
    var $t68: bool;
    var $t69: int;
    var $t70: int;
    var $t71: int;
    var $t72: int;
    var $temp_0'$1_coin_CoinConversionMap': $1_coin_CoinConversionMap;
    var $temp_0'$1_coin_PairedFungibleAssetRefs': $1_coin_PairedFungibleAssetRefs;
    var $temp_0'$1_fungible_asset_BurnRef': $1_fungible_asset_BurnRef;
    var $temp_0'$1_fungible_asset_TransferRef': $1_fungible_asset_TransferRef;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'$1_type_info_TypeInfo': $1_type_info_TypeInfo;
    var $temp_0'bool': bool;
    var $temp_0'signer': $signer;

    // bytecode translation starts here
    // $t15 := features::coin_to_fungible_asset_migration_feature_enabled() on_abort goto L16 with $t16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:321:13+60
    assume {:print "$at(131,11436,11496)"} true;
    call $t15 := $1_features_coin_to_fungible_asset_migration_feature_enabled();
    if ($abort_flag) {
        assume {:print "$at(131,11436,11496)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // if ($t15) goto L1 else goto L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:320:9+6
    assume {:print "$at(131,11414,11420)"} true;
    if ($t15) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:324:43+16
    assume {:print "$at(131,11621,11637)"} true;
L1:

    // $t17 := 0x1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:324:43+16
    assume {:print "$at(131,11621,11637)"} true;
    $t17 := 1;
    assume $IsValid'address'($t17);

    // $t18 := exists<0x1::coin::CoinConversionMap>($t17) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:324:17+43
    $t18 := $ResourceExists($1_coin_CoinConversionMap_$memory, $t17);

    // if ($t18) goto L3 else goto L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:324:9+6
    if ($t18) { goto L3; } else { goto L2; }

    // label L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:325:56+16
    assume {:print "$at(131,11747,11763)"} true;
L3:

    // $t19 := 0x1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:325:56+16
    assume {:print "$at(131,11747,11763)"} true;
    $t19 := 1;
    assume $IsValid'address'($t19);

    // $t20 := borrow_global<0x1::coin::CoinConversionMap>($t19) on_abort goto L16 with $t16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:325:19+54
    if (!$ResourceExists($1_coin_CoinConversionMap_$memory, $t19)) {
        call $ExecFailureAbort();
    } else {
        $t20 := $Mutation($Global($t19), EmptyVec(), $ResourceValue($1_coin_CoinConversionMap_$memory, $t19));
    }
    if ($abort_flag) {
        assume {:print "$at(131,11710,11764)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // trace_local[map]($t20) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:325:19+54
    $temp_0'$1_coin_CoinConversionMap' := $Dereference($t20);
    assume {:print "$track_local(51,33,0):", $temp_0'$1_coin_CoinConversionMap'} $temp_0'$1_coin_CoinConversionMap' == $temp_0'$1_coin_CoinConversionMap';

    // $t21 := type_info::type_of<#0>() on_abort goto L16 with $t16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:326:20+30
    assume {:print "$at(131,11786,11816)"} true;
    if (!(#0_info is $TypeParamStruct)) {
        call $ExecFailureAbort();
    }
    else {
        $t21 := $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s);
    }
    if ($abort_flag) {
        assume {:print "$at(131,11786,11816)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // trace_local[type]($t21) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:326:20+30
    assume {:print "$track_local(51,33,1):", $t21} $t21 == $t21;

    // $t22 := get_field<0x1::coin::CoinConversionMap>.coin_to_fungible_asset_map($t20) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:327:30+31
    assume {:print "$at(131,11848,11879)"} true;
    $t22 := $Dereference($t20)->$coin_to_fungible_asset_map;

    // $t23 := table::contains<0x1::type_info::TypeInfo, 0x1::object::Object<0x1::fungible_asset::Metadata>>($t22, $t21) on_abort goto L16 with $t16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:327:14+54
    call $t23 := $1_table_contains'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata''($t22, $t21);
    if ($abort_flag) {
        assume {:print "$at(131,11832,11886)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // if ($t23) goto L5 else goto L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:327:13+55
    if ($t23) { goto L5; } else { goto L4; }

    // label L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:327:9+2207
L5:

    // goto L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:327:9+2207
    assume {:print "$at(131,11827,14034)"} true;
    goto L6;

    // label L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:316:9+32
    assume {:print "$at(131,11197,11229)"} true;
L4:

    // $t24 := type_info::type_name<#0>() on_abort goto L16 with $t16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:316:9+32
    assume {:print "$at(131,11197,11229)"} true;
    $t24 := $1_string_String($TypeName(#0_info));
    if ($abort_flag) {
        assume {:print "$at(131,11197,11229)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // $t25 := [48, 120, 49, 58, 58, 97, 112, 116, 111, 115, 95, 99, 111, 105, 110, 58, 58, 65, 112, 116, 111, 115, 67, 111, 105, 110] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:316:58+29
    $t25 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(48, 120, 49, 58), MakeVec4(58, 97, 112, 116)), MakeVec4(111, 115, 95, 99)), MakeVec4(111, 105, 110, 58)), MakeVec4(58, 65, 112, 116)), MakeVec4(111, 115, 67, 111)), MakeVec2(105, 110));
    assume $IsValid'vec'u8''($t25);

    // $t26 := string::utf8($t25) on_abort goto L16 with $t16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:316:45+43
    call $t26 := $1_string_utf8($t25);
    if ($abort_flag) {
        assume {:print "$at(131,11233,11276)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // $t27 := ==($t24, $t26) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:316:9+79
    $t27 := $IsEqual'$1_string_String'($t24, $t26);

    // trace_local[$t1]($t27) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:316:9+79
    assume {:print "$track_local(51,33,2):", $t27} $t27 == $t27;

    // if ($t27) goto L7 else goto L8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:329:21+7
    assume {:print "$at(131,11957,11964)"} true;
    if ($t27) { goto L7; } else { goto L8; }

    // label L8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:329:21+29
L8:

    // $t28 := true at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:329:21+29
    assume {:print "$at(131,11957,11986)"} true;
    $t28 := true;
    assume $IsValid'bool'($t28);

    // $t3 := $t28 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:329:21+29
    $t3 := $t28;

    // trace_local[$t19]($t28) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:329:21+29
    assume {:print "$track_local(51,33,3):", $t28} $t28 == $t28;

    // label L14 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:329:13+6
L14:

    // if ($t3) goto L10 else goto L9 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:329:13+6
    assume {:print "$at(131,11949,11955)"} true;
    if ($t3) { goto L10; } else { goto L9; }

    // label L10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:331:17+387
    assume {:print "$at(131,12097,12484)"} true;
L10:

    // if ($t27) goto L12 else goto L11 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:331:17+387
    assume {:print "$at(131,12097,12484)"} true;
    if ($t27) { goto L12; } else { goto L11; }

    // label L12 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:332:61+16
    assume {:print "$at(131,12172,12188)"} true;
L12:

    // $t29 := 0x1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:332:61+16
    assume {:print "$at(131,12172,12188)"} true;
    $t29 := 1;
    assume $IsValid'address'($t29);

    // $t30 := 0xa at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:332:79+21
    $t30 := 10;
    assume $IsValid'address'($t30);

    // $t31 := object::create_sticky_object_at_address($t29, $t30) on_abort goto L16 with $t16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:332:21+80
    call $t31 := $1_object_create_sticky_object_at_address($t29, $t30);
    if ($abort_flag) {
        assume {:print "$at(131,12132,12212)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // $t4 := $t31 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:332:21+80
    $t4 := $t31;

    // trace_local[metadata_object_cref]($t31) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:332:21+80
    assume {:print "$track_local(51,33,4):", $t31} $t31 == $t31;

    // label L13 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:340:17+21
    assume {:print "$at(131,12585,12606)"} true;
L13:

    // $t32 := opaque begin: option::none<u128>() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:341:17+14
    assume {:print "$at(131,12625,12639)"} true;

    // assume And(WellFormed($t32), Le(Len<u128>(select option::Option.vec($t32)), 1)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:341:17+14
    assume ($IsValid'$1_option_Option'u128''($t32) && (LenVec($t32->$vec) <= 1));

    // assume Eq<0x1::option::Option<u128>>($t32, option::spec_none<u128>()) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:341:17+14
    assume $IsEqual'$1_option_Option'u128''($t32, $1_option_spec_none'u128'());

    // $t32 := opaque end: option::none<u128>() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:341:17+14

    // assume Identical($t33, select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of<#0>())) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.spec.move:192:9+58
    assume {:print "$at(132,9479,9537)"} true;
    assume ($t33 == $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s)->$account_address);

    // $t34 := coin::name<#0>() on_abort goto L16 with $t16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:342:17+16
    assume {:print "$at(131,12658,12674)"} true;
    call $t34 := $1_coin_name'#0'();
    if ($abort_flag) {
        assume {:print "$at(131,12658,12674)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // assume Identical($t35, select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of<#0>())) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.spec.move:192:9+58
    assume {:print "$at(132,9479,9537)"} true;
    assume ($t35 == $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s)->$account_address);

    // $t36 := coin::symbol<#0>() on_abort goto L16 with $t16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:343:17+18
    assume {:print "$at(131,12693,12711)"} true;
    call $t36 := $1_coin_symbol'#0'();
    if ($abort_flag) {
        assume {:print "$at(131,12693,12711)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // assume Identical($t37, select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of<#0>())) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.spec.move:192:9+58
    assume {:print "$at(132,9479,9537)"} true;
    assume ($t37 == $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s)->$account_address);

    // $t38 := coin::decimals<#0>() on_abort goto L16 with $t16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:344:17+20
    assume {:print "$at(131,12730,12750)"} true;
    call $t38 := $1_coin_decimals'#0'();
    if ($abort_flag) {
        assume {:print "$at(131,12730,12750)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // $t39 := [] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:345:30+3
    assume {:print "$at(131,12782,12785)"} true;
    $t39 := $EmptyVec'u8'();
    assume $IsValid'vec'u8''($t39);

    // $t40 := string::utf8($t39) on_abort goto L16 with $t16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:345:17+17
    call $t40 := $1_string_utf8($t39);
    if ($abort_flag) {
        assume {:print "$at(131,12769,12786)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // $t41 := [] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:346:30+3
    assume {:print "$at(131,12818,12821)"} true;
    $t41 := $EmptyVec'u8'();
    assume $IsValid'vec'u8''($t41);

    // $t42 := string::utf8($t41) on_abort goto L16 with $t16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:346:17+17
    call $t42 := $1_string_utf8($t41);
    if ($abort_flag) {
        assume {:print "$at(131,12805,12822)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // primary_fungible_store::create_primary_store_enabled_fungible_asset($t4, $t32, $t34, $t36, $t38, $t40, $t42) on_abort goto L16 with $t16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:339:13+339
    assume {:print "$at(131,12499,12838)"} true;
    call $1_primary_fungible_store_create_primary_store_enabled_fungible_asset($t4, $t32, $t34, $t36, $t38, $t40, $t42);
    if ($abort_flag) {
        assume {:print "$at(131,12499,12838)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // $t43 := object::generate_signer($t4) on_abort goto L16 with $t16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:349:43+46
    assume {:print "$at(131,12885,12931)"} true;
    call $t43 := $1_object_generate_signer($t4);
    if ($abort_flag) {
        assume {:print "$at(131,12885,12931)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // trace_local[$t42]($t43) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:349:43+46
    assume {:print "$track_local(51,33,5):", $t43} $t43 == $t43;

    // trace_local[metadata_object_signer]($t43) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:349:42+47
    assume {:print "$track_local(51,33,6):", $t43} $t43 == $t43;

    // $t44 := type_info::type_of<#0>() on_abort goto L16 with $t16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:350:24+30
    assume {:print "$at(131,12957,12987)"} true;
    if (!(#0_info is $TypeParamStruct)) {
        call $ExecFailureAbort();
    }
    else {
        $t44 := $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s);
    }
    if ($abort_flag) {
        assume {:print "$at(131,12957,12987)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // trace_local[type]($t44) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:350:24+30
    assume {:print "$track_local(51,33,7):", $t44} $t44 == $t44;

    // $t45 := pack 0x1::coin::PairedCoinType($t44) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:351:45+23
    assume {:print "$at(131,13034,13057)"} true;
    $t45 := $1_coin_PairedCoinType($t44);

    // move_to<0x1::coin::PairedCoinType>($t45, $t43) on_abort goto L16 with $t16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:351:13+56
    if ($ResourceExists($1_coin_PairedCoinType_$memory, $t43->$addr)) {
        call $ExecFailureAbort();
    } else {
        $1_coin_PairedCoinType_$memory := $ResourceUpdate($1_coin_PairedCoinType_$memory, $t43->$addr, $t45);
    }
    if ($abort_flag) {
        assume {:print "$at(131,13002,13058)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // $t46 := object::object_from_constructor_ref<0x1::fungible_asset::Metadata>($t4) on_abort goto L16 with $t16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:352:32+58
    assume {:print "$at(131,13092,13150)"} true;
    call $t46 := $1_object_object_from_constructor_ref'$1_fungible_asset_Metadata'($t4);
    if ($abort_flag) {
        assume {:print "$at(131,13092,13150)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // trace_local[metadata_obj]($t46) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:352:32+58
    assume {:print "$track_local(51,33,8):", $t46} $t46 == $t46;

    // $t47 := borrow_field<0x1::coin::CoinConversionMap>.coin_to_fungible_asset_map($t20) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:354:24+35
    assume {:print "$at(131,13178,13213)"} true;
    $t47 := $ChildMutation($t20, 0, $Dereference($t20)->$coin_to_fungible_asset_map);

    // table::add<0x1::type_info::TypeInfo, 0x1::object::Object<0x1::fungible_asset::Metadata>>($t47, $t44, $t46) on_abort goto L16 with $t16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:354:13+67
    call $t47 := $1_table_add'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata''($t47, $t44, $t46);
    if ($abort_flag) {
        assume {:print "$at(131,13167,13234)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // write_back[Reference($t20).coin_to_fungible_asset_map (0x1::table::Table<0x1::type_info::TypeInfo, 0x1::object::Object<0x1::fungible_asset::Metadata>>)]($t47) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:354:13+67
    $t20 := $UpdateMutation($t20, $Update'$1_coin_CoinConversionMap'_coin_to_fungible_asset_map($Dereference($t20), $Dereference($t47)));

    // $t48 := object::object_address<0x1::fungible_asset::Metadata>($t46) on_abort goto L16 with $t16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:357:50+29
    assume {:print "$at(131,13360,13389)"} true;
    call $t48 := $1_object_object_address'$1_fungible_asset_Metadata'($t46);
    if ($abort_flag) {
        assume {:print "$at(131,13360,13389)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // $t49 := pack 0x1::coin::PairCreation($t44, $t48) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:355:25+143
    assume {:print "$at(131,13261,13404)"} true;
    $t49 := $1_coin_PairCreation($t44, $t48);

    // opaque begin: event::emit<0x1::coin::PairCreation>($t49) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:355:13+156

    // opaque end: event::emit<0x1::coin::PairCreation>($t49) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:355:13+156

    // $t50 := fungible_asset::generate_mint_ref($t4) on_abort goto L16 with $t16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:361:28+56
    assume {:print "$at(131,13478,13534)"} true;
    call $t50 := $1_fungible_asset_generate_mint_ref($t4);
    if ($abort_flag) {
        assume {:print "$at(131,13478,13534)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // $t51 := fungible_asset::generate_transfer_ref($t4) on_abort goto L16 with $t16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:362:32+60
    assume {:print "$at(131,13568,13628)"} true;
    call $t51 := $1_fungible_asset_generate_transfer_ref($t4);
    if ($abort_flag) {
        assume {:print "$at(131,13568,13628)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // trace_local[transfer_ref]($t51) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:362:32+60
    assume {:print "$track_local(51,33,9):", $t51} $t51 == $t51;

    // $t52 := fungible_asset::generate_burn_ref($t4) on_abort goto L16 with $t16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:363:28+56
    assume {:print "$at(131,13658,13714)"} true;
    call $t52 := $1_fungible_asset_generate_burn_ref($t4);
    if ($abort_flag) {
        assume {:print "$at(131,13658,13714)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // trace_local[burn_ref]($t52) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:363:28+56
    assume {:print "$track_local(51,33,10):", $t52} $t52 == $t52;

    // $t53 := opaque begin: option::some<0x1::fungible_asset::MintRef>($t50) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:366:35+22
    assume {:print "$at(131,13839,13861)"} true;

    // assume And(WellFormed($t53), Le(Len<0x1::fungible_asset::MintRef>(select option::Option.vec($t53)), 1)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:366:35+22
    assume ($IsValid'$1_option_Option'$1_fungible_asset_MintRef''($t53) && (LenVec($t53->$vec) <= 1));

    // assume Eq<0x1::option::Option<0x1::fungible_asset::MintRef>>($t53, option::spec_some<0x1::fungible_asset::MintRef>($t50)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:366:35+22
    assume $IsEqual'$1_option_Option'$1_fungible_asset_MintRef''($t53, $1_option_spec_some'$1_fungible_asset_MintRef'($t50));

    // $t53 := opaque end: option::some<0x1::fungible_asset::MintRef>($t50) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:366:35+22

    // $t54 := opaque begin: option::some<0x1::fungible_asset::TransferRef>($t51) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:367:39+26
    assume {:print "$at(131,13902,13928)"} true;

    // assume And(WellFormed($t54), Le(Len<0x1::fungible_asset::TransferRef>(select option::Option.vec($t54)), 1)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:367:39+26
    assume ($IsValid'$1_option_Option'$1_fungible_asset_TransferRef''($t54) && (LenVec($t54->$vec) <= 1));

    // assume Eq<0x1::option::Option<0x1::fungible_asset::TransferRef>>($t54, option::spec_some<0x1::fungible_asset::TransferRef>($t51)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:367:39+26
    assume $IsEqual'$1_option_Option'$1_fungible_asset_TransferRef''($t54, $1_option_spec_some'$1_fungible_asset_TransferRef'($t51));

    // $t54 := opaque end: option::some<0x1::fungible_asset::TransferRef>($t51) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:367:39+26

    // $t55 := opaque begin: option::some<0x1::fungible_asset::BurnRef>($t52) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:368:35+22
    assume {:print "$at(131,13965,13987)"} true;

    // assume And(WellFormed($t55), Le(Len<0x1::fungible_asset::BurnRef>(select option::Option.vec($t55)), 1)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:368:35+22
    assume ($IsValid'$1_option_Option'$1_fungible_asset_BurnRef''($t55) && (LenVec($t55->$vec) <= 1));

    // assume Eq<0x1::option::Option<0x1::fungible_asset::BurnRef>>($t55, option::spec_some<0x1::fungible_asset::BurnRef>($t52)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:368:35+22
    assume $IsEqual'$1_option_Option'$1_fungible_asset_BurnRef''($t55, $1_option_spec_some'$1_fungible_asset_BurnRef'($t52));

    // $t55 := opaque end: option::some<0x1::fungible_asset::BurnRef>($t52) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:368:35+22

    // $t56 := pack 0x1::coin::PairedFungibleAssetRefs($t53, $t54, $t55) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:365:17+229
    assume {:print "$at(131,13778,14007)"} true;
    $t56 := $1_coin_PairedFungibleAssetRefs($t53, $t54, $t55);

    // trace_local[$t62]($t56) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:364:13+293
    assume {:print "$at(131,13729,14022)"} true;
    assume {:print "$track_local(51,33,12):", $t56} $t56 == $t56;

    // move_to<0x1::coin::PairedFungibleAssetRefs>($t56, $t43) on_abort goto L16 with $t16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:364:13+293
    if ($ResourceExists($1_coin_PairedFungibleAssetRefs_$memory, $t43->$addr)) {
        call $ExecFailureAbort();
    } else {
        $1_coin_PairedFungibleAssetRefs_$memory := $ResourceUpdate($1_coin_PairedFungibleAssetRefs_$memory, $t43->$addr, $t56);
    }
    if ($abort_flag) {
        assume {:print "$at(131,13729,14022)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // label L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:372:24+31
    assume {:print "$at(131,14060,14091)"} true;
L6:

    // $t57 := get_field<0x1::coin::CoinConversionMap>.coin_to_fungible_asset_map($t20) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:372:24+31
    assume {:print "$at(131,14060,14091)"} true;
    $t57 := $Dereference($t20)->$coin_to_fungible_asset_map;

    // write_back[0x1::coin::CoinConversionMap@]($t20) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:372:24+31
    $1_coin_CoinConversionMap_$memory := $ResourceUpdate($1_coin_CoinConversionMap_$memory, $GlobalLocationAddress($t20),
        $Dereference($t20));

    // $t58 := table::borrow<0x1::type_info::TypeInfo, 0x1::object::Object<0x1::fungible_asset::Metadata>>($t57, $t21) on_abort goto L16 with $t16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:372:10+52
    call $t58 := $1_table_borrow'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata''($t57, $t21);
    if ($abort_flag) {
        assume {:print "$at(131,14046,14098)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // trace_return[0]($t58) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:319:117+2702
    assume {:print "$at(131,11403,14105)"} true;
    assume {:print "$track_return(51,33,0):", $t58} $t58 == $t58;

    // goto L15 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:319:117+2702
    goto L15;

    // label L11 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:335:55+21
    assume {:print "$at(131,12344,12365)"} true;
L11:

    // $t59 := 0xa at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:335:55+21
    assume {:print "$at(131,12344,12365)"} true;
    $t59 := 10;
    assume $IsValid'address'($t59);

    // $t60 := opaque begin: create_signer::create_signer($t59) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:335:26+51

    // assume WellFormed($t60) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:335:26+51
    assume $IsValid'signer'($t60) && $1_signer_is_txn_signer($t60) && $1_signer_is_txn_signer_addr($t60->$addr);

    // assume Eq<address>(signer::$address_of($t60), $t59) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:335:26+51
    assume $IsEqual'address'($1_signer_$address_of($t60), $t59);

    // assume Eq<signer>($t60, create_signer::spec_create_signer($t59)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:335:26+51
    assume $IsEqual'signer'($t60, $1_create_signer_spec_create_signer($t59));

    // $t60 := opaque end: create_signer::create_signer($t59) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:335:26+51

    // trace_local[$t26]($t60) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:335:26+51
    assume {:print "$track_local(51,33,13):", $t60} $t60 == $t60;

    // $t61 := type_info::type_name<#0>() on_abort goto L16 with $t16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:336:41+32
    assume {:print "$at(131,12409,12441)"} true;
    $t61 := $1_string_String($TypeName(#0_info));
    if ($abort_flag) {
        assume {:print "$at(131,12409,12441)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // trace_local[$t31]($t61) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:336:41+32
    assume {:print "$track_local(51,33,14):", $t61} $t61 == $t61;

    // $t62 := string::bytes($t61) on_abort goto L16 with $t16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:336:26+48
    call $t62 := $1_string_bytes($t61);
    if ($abort_flag) {
        assume {:print "$at(131,12394,12442)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // assume Identical($t63, signer::$address_of($t60)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.spec.move:162:9+50
    assume {:print "$at(187,7097,7147)"} true;
    assume ($t63 == $1_signer_$address_of($t60));

    // assume Identical($t64, object::spec_create_object_address($t63, $t62)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\object.spec.move:163:9+65
    assume {:print "$at(187,7157,7222)"} true;
    assume ($t64 == $1_object_spec_create_object_address($t63, $t62));

    // $t65 := object::create_named_object($t60, $t62) on_abort goto L16 with $t16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:334:21+205
    assume {:print "$at(131,12260,12465)"} true;
    call $t65 := $1_object_create_named_object($t60, $t62);
    if ($abort_flag) {
        assume {:print "$at(131,12260,12465)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // $t4 := $t65 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:334:21+205
    $t4 := $t65;

    // trace_local[metadata_object_cref]($t65) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:334:21+205
    assume {:print "$track_local(51,33,4):", $t65} $t65 == $t65;

    // goto L13 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:334:21+205
    goto L13;

    // label L9 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:329:13+6
    assume {:print "$at(131,11949,11955)"} true;
L9:

    // drop($t20) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:329:13+6
    assume {:print "$at(131,11949,11955)"} true;

    // $t66 := 28 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:329:73+27
    $t66 := 28;
    assume $IsValid'u64'($t66);

    // $t67 := error::invalid_state($t66) on_abort goto L16 with $t16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:329:52+49
    call $t67 := $1_error_invalid_state($t66);
    if ($abort_flag) {
        assume {:print "$at(131,11988,12037)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // trace_abort($t67) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:329:13+6
    assume {:print "$at(131,11949,11955)"} true;
    assume {:print "$track_abort(51,33):", $t67} $t67 == $t67;

    // $t16 := move($t67) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:329:13+6
    $t16 := $t67;

    // goto L16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:329:13+6
    goto L16;

    // label L7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:329:32+18
L7:

    // $t68 := false at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:329:32+18
    assume {:print "$at(131,11968,11986)"} true;
    $t68 := false;
    assume $IsValid'bool'($t68);

    // $t3 := $t68 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:329:32+18
    $t3 := $t68;

    // trace_local[$t19]($t68) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:329:32+18
    assume {:print "$track_local(51,33,3):", $t68} $t68 == $t68;

    // goto L14 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:329:32+18
    goto L14;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:324:79+30
    assume {:print "$at(131,11657,11687)"} true;
L2:

    // $t69 := 27 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:324:79+30
    assume {:print "$at(131,11657,11687)"} true;
    $t69 := 27;
    assume $IsValid'u64'($t69);

    // $t70 := error::not_found($t69) on_abort goto L16 with $t16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:324:62+48
    call $t70 := $1_error_not_found($t69);
    if ($abort_flag) {
        assume {:print "$at(131,11640,11688)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // trace_abort($t70) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:324:9+6
    assume {:print "$at(131,11587,11593)"} true;
    assume {:print "$track_abort(51,33):", $t70} $t70 == $t70;

    // $t16 := move($t70) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:324:9+6
    $t16 := $t70;

    // goto L16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:324:9+6
    goto L16;

    // label L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:322:34+32
    assume {:print "$at(131,11532,11564)"} true;
L0:

    // $t71 := 26 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:322:34+32
    assume {:print "$at(131,11532,11564)"} true;
    $t71 := 26;
    assume $IsValid'u64'($t71);

    // $t72 := error::invalid_state($t71) on_abort goto L16 with $t16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:322:13+54
    call $t72 := $1_error_invalid_state($t71);
    if ($abort_flag) {
        assume {:print "$at(131,11511,11565)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // trace_abort($t72) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:320:9+6
    assume {:print "$at(131,11414,11420)"} true;
    assume {:print "$track_abort(51,33):", $t72} $t72 == $t72;

    // $t16 := move($t72) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:320:9+6
    $t16 := $t72;

    // goto L16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:320:9+6
    goto L16;

    // label L15 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:378:5+1
    assume {:print "$at(131,14394,14395)"} true;
L15:

    // return $t58 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:378:5+1
    assume {:print "$at(131,14394,14395)"} true;
    $ret0 := $t58;
    return;

    // label L16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:378:5+1
L16:

    // abort($t16) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:378:5+1
    assume {:print "$at(131,14394,14395)"} true;
    $abort_code := $t16;
    $abort_flag := true;
    return;

}

// fun coin::fungible_asset_to_coin<#0> [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:401:5+696
procedure {:inline 1} $1_coin_fungible_asset_to_coin'#0'(_$t0: $1_fungible_asset_FungibleAsset) returns ($ret0: $1_coin_Coin'#0')
{
    // declare local variables
    var $t1: $1_object_Object'$1_fungible_asset_Metadata';
    var $t2: int;
    var $t3: $1_object_Object'$1_fungible_asset_Metadata';
    var $t4: int;
    var $t5: int;
    var $t6: bool;
    var $t7: $1_coin_PairedCoinType;
    var $t8: $1_type_info_TypeInfo;
    var $t9: $1_type_info_TypeInfo;
    var $t10: bool;
    var $t11: int;
    var $t12: int;
    var $t13: $1_coin_Coin'#0';
    var $t14: int;
    var $t15: int;
    var $t16: int;
    var $t17: int;
    var $t0: $1_fungible_asset_FungibleAsset;
    var $temp_0'$1_coin_Coin'#0'': $1_coin_Coin'#0';
    var $temp_0'$1_fungible_asset_FungibleAsset': $1_fungible_asset_FungibleAsset;
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[fungible_asset]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:401:5+1
    assume {:print "$at(131,15295,15296)"} true;
    assume {:print "$track_local(51,36,0):", $t0} $t0 == $t0;

    // $t3 := fungible_asset::metadata_from_asset($t0) on_abort goto L5 with $t4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:404:53+52
    assume {:print "$at(131,15484,15536)"} true;
    call $t3 := $1_fungible_asset_metadata_from_asset($t0);
    if ($abort_flag) {
        assume {:print "$at(131,15484,15536)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(51,36):", $t4} $t4 == $t4;
        goto L5;
    }

    // trace_local[$t4]($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:404:53+52
    assume {:print "$track_local(51,36,1):", $t3} $t3 == $t3;

    // $t5 := object::object_address<0x1::fungible_asset::Metadata>($t3) on_abort goto L5 with $t4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:404:29+77
    call $t5 := $1_object_object_address'$1_fungible_asset_Metadata'($t3);
    if ($abort_flag) {
        assume {:print "$at(131,15460,15537)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(51,36):", $t4} $t4 == $t4;
        goto L5;
    }

    // trace_local[metadata_addr]($t5) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:404:29+77
    assume {:print "$track_local(51,36,2):", $t5} $t5 == $t5;

    // $t6 := object::object_exists<0x1::coin::PairedCoinType>($t5) on_abort goto L5 with $t4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:406:13+52
    assume {:print "$at(131,15570,15622)"} true;
    call $t6 := $1_object_object_exists'$1_coin_PairedCoinType'($t5);
    if ($abort_flag) {
        assume {:print "$at(131,15570,15622)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(51,36):", $t4} $t4 == $t4;
        goto L5;
    }

    // if ($t6) goto L1 else goto L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:405:9+6
    assume {:print "$at(131,15548,15554)"} true;
    if ($t6) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:409:30+44
    assume {:print "$at(131,15710,15754)"} true;
L1:

    // $t7 := get_global<0x1::coin::PairedCoinType>($t5) on_abort goto L5 with $t4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:409:30+44
    assume {:print "$at(131,15710,15754)"} true;
    if (!$ResourceExists($1_coin_PairedCoinType_$memory, $t5)) {
        call $ExecFailureAbort();
    } else {
        $t7 := $ResourceValue($1_coin_PairedCoinType_$memory, $t5);
    }
    if ($abort_flag) {
        assume {:print "$at(131,15710,15754)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(51,36):", $t4} $t4 == $t4;
        goto L5;
    }

    // $t8 := get_field<0x1::coin::PairedCoinType>.type($t7) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:409:30+49
    $t8 := $t7->$type;

    // $t9 := type_info::type_of<#0>() on_abort goto L5 with $t4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:410:35+30
    assume {:print "$at(131,15796,15826)"} true;
    if (!(#0_info is $TypeParamStruct)) {
        call $ExecFailureAbort();
    }
    else {
        $t9 := $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s);
    }
    if ($abort_flag) {
        assume {:print "$at(131,15796,15826)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(51,36):", $t4} $t4 == $t4;
        goto L5;
    }

    // $t10 := ==($t8, $t9) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:410:17+48
    $t10 := $IsEqual'$1_type_info_TypeInfo'($t8, $t9);

    // if ($t10) goto L3 else goto L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:410:9+6
    if ($t10) { goto L3; } else { goto L2; }

    // label L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:411:22+45
    assume {:print "$at(131,15897,15942)"} true;
L3:

    // $t11 := fungible_asset::burn_internal($t0) on_abort goto L5 with $t4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:411:22+45
    assume {:print "$at(131,15897,15942)"} true;
    call $t11 := $1_fungible_asset_burn_internal($t0);
    if ($abort_flag) {
        assume {:print "$at(131,15897,15942)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(51,36):", $t4} $t4 == $t4;
        goto L5;
    }

    // assume Identical($t12, select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of<#0>())) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.spec.move:109:9+58
    assume {:print "$at(132,6230,6288)"} true;
    assume ($t12 == $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s)->$account_address);

    // $t13 := coin::mint_internal<#0>($t11) on_abort goto L5 with $t4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:412:9+31
    assume {:print "$at(131,15953,15984)"} true;
    call $t13 := $1_coin_mint_internal'#0'($t11);
    if ($abort_flag) {
        assume {:print "$at(131,15953,15984)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(51,36):", $t4} $t4 == $t4;
        goto L5;
    }

    // trace_return[0]($t13) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:403:57+562
    assume {:print "$at(131,15429,15991)"} true;
    assume {:print "$track_return(51,36,0):", $t13} $t13 == $t13;

    // goto L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:403:57+562
    goto L4;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:410:91+19
    assume {:print "$at(131,15852,15871)"} true;
L2:

    // $t14 := 17 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:410:91+19
    assume {:print "$at(131,15852,15871)"} true;
    $t14 := 17;
    assume $IsValid'u64'($t14);

    // $t15 := error::invalid_argument($t14) on_abort goto L5 with $t4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:410:67+44
    call $t15 := $1_error_invalid_argument($t14);
    if ($abort_flag) {
        assume {:print "$at(131,15828,15872)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(51,36):", $t4} $t4 == $t4;
        goto L5;
    }

    // trace_abort($t15) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:410:9+6
    assume {:print "$at(131,15770,15776)"} true;
    assume {:print "$track_abort(51,36):", $t15} $t15 == $t15;

    // $t4 := move($t15) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:410:9+6
    $t4 := $t15;

    // goto L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:410:9+6
    goto L5;

    // label L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:407:30+12
    assume {:print "$at(131,15654,15666)"} true;
L0:

    // $t16 := 15 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:407:30+12
    assume {:print "$at(131,15654,15666)"} true;
    $t16 := 15;
    assume $IsValid'u64'($t16);

    // $t17 := error::not_found($t16) on_abort goto L5 with $t4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:407:13+30
    call $t17 := $1_error_not_found($t16);
    if ($abort_flag) {
        assume {:print "$at(131,15637,15667)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(51,36):", $t4} $t4 == $t4;
        goto L5;
    }

    // trace_abort($t17) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:405:9+6
    assume {:print "$at(131,15548,15554)"} true;
    assume {:print "$track_abort(51,36):", $t17} $t17 == $t17;

    // $t4 := move($t17) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:405:9+6
    $t4 := $t17;

    // goto L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:405:9+6
    goto L5;

    // label L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:413:5+1
    assume {:print "$at(131,15990,15991)"} true;
L4:

    // return $t13 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:413:5+1
    assume {:print "$at(131,15990,15991)"} true;
    $ret0 := $t13;
    return;

    // label L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:413:5+1
L5:

    // abort($t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:413:5+1
    assume {:print "$at(131,15990,15991)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun coin::is_account_registered<0x1::aptos_coin::AptosCoin> [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:728:5+473
procedure {:inline 1} $1_coin_is_account_registered'$1_aptos_coin_AptosCoin'(_$t0: int) returns ($ret0: bool)
{
    // declare local variables
    var $t1: bool;
    var $t2: int;
    var $t3: $1_object_Object'$1_fungible_asset_Metadata';
    var $t4: bool;
    var $t5: bool;
    var $t6: int;
    var $t7: bool;
    var $t8: bool;
    var $t9: $1_object_Object'$1_fungible_asset_Metadata';
    var $t10: bool;
    var $t11: bool;
    var $t12: bool;
    var $t13: int;
    var $t14: bool;
    var $t15: bool;
    var $t16: int;
    var $t17: int;
    var $t18: bool;
    var $t19: bool;
    var $t20: int;
    var $t21: int;
    var $t0: int;
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[account_addr]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:728:5+1
    assume {:print "$at(131,30987,30988)"} true;
    assume {:print "$track_local(51,42,0):", $t0} $t0 == $t0;

    // $t5 := coin::is_coin_initialized<#0>() on_abort goto L13 with $t6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:729:17+31
    assume {:print "$at(131,31115,31146)"} true;
    call $t5 := $1_coin_is_coin_initialized'$1_aptos_coin_AptosCoin'();
    if ($abort_flag) {
        assume {:print "$at(131,31115,31146)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(51,42):", $t6} $t6 == $t6;
        goto L13;
    }

    // if ($t5) goto L1 else goto L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:729:9+6
    if ($t5) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:730:13+41
    assume {:print "$at(131,31213,31254)"} true;
L1:

    // $t7 := exists<0x1::coin::CoinStore<#0>>($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:730:13+41
    assume {:print "$at(131,31213,31254)"} true;
    $t7 := $ResourceExists($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t0);

    // if ($t7) goto L3 else goto L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:730:9+244
    if ($t7) { goto L3; } else { goto L2; }

    // label L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:731:13+4
    assume {:print "$at(131,31271,31275)"} true;
L3:

    // $t8 := true at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:731:13+4
    assume {:print "$at(131,31271,31275)"} true;
    $t8 := true;
    assume $IsValid'bool'($t8);

    // $t1 := $t8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:731:13+4
    $t1 := $t8;

    // trace_local[$t2]($t8) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:731:13+4
    assume {:print "$track_local(51,42,1):", $t8} $t8 == $t8;

    // label L8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:728:114+364
    assume {:print "$at(131,31096,31460)"} true;
L8:

    // trace_return[0]($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:728:114+364
    assume {:print "$at(131,31096,31460)"} true;
    assume {:print "$track_return(51,42,0):", $t1} $t1 == $t1;

    // goto L12 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:728:114+364
    goto L12;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:733:35+34
    assume {:print "$at(131,31329,31363)"} true;
L2:

    // $t9 := coin::ensure_paired_metadata<#0>() on_abort goto L13 with $t6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:733:35+34
    assume {:print "$at(131,31329,31363)"} true;
    call $t9 := $1_coin_ensure_paired_metadata'$1_aptos_coin_AptosCoin'();
    if ($abort_flag) {
        assume {:print "$at(131,31329,31363)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(51,42):", $t6} $t6 == $t6;
        goto L13;
    }

    // trace_local[account_address]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:900:16+33
    assume {:print "$at(131,38232,38265)"} true;
    assume {:print "$track_local(51,42,2):", $t0} $t0 == $t0;

    // trace_local[metadata]($t9) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:900:16+33
    assume {:print "$track_local(51,42,3):", $t9} $t9 == $t9;

    // $t10 := features::new_accounts_default_to_fa_store_enabled() on_abort goto L13 with $t6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:9+52
    assume {:print "$at(131,38362,38414)"} true;
    call $t10 := $1_features_new_accounts_default_to_fa_store_enabled();
    if ($abort_flag) {
        assume {:print "$at(131,38362,38414)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(51,42):", $t6} $t6 == $t6;
        goto L13;
    }

    // if ($t10) goto L5 else goto L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:9+159
    if ($t10) { goto L5; } else { goto L4; }

    // label L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:9+159
L5:

    // $t11 := true at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:9+159
    assume {:print "$at(131,38362,38521)"} true;
    $t11 := true;
    assume $IsValid'bool'($t11);

    // $t4 := $t11 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:9+159
    $t4 := $t11;

    // trace_local[$t10]($t11) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:9+159
    assume {:print "$track_local(51,42,4):", $t11} $t11 == $t11;

    // label L11 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:9+414
L11:

    // if ($t4) goto L7 else goto L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:9+414
    assume {:print "$at(131,38362,38776)"} true;
    if ($t4) { goto L7; } else { goto L6; }

    // label L7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:9+414
L7:

    // $t12 := true at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:9+414
    assume {:print "$at(131,38362,38776)"} true;
    $t12 := true;
    assume $IsValid'bool'($t12);

    // $t1 := $t12 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:9+414
    $t1 := $t12;

    // trace_local[$t2]($t12) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:9+414
    assume {:print "$track_local(51,42,1):", $t12} $t12 == $t12;

    // goto L8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:9+414
    goto L8;

    // label L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:906:17+15
    assume {:print "$at(131,38642,38657)"} true;
L6:

    // $t13 := primary_fungible_store::primary_store_address<0x1::fungible_asset::Metadata>($t0, $t9) on_abort goto L13 with $t6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:905:41+131
    assume {:print "$at(131,38568,38699)"} true;
    call $t13 := $1_primary_fungible_store_primary_store_address'$1_fungible_asset_Metadata'($t0, $t9);
    if ($abort_flag) {
        assume {:print "$at(131,38568,38699)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(51,42):", $t6} $t6 == $t6;
        goto L13;
    }

    // $t14 := fungible_asset::store_exists($t13) on_abort goto L13 with $t6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:909:13+51
    assume {:print "$at(131,38714,38765)"} true;
    call $t14 := $1_fungible_asset_store_exists($t13);
    if ($abort_flag) {
        assume {:print "$at(131,38714,38765)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(51,42):", $t6} $t6 == $t6;
        goto L13;
    }

    // $t1 := $t14 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:909:13+51
    $t1 := $t14;

    // trace_local[$t2]($t14) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:909:13+51
    assume {:print "$track_local(51,42,1):", $t14} $t14 == $t14;

    // goto L8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:909:13+51
    goto L8;

    // label L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:66+56
    assume {:print "$at(131,38419,38475)"} true;
L4:

    // $t15 := features::new_accounts_default_to_fa_apt_store_enabled() on_abort goto L13 with $t6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:66+56
    assume {:print "$at(131,38419,38475)"} true;
    call $t15 := $1_features_new_accounts_default_to_fa_apt_store_enabled();
    if ($abort_flag) {
        assume {:print "$at(131,38419,38475)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(51,42):", $t6} $t6 == $t6;
        goto L13;
    }

    // if ($t15) goto L10 else goto L9 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:65+103
    if ($t15) { goto L10; } else { goto L9; }

    // label L10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:149+9
L10:

    // $t16 := object::object_address<0x1::fungible_asset::Metadata>($t9) on_abort goto L13 with $t6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:126+33
    assume {:print "$at(131,38479,38512)"} true;
    call $t16 := $1_object_object_address'$1_fungible_asset_Metadata'($t9);
    if ($abort_flag) {
        assume {:print "$at(131,38479,38512)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(51,42):", $t6} $t6 == $t6;
        goto L13;
    }

    // $t17 := 0xa at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:163+4
    $t17 := 10;
    assume $IsValid'address'($t17);

    // $t18 := ==($t16, $t17) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:126+41
    $t18 := $IsEqual'address'($t16, $t17);

    // $t4 := $t18 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:126+41
    $t4 := $t18;

    // trace_local[$t10]($t18) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:126+41
    assume {:print "$track_local(51,42,4):", $t18} $t18 == $t18;

    // goto L11 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:65+103
    goto L11;

    // label L9 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:65+103
L9:

    // $t19 := false at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:65+103
    assume {:print "$at(131,38418,38521)"} true;
    $t19 := false;
    assume $IsValid'bool'($t19);

    // $t4 := $t19 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:65+103
    $t4 := $t19;

    // trace_local[$t10]($t19) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:65+103
    assume {:print "$track_local(51,42,4):", $t19} $t19 == $t19;

    // goto L11 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:65+103
    goto L11;

    // label L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:729:74+24
    assume {:print "$at(131,31172,31196)"} true;
L0:

    // $t20 := 3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:729:74+24
    assume {:print "$at(131,31172,31196)"} true;
    $t20 := 3;
    assume $IsValid'u64'($t20);

    // $t21 := error::invalid_argument($t20) on_abort goto L13 with $t6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:729:50+49
    call $t21 := $1_error_invalid_argument($t20);
    if ($abort_flag) {
        assume {:print "$at(131,31148,31197)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(51,42):", $t6} $t6 == $t6;
        goto L13;
    }

    // trace_abort($t21) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:729:9+6
    assume {:print "$at(131,31107,31113)"} true;
    assume {:print "$track_abort(51,42):", $t21} $t21 == $t21;

    // $t6 := move($t21) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:729:9+6
    $t6 := $t21;

    // goto L13 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:729:9+6
    goto L13;

    // label L12 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:736:5+1
    assume {:print "$at(131,31459,31460)"} true;
L12:

    // return $t1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:736:5+1
    assume {:print "$at(131,31459,31460)"} true;
    $ret0 := $t1;
    return;

    // label L13 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:736:5+1
L13:

    // abort($t6) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:736:5+1
    assume {:print "$at(131,31459,31460)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}

// fun coin::is_account_registered<#0> [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:728:5+473
procedure {:inline 1} $1_coin_is_account_registered'#0'(_$t0: int) returns ($ret0: bool)
{
    // declare local variables
    var $t1: bool;
    var $t2: int;
    var $t3: $1_object_Object'$1_fungible_asset_Metadata';
    var $t4: bool;
    var $t5: bool;
    var $t6: int;
    var $t7: bool;
    var $t8: bool;
    var $t9: $1_object_Object'$1_fungible_asset_Metadata';
    var $t10: bool;
    var $t11: bool;
    var $t12: bool;
    var $t13: int;
    var $t14: bool;
    var $t15: bool;
    var $t16: int;
    var $t17: int;
    var $t18: bool;
    var $t19: bool;
    var $t20: int;
    var $t21: int;
    var $t0: int;
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[account_addr]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:728:5+1
    assume {:print "$at(131,30987,30988)"} true;
    assume {:print "$track_local(51,42,0):", $t0} $t0 == $t0;

    // $t5 := coin::is_coin_initialized<#0>() on_abort goto L13 with $t6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:729:17+31
    assume {:print "$at(131,31115,31146)"} true;
    call $t5 := $1_coin_is_coin_initialized'#0'();
    if ($abort_flag) {
        assume {:print "$at(131,31115,31146)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(51,42):", $t6} $t6 == $t6;
        goto L13;
    }

    // if ($t5) goto L1 else goto L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:729:9+6
    if ($t5) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:730:13+41
    assume {:print "$at(131,31213,31254)"} true;
L1:

    // $t7 := exists<0x1::coin::CoinStore<#0>>($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:730:13+41
    assume {:print "$at(131,31213,31254)"} true;
    $t7 := $ResourceExists($1_coin_CoinStore'#0'_$memory, $t0);

    // if ($t7) goto L3 else goto L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:730:9+244
    if ($t7) { goto L3; } else { goto L2; }

    // label L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:731:13+4
    assume {:print "$at(131,31271,31275)"} true;
L3:

    // $t8 := true at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:731:13+4
    assume {:print "$at(131,31271,31275)"} true;
    $t8 := true;
    assume $IsValid'bool'($t8);

    // $t1 := $t8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:731:13+4
    $t1 := $t8;

    // trace_local[$t2]($t8) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:731:13+4
    assume {:print "$track_local(51,42,1):", $t8} $t8 == $t8;

    // label L8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:728:114+364
    assume {:print "$at(131,31096,31460)"} true;
L8:

    // trace_return[0]($t1) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:728:114+364
    assume {:print "$at(131,31096,31460)"} true;
    assume {:print "$track_return(51,42,0):", $t1} $t1 == $t1;

    // goto L12 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:728:114+364
    goto L12;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:733:35+34
    assume {:print "$at(131,31329,31363)"} true;
L2:

    // $t9 := coin::ensure_paired_metadata<#0>() on_abort goto L13 with $t6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:733:35+34
    assume {:print "$at(131,31329,31363)"} true;
    call $t9 := $1_coin_ensure_paired_metadata'#0'();
    if ($abort_flag) {
        assume {:print "$at(131,31329,31363)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(51,42):", $t6} $t6 == $t6;
        goto L13;
    }

    // trace_local[account_address]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:900:16+33
    assume {:print "$at(131,38232,38265)"} true;
    assume {:print "$track_local(51,42,2):", $t0} $t0 == $t0;

    // trace_local[metadata]($t9) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:900:16+33
    assume {:print "$track_local(51,42,3):", $t9} $t9 == $t9;

    // $t10 := features::new_accounts_default_to_fa_store_enabled() on_abort goto L13 with $t6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:9+52
    assume {:print "$at(131,38362,38414)"} true;
    call $t10 := $1_features_new_accounts_default_to_fa_store_enabled();
    if ($abort_flag) {
        assume {:print "$at(131,38362,38414)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(51,42):", $t6} $t6 == $t6;
        goto L13;
    }

    // if ($t10) goto L5 else goto L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:9+159
    if ($t10) { goto L5; } else { goto L4; }

    // label L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:9+159
L5:

    // $t11 := true at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:9+159
    assume {:print "$at(131,38362,38521)"} true;
    $t11 := true;
    assume $IsValid'bool'($t11);

    // $t4 := $t11 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:9+159
    $t4 := $t11;

    // trace_local[$t10]($t11) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:9+159
    assume {:print "$track_local(51,42,4):", $t11} $t11 == $t11;

    // label L11 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:9+414
L11:

    // if ($t4) goto L7 else goto L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:9+414
    assume {:print "$at(131,38362,38776)"} true;
    if ($t4) { goto L7; } else { goto L6; }

    // label L7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:9+414
L7:

    // $t12 := true at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:9+414
    assume {:print "$at(131,38362,38776)"} true;
    $t12 := true;
    assume $IsValid'bool'($t12);

    // $t1 := $t12 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:9+414
    $t1 := $t12;

    // trace_local[$t2]($t12) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:9+414
    assume {:print "$track_local(51,42,1):", $t12} $t12 == $t12;

    // goto L8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:9+414
    goto L8;

    // label L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:906:17+15
    assume {:print "$at(131,38642,38657)"} true;
L6:

    // $t13 := primary_fungible_store::primary_store_address<0x1::fungible_asset::Metadata>($t0, $t9) on_abort goto L13 with $t6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:905:41+131
    assume {:print "$at(131,38568,38699)"} true;
    call $t13 := $1_primary_fungible_store_primary_store_address'$1_fungible_asset_Metadata'($t0, $t9);
    if ($abort_flag) {
        assume {:print "$at(131,38568,38699)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(51,42):", $t6} $t6 == $t6;
        goto L13;
    }

    // $t14 := fungible_asset::store_exists($t13) on_abort goto L13 with $t6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:909:13+51
    assume {:print "$at(131,38714,38765)"} true;
    call $t14 := $1_fungible_asset_store_exists($t13);
    if ($abort_flag) {
        assume {:print "$at(131,38714,38765)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(51,42):", $t6} $t6 == $t6;
        goto L13;
    }

    // $t1 := $t14 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:909:13+51
    $t1 := $t14;

    // trace_local[$t2]($t14) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:909:13+51
    assume {:print "$track_local(51,42,1):", $t14} $t14 == $t14;

    // goto L8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:909:13+51
    goto L8;

    // label L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:66+56
    assume {:print "$at(131,38419,38475)"} true;
L4:

    // $t15 := features::new_accounts_default_to_fa_apt_store_enabled() on_abort goto L13 with $t6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:66+56
    assume {:print "$at(131,38419,38475)"} true;
    call $t15 := $1_features_new_accounts_default_to_fa_apt_store_enabled();
    if ($abort_flag) {
        assume {:print "$at(131,38419,38475)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(51,42):", $t6} $t6 == $t6;
        goto L13;
    }

    // if ($t15) goto L10 else goto L9 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:65+103
    if ($t15) { goto L10; } else { goto L9; }

    // label L10 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:149+9
L10:

    // $t16 := object::object_address<0x1::fungible_asset::Metadata>($t9) on_abort goto L13 with $t6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:126+33
    assume {:print "$at(131,38479,38512)"} true;
    call $t16 := $1_object_object_address'$1_fungible_asset_Metadata'($t9);
    if ($abort_flag) {
        assume {:print "$at(131,38479,38512)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(51,42):", $t6} $t6 == $t6;
        goto L13;
    }

    // $t17 := 0xa at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:163+4
    $t17 := 10;
    assume $IsValid'address'($t17);

    // $t18 := ==($t16, $t17) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:126+41
    $t18 := $IsEqual'address'($t16, $t17);

    // $t4 := $t18 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:126+41
    $t4 := $t18;

    // trace_local[$t10]($t18) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:126+41
    assume {:print "$track_local(51,42,4):", $t18} $t18 == $t18;

    // goto L11 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:65+103
    goto L11;

    // label L9 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:65+103
L9:

    // $t19 := false at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:65+103
    assume {:print "$at(131,38418,38521)"} true;
    $t19 := false;
    assume $IsValid'bool'($t19);

    // $t4 := $t19 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:65+103
    $t4 := $t19;

    // trace_local[$t10]($t19) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:65+103
    assume {:print "$track_local(51,42,4):", $t19} $t19 == $t19;

    // goto L11 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:904:65+103
    goto L11;

    // label L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:729:74+24
    assume {:print "$at(131,31172,31196)"} true;
L0:

    // $t20 := 3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:729:74+24
    assume {:print "$at(131,31172,31196)"} true;
    $t20 := 3;
    assume $IsValid'u64'($t20);

    // $t21 := error::invalid_argument($t20) on_abort goto L13 with $t6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:729:50+49
    call $t21 := $1_error_invalid_argument($t20);
    if ($abort_flag) {
        assume {:print "$at(131,31148,31197)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(51,42):", $t6} $t6 == $t6;
        goto L13;
    }

    // trace_abort($t21) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:729:9+6
    assume {:print "$at(131,31107,31113)"} true;
    assume {:print "$track_abort(51,42):", $t21} $t21 == $t21;

    // $t6 := move($t21) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:729:9+6
    $t6 := $t21;

    // goto L13 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:729:9+6
    goto L13;

    // label L12 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:736:5+1
    assume {:print "$at(131,31459,31460)"} true;
L12:

    // return $t1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:736:5+1
    assume {:print "$at(131,31459,31460)"} true;
    $ret0 := $t1;
    return;

    // label L13 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:736:5+1
L13:

    // abort($t6) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:736:5+1
    assume {:print "$at(131,31459,31460)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}

// fun coin::is_coin_initialized<0x1::aptos_coin::AptosCoin> [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:709:5+119
procedure {:inline 1} $1_coin_is_coin_initialized'$1_aptos_coin_AptosCoin'() returns ($ret0: bool)
{
    // declare local variables
    var $t0: int;
    var $t1: bool;
    var $t2: int;
    var $t3: bool;
    var $temp_0'bool': bool;
    var $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory#171: $Memory $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin';
    var $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory#172: $Memory $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin';
    var $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory#173: $Memory $1_coin_CoinInfo'$1_aptos_coin_AptosCoin';

    // bytecode translation starts here
    // $t0 := opaque begin: coin::coin_address<#0>() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:710:36+24
    assume {:print "$at(131,30388,30412)"} true;

    // $t1 := havoc[val]() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:710:36+24
    havoc $t1;

    // if ($t1) goto L4 else goto L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:710:36+24
    if ($t1) { goto L4; } else { goto L3; }

    // label L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:710:36+24
L4:

    // trace_abort($t2) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:710:36+24
    assume {:print "$at(131,30388,30412)"} true;
    assume {:print "$track_abort(51,43):", $t2} $t2 == $t2;

    // goto L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:710:36+24
    goto L2;

    // label L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:710:36+24
L3:

    // @173 := save_mem(coin::CoinInfo<#0>) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:710:36+24
    assume {:print "$at(131,30388,30412)"} true;
    $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory#173 := $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory;

    // @171 := save_mem(coin::supply<#0>) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:710:36+24
    $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory#171 := $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory;

    // @172 := save_mem(coin::aggregate_supply<#0>) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:710:36+24
    $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory#172 := $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory;

    // assume WellFormed($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:710:36+24
    assume $IsValid'address'($t0);

    // assume Implies(coin::spec_fun_supply_tracked[]<#0>(Add(select coin::Ghost$supply.v<#0>(global[@171]<0x1::coin::Ghost$supply<#0>>(0x0)), select coin::Ghost$aggregate_supply.v<#0>(global[@172]<0x1::coin::Ghost$aggregate_supply<#0>>(0x0))), select coin::CoinInfo.supply<0x1::coin::CoinInfo<#0>>(global[@173]<0x1::coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of[]<#0>())))), coin::spec_fun_supply_tracked<#0>(Add(select coin::Ghost$supply.v<#0>(global<0x1::coin::Ghost$supply<#0>>(0x0)), select coin::Ghost$aggregate_supply.v<#0>(global<0x1::coin::Ghost$aggregate_supply<#0>>(0x0))), select coin::CoinInfo.supply<0x1::coin::CoinInfo<#0>>(global<0x1::coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of<#0>()))))) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:710:36+24
    assume ($1_coin_spec_fun_supply_tracked'$1_aptos_coin_AptosCoin'(($ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory#171, 0)->$v + $ResourceValue($1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory#172, 0)->$v), $ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory#173, $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))->$account_address)->$supply) ==> $1_coin_spec_fun_supply_tracked'$1_aptos_coin_AptosCoin'(($ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, 0)->$v + $ResourceValue($1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory, 0)->$v), $ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))->$account_address)->$supply));

    // assume Eq<address>($t0, select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of<#0>())) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:710:36+24
    assume $IsEqual'address'($t0, $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))->$account_address);

    // $t0 := opaque end: coin::coin_address<#0>() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:710:36+24

    // $t3 := exists<0x1::coin::CoinInfo<#0>>($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:710:9+52
    $t3 := $ResourceExists($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $t0);

    // trace_return[0]($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:710:9+52
    assume {:print "$track_return(51,43,0):", $t3} $t3 == $t3;

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:711:5+1
    assume {:print "$at(131,30419,30420)"} true;
L1:

    // return $t3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:711:5+1
    assume {:print "$at(131,30419,30420)"} true;
    $ret0 := $t3;
    return;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:711:5+1
L2:

    // abort($t2) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:711:5+1
    assume {:print "$at(131,30419,30420)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun coin::is_coin_initialized<#0> [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:709:5+119
procedure {:inline 1} $1_coin_is_coin_initialized'#0'() returns ($ret0: bool)
{
    // declare local variables
    var $t0: int;
    var $t1: bool;
    var $t2: int;
    var $t3: bool;
    var $temp_0'bool': bool;
    var $1_coin_Ghost$supply'#0'_$memory#171: $Memory $1_coin_Ghost$supply'#0';
    var $1_coin_Ghost$aggregate_supply'#0'_$memory#172: $Memory $1_coin_Ghost$aggregate_supply'#0';
    var $1_coin_CoinInfo'#0'_$memory#173: $Memory $1_coin_CoinInfo'#0';

    // bytecode translation starts here
    // $t0 := opaque begin: coin::coin_address<#0>() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:710:36+24
    assume {:print "$at(131,30388,30412)"} true;

    // $t1 := havoc[val]() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:710:36+24
    havoc $t1;

    // if ($t1) goto L4 else goto L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:710:36+24
    if ($t1) { goto L4; } else { goto L3; }

    // label L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:710:36+24
L4:

    // trace_abort($t2) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:710:36+24
    assume {:print "$at(131,30388,30412)"} true;
    assume {:print "$track_abort(51,43):", $t2} $t2 == $t2;

    // goto L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:710:36+24
    goto L2;

    // label L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:710:36+24
L3:

    // @173 := save_mem(coin::CoinInfo<#0>) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:710:36+24
    assume {:print "$at(131,30388,30412)"} true;
    $1_coin_CoinInfo'#0'_$memory#173 := $1_coin_CoinInfo'#0'_$memory;

    // @171 := save_mem(coin::supply<#0>) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:710:36+24
    $1_coin_Ghost$supply'#0'_$memory#171 := $1_coin_Ghost$supply'#0'_$memory;

    // @172 := save_mem(coin::aggregate_supply<#0>) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:710:36+24
    $1_coin_Ghost$aggregate_supply'#0'_$memory#172 := $1_coin_Ghost$aggregate_supply'#0'_$memory;

    // assume WellFormed($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:710:36+24
    assume $IsValid'address'($t0);

    // assume Implies(coin::spec_fun_supply_tracked[]<#0>(Add(select coin::Ghost$supply.v<#0>(global[@171]<0x1::coin::Ghost$supply<#0>>(0x0)), select coin::Ghost$aggregate_supply.v<#0>(global[@172]<0x1::coin::Ghost$aggregate_supply<#0>>(0x0))), select coin::CoinInfo.supply<0x1::coin::CoinInfo<#0>>(global[@173]<0x1::coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of[]<#0>())))), coin::spec_fun_supply_tracked<#0>(Add(select coin::Ghost$supply.v<#0>(global<0x1::coin::Ghost$supply<#0>>(0x0)), select coin::Ghost$aggregate_supply.v<#0>(global<0x1::coin::Ghost$aggregate_supply<#0>>(0x0))), select coin::CoinInfo.supply<0x1::coin::CoinInfo<#0>>(global<0x1::coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of<#0>()))))) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:710:36+24
    assume ($1_coin_spec_fun_supply_tracked'#0'(($ResourceValue($1_coin_Ghost$supply'#0'_$memory#171, 0)->$v + $ResourceValue($1_coin_Ghost$aggregate_supply'#0'_$memory#172, 0)->$v), $ResourceValue($1_coin_CoinInfo'#0'_$memory#173, $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s)->$account_address)->$supply) ==> $1_coin_spec_fun_supply_tracked'#0'(($ResourceValue($1_coin_Ghost$supply'#0'_$memory, 0)->$v + $ResourceValue($1_coin_Ghost$aggregate_supply'#0'_$memory, 0)->$v), $ResourceValue($1_coin_CoinInfo'#0'_$memory, $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s)->$account_address)->$supply));

    // assume Eq<address>($t0, select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of<#0>())) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:710:36+24
    assume $IsEqual'address'($t0, $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s)->$account_address);

    // $t0 := opaque end: coin::coin_address<#0>() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:710:36+24

    // $t3 := exists<0x1::coin::CoinInfo<#0>>($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:710:9+52
    $t3 := $ResourceExists($1_coin_CoinInfo'#0'_$memory, $t0);

    // trace_return[0]($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:710:9+52
    assume {:print "$track_return(51,43,0):", $t3} $t3 == $t3;

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:711:5+1
    assume {:print "$at(131,30419,30420)"} true;
L1:

    // return $t3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:711:5+1
    assume {:print "$at(131,30419,30420)"} true;
    $ret0 := $t3;
    return;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:711:5+1
L2:

    // abort($t2) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:711:5+1
    assume {:print "$at(131,30419,30420)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun coin::paired_metadata<#0> [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:286:5+555
procedure {:inline 1} $1_coin_paired_metadata'#0'() returns ($ret0: $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'')
{
    // declare local variables
    var $t0: bool;
    var $t1: Table int ($1_object_Object'$1_fungible_asset_Metadata');
    var $t2: $1_type_info_TypeInfo;
    var $t3: int;
    var $t4: bool;
    var $t5: bool;
    var $t6: int;
    var $t7: int;
    var $t8: $1_coin_CoinConversionMap;
    var $t9: Table int ($1_object_Object'$1_fungible_asset_Metadata');
    var $t10: $1_type_info_TypeInfo;
    var $t11: bool;
    var $t12: $1_object_Object'$1_fungible_asset_Metadata';
    var $t13: $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'';
    var $t14: $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'';
    var $t15: $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'';
    var $t16: bool;
    var $temp_0'$1_option_Option'$1_object_Object'$1_fungible_asset_Metadata''': $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'';
    var $temp_0'$1_table_Table'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata''': Table int ($1_object_Object'$1_fungible_asset_Metadata');
    var $temp_0'$1_type_info_TypeInfo': $1_type_info_TypeInfo;
    var $temp_0'bool': bool;

    // bytecode translation starts here
    // $t3 := 0x1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:287:39+16
    assume {:print "$at(131,10030,10046)"} true;
    $t3 := 1;
    assume $IsValid'address'($t3);

    // $t4 := exists<0x1::coin::CoinConversionMap>($t3) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:287:13+43
    $t4 := $ResourceExists($1_coin_CoinConversionMap_$memory, $t3);

    // if ($t4) goto L1 else goto L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:287:13+117
    if ($t4) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:287:60+70
L1:

    // $t5 := features::coin_to_fungible_asset_migration_feature_enabled() on_abort goto L9 with $t6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:287:60+70
    assume {:print "$at(131,10051,10121)"} true;
    call $t5 := $1_features_coin_to_fungible_asset_migration_feature_enabled();
    if ($abort_flag) {
        assume {:print "$at(131,10051,10121)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(51,50):", $t6} $t6 == $t6;
        goto L9;
    }

    // $t0 := $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:287:60+70
    $t0 := $t5;

    // trace_local[$t2]($t5) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:287:60+70
    assume {:print "$track_local(51,50,0):", $t5} $t5 == $t5;

    // label L7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:287:9+420
L7:

    // if ($t0) goto L2 else goto L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:287:9+420
    assume {:print "$at(131,10000,10420)"} true;
    if ($t0) { goto L2; } else { goto L4; }

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:289:57+16
    assume {:print "$at(131,10182,10198)"} true;
L2:

    // $t7 := 0x1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:289:57+16
    assume {:print "$at(131,10182,10198)"} true;
    $t7 := 1;
    assume $IsValid'address'($t7);

    // $t8 := get_global<0x1::coin::CoinConversionMap>($t7) on_abort goto L9 with $t6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:289:24+50
    if (!$ResourceExists($1_coin_CoinConversionMap_$memory, $t7)) {
        call $ExecFailureAbort();
    } else {
        $t8 := $ResourceValue($1_coin_CoinConversionMap_$memory, $t7);
    }
    if ($abort_flag) {
        assume {:print "$at(131,10149,10199)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(51,50):", $t6} $t6 == $t6;
        goto L9;
    }

    // $t9 := get_field<0x1::coin::CoinConversionMap>.coin_to_fungible_asset_map($t8) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:289:23+78
    $t9 := $t8->$coin_to_fungible_asset_map;

    // trace_local[map]($t9) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:289:23+78
    assume {:print "$track_local(51,50,1):", $t9} $t9 == $t9;

    // $t10 := type_info::type_of<#0>() on_abort goto L9 with $t6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:290:24+30
    assume {:print "$at(131,10252,10282)"} true;
    if (!(#0_info is $TypeParamStruct)) {
        call $ExecFailureAbort();
    }
    else {
        $t10 := $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s);
    }
    if ($abort_flag) {
        assume {:print "$at(131,10252,10282)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(51,50):", $t6} $t6 == $t6;
        goto L9;
    }

    // trace_local[type]($t10) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:290:24+30
    assume {:print "$track_local(51,50,2):", $t10} $t10 == $t10;

    // $t11 := table::contains<0x1::type_info::TypeInfo, 0x1::object::Object<0x1::fungible_asset::Metadata>>($t9, $t10) on_abort goto L9 with $t6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:291:17+26
    assume {:print "$at(131,10301,10327)"} true;
    call $t11 := $1_table_contains'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata''($t9, $t10);
    if ($abort_flag) {
        assume {:print "$at(131,10301,10327)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(51,50):", $t6} $t6 == $t6;
        goto L9;
    }

    // if ($t11) goto L6 else goto L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:291:13+112
    if ($t11) { goto L6; } else { goto L5; }

    // label L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:292:52+3
    assume {:print "$at(131,10383,10386)"} true;
L6:

    // $t12 := table::borrow<0x1::type_info::TypeInfo, 0x1::object::Object<0x1::fungible_asset::Metadata>>($t9, $t10) on_abort goto L9 with $t6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:292:38+24
    assume {:print "$at(131,10369,10393)"} true;
    call $t12 := $1_table_borrow'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata''($t9, $t10);
    if ($abort_flag) {
        assume {:print "$at(131,10369,10393)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(51,50):", $t6} $t6 == $t6;
        goto L9;
    }

    // $t13 := opaque begin: option::some<0x1::object::Object<0x1::fungible_asset::Metadata>>($t12) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:292:24+39

    // assume And(WellFormed($t13), Le(Len<0x1::object::Object<0x1::fungible_asset::Metadata>>(select option::Option.vec($t13)), 1)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:292:24+39
    assume ($IsValid'$1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'''($t13) && (LenVec($t13->$vec) <= 1));

    // assume Eq<0x1::option::Option<0x1::object::Object<0x1::fungible_asset::Metadata>>>($t13, option::spec_some<0x1::object::Object<0x1::fungible_asset::Metadata>>($t12)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:292:24+39
    assume $IsEqual'$1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'''($t13, $1_option_spec_some'$1_object_Object'$1_fungible_asset_Metadata''($t12));

    // $t13 := opaque end: option::some<0x1::object::Object<0x1::fungible_asset::Metadata>>($t12) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:292:24+39

    // trace_return[0]($t13) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:292:17+46
    assume {:print "$track_return(51,50,0):", $t13} $t13 == $t13;

    // $t14 := move($t13) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:292:17+46
    $t14 := $t13;

    // goto L8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:292:17+46
    goto L8;

    // label L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:291:13+112
    assume {:print "$at(131,10297,10409)"} true;
L5:

    // label L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:295:9+14
    assume {:print "$at(131,10431,10445)"} true;
L4:

    // $t15 := opaque begin: option::none<0x1::object::Object<0x1::fungible_asset::Metadata>>() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:295:9+14
    assume {:print "$at(131,10431,10445)"} true;

    // assume And(WellFormed($t15), Le(Len<0x1::object::Object<0x1::fungible_asset::Metadata>>(select option::Option.vec($t15)), 1)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:295:9+14
    assume ($IsValid'$1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'''($t15) && (LenVec($t15->$vec) <= 1));

    // assume Eq<0x1::option::Option<0x1::object::Object<0x1::fungible_asset::Metadata>>>($t15, option::spec_none<0x1::object::Object<0x1::fungible_asset::Metadata>>()) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:295:9+14
    assume $IsEqual'$1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'''($t15, $1_option_spec_none'$1_object_Object'$1_fungible_asset_Metadata''());

    // $t15 := opaque end: option::none<0x1::object::Object<0x1::fungible_asset::Metadata>>() at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:295:9+14

    // trace_return[0]($t15) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:286:97+463
    assume {:print "$at(131,9989,10452)"} true;
    assume {:print "$track_return(51,50,0):", $t15} $t15 == $t15;

    // $t14 := move($t15) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:286:97+463
    $t14 := $t15;

    // goto L8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:286:97+463
    goto L8;

    // label L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:287:13+117
    assume {:print "$at(131,10004,10121)"} true;
L0:

    // $t16 := false at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:287:13+117
    assume {:print "$at(131,10004,10121)"} true;
    $t16 := false;
    assume $IsValid'bool'($t16);

    // $t0 := $t16 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:287:13+117
    $t0 := $t16;

    // trace_local[$t2]($t16) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:287:13+117
    assume {:print "$track_local(51,50,0):", $t16} $t16 == $t16;

    // goto L7 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:287:13+117
    goto L7;

    // label L8 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:296:5+1
    assume {:print "$at(131,10451,10452)"} true;
L8:

    // return $t14 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:296:5+1
    assume {:print "$at(131,10451,10452)"} true;
    $ret0 := $t14;
    return;

    // label L9 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:296:5+1
L9:

    // abort($t6) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:296:5+1
    assume {:print "$at(131,10451,10452)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}

// fun coin::register<0x1::aptos_coin::AptosCoin> [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1092:5+774
procedure {:inline 1} $1_coin_register'$1_aptos_coin_AptosCoin'(_$t0: $signer) returns ()
{
    // declare local variables
    var $t1: int;
    var $t2: $signer;
    var $t3: $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $t4: int;
    var $t5: int;
    var $t6: bool;
    var $t7: int;
    var $t8: $1_object_Object'$1_fungible_asset_Metadata';
    var $t9: int;
    var $t10: int;
    var $t11: bool;
    var $t12: int;
    var $t13: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t14: bool;
    var $t15: int;
    var $t16: $1_account_Account;
    var $t17: $1_event_EventHandle'$1_coin_DepositEvent';
    var $t18: int;
    var $t19: $1_account_Account;
    var $t20: $1_event_EventHandle'$1_coin_WithdrawEvent';
    var $t21: $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $t0: $signer;
    var $temp_0'$1_coin_CoinStore'$1_aptos_coin_AptosCoin'': $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[account]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1092:5+1
    assume {:print "$at(131,46415,46416)"} true;
    assume {:print "$track_local(51,53,0):", $t0} $t0 == $t0;

    // $t4 := signer::address_of($t0) on_abort goto L6 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1093:28+27
    assume {:print "$at(131,46530,46557)"} true;
    call $t4 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(131,46530,46557)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(51,53):", $t5} $t5 == $t5;
        goto L6;
    }

    // trace_local[account_addr]($t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1093:28+27
    assume {:print "$track_local(51,53,1):", $t4} $t4 == $t4;

    // trace_local[account]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:625:16+28
    assume {:print "$at(131,27058,27086)"} true;
    assume {:print "$track_local(51,53,2):", $t0} $t0 == $t0;

    // $t6 := opaque begin: permissioned_signer::is_permissioned_signer($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:626:12+52
    assume {:print "$at(131,27129,27181)"} true;

    // assume WellFormed($t6) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:626:12+52
    assume $IsValid'bool'($t6);

    // assume Eq<bool>($t6, permissioned_signer::spec_is_permissioned_signer($t0)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:626:12+52
    assume $IsEqual'bool'($t6, $1_permissioned_signer_spec_is_permissioned_signer($t0));

    // $t6 := opaque end: permissioned_signer::is_permissioned_signer($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:626:12+52

    // if ($t6) goto L1 else goto L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:626:9+387
    if ($t6) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:628:17+7
    assume {:print "$at(131,27269,27276)"} true;
L1:

    // $t7 := signer::address_of($t0) on_abort goto L6 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:630:21+27
    assume {:print "$at(131,27363,27390)"} true;
    call $t7 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(131,27363,27390)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(51,53):", $t5} $t5 == $t5;
        goto L6;
    }

    // $t8 := coin::ensure_paired_metadata<#0>() on_abort goto L6 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:631:21+34
    assume {:print "$at(131,27413,27447)"} true;
    call $t8 := $1_coin_ensure_paired_metadata'$1_aptos_coin_AptosCoin'();
    if ($abort_flag) {
        assume {:print "$at(131,27413,27447)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(51,53):", $t5} $t5 == $t5;
        goto L6;
    }

    // $t9 := primary_fungible_store::primary_store_address<0x1::fungible_asset::Metadata>($t7, $t8) on_abort goto L6 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:629:17+171
    assume {:print "$at(131,27295,27466)"} true;
    call $t9 := $1_primary_fungible_store_primary_store_address'$1_fungible_asset_Metadata'($t7, $t8);
    if ($abort_flag) {
        assume {:print "$at(131,27295,27466)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(51,53):", $t5} $t5 == $t5;
        goto L6;
    }

    // $t10 := 0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:633:17+1
    assume {:print "$at(131,27485,27486)"} true;
    $t10 := 0;
    assume $IsValid'u64'($t10);

    // fungible_asset::withdraw_permission_check_by_address($t0, $t9, $t10) on_abort goto L6 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:627:13+303
    assume {:print "$at(131,27198,27501)"} true;
    call $1_fungible_asset_withdraw_permission_check_by_address($t0, $t9, $t10);
    if ($abort_flag) {
        assume {:print "$at(131,27198,27501)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(51,53):", $t5} $t5 == $t5;
        goto L6;
    }

    // label L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1096:13+45
    assume {:print "$at(131,46718,46763)"} true;
L4:

    // $t11 := coin::is_account_registered<#0>($t4) on_abort goto L6 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1096:13+45
    assume {:print "$at(131,46718,46763)"} true;
    call $t11 := $1_coin_is_account_registered'$1_aptos_coin_AptosCoin'($t4);
    if ($abort_flag) {
        assume {:print "$at(131,46718,46763)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(51,53):", $t5} $t5 == $t5;
        goto L6;
    }

    // if ($t11) goto L3 else goto L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1096:9+83
    if ($t11) { goto L3; } else { goto L2; }

    // label L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1097:13+6
    assume {:print "$at(131,46780,46786)"} true;
L3:

    // goto L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1097:13+6
    assume {:print "$at(131,46780,46786)"} true;
    goto L5;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1100:9+46
    assume {:print "$at(131,46810,46856)"} true;
L2:

    // account::register_coin<#0>($t4) on_abort goto L6 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1100:9+46
    assume {:print "$at(131,46810,46856)"} true;
    call $1_account_register_coin'$1_aptos_coin_AptosCoin'($t4);
    if ($abort_flag) {
        assume {:print "$at(131,46810,46856)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(51,53):", $t5} $t5 == $t5;
        goto L6;
    }

    // $t12 := 0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1102:33+1
    assume {:print "$at(131,46939,46940)"} true;
    $t12 := 0;
    assume $IsValid'u64'($t12);

    // $t13 := pack 0x1::coin::Coin<#0>($t12) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1102:19+17
    $t13 := $1_coin_Coin'$1_aptos_coin_AptosCoin'($t12);

    // $t14 := false at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1103:21+5
    assume {:print "$at(131,46965,46970)"} true;
    $t14 := false;
    assume $IsValid'bool'($t14);

    // assume Identical($t15, signer::$address_of($t0)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.spec.move:656:9+39
    assume {:print "$at(98,33357,33396)"} true;
    assume ($t15 == $1_signer_$address_of($t0));

    // assume Identical($t16, global<0x1::account::Account>($t15)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.spec.move:657:9+36
    assume {:print "$at(98,33406,33442)"} true;
    assume ($t16 == $ResourceValue($1_account_Account_$memory, $t15));

    // $t17 := account::new_event_handle<0x1::coin::DepositEvent>($t0) on_abort goto L6 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1104:29+48
    assume {:print "$at(131,47001,47049)"} true;
    call $t17 := $1_account_new_event_handle'$1_coin_DepositEvent'($t0);
    if ($abort_flag) {
        assume {:print "$at(131,47001,47049)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(51,53):", $t5} $t5 == $t5;
        goto L6;
    }

    // assume Identical($t18, signer::$address_of($t0)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.spec.move:656:9+39
    assume {:print "$at(98,33357,33396)"} true;
    assume ($t18 == $1_signer_$address_of($t0));

    // assume Identical($t19, global<0x1::account::Account>($t18)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.spec.move:657:9+36
    assume {:print "$at(98,33406,33442)"} true;
    assume ($t19 == $ResourceValue($1_account_Account_$memory, $t18));

    // $t20 := account::new_event_handle<0x1::coin::WithdrawEvent>($t0) on_abort goto L6 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1105:30+49
    assume {:print "$at(131,47081,47130)"} true;
    call $t20 := $1_account_new_event_handle'$1_coin_WithdrawEvent'($t0);
    if ($abort_flag) {
        assume {:print "$at(131,47081,47130)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(51,53):", $t5} $t5 == $t5;
        goto L6;
    }

    // $t21 := pack 0x1::coin::CoinStore<#0>($t13, $t14, $t17, $t20) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1101:26+258
    assume {:print "$at(131,46884,47142)"} true;
    $t21 := $1_coin_CoinStore'$1_aptos_coin_AptosCoin'($t13, $t14, $t17, $t20);

    // trace_local[coin_store]($t21) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1101:26+258
    assume {:print "$track_local(51,53,3):", $t21} $t21 == $t21;

    // move_to<0x1::coin::CoinStore<#0>>($t21, $t0) on_abort goto L6 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1107:9+28
    assume {:print "$at(131,47153,47181)"} true;
    if ($ResourceExists($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t0->$addr)) {
        call $ExecFailureAbort();
    } else {
        $1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory := $ResourceUpdate($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t0->$addr, $t21);
    }
    if ($abort_flag) {
        assume {:print "$at(131,47153,47181)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(51,53):", $t5} $t5 == $t5;
        goto L6;
    }

    // goto L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1092:90+689
    assume {:print "$at(131,46500,47189)"} true;
    goto L5;

    // label L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:626:9+387
    assume {:print "$at(131,27126,27513)"} true;
L0:

    // goto L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:626:9+387
    assume {:print "$at(131,27126,27513)"} true;
    goto L4;

    // label L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1108:5+1
    assume {:print "$at(131,47188,47189)"} true;
L5:

    // return () at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1108:5+1
    assume {:print "$at(131,47188,47189)"} true;
    return;

    // label L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1108:5+1
L6:

    // abort($t5) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1108:5+1
    assume {:print "$at(131,47188,47189)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun coin::register<#0> [baseline] at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1092:5+774
procedure {:inline 1} $1_coin_register'#0'(_$t0: $signer) returns ()
{
    // declare local variables
    var $t1: int;
    var $t2: $signer;
    var $t3: $1_coin_CoinStore'#0';
    var $t4: int;
    var $t5: int;
    var $t6: bool;
    var $t7: int;
    var $t8: $1_object_Object'$1_fungible_asset_Metadata';
    var $t9: int;
    var $t10: int;
    var $t11: bool;
    var $t12: int;
    var $t13: $1_coin_Coin'#0';
    var $t14: bool;
    var $t15: int;
    var $t16: $1_account_Account;
    var $t17: $1_event_EventHandle'$1_coin_DepositEvent';
    var $t18: int;
    var $t19: $1_account_Account;
    var $t20: $1_event_EventHandle'$1_coin_WithdrawEvent';
    var $t21: $1_coin_CoinStore'#0';
    var $t0: $signer;
    var $temp_0'$1_coin_CoinStore'#0'': $1_coin_CoinStore'#0';
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[account]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1092:5+1
    assume {:print "$at(131,46415,46416)"} true;
    assume {:print "$track_local(51,53,0):", $t0} $t0 == $t0;

    // $t4 := signer::address_of($t0) on_abort goto L6 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1093:28+27
    assume {:print "$at(131,46530,46557)"} true;
    call $t4 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(131,46530,46557)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(51,53):", $t5} $t5 == $t5;
        goto L6;
    }

    // trace_local[account_addr]($t4) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1093:28+27
    assume {:print "$track_local(51,53,1):", $t4} $t4 == $t4;

    // trace_local[account]($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:625:16+28
    assume {:print "$at(131,27058,27086)"} true;
    assume {:print "$track_local(51,53,2):", $t0} $t0 == $t0;

    // $t6 := opaque begin: permissioned_signer::is_permissioned_signer($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:626:12+52
    assume {:print "$at(131,27129,27181)"} true;

    // assume WellFormed($t6) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:626:12+52
    assume $IsValid'bool'($t6);

    // assume Eq<bool>($t6, permissioned_signer::spec_is_permissioned_signer($t0)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:626:12+52
    assume $IsEqual'bool'($t6, $1_permissioned_signer_spec_is_permissioned_signer($t0));

    // $t6 := opaque end: permissioned_signer::is_permissioned_signer($t0) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:626:12+52

    // if ($t6) goto L1 else goto L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:626:9+387
    if ($t6) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:628:17+7
    assume {:print "$at(131,27269,27276)"} true;
L1:

    // $t7 := signer::address_of($t0) on_abort goto L6 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:630:21+27
    assume {:print "$at(131,27363,27390)"} true;
    call $t7 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(131,27363,27390)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(51,53):", $t5} $t5 == $t5;
        goto L6;
    }

    // $t8 := coin::ensure_paired_metadata<#0>() on_abort goto L6 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:631:21+34
    assume {:print "$at(131,27413,27447)"} true;
    call $t8 := $1_coin_ensure_paired_metadata'#0'();
    if ($abort_flag) {
        assume {:print "$at(131,27413,27447)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(51,53):", $t5} $t5 == $t5;
        goto L6;
    }

    // $t9 := primary_fungible_store::primary_store_address<0x1::fungible_asset::Metadata>($t7, $t8) on_abort goto L6 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:629:17+171
    assume {:print "$at(131,27295,27466)"} true;
    call $t9 := $1_primary_fungible_store_primary_store_address'$1_fungible_asset_Metadata'($t7, $t8);
    if ($abort_flag) {
        assume {:print "$at(131,27295,27466)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(51,53):", $t5} $t5 == $t5;
        goto L6;
    }

    // $t10 := 0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:633:17+1
    assume {:print "$at(131,27485,27486)"} true;
    $t10 := 0;
    assume $IsValid'u64'($t10);

    // fungible_asset::withdraw_permission_check_by_address($t0, $t9, $t10) on_abort goto L6 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:627:13+303
    assume {:print "$at(131,27198,27501)"} true;
    call $1_fungible_asset_withdraw_permission_check_by_address($t0, $t9, $t10);
    if ($abort_flag) {
        assume {:print "$at(131,27198,27501)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(51,53):", $t5} $t5 == $t5;
        goto L6;
    }

    // label L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1096:13+45
    assume {:print "$at(131,46718,46763)"} true;
L4:

    // $t11 := coin::is_account_registered<#0>($t4) on_abort goto L6 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1096:13+45
    assume {:print "$at(131,46718,46763)"} true;
    call $t11 := $1_coin_is_account_registered'#0'($t4);
    if ($abort_flag) {
        assume {:print "$at(131,46718,46763)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(51,53):", $t5} $t5 == $t5;
        goto L6;
    }

    // if ($t11) goto L3 else goto L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1096:9+83
    if ($t11) { goto L3; } else { goto L2; }

    // label L3 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1097:13+6
    assume {:print "$at(131,46780,46786)"} true;
L3:

    // goto L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1097:13+6
    assume {:print "$at(131,46780,46786)"} true;
    goto L5;

    // label L2 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1100:9+46
    assume {:print "$at(131,46810,46856)"} true;
L2:

    // account::register_coin<#0>($t4) on_abort goto L6 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1100:9+46
    assume {:print "$at(131,46810,46856)"} true;
    call $1_account_register_coin'#0'($t4);
    if ($abort_flag) {
        assume {:print "$at(131,46810,46856)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(51,53):", $t5} $t5 == $t5;
        goto L6;
    }

    // $t12 := 0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1102:33+1
    assume {:print "$at(131,46939,46940)"} true;
    $t12 := 0;
    assume $IsValid'u64'($t12);

    // $t13 := pack 0x1::coin::Coin<#0>($t12) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1102:19+17
    $t13 := $1_coin_Coin'#0'($t12);

    // $t14 := false at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1103:21+5
    assume {:print "$at(131,46965,46970)"} true;
    $t14 := false;
    assume $IsValid'bool'($t14);

    // assume Identical($t15, signer::$address_of($t0)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.spec.move:656:9+39
    assume {:print "$at(98,33357,33396)"} true;
    assume ($t15 == $1_signer_$address_of($t0));

    // assume Identical($t16, global<0x1::account::Account>($t15)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.spec.move:657:9+36
    assume {:print "$at(98,33406,33442)"} true;
    assume ($t16 == $ResourceValue($1_account_Account_$memory, $t15));

    // $t17 := account::new_event_handle<0x1::coin::DepositEvent>($t0) on_abort goto L6 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1104:29+48
    assume {:print "$at(131,47001,47049)"} true;
    call $t17 := $1_account_new_event_handle'$1_coin_DepositEvent'($t0);
    if ($abort_flag) {
        assume {:print "$at(131,47001,47049)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(51,53):", $t5} $t5 == $t5;
        goto L6;
    }

    // assume Identical($t18, signer::$address_of($t0)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.spec.move:656:9+39
    assume {:print "$at(98,33357,33396)"} true;
    assume ($t18 == $1_signer_$address_of($t0));

    // assume Identical($t19, global<0x1::account::Account>($t18)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.spec.move:657:9+36
    assume {:print "$at(98,33406,33442)"} true;
    assume ($t19 == $ResourceValue($1_account_Account_$memory, $t18));

    // $t20 := account::new_event_handle<0x1::coin::WithdrawEvent>($t0) on_abort goto L6 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1105:30+49
    assume {:print "$at(131,47081,47130)"} true;
    call $t20 := $1_account_new_event_handle'$1_coin_WithdrawEvent'($t0);
    if ($abort_flag) {
        assume {:print "$at(131,47081,47130)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(51,53):", $t5} $t5 == $t5;
        goto L6;
    }

    // $t21 := pack 0x1::coin::CoinStore<#0>($t13, $t14, $t17, $t20) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1101:26+258
    assume {:print "$at(131,46884,47142)"} true;
    $t21 := $1_coin_CoinStore'#0'($t13, $t14, $t17, $t20);

    // trace_local[coin_store]($t21) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1101:26+258
    assume {:print "$track_local(51,53,3):", $t21} $t21 == $t21;

    // move_to<0x1::coin::CoinStore<#0>>($t21, $t0) on_abort goto L6 with $t5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1107:9+28
    assume {:print "$at(131,47153,47181)"} true;
    if ($ResourceExists($1_coin_CoinStore'#0'_$memory, $t0->$addr)) {
        call $ExecFailureAbort();
    } else {
        $1_coin_CoinStore'#0'_$memory := $ResourceUpdate($1_coin_CoinStore'#0'_$memory, $t0->$addr, $t21);
    }
    if ($abort_flag) {
        assume {:print "$at(131,47153,47181)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(51,53):", $t5} $t5 == $t5;
        goto L6;
    }

    // goto L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1092:90+689
    assume {:print "$at(131,46500,47189)"} true;
    goto L5;

    // label L0 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:626:9+387
    assume {:print "$at(131,27126,27513)"} true;
L0:

    // goto L4 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:626:9+387
    assume {:print "$at(131,27126,27513)"} true;
    goto L4;

    // label L5 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1108:5+1
    assume {:print "$at(131,47188,47189)"} true;
L5:

    // return () at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1108:5+1
    assume {:print "$at(131,47188,47189)"} true;
    return;

    // label L6 at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1108:5+1
L6:

    // abort($t5) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.move:1108:5+1
    assume {:print "$at(131,47188,47189)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// struct aptos_coin::AptosCoin at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\aptos_coin.move:22:5+27
datatype $1_aptos_coin_AptosCoin {
    $1_aptos_coin_AptosCoin($dummy_field: bool)
}
function {:inline} $Update'$1_aptos_coin_AptosCoin'_dummy_field(s: $1_aptos_coin_AptosCoin, x: bool): $1_aptos_coin_AptosCoin {
    $1_aptos_coin_AptosCoin(x)
}
function $IsValid'$1_aptos_coin_AptosCoin'(s: $1_aptos_coin_AptosCoin): bool {
    $IsValid'bool'(s->$dummy_field)
}
function {:inline} $IsEqual'$1_aptos_coin_AptosCoin'(s1: $1_aptos_coin_AptosCoin, s2: $1_aptos_coin_AptosCoin): bool {
    s1 == s2
}
var $1_aptos_coin_AptosCoin_$memory: $Memory $1_aptos_coin_AptosCoin;

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\hash.spec.move:7:9+50
function  $1_aptos_hash_spec_keccak256(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_aptos_hash_spec_keccak256(bytes);
$IsValid'vec'u8''($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\hash.spec.move:12:9+58
function  $1_aptos_hash_spec_sha2_512_internal(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_aptos_hash_spec_sha2_512_internal(bytes);
$IsValid'vec'u8''($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\hash.spec.move:17:9+58
function  $1_aptos_hash_spec_sha3_512_internal(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_aptos_hash_spec_sha3_512_internal(bytes);
$IsValid'vec'u8''($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\hash.spec.move:22:9+59
function  $1_aptos_hash_spec_ripemd160_internal(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_aptos_hash_spec_ripemd160_internal(bytes);
$IsValid'vec'u8''($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\../aptos-stdlib\sources\hash.spec.move:27:9+61
function  $1_aptos_hash_spec_blake2b_256_internal(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_aptos_hash_spec_blake2b_256_internal(bytes);
$IsValid'vec'u8''($$res)));

// spec fun at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\reconfiguration.move:161:5+157
function {:inline} $1_reconfiguration_$last_reconfiguration_time($1_reconfiguration_Configuration_$memory: $Memory $1_reconfiguration_Configuration): int {
    $ResourceValue($1_reconfiguration_Configuration_$memory, 1)->$last_reconfiguration_time
}

// struct reconfiguration::Configuration at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\reconfiguration.move:43:5+313
datatype $1_reconfiguration_Configuration {
    $1_reconfiguration_Configuration($epoch: int, $last_reconfiguration_time: int, $events: $1_event_EventHandle'$1_reconfiguration_NewEpochEvent')
}
function {:inline} $Update'$1_reconfiguration_Configuration'_epoch(s: $1_reconfiguration_Configuration, x: int): $1_reconfiguration_Configuration {
    $1_reconfiguration_Configuration(x, s->$last_reconfiguration_time, s->$events)
}
function {:inline} $Update'$1_reconfiguration_Configuration'_last_reconfiguration_time(s: $1_reconfiguration_Configuration, x: int): $1_reconfiguration_Configuration {
    $1_reconfiguration_Configuration(s->$epoch, x, s->$events)
}
function {:inline} $Update'$1_reconfiguration_Configuration'_events(s: $1_reconfiguration_Configuration, x: $1_event_EventHandle'$1_reconfiguration_NewEpochEvent'): $1_reconfiguration_Configuration {
    $1_reconfiguration_Configuration(s->$epoch, s->$last_reconfiguration_time, x)
}
function $IsValid'$1_reconfiguration_Configuration'(s: $1_reconfiguration_Configuration): bool {
    $IsValid'u64'(s->$epoch)
      && $IsValid'u64'(s->$last_reconfiguration_time)
      && $IsValid'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(s->$events)
}
function {:inline} $IsEqual'$1_reconfiguration_Configuration'(s1: $1_reconfiguration_Configuration, s2: $1_reconfiguration_Configuration): bool {
    s1 == s2
}
var $1_reconfiguration_Configuration_$memory: $Memory $1_reconfiguration_Configuration;

// struct reconfiguration::NewEpochEvent at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\reconfiguration.move:30:5+66
datatype $1_reconfiguration_NewEpochEvent {
    $1_reconfiguration_NewEpochEvent($epoch: int)
}
function {:inline} $Update'$1_reconfiguration_NewEpochEvent'_epoch(s: $1_reconfiguration_NewEpochEvent, x: int): $1_reconfiguration_NewEpochEvent {
    $1_reconfiguration_NewEpochEvent(x)
}
function $IsValid'$1_reconfiguration_NewEpochEvent'(s: $1_reconfiguration_NewEpochEvent): bool {
    $IsValid'u64'(s->$epoch)
}
function {:inline} $IsEqual'$1_reconfiguration_NewEpochEvent'(s1: $1_reconfiguration_NewEpochEvent, s2: $1_reconfiguration_NewEpochEvent): bool {
    s1 == s2
}

// struct supported_tokens::SupportedTokens at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:14:5+80
datatype $1_supported_tokens_SupportedTokens {
    $1_supported_tokens_SupportedTokens($allowed: Table int (bool))
}
function {:inline} $Update'$1_supported_tokens_SupportedTokens'_allowed(s: $1_supported_tokens_SupportedTokens, x: Table int (bool)): $1_supported_tokens_SupportedTokens {
    $1_supported_tokens_SupportedTokens(x)
}
function $IsValid'$1_supported_tokens_SupportedTokens'(s: $1_supported_tokens_SupportedTokens): bool {
    $IsValid'$1_table_Table'$1_type_info_TypeInfo_bool''(s->$allowed)
}
function {:inline} $IsEqual'$1_supported_tokens_SupportedTokens'(s1: $1_supported_tokens_SupportedTokens, s2: $1_supported_tokens_SupportedTokens): bool {
    s1 == s2
}
var $1_supported_tokens_SupportedTokens_$memory: $Memory $1_supported_tokens_SupportedTokens;

// fun supported_tokens::add_supported_token [verification] at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:29:5+866
procedure {:timeLimit 40} $1_supported_tokens_add_supported_token$verify(_$t0: $signer) returns ()
{
    // declare local variables
    var $t1: int;
    var $t2: $1_type_info_TypeInfo;
    var $t3: $Mutation ($1_supported_tokens_SupportedTokens);
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: bool;
    var $t8: bool;
    var $t9: bool;
    var $t10: $1_type_info_TypeInfo;
    var $t11: $Mutation ($1_supported_tokens_SupportedTokens);
    var $t12: Table int (bool);
    var $t13: bool;
    var $t14: bool;
    var $t15: $Mutation (Table int (bool));
    var $t16: $Mutation (bool);
    var $t17: $Mutation (Table int (bool));
    var $t18: bool;
    var $t19: int;
    var $t20: int;
    var $t21: int;
    var $t0: $signer;
    var $temp_0'$1_supported_tokens_SupportedTokens': $1_supported_tokens_SupportedTokens;
    var $temp_0'$1_type_info_TypeInfo': $1_type_info_TypeInfo;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:29:5+1
    assume {:print "$at(3,997,998)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($t0->$addr);

    // assume forall $rsc: 0x1::coin::CoinInfo<#0>: ResourceDomain<0x1::coin::CoinInfo<#0>>(): And(WellFormed($rsc), And(Le(Len<0x1::optional_aggregator::OptionalAggregator>(select option::Option.vec(select coin::CoinInfo.supply($rsc))), 1), forall $elem: 0x1::optional_aggregator::OptionalAggregator: select option::Option.vec(select coin::CoinInfo.supply($rsc)): And(And(And(And(And(Iff(option::$is_some<0x1::aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)), option::$is_none<0x1::optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem))), Iff(option::$is_some<0x1::optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)), option::$is_none<0x1::aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)))), Implies(option::$is_some<0x1::optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)), Le(select optional_aggregator::Integer.value<0x1::optional_aggregator::Integer>(option::$borrow<0x1::optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem))), select optional_aggregator::Integer.limit<0x1::optional_aggregator::Integer>(option::$borrow<0x1::optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)))))), Implies(option::$is_some<0x1::aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)), Le(aggregator::spec_aggregator_get_val(option::$borrow<0x1::aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem))), aggregator::spec_get_limit(option::$borrow<0x1::aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)))))), Le(Len<0x1::aggregator::Aggregator>(select option::Option.vec(select optional_aggregator::OptionalAggregator.aggregator($elem))), 1)), Le(Len<0x1::optional_aggregator::Integer>(select option::Option.vec(select optional_aggregator::OptionalAggregator.integer($elem))), 1)))) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:29:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinInfo'#0'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinInfo'#0'_$memory, $a_0);
    (($IsValid'$1_coin_CoinInfo'#0''($rsc) && ((LenVec($rsc->$supply->$vec) <= 1) && (var $range_1 := $rsc->$supply->$vec; (forall $i_2: int :: InRangeVec($range_1, $i_2) ==> (var $elem := ReadVec($range_1, $i_2);
    ((((((($1_option_$is_some'$1_aggregator_Aggregator'($elem->$aggregator) <==> $1_option_$is_none'$1_optional_aggregator_Integer'($elem->$integer)) && ($1_option_$is_some'$1_optional_aggregator_Integer'($elem->$integer) <==> $1_option_$is_none'$1_aggregator_Aggregator'($elem->$aggregator))) && ($1_option_$is_some'$1_optional_aggregator_Integer'($elem->$integer) ==> ($1_option_$borrow'$1_optional_aggregator_Integer'($elem->$integer)->$value <= $1_option_$borrow'$1_optional_aggregator_Integer'($elem->$integer)->$limit))) && ($1_option_$is_some'$1_aggregator_Aggregator'($elem->$aggregator) ==> ($1_aggregator_spec_aggregator_get_val($1_option_$borrow'$1_aggregator_Aggregator'($elem->$aggregator)) <= $1_aggregator_spec_get_limit($1_option_$borrow'$1_aggregator_Aggregator'($elem->$aggregator))))) && (LenVec($elem->$aggregator->$vec) <= 1)) && (LenVec($elem->$integer->$vec) <= 1)))))))))));

    // assume forall $rsc: 0x1::coin::Ghost$supply<#0>: ResourceDomain<0x1::coin::Ghost$supply<#0>>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:29:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_Ghost$supply'#0'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_Ghost$supply'#0'_$memory, $a_0);
    ($IsValid'$1_coin_Ghost$supply'#0''($rsc))));

    // assume exists<0x1::coin::Ghost$supply<#0>>(0x0) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:29:5+1
    assume $ResourceExists($1_coin_Ghost$supply'#0'_$memory, 0);

    // assume forall $rsc: 0x1::coin::Ghost$aggregate_supply<#0>: ResourceDomain<0x1::coin::Ghost$aggregate_supply<#0>>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:29:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_Ghost$aggregate_supply'#0'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_Ghost$aggregate_supply'#0'_$memory, $a_0);
    ($IsValid'$1_coin_Ghost$aggregate_supply'#0''($rsc))));

    // assume exists<0x1::coin::Ghost$aggregate_supply<#0>>(0x0) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:29:5+1
    assume $ResourceExists($1_coin_Ghost$aggregate_supply'#0'_$memory, 0);

    // assume forall $rsc: 0x1::supported_tokens::SupportedTokens: ResourceDomain<0x1::supported_tokens::SupportedTokens>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:29:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_supported_tokens_SupportedTokens_$memory, $a_0)}(var $rsc := $ResourceValue($1_supported_tokens_SupportedTokens_$memory, $a_0);
    ($IsValid'$1_supported_tokens_SupportedTokens'($rsc))));

    // trace_local[admin]($t0) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:29:5+1
    assume {:print "$track_local(100,0,0):", $t0} $t0 == $t0;

    // $t4 := signer::address_of($t0) on_abort goto L10 with $t5 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:30:26+25
    assume {:print "$at(3,1106,1131)"} true;
    call $t4 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(3,1106,1131)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(100,0):", $t5} $t5 == $t5;
        goto L10;
    }

    // trace_local[admin_addr]($t4) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:30:26+25
    assume {:print "$track_local(100,0,1):", $t4} $t4 == $t4;

    // $t6 := 0x1 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:31:31+7
    assume {:print "$at(3,1164,1171)"} true;
    $t6 := 1;
    assume $IsValid'address'($t6);

    // $t7 := ==($t4, $t6) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:31:17+21
    $t7 := $IsEqual'address'($t4, $t6);

    // if ($t7) goto L1 else goto L0 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:31:9+6
    if ($t7) { goto L1; } else { goto L0; }

    // label L1 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:32:17+35
    assume {:print "$at(3,1209,1244)"} true;
L1:

    // $t8 := exists<0x1::supported_tokens::SupportedTokens>($t4) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:32:17+35
    assume {:print "$at(3,1209,1244)"} true;
    $t8 := $ResourceExists($1_supported_tokens_SupportedTokens_$memory, $t4);

    // if ($t8) goto L3 else goto L2 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:32:9+6
    if ($t8) { goto L3; } else { goto L2; }

    // label L3 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:35:17+30
    assume {:print "$at(3,1344,1374)"} true;
L3:

    // $t9 := coin::is_coin_initialized<#0>() on_abort goto L10 with $t5 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:35:17+30
    assume {:print "$at(3,1344,1374)"} true;
    call $t9 := $1_coin_is_coin_initialized'#0'();
    if ($abort_flag) {
        assume {:print "$at(3,1344,1374)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(100,0):", $t5} $t5 == $t5;
        goto L10;
    }

    // if ($t9) goto L5 else goto L4 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:35:9+6
    if ($t9) { goto L5; } else { goto L4; }

    // label L5 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:37:25+23
    assume {:print "$at(3,1421,1444)"} true;
L5:

    // $t10 := type_info::type_of<#0>() on_abort goto L10 with $t5 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:37:25+23
    assume {:print "$at(3,1421,1444)"} true;
    if (!(#0_info is $TypeParamStruct)) {
        call $ExecFailureAbort();
    }
    else {
        $t10 := $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s);
    }
    if ($abort_flag) {
        assume {:print "$at(3,1421,1444)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(100,0):", $t5} $t5 == $t5;
        goto L10;
    }

    // trace_local[type_info]($t10) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:37:25+23
    assume {:print "$track_local(100,0,2):", $t10} $t10 == $t10;

    // $t11 := borrow_global<0x1::supported_tokens::SupportedTokens>($t4) on_abort goto L10 with $t5 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:38:32+46
    assume {:print "$at(3,1478,1524)"} true;
    if (!$ResourceExists($1_supported_tokens_SupportedTokens_$memory, $t4)) {
        call $ExecFailureAbort();
    } else {
        $t11 := $Mutation($Global($t4), EmptyVec(), $ResourceValue($1_supported_tokens_SupportedTokens_$memory, $t4));
    }
    if ($abort_flag) {
        assume {:print "$at(3,1478,1524)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(100,0):", $t5} $t5 == $t5;
        goto L10;
    }

    // trace_local[supported_tokens]($t11) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:38:32+46
    $temp_0'$1_supported_tokens_SupportedTokens' := $Dereference($t11);
    assume {:print "$track_local(100,0,3):", $temp_0'$1_supported_tokens_SupportedTokens'} $temp_0'$1_supported_tokens_SupportedTokens' == $temp_0'$1_supported_tokens_SupportedTokens';

    // $t12 := get_field<0x1::supported_tokens::SupportedTokens>.allowed($t11) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:41:29+25
    assume {:print "$at(3,1632,1657)"} true;
    $t12 := $Dereference($t11)->$allowed;

    // $t13 := table::contains<0x1::type_info::TypeInfo, bool>($t12, $t10) on_abort goto L10 with $t5 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:41:13+53
    call $t13 := $1_table_contains'$1_type_info_TypeInfo_bool'($t12, $t10);
    if ($abort_flag) {
        assume {:print "$at(3,1616,1669)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(100,0):", $t5} $t5 == $t5;
        goto L10;
    }

    // if ($t13) goto L7 else goto L6 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:41:9+244
    if ($t13) { goto L7; } else { goto L6; }

    // label L7 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:42:76+4
    assume {:print "$at(3,1749,1753)"} true;
L7:

    // $t14 := true at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:42:76+4
    assume {:print "$at(3,1749,1753)"} true;
    $t14 := true;
    assume $IsValid'bool'($t14);

    // $t15 := borrow_field<0x1::supported_tokens::SupportedTokens>.allowed($t11) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:42:32+29
    $t15 := $ChildMutation($t11, 0, $Dereference($t11)->$allowed);

    // $t16 := table::borrow_mut<0x1::type_info::TypeInfo, bool>($t15, $t10) on_abort goto L10 with $t5 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:42:14+59
    call $t16,$t15 := $1_table_borrow_mut'$1_type_info_TypeInfo_bool'($t15, $t10);
    if ($abort_flag) {
        assume {:print "$at(3,1687,1746)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(100,0):", $t5} $t5 == $t5;
        goto L10;
    }

    // write_ref($t16, $t14) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:42:13+67
    $t16 := $UpdateMutation($t16, $t14);

    // write_back[Reference($t15)[]]($t16) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:42:13+67
    $t15 := $UpdateMutation($t15, UpdateTable($Dereference($t15), ReadVec($t16->p, LenVec($t15->p)), $Dereference($t16)));

    // write_back[Reference($t11).allowed (0x1::table::Table<0x1::type_info::TypeInfo, bool>)]($t15) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:42:13+67
    $t11 := $UpdateMutation($t11, $Update'$1_supported_tokens_SupportedTokens'_allowed($Dereference($t11), $Dereference($t15)));

    // write_back[0x1::supported_tokens::SupportedTokens@]($t11) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:42:13+67
    $1_supported_tokens_SupportedTokens_$memory := $ResourceUpdate($1_supported_tokens_SupportedTokens_$memory, $GlobalLocationAddress($t11),
        $Dereference($t11));

    // label L8 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:29:86+785
    assume {:print "$at(3,1078,1863)"} true;
L8:

    // goto L9 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:29:86+785
    assume {:print "$at(3,1078,1863)"} true;
    goto L9;

    // label L6 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:44:24+29
    assume {:print "$at(3,1797,1826)"} true;
L6:

    // $t17 := borrow_field<0x1::supported_tokens::SupportedTokens>.allowed($t11) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:44:24+29
    assume {:print "$at(3,1797,1826)"} true;
    $t17 := $ChildMutation($t11, 0, $Dereference($t11)->$allowed);

    // $t18 := true at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:44:66+4
    $t18 := true;
    assume $IsValid'bool'($t18);

    // table::add<0x1::type_info::TypeInfo, bool>($t17, $t10, $t18) on_abort goto L10 with $t5 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:44:13+58
    call $t17 := $1_table_add'$1_type_info_TypeInfo_bool'($t17, $t10, $t18);
    if ($abort_flag) {
        assume {:print "$at(3,1786,1844)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(100,0):", $t5} $t5 == $t5;
        goto L10;
    }

    // write_back[Reference($t11).allowed (0x1::table::Table<0x1::type_info::TypeInfo, bool>)]($t17) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:44:13+58
    $t11 := $UpdateMutation($t11, $Update'$1_supported_tokens_SupportedTokens'_allowed($Dereference($t11), $Dereference($t17)));

    // write_back[0x1::supported_tokens::SupportedTokens@]($t11) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:44:13+58
    $1_supported_tokens_SupportedTokens_$memory := $ResourceUpdate($1_supported_tokens_SupportedTokens_$memory, $GlobalLocationAddress($t11),
        $Dereference($t11));

    // goto L8 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:44:13+58
    goto L8;

    // label L4 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:35:49+15
    assume {:print "$at(3,1376,1391)"} true;
L4:

    // $t19 := 3 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:35:49+15
    assume {:print "$at(3,1376,1391)"} true;
    $t19 := 3;
    assume $IsValid'u64'($t19);

    // trace_abort($t19) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:35:9+6
    assume {:print "$at(3,1336,1342)"} true;
    assume {:print "$track_abort(100,0):", $t19} $t19 == $t19;

    // $t5 := move($t19) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:35:9+6
    $t5 := $t19;

    // goto L10 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:35:9+6
    goto L10;

    // label L2 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:32:54+17
    assume {:print "$at(3,1246,1263)"} true;
L2:

    // $t20 := 4 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:32:54+17
    assume {:print "$at(3,1246,1263)"} true;
    $t20 := 4;
    assume $IsValid'u64'($t20);

    // trace_abort($t20) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:32:9+6
    assume {:print "$at(3,1201,1207)"} true;
    assume {:print "$track_abort(100,0):", $t20} $t20 == $t20;

    // $t5 := move($t20) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:32:9+6
    $t5 := $t20;

    // goto L10 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:32:9+6
    goto L10;

    // label L0 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:31:40+16
    assume {:print "$at(3,1173,1189)"} true;
L0:

    // $t21 := 1 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:31:40+16
    assume {:print "$at(3,1173,1189)"} true;
    $t21 := 1;
    assume $IsValid'u64'($t21);

    // trace_abort($t21) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:31:9+6
    assume {:print "$at(3,1142,1148)"} true;
    assume {:print "$track_abort(100,0):", $t21} $t21 == $t21;

    // $t5 := move($t21) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:31:9+6
    $t5 := $t21;

    // goto L10 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:31:9+6
    goto L10;

    // label L9 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:46:5+1
    assume {:print "$at(3,1862,1863)"} true;
L9:

    // return () at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:46:5+1
    assume {:print "$at(3,1862,1863)"} true;
    return;

    // label L10 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:46:5+1
L10:

    // abort($t5) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:46:5+1
    assume {:print "$at(3,1862,1863)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun supported_tokens::assert_supported<#0> [baseline] at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:82:5+157
procedure {:inline 1} $1_supported_tokens_assert_supported'#0'(_$t0: int) returns ()
{
    // declare local variables
    var $t1: bool;
    var $t2: int;
    var $t3: int;
    var $t0: int;
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[registry_owner]($t0) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:82:5+1
    assume {:print "$at(3,3312,3313)"} true;
    assume {:print "$track_local(100,1,0):", $t0} $t0 == $t0;

    // $t1 := supported_tokens::is_supported<#0>($t0) on_abort goto L3 with $t2 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:83:17+31
    assume {:print "$at(3,3412,3443)"} true;
    call $t1 := $1_supported_tokens_is_supported'#0'($t0);
    if ($abort_flag) {
        assume {:print "$at(3,3412,3443)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(100,1):", $t2} $t2 == $t2;
        goto L3;
    }

    // if ($t1) goto L1 else goto L0 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:83:9+6
    if ($t1) { goto L1; } else { goto L0; }

    // label L1 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:82:86+76
    assume {:print "$at(3,3393,3469)"} true;
L1:

    // goto L2 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:82:86+76
    assume {:print "$at(3,3393,3469)"} true;
    goto L2;

    // label L0 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:83:50+15
    assume {:print "$at(3,3445,3460)"} true;
L0:

    // $t3 := 3 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:83:50+15
    assume {:print "$at(3,3445,3460)"} true;
    $t3 := 3;
    assume $IsValid'u64'($t3);

    // trace_abort($t3) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:83:9+6
    assume {:print "$at(3,3404,3410)"} true;
    assume {:print "$track_abort(100,1):", $t3} $t3 == $t3;

    // $t2 := move($t3) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:83:9+6
    $t2 := $t3;

    // goto L3 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:83:9+6
    goto L3;

    // label L2 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:84:5+1
    assume {:print "$at(3,3468,3469)"} true;
L2:

    // return () at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:84:5+1
    assume {:print "$at(3,3468,3469)"} true;
    return;

    // label L3 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:84:5+1
L3:

    // abort($t2) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:84:5+1
    assume {:print "$at(3,3468,3469)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun supported_tokens::assert_supported [verification] at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:82:5+157
procedure {:timeLimit 40} $1_supported_tokens_assert_supported$verify(_$t0: int) returns ()
{
    // declare local variables
    var $t1: bool;
    var $t2: int;
    var $t3: int;
    var $t0: int;
    var $temp_0'address': int;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:82:5+1
    assume {:print "$at(3,3312,3313)"} true;
    assume $IsValid'address'($t0);

    // assume forall $rsc: 0x1::supported_tokens::SupportedTokens: ResourceDomain<0x1::supported_tokens::SupportedTokens>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:82:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_supported_tokens_SupportedTokens_$memory, $a_0)}(var $rsc := $ResourceValue($1_supported_tokens_SupportedTokens_$memory, $a_0);
    ($IsValid'$1_supported_tokens_SupportedTokens'($rsc))));

    // trace_local[registry_owner]($t0) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:82:5+1
    assume {:print "$track_local(100,1,0):", $t0} $t0 == $t0;

    // $t1 := supported_tokens::is_supported<#0>($t0) on_abort goto L3 with $t2 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:83:17+31
    assume {:print "$at(3,3412,3443)"} true;
    call $t1 := $1_supported_tokens_is_supported'#0'($t0);
    if ($abort_flag) {
        assume {:print "$at(3,3412,3443)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(100,1):", $t2} $t2 == $t2;
        goto L3;
    }

    // if ($t1) goto L1 else goto L0 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:83:9+6
    if ($t1) { goto L1; } else { goto L0; }

    // label L1 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:82:86+76
    assume {:print "$at(3,3393,3469)"} true;
L1:

    // goto L2 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:82:86+76
    assume {:print "$at(3,3393,3469)"} true;
    goto L2;

    // label L0 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:83:50+15
    assume {:print "$at(3,3445,3460)"} true;
L0:

    // $t3 := 3 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:83:50+15
    assume {:print "$at(3,3445,3460)"} true;
    $t3 := 3;
    assume $IsValid'u64'($t3);

    // trace_abort($t3) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:83:9+6
    assume {:print "$at(3,3404,3410)"} true;
    assume {:print "$track_abort(100,1):", $t3} $t3 == $t3;

    // $t2 := move($t3) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:83:9+6
    $t2 := $t3;

    // goto L3 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:83:9+6
    goto L3;

    // label L2 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:84:5+1
    assume {:print "$at(3,3468,3469)"} true;
L2:

    // return () at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:84:5+1
    assume {:print "$at(3,3468,3469)"} true;
    return;

    // label L3 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:84:5+1
L3:

    // abort($t2) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:84:5+1
    assume {:print "$at(3,3468,3469)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun supported_tokens::init_supported_tokens [verification] at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:19:5+355
procedure {:timeLimit 40} $1_supported_tokens_init_supported_tokens$verify(_$t0: $signer) returns ()
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: bool;
    var $t6: bool;
    var $t7: Table int (bool);
    var $t8: $1_supported_tokens_SupportedTokens;
    var $t9: int;
    var $t10: int;
    var $t0: $signer;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:19:5+1
    assume {:print "$at(3,558,559)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($t0->$addr);

    // assume forall $rsc: 0x1::supported_tokens::SupportedTokens: ResourceDomain<0x1::supported_tokens::SupportedTokens>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:19:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_supported_tokens_SupportedTokens_$memory, $a_0)}(var $rsc := $ResourceValue($1_supported_tokens_SupportedTokens_$memory, $a_0);
    ($IsValid'$1_supported_tokens_SupportedTokens'($rsc))));

    // trace_local[admin]($t0) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:19:5+1
    assume {:print "$track_local(100,2,0):", $t0} $t0 == $t0;

    // $t2 := signer::address_of($t0) on_abort goto L5 with $t3 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:20:26+25
    assume {:print "$at(3,641,666)"} true;
    call $t2 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(3,641,666)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(100,2):", $t3} $t3 == $t3;
        goto L5;
    }

    // trace_local[admin_addr]($t2) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:20:26+25
    assume {:print "$track_local(100,2,1):", $t2} $t2 == $t2;

    // $t4 := 0x1 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:21:31+7
    assume {:print "$at(3,699,706)"} true;
    $t4 := 1;
    assume $IsValid'address'($t4);

    // $t5 := ==($t2, $t4) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:21:17+21
    $t5 := $IsEqual'address'($t2, $t4);

    // if ($t5) goto L1 else goto L0 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:21:9+6
    if ($t5) { goto L1; } else { goto L0; }

    // label L1 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:22:18+35
    assume {:print "$at(3,745,780)"} true;
L1:

    // $t6 := exists<0x1::supported_tokens::SupportedTokens>($t2) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:22:18+35
    assume {:print "$at(3,745,780)"} true;
    $t6 := $ResourceExists($1_supported_tokens_SupportedTokens_$memory, $t2);

    // if ($t6) goto L2 else goto L3 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:22:17+36
    if ($t6) { goto L2; } else { goto L3; }

    // label L3 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:23:17+5
    assume {:print "$at(3,816,821)"} true;
L3:

    // $t7 := table::new<0x1::type_info::TypeInfo, bool>() on_abort goto L5 with $t3 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:24:22+28
    assume {:print "$at(3,864,892)"} true;
    call $t7 := $1_table_new'$1_type_info_TypeInfo_bool'();
    if ($abort_flag) {
        assume {:print "$at(3,864,892)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(100,2):", $t3} $t3 == $t3;
        goto L5;
    }

    // $t8 := pack 0x1::supported_tokens::SupportedTokens($t7) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:23:24+81
    assume {:print "$at(3,823,904)"} true;
    $t8 := $1_supported_tokens_SupportedTokens($t7);

    // move_to<0x1::supported_tokens::SupportedTokens>($t8, $t0) on_abort goto L5 with $t3 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:23:9+97
    if ($ResourceExists($1_supported_tokens_SupportedTokens_$memory, $t0->$addr)) {
        call $ExecFailureAbort();
    } else {
        $1_supported_tokens_SupportedTokens_$memory := $ResourceUpdate($1_supported_tokens_SupportedTokens_$memory, $t0->$addr, $t8);
    }
    if ($abort_flag) {
        assume {:print "$at(3,808,905)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(100,2):", $t3} $t3 == $t3;
        goto L5;
    }

    // goto L4 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:19:60+300
    assume {:print "$at(3,613,913)"} true;
    goto L4;

    // label L2 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:22:9+6
    assume {:print "$at(3,736,742)"} true;
L2:

    // $t9 := 2 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:22:55+14
    assume {:print "$at(3,782,796)"} true;
    $t9 := 2;
    assume $IsValid'u64'($t9);

    // trace_abort($t9) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:22:9+6
    assume {:print "$at(3,736,742)"} true;
    assume {:print "$track_abort(100,2):", $t9} $t9 == $t9;

    // $t3 := move($t9) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:22:9+6
    $t3 := $t9;

    // goto L5 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:22:9+6
    goto L5;

    // label L0 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:21:9+6
    assume {:print "$at(3,677,683)"} true;
L0:

    // $t10 := 1 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:21:40+16
    assume {:print "$at(3,708,724)"} true;
    $t10 := 1;
    assume $IsValid'u64'($t10);

    // trace_abort($t10) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:21:9+6
    assume {:print "$at(3,677,683)"} true;
    assume {:print "$track_abort(100,2):", $t10} $t10 == $t10;

    // $t3 := move($t10) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:21:9+6
    $t3 := $t10;

    // goto L5 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:21:9+6
    goto L5;

    // label L4 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:26:5+1
    assume {:print "$at(3,912,913)"} true;
L4:

    // return () at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:26:5+1
    assume {:print "$at(3,912,913)"} true;
    return;

    // label L5 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:26:5+1
L5:

    // abort($t3) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:26:5+1
    assume {:print "$at(3,912,913)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun supported_tokens::is_supported<#0> [baseline] at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:66:5+520
procedure {:inline 1} $1_supported_tokens_is_supported'#0'(_$t0: int) returns ($ret0: bool)
{
    // declare local variables
    var $t1: $1_type_info_TypeInfo;
    var $t2: $1_supported_tokens_SupportedTokens;
    var $t3: bool;
    var $t4: bool;
    var $t5: bool;
    var $t6: bool;
    var $t7: $1_type_info_TypeInfo;
    var $t8: int;
    var $t9: $1_supported_tokens_SupportedTokens;
    var $t10: Table int (bool);
    var $t11: bool;
    var $t12: Table int (bool);
    var $t13: bool;
    var $t14: bool;
    var $t0: int;
    var $temp_0'$1_supported_tokens_SupportedTokens': $1_supported_tokens_SupportedTokens;
    var $temp_0'$1_type_info_TypeInfo': $1_type_info_TypeInfo;
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[registry_owner]($t0) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:66:5+1
    assume {:print "$at(3,2708,2709)"} true;
    assume {:print "$track_local(100,3,0):", $t0} $t0 == $t0;

    // $t4 := exists<0x1::supported_tokens::SupportedTokens>($t0) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:67:14+39
    assume {:print "$at(3,2807,2846)"} true;
    $t4 := $ResourceExists($1_supported_tokens_SupportedTokens_$memory, $t0);

    // if ($t4) goto L0 else goto L1 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:67:13+40
    if ($t4) { goto L0; } else { goto L1; }

    // label L1 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:68:20+5
    assume {:print "$at(3,2870,2875)"} true;
L1:

    // $t5 := false at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:68:20+5
    assume {:print "$at(3,2870,2875)"} true;
    $t5 := false;
    assume $IsValid'bool'($t5);

    // trace_return[0]($t5) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:68:13+12
    assume {:print "$track_return(100,3,0):", $t5} $t5 == $t5;

    // $t6 := move($t5) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:68:13+12
    $t6 := $t5;

    // goto L5 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:68:13+12
    goto L5;

    // label L0 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:71:25+23
    assume {:print "$at(3,2923,2946)"} true;
L0:

    // $t7 := type_info::type_of<#0>() on_abort goto L6 with $t8 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:71:25+23
    assume {:print "$at(3,2923,2946)"} true;
    if (!(#0_info is $TypeParamStruct)) {
        call $ExecFailureAbort();
    }
    else {
        $t7 := $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s);
    }
    if ($abort_flag) {
        assume {:print "$at(3,2923,2946)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(100,3):", $t8} $t8 == $t8;
        goto L6;
    }

    // trace_local[type_info]($t7) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:71:25+23
    assume {:print "$track_local(100,3,1):", $t7} $t7 == $t7;

    // $t9 := get_global<0x1::supported_tokens::SupportedTokens>($t0) on_abort goto L6 with $t8 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:72:32+46
    assume {:print "$at(3,2980,3026)"} true;
    if (!$ResourceExists($1_supported_tokens_SupportedTokens_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t9 := $ResourceValue($1_supported_tokens_SupportedTokens_$memory, $t0);
    }
    if ($abort_flag) {
        assume {:print "$at(3,2980,3026)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(100,3):", $t8} $t8 == $t8;
        goto L6;
    }

    // trace_local[supported_tokens]($t9) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:72:32+46
    assume {:print "$track_local(100,3,2):", $t9} $t9 == $t9;

    // $t10 := get_field<0x1::supported_tokens::SupportedTokens>.allowed($t9) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:74:29+25
    assume {:print "$at(3,3067,3092)"} true;
    $t10 := $t9->$allowed;

    // $t11 := table::contains<0x1::type_info::TypeInfo, bool>($t10, $t7) on_abort goto L6 with $t8 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:74:13+53
    call $t11 := $1_table_contains'$1_type_info_TypeInfo_bool'($t10, $t7);
    if ($abort_flag) {
        assume {:print "$at(3,3051,3104)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(100,3):", $t8} $t8 == $t8;
        goto L6;
    }

    // if ($t11) goto L3 else goto L2 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:74:9+174
    if ($t11) { goto L3; } else { goto L2; }

    // label L3 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:75:28+25
    assume {:print "$at(3,3136,3161)"} true;
L3:

    // $t12 := get_field<0x1::supported_tokens::SupportedTokens>.allowed($t9) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:75:28+25
    assume {:print "$at(3,3136,3161)"} true;
    $t12 := $t9->$allowed;

    // $t13 := table::borrow<0x1::type_info::TypeInfo, bool>($t12, $t7) on_abort goto L6 with $t8 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:75:14+51
    call $t13 := $1_table_borrow'$1_type_info_TypeInfo_bool'($t12, $t7);
    if ($abort_flag) {
        assume {:print "$at(3,3122,3173)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(100,3):", $t8} $t8 == $t8;
        goto L6;
    }

    // $t3 := $t13 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:75:13+52
    $t3 := $t13;

    // trace_local[$t3]($t13) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:75:13+52
    assume {:print "$track_local(100,3,3):", $t13} $t13 == $t13;

    // label L4 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:66:88+437
    assume {:print "$at(3,2791,3228)"} true;
L4:

    // trace_return[0]($t3) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:66:88+437
    assume {:print "$at(3,2791,3228)"} true;
    assume {:print "$track_return(100,3,0):", $t3} $t3 == $t3;

    // $t6 := move($t3) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:66:88+437
    $t6 := $t3;

    // goto L5 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:66:88+437
    goto L5;

    // label L2 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:77:13+5
    assume {:print "$at(3,3205,3210)"} true;
L2:

    // $t14 := false at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:77:13+5
    assume {:print "$at(3,3205,3210)"} true;
    $t14 := false;
    assume $IsValid'bool'($t14);

    // $t3 := $t14 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:77:13+5
    $t3 := $t14;

    // trace_local[$t3]($t14) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:77:13+5
    assume {:print "$track_local(100,3,3):", $t14} $t14 == $t14;

    // goto L4 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:77:13+5
    goto L4;

    // label L5 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:79:5+1
    assume {:print "$at(3,3227,3228)"} true;
L5:

    // return $t6 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:79:5+1
    assume {:print "$at(3,3227,3228)"} true;
    $ret0 := $t6;
    return;

    // label L6 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:79:5+1
L6:

    // abort($t8) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:79:5+1
    assume {:print "$at(3,3227,3228)"} true;
    $abort_code := $t8;
    $abort_flag := true;
    return;

}

// fun supported_tokens::is_supported [verification] at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:66:5+520
procedure {:timeLimit 40} $1_supported_tokens_is_supported$verify(_$t0: int) returns ($ret0: bool)
{
    // declare local variables
    var $t1: $1_type_info_TypeInfo;
    var $t2: $1_supported_tokens_SupportedTokens;
    var $t3: bool;
    var $t4: bool;
    var $t5: bool;
    var $t6: bool;
    var $t7: $1_type_info_TypeInfo;
    var $t8: int;
    var $t9: $1_supported_tokens_SupportedTokens;
    var $t10: Table int (bool);
    var $t11: bool;
    var $t12: Table int (bool);
    var $t13: bool;
    var $t14: bool;
    var $t0: int;
    var $temp_0'$1_supported_tokens_SupportedTokens': $1_supported_tokens_SupportedTokens;
    var $temp_0'$1_type_info_TypeInfo': $1_type_info_TypeInfo;
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:66:5+1
    assume {:print "$at(3,2708,2709)"} true;
    assume $IsValid'address'($t0);

    // assume forall $rsc: 0x1::supported_tokens::SupportedTokens: ResourceDomain<0x1::supported_tokens::SupportedTokens>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:66:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_supported_tokens_SupportedTokens_$memory, $a_0)}(var $rsc := $ResourceValue($1_supported_tokens_SupportedTokens_$memory, $a_0);
    ($IsValid'$1_supported_tokens_SupportedTokens'($rsc))));

    // trace_local[registry_owner]($t0) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:66:5+1
    assume {:print "$track_local(100,3,0):", $t0} $t0 == $t0;

    // $t4 := exists<0x1::supported_tokens::SupportedTokens>($t0) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:67:14+39
    assume {:print "$at(3,2807,2846)"} true;
    $t4 := $ResourceExists($1_supported_tokens_SupportedTokens_$memory, $t0);

    // if ($t4) goto L0 else goto L1 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:67:13+40
    if ($t4) { goto L0; } else { goto L1; }

    // label L1 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:68:20+5
    assume {:print "$at(3,2870,2875)"} true;
L1:

    // $t5 := false at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:68:20+5
    assume {:print "$at(3,2870,2875)"} true;
    $t5 := false;
    assume $IsValid'bool'($t5);

    // trace_return[0]($t5) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:68:13+12
    assume {:print "$track_return(100,3,0):", $t5} $t5 == $t5;

    // $t6 := move($t5) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:68:13+12
    $t6 := $t5;

    // goto L5 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:68:13+12
    goto L5;

    // label L0 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:71:25+23
    assume {:print "$at(3,2923,2946)"} true;
L0:

    // $t7 := type_info::type_of<#0>() on_abort goto L6 with $t8 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:71:25+23
    assume {:print "$at(3,2923,2946)"} true;
    if (!(#0_info is $TypeParamStruct)) {
        call $ExecFailureAbort();
    }
    else {
        $t7 := $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s);
    }
    if ($abort_flag) {
        assume {:print "$at(3,2923,2946)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(100,3):", $t8} $t8 == $t8;
        goto L6;
    }

    // trace_local[type_info]($t7) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:71:25+23
    assume {:print "$track_local(100,3,1):", $t7} $t7 == $t7;

    // $t9 := get_global<0x1::supported_tokens::SupportedTokens>($t0) on_abort goto L6 with $t8 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:72:32+46
    assume {:print "$at(3,2980,3026)"} true;
    if (!$ResourceExists($1_supported_tokens_SupportedTokens_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t9 := $ResourceValue($1_supported_tokens_SupportedTokens_$memory, $t0);
    }
    if ($abort_flag) {
        assume {:print "$at(3,2980,3026)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(100,3):", $t8} $t8 == $t8;
        goto L6;
    }

    // trace_local[supported_tokens]($t9) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:72:32+46
    assume {:print "$track_local(100,3,2):", $t9} $t9 == $t9;

    // $t10 := get_field<0x1::supported_tokens::SupportedTokens>.allowed($t9) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:74:29+25
    assume {:print "$at(3,3067,3092)"} true;
    $t10 := $t9->$allowed;

    // $t11 := table::contains<0x1::type_info::TypeInfo, bool>($t10, $t7) on_abort goto L6 with $t8 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:74:13+53
    call $t11 := $1_table_contains'$1_type_info_TypeInfo_bool'($t10, $t7);
    if ($abort_flag) {
        assume {:print "$at(3,3051,3104)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(100,3):", $t8} $t8 == $t8;
        goto L6;
    }

    // if ($t11) goto L3 else goto L2 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:74:9+174
    if ($t11) { goto L3; } else { goto L2; }

    // label L3 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:75:28+25
    assume {:print "$at(3,3136,3161)"} true;
L3:

    // $t12 := get_field<0x1::supported_tokens::SupportedTokens>.allowed($t9) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:75:28+25
    assume {:print "$at(3,3136,3161)"} true;
    $t12 := $t9->$allowed;

    // $t13 := table::borrow<0x1::type_info::TypeInfo, bool>($t12, $t7) on_abort goto L6 with $t8 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:75:14+51
    call $t13 := $1_table_borrow'$1_type_info_TypeInfo_bool'($t12, $t7);
    if ($abort_flag) {
        assume {:print "$at(3,3122,3173)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(100,3):", $t8} $t8 == $t8;
        goto L6;
    }

    // $t3 := $t13 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:75:13+52
    $t3 := $t13;

    // trace_local[$t3]($t13) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:75:13+52
    assume {:print "$track_local(100,3,3):", $t13} $t13 == $t13;

    // label L4 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:66:88+437
    assume {:print "$at(3,2791,3228)"} true;
L4:

    // trace_return[0]($t3) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:66:88+437
    assume {:print "$at(3,2791,3228)"} true;
    assume {:print "$track_return(100,3,0):", $t3} $t3 == $t3;

    // $t6 := move($t3) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:66:88+437
    $t6 := $t3;

    // goto L5 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:66:88+437
    goto L5;

    // label L2 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:77:13+5
    assume {:print "$at(3,3205,3210)"} true;
L2:

    // $t14 := false at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:77:13+5
    assume {:print "$at(3,3205,3210)"} true;
    $t14 := false;
    assume $IsValid'bool'($t14);

    // $t3 := $t14 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:77:13+5
    $t3 := $t14;

    // trace_local[$t3]($t14) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:77:13+5
    assume {:print "$track_local(100,3,3):", $t14} $t14 == $t14;

    // goto L4 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:77:13+5
    goto L4;

    // label L5 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:79:5+1
    assume {:print "$at(3,3227,3228)"} true;
L5:

    // return $t6 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:79:5+1
    assume {:print "$at(3,3227,3228)"} true;
    $ret0 := $t6;
    return;

    // label L6 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:79:5+1
L6:

    // abort($t8) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:79:5+1
    assume {:print "$at(3,3227,3228)"} true;
    $abort_code := $t8;
    $abort_flag := true;
    return;

}

// fun supported_tokens::registry_exists [verification] at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:89:5+115
procedure {:timeLimit 40} $1_supported_tokens_registry_exists$verify(_$t0: int) returns ($ret0: bool)
{
    // declare local variables
    var $t1: bool;
    var $t0: int;
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:89:5+1
    assume {:print "$at(3,3591,3592)"} true;
    assume $IsValid'address'($t0);

    // assume forall $rsc: 0x1::supported_tokens::SupportedTokens: ResourceDomain<0x1::supported_tokens::SupportedTokens>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:89:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_supported_tokens_SupportedTokens_$memory, $a_0)}(var $rsc := $ResourceValue($1_supported_tokens_SupportedTokens_$memory, $a_0);
    ($IsValid'$1_supported_tokens_SupportedTokens'($rsc))));

    // trace_local[registry_owner]($t0) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:89:5+1
    assume {:print "$track_local(100,4,0):", $t0} $t0 == $t0;

    // $t1 := exists<0x1::supported_tokens::SupportedTokens>($t0) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:90:9+39
    assume {:print "$at(3,3660,3699)"} true;
    $t1 := $ResourceExists($1_supported_tokens_SupportedTokens_$memory, $t0);

    // trace_return[0]($t1) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:90:9+39
    assume {:print "$track_return(100,4,0):", $t1} $t1 == $t1;

    // label L1 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:91:5+1
    assume {:print "$at(3,3705,3706)"} true;
L1:

    // return $t1 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:91:5+1
    assume {:print "$at(3,3705,3706)"} true;
    $ret0 := $t1;
    return;

}

// fun supported_tokens::remove_supported_token [verification] at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:49:5+726
procedure {:timeLimit 40} $1_supported_tokens_remove_supported_token$verify(_$t0: $signer) returns ()
{
    // declare local variables
    var $t1: int;
    var $t2: $1_type_info_TypeInfo;
    var $t3: $Mutation ($1_supported_tokens_SupportedTokens);
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: bool;
    var $t8: bool;
    var $t9: $1_type_info_TypeInfo;
    var $t10: $Mutation ($1_supported_tokens_SupportedTokens);
    var $t11: Table int (bool);
    var $t12: bool;
    var $t13: bool;
    var $t14: $Mutation (Table int (bool));
    var $t15: $Mutation (bool);
    var $t16: $Mutation (Table int (bool));
    var $t17: bool;
    var $t18: int;
    var $t19: int;
    var $t0: $signer;
    var $temp_0'$1_supported_tokens_SupportedTokens': $1_supported_tokens_SupportedTokens;
    var $temp_0'$1_type_info_TypeInfo': $1_type_info_TypeInfo;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:49:5+1
    assume {:print "$at(3,1938,1939)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($t0->$addr);

    // assume forall $rsc: 0x1::supported_tokens::SupportedTokens: ResourceDomain<0x1::supported_tokens::SupportedTokens>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:49:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_supported_tokens_SupportedTokens_$memory, $a_0)}(var $rsc := $ResourceValue($1_supported_tokens_SupportedTokens_$memory, $a_0);
    ($IsValid'$1_supported_tokens_SupportedTokens'($rsc))));

    // trace_local[admin]($t0) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:49:5+1
    assume {:print "$track_local(100,5,0):", $t0} $t0 == $t0;

    // $t4 := signer::address_of($t0) on_abort goto L8 with $t5 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:50:26+25
    assume {:print "$at(3,2050,2075)"} true;
    call $t4 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(3,2050,2075)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(100,5):", $t5} $t5 == $t5;
        goto L8;
    }

    // trace_local[admin_addr]($t4) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:50:26+25
    assume {:print "$track_local(100,5,1):", $t4} $t4 == $t4;

    // $t6 := 0x1 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:51:31+7
    assume {:print "$at(3,2108,2115)"} true;
    $t6 := 1;
    assume $IsValid'address'($t6);

    // $t7 := ==($t4, $t6) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:51:17+21
    $t7 := $IsEqual'address'($t4, $t6);

    // if ($t7) goto L1 else goto L0 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:51:9+6
    if ($t7) { goto L1; } else { goto L0; }

    // label L1 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:52:17+35
    assume {:print "$at(3,2153,2188)"} true;
L1:

    // $t8 := exists<0x1::supported_tokens::SupportedTokens>($t4) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:52:17+35
    assume {:print "$at(3,2153,2188)"} true;
    $t8 := $ResourceExists($1_supported_tokens_SupportedTokens_$memory, $t4);

    // if ($t8) goto L3 else goto L2 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:52:9+6
    if ($t8) { goto L3; } else { goto L2; }

    // label L3 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:54:25+23
    assume {:print "$at(3,2237,2260)"} true;
L3:

    // $t9 := type_info::type_of<#0>() on_abort goto L8 with $t5 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:54:25+23
    assume {:print "$at(3,2237,2260)"} true;
    if (!(#0_info is $TypeParamStruct)) {
        call $ExecFailureAbort();
    }
    else {
        $t9 := $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s);
    }
    if ($abort_flag) {
        assume {:print "$at(3,2237,2260)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(100,5):", $t5} $t5 == $t5;
        goto L8;
    }

    // trace_local[type_info]($t9) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:54:25+23
    assume {:print "$track_local(100,5,2):", $t9} $t9 == $t9;

    // $t10 := borrow_global<0x1::supported_tokens::SupportedTokens>($t4) on_abort goto L8 with $t5 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:55:32+46
    assume {:print "$at(3,2294,2340)"} true;
    if (!$ResourceExists($1_supported_tokens_SupportedTokens_$memory, $t4)) {
        call $ExecFailureAbort();
    } else {
        $t10 := $Mutation($Global($t4), EmptyVec(), $ResourceValue($1_supported_tokens_SupportedTokens_$memory, $t4));
    }
    if ($abort_flag) {
        assume {:print "$at(3,2294,2340)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(100,5):", $t5} $t5 == $t5;
        goto L8;
    }

    // trace_local[supported_tokens]($t10) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:55:32+46
    $temp_0'$1_supported_tokens_SupportedTokens' := $Dereference($t10);
    assume {:print "$track_local(100,5,3):", $temp_0'$1_supported_tokens_SupportedTokens'} $temp_0'$1_supported_tokens_SupportedTokens' == $temp_0'$1_supported_tokens_SupportedTokens';

    // $t11 := get_field<0x1::supported_tokens::SupportedTokens>.allowed($t10) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:58:29+25
    assume {:print "$at(3,2431,2456)"} true;
    $t11 := $Dereference($t10)->$allowed;

    // $t12 := table::contains<0x1::type_info::TypeInfo, bool>($t11, $t9) on_abort goto L8 with $t5 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:58:13+53
    call $t12 := $1_table_contains'$1_type_info_TypeInfo_bool'($t11, $t9);
    if ($abort_flag) {
        assume {:print "$at(3,2415,2468)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(100,5):", $t5} $t5 == $t5;
        goto L8;
    }

    // if ($t12) goto L5 else goto L4 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:58:9+246
    if ($t12) { goto L5; } else { goto L4; }

    // label L5 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:59:76+5
    assume {:print "$at(3,2548,2553)"} true;
L5:

    // $t13 := false at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:59:76+5
    assume {:print "$at(3,2548,2553)"} true;
    $t13 := false;
    assume $IsValid'bool'($t13);

    // $t14 := borrow_field<0x1::supported_tokens::SupportedTokens>.allowed($t10) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:59:32+29
    $t14 := $ChildMutation($t10, 0, $Dereference($t10)->$allowed);

    // $t15 := table::borrow_mut<0x1::type_info::TypeInfo, bool>($t14, $t9) on_abort goto L8 with $t5 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:59:14+59
    call $t15,$t14 := $1_table_borrow_mut'$1_type_info_TypeInfo_bool'($t14, $t9);
    if ($abort_flag) {
        assume {:print "$at(3,2486,2545)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(100,5):", $t5} $t5 == $t5;
        goto L8;
    }

    // write_ref($t15, $t13) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:59:13+68
    $t15 := $UpdateMutation($t15, $t13);

    // write_back[Reference($t14)[]]($t15) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:59:13+68
    $t14 := $UpdateMutation($t14, UpdateTable($Dereference($t14), ReadVec($t15->p, LenVec($t14->p)), $Dereference($t15)));

    // write_back[Reference($t10).allowed (0x1::table::Table<0x1::type_info::TypeInfo, bool>)]($t14) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:59:13+68
    $t10 := $UpdateMutation($t10, $Update'$1_supported_tokens_SupportedTokens'_allowed($Dereference($t10), $Dereference($t14)));

    // write_back[0x1::supported_tokens::SupportedTokens@]($t10) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:59:13+68
    $1_supported_tokens_SupportedTokens_$memory := $ResourceUpdate($1_supported_tokens_SupportedTokens_$memory, $GlobalLocationAddress($t10),
        $Dereference($t10));

    // label L6 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:49:89+642
    assume {:print "$at(3,2022,2664)"} true;
L6:

    // goto L7 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:49:89+642
    assume {:print "$at(3,2022,2664)"} true;
    goto L7;

    // label L4 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:61:24+29
    assume {:print "$at(3,2597,2626)"} true;
L4:

    // $t16 := borrow_field<0x1::supported_tokens::SupportedTokens>.allowed($t10) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:61:24+29
    assume {:print "$at(3,2597,2626)"} true;
    $t16 := $ChildMutation($t10, 0, $Dereference($t10)->$allowed);

    // $t17 := false at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:61:66+5
    $t17 := false;
    assume $IsValid'bool'($t17);

    // table::add<0x1::type_info::TypeInfo, bool>($t16, $t9, $t17) on_abort goto L8 with $t5 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:61:13+59
    call $t16 := $1_table_add'$1_type_info_TypeInfo_bool'($t16, $t9, $t17);
    if ($abort_flag) {
        assume {:print "$at(3,2586,2645)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(100,5):", $t5} $t5 == $t5;
        goto L8;
    }

    // write_back[Reference($t10).allowed (0x1::table::Table<0x1::type_info::TypeInfo, bool>)]($t16) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:61:13+59
    $t10 := $UpdateMutation($t10, $Update'$1_supported_tokens_SupportedTokens'_allowed($Dereference($t10), $Dereference($t16)));

    // write_back[0x1::supported_tokens::SupportedTokens@]($t10) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:61:13+59
    $1_supported_tokens_SupportedTokens_$memory := $ResourceUpdate($1_supported_tokens_SupportedTokens_$memory, $GlobalLocationAddress($t10),
        $Dereference($t10));

    // goto L6 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:61:13+59
    goto L6;

    // label L2 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:52:54+17
    assume {:print "$at(3,2190,2207)"} true;
L2:

    // $t18 := 4 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:52:54+17
    assume {:print "$at(3,2190,2207)"} true;
    $t18 := 4;
    assume $IsValid'u64'($t18);

    // trace_abort($t18) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:52:9+6
    assume {:print "$at(3,2145,2151)"} true;
    assume {:print "$track_abort(100,5):", $t18} $t18 == $t18;

    // $t5 := move($t18) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:52:9+6
    $t5 := $t18;

    // goto L8 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:52:9+6
    goto L8;

    // label L0 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:51:40+16
    assume {:print "$at(3,2117,2133)"} true;
L0:

    // $t19 := 1 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:51:40+16
    assume {:print "$at(3,2117,2133)"} true;
    $t19 := 1;
    assume $IsValid'u64'($t19);

    // trace_abort($t19) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:51:9+6
    assume {:print "$at(3,2086,2092)"} true;
    assume {:print "$track_abort(100,5):", $t19} $t19 == $t19;

    // $t5 := move($t19) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:51:9+6
    $t5 := $t19;

    // goto L8 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:51:9+6
    goto L8;

    // label L7 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:63:5+1
    assume {:print "$at(3,2663,2664)"} true;
L7:

    // return () at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:63:5+1
    assume {:print "$at(3,2663,2664)"} true;
    return;

    // label L8 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:63:5+1
L8:

    // abort($t5) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:63:5+1
    assume {:print "$at(3,2663,2664)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun supported_tokens::token_exists_in_registry [verification] at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:95:5+391
procedure {:timeLimit 40} $1_supported_tokens_token_exists_in_registry$verify(_$t0: int) returns ($ret0: bool)
{
    // declare local variables
    var $t1: $1_type_info_TypeInfo;
    var $t2: bool;
    var $t3: bool;
    var $t4: bool;
    var $t5: $1_type_info_TypeInfo;
    var $t6: int;
    var $t7: $1_supported_tokens_SupportedTokens;
    var $t8: Table int (bool);
    var $t9: bool;
    var $t0: int;
    var $temp_0'$1_type_info_TypeInfo': $1_type_info_TypeInfo;
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:95:5+1
    assume {:print "$at(3,3819,3820)"} true;
    assume $IsValid'address'($t0);

    // assume forall $rsc: 0x1::supported_tokens::SupportedTokens: ResourceDomain<0x1::supported_tokens::SupportedTokens>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:95:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_supported_tokens_SupportedTokens_$memory, $a_0)}(var $rsc := $ResourceValue($1_supported_tokens_SupportedTokens_$memory, $a_0);
    ($IsValid'$1_supported_tokens_SupportedTokens'($rsc))));

    // trace_local[registry_owner]($t0) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:95:5+1
    assume {:print "$track_local(100,6,0):", $t0} $t0 == $t0;

    // $t2 := exists<0x1::supported_tokens::SupportedTokens>($t0) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:96:14+39
    assume {:print "$at(3,3930,3969)"} true;
    $t2 := $ResourceExists($1_supported_tokens_SupportedTokens_$memory, $t0);

    // if ($t2) goto L0 else goto L1 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:96:13+40
    if ($t2) { goto L0; } else { goto L1; }

    // label L1 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:97:20+5
    assume {:print "$at(3,3993,3998)"} true;
L1:

    // $t3 := false at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:97:20+5
    assume {:print "$at(3,3993,3998)"} true;
    $t3 := false;
    assume $IsValid'bool'($t3);

    // trace_return[0]($t3) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:97:13+12
    assume {:print "$track_return(100,6,0):", $t3} $t3 == $t3;

    // $t4 := move($t3) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:97:13+12
    $t4 := $t3;

    // goto L2 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:97:13+12
    goto L2;

    // label L0 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:99:25+23
    assume {:print "$at(3,4036,4059)"} true;
L0:

    // $t5 := type_info::type_of<#0>() on_abort goto L3 with $t6 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:99:25+23
    assume {:print "$at(3,4036,4059)"} true;
    if (!(#0_info is $TypeParamStruct)) {
        call $ExecFailureAbort();
    }
    else {
        $t5 := $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s);
    }
    if ($abort_flag) {
        assume {:print "$at(3,4036,4059)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(100,6):", $t6} $t6 == $t6;
        goto L3;
    }

    // trace_local[type_info]($t5) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:99:25+23
    assume {:print "$track_local(100,6,1):", $t5} $t5 == $t5;

    // $t7 := get_global<0x1::supported_tokens::SupportedTokens>($t0) on_abort goto L3 with $t6 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:100:32+46
    assume {:print "$at(3,4093,4139)"} true;
    if (!$ResourceExists($1_supported_tokens_SupportedTokens_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t7 := $ResourceValue($1_supported_tokens_SupportedTokens_$memory, $t0);
    }
    if ($abort_flag) {
        assume {:print "$at(3,4093,4139)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(100,6):", $t6} $t6 == $t6;
        goto L3;
    }

    // $t8 := get_field<0x1::supported_tokens::SupportedTokens>.allowed($t7) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:101:25+25
    assume {:print "$at(3,4166,4191)"} true;
    $t8 := $t7->$allowed;

    // $t9 := table::contains<0x1::type_info::TypeInfo, bool>($t8, $t5) on_abort goto L3 with $t6 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:101:9+53
    call $t9 := $1_table_contains'$1_type_info_TypeInfo_bool'($t8, $t5);
    if ($abort_flag) {
        assume {:print "$at(3,4150,4203)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(100,6):", $t6} $t6 == $t6;
        goto L3;
    }

    // trace_return[0]($t9) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:95:100+296
    assume {:print "$at(3,3914,4210)"} true;
    assume {:print "$track_return(100,6,0):", $t9} $t9 == $t9;

    // $t4 := move($t9) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:95:100+296
    $t4 := $t9;

    // label L2 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:102:5+1
    assume {:print "$at(3,4209,4210)"} true;
L2:

    // return $t4 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:102:5+1
    assume {:print "$at(3,4209,4210)"} true;
    $ret0 := $t4;
    return;

    // label L3 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:102:5+1
L3:

    // abort($t6) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\supported_tokens.move:102:5+1
    assume {:print "$at(3,4209,4210)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}

// struct paymentv1::EscrowCapability at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:54:5+80
datatype $1_paymentv1_EscrowCapability {
    $1_paymentv1_EscrowCapability($cap: $1_account_SignerCapability)
}
function {:inline} $Update'$1_paymentv1_EscrowCapability'_cap(s: $1_paymentv1_EscrowCapability, x: $1_account_SignerCapability): $1_paymentv1_EscrowCapability {
    $1_paymentv1_EscrowCapability(x)
}
function $IsValid'$1_paymentv1_EscrowCapability'(s: $1_paymentv1_EscrowCapability): bool {
    $IsValid'$1_account_SignerCapability'(s->$cap)
}
function {:inline} $IsEqual'$1_paymentv1_EscrowCapability'(s1: $1_paymentv1_EscrowCapability, s2: $1_paymentv1_EscrowCapability): bool {
    s1 == s2
}
var $1_paymentv1_EscrowCapability_$memory: $Memory $1_paymentv1_EscrowCapability;

// struct paymentv1::PaymentProcessed at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:24:5+202
datatype $1_paymentv1_PaymentProcessed {
    $1_paymentv1_PaymentProcessed($payment_id: $1_string_String, $payer: int, $recipient: int, $amount: int, $token: $1_string_String, $timestamp: int)
}
function {:inline} $Update'$1_paymentv1_PaymentProcessed'_payment_id(s: $1_paymentv1_PaymentProcessed, x: $1_string_String): $1_paymentv1_PaymentProcessed {
    $1_paymentv1_PaymentProcessed(x, s->$payer, s->$recipient, s->$amount, s->$token, s->$timestamp)
}
function {:inline} $Update'$1_paymentv1_PaymentProcessed'_payer(s: $1_paymentv1_PaymentProcessed, x: int): $1_paymentv1_PaymentProcessed {
    $1_paymentv1_PaymentProcessed(s->$payment_id, x, s->$recipient, s->$amount, s->$token, s->$timestamp)
}
function {:inline} $Update'$1_paymentv1_PaymentProcessed'_recipient(s: $1_paymentv1_PaymentProcessed, x: int): $1_paymentv1_PaymentProcessed {
    $1_paymentv1_PaymentProcessed(s->$payment_id, s->$payer, x, s->$amount, s->$token, s->$timestamp)
}
function {:inline} $Update'$1_paymentv1_PaymentProcessed'_amount(s: $1_paymentv1_PaymentProcessed, x: int): $1_paymentv1_PaymentProcessed {
    $1_paymentv1_PaymentProcessed(s->$payment_id, s->$payer, s->$recipient, x, s->$token, s->$timestamp)
}
function {:inline} $Update'$1_paymentv1_PaymentProcessed'_token(s: $1_paymentv1_PaymentProcessed, x: $1_string_String): $1_paymentv1_PaymentProcessed {
    $1_paymentv1_PaymentProcessed(s->$payment_id, s->$payer, s->$recipient, s->$amount, x, s->$timestamp)
}
function {:inline} $Update'$1_paymentv1_PaymentProcessed'_timestamp(s: $1_paymentv1_PaymentProcessed, x: int): $1_paymentv1_PaymentProcessed {
    $1_paymentv1_PaymentProcessed(s->$payment_id, s->$payer, s->$recipient, s->$amount, s->$token, x)
}
function $IsValid'$1_paymentv1_PaymentProcessed'(s: $1_paymentv1_PaymentProcessed): bool {
    $IsValid'$1_string_String'(s->$payment_id)
      && $IsValid'address'(s->$payer)
      && $IsValid'address'(s->$recipient)
      && $IsValid'u64'(s->$amount)
      && $IsValid'$1_string_String'(s->$token)
      && $IsValid'u64'(s->$timestamp)
}
function {:inline} $IsEqual'$1_paymentv1_PaymentProcessed'(s1: $1_paymentv1_PaymentProcessed, s2: $1_paymentv1_PaymentProcessed): bool {
    $IsEqual'$1_string_String'(s1->$payment_id, s2->$payment_id)
    && $IsEqual'address'(s1->$payer, s2->$payer)
    && $IsEqual'address'(s1->$recipient, s2->$recipient)
    && $IsEqual'u64'(s1->$amount, s2->$amount)
    && $IsEqual'$1_string_String'(s1->$token, s2->$token)
    && $IsEqual'u64'(s1->$timestamp, s2->$timestamp)}

// struct paymentv1::TransferClaimed at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:44:5+197
datatype $1_paymentv1_TransferClaimed {
    $1_paymentv1_TransferClaimed($link_id: $1_string_String, $sender: int, $claimer: int, $amount: int, $token: $1_string_String, $timestamp: int)
}
function {:inline} $Update'$1_paymentv1_TransferClaimed'_link_id(s: $1_paymentv1_TransferClaimed, x: $1_string_String): $1_paymentv1_TransferClaimed {
    $1_paymentv1_TransferClaimed(x, s->$sender, s->$claimer, s->$amount, s->$token, s->$timestamp)
}
function {:inline} $Update'$1_paymentv1_TransferClaimed'_sender(s: $1_paymentv1_TransferClaimed, x: int): $1_paymentv1_TransferClaimed {
    $1_paymentv1_TransferClaimed(s->$link_id, x, s->$claimer, s->$amount, s->$token, s->$timestamp)
}
function {:inline} $Update'$1_paymentv1_TransferClaimed'_claimer(s: $1_paymentv1_TransferClaimed, x: int): $1_paymentv1_TransferClaimed {
    $1_paymentv1_TransferClaimed(s->$link_id, s->$sender, x, s->$amount, s->$token, s->$timestamp)
}
function {:inline} $Update'$1_paymentv1_TransferClaimed'_amount(s: $1_paymentv1_TransferClaimed, x: int): $1_paymentv1_TransferClaimed {
    $1_paymentv1_TransferClaimed(s->$link_id, s->$sender, s->$claimer, x, s->$token, s->$timestamp)
}
function {:inline} $Update'$1_paymentv1_TransferClaimed'_token(s: $1_paymentv1_TransferClaimed, x: $1_string_String): $1_paymentv1_TransferClaimed {
    $1_paymentv1_TransferClaimed(s->$link_id, s->$sender, s->$claimer, s->$amount, x, s->$timestamp)
}
function {:inline} $Update'$1_paymentv1_TransferClaimed'_timestamp(s: $1_paymentv1_TransferClaimed, x: int): $1_paymentv1_TransferClaimed {
    $1_paymentv1_TransferClaimed(s->$link_id, s->$sender, s->$claimer, s->$amount, s->$token, x)
}
function $IsValid'$1_paymentv1_TransferClaimed'(s: $1_paymentv1_TransferClaimed): bool {
    $IsValid'$1_string_String'(s->$link_id)
      && $IsValid'address'(s->$sender)
      && $IsValid'address'(s->$claimer)
      && $IsValid'u64'(s->$amount)
      && $IsValid'$1_string_String'(s->$token)
      && $IsValid'u64'(s->$timestamp)
}
function {:inline} $IsEqual'$1_paymentv1_TransferClaimed'(s1: $1_paymentv1_TransferClaimed, s2: $1_paymentv1_TransferClaimed): bool {
    $IsEqual'$1_string_String'(s1->$link_id, s2->$link_id)
    && $IsEqual'address'(s1->$sender, s2->$sender)
    && $IsEqual'address'(s1->$claimer, s2->$claimer)
    && $IsEqual'u64'(s1->$amount, s2->$amount)
    && $IsEqual'$1_string_String'(s1->$token, s2->$token)
    && $IsEqual'u64'(s1->$timestamp, s2->$timestamp)}

// struct paymentv1::TransferLink<#0> at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:64:5+176
datatype $1_paymentv1_TransferLink'#0' {
    $1_paymentv1_TransferLink'#0'($sender: int, $amount: int, $created_at: int, $expires_at: int, $is_claimed: bool)
}
function {:inline} $Update'$1_paymentv1_TransferLink'#0''_sender(s: $1_paymentv1_TransferLink'#0', x: int): $1_paymentv1_TransferLink'#0' {
    $1_paymentv1_TransferLink'#0'(x, s->$amount, s->$created_at, s->$expires_at, s->$is_claimed)
}
function {:inline} $Update'$1_paymentv1_TransferLink'#0''_amount(s: $1_paymentv1_TransferLink'#0', x: int): $1_paymentv1_TransferLink'#0' {
    $1_paymentv1_TransferLink'#0'(s->$sender, x, s->$created_at, s->$expires_at, s->$is_claimed)
}
function {:inline} $Update'$1_paymentv1_TransferLink'#0''_created_at(s: $1_paymentv1_TransferLink'#0', x: int): $1_paymentv1_TransferLink'#0' {
    $1_paymentv1_TransferLink'#0'(s->$sender, s->$amount, x, s->$expires_at, s->$is_claimed)
}
function {:inline} $Update'$1_paymentv1_TransferLink'#0''_expires_at(s: $1_paymentv1_TransferLink'#0', x: int): $1_paymentv1_TransferLink'#0' {
    $1_paymentv1_TransferLink'#0'(s->$sender, s->$amount, s->$created_at, x, s->$is_claimed)
}
function {:inline} $Update'$1_paymentv1_TransferLink'#0''_is_claimed(s: $1_paymentv1_TransferLink'#0', x: bool): $1_paymentv1_TransferLink'#0' {
    $1_paymentv1_TransferLink'#0'(s->$sender, s->$amount, s->$created_at, s->$expires_at, x)
}
function $IsValid'$1_paymentv1_TransferLink'#0''(s: $1_paymentv1_TransferLink'#0'): bool {
    $IsValid'address'(s->$sender)
      && $IsValid'u64'(s->$amount)
      && $IsValid'u64'(s->$created_at)
      && $IsValid'u64'(s->$expires_at)
      && $IsValid'bool'(s->$is_claimed)
}
function {:inline} $IsEqual'$1_paymentv1_TransferLink'#0''(s1: $1_paymentv1_TransferLink'#0', s2: $1_paymentv1_TransferLink'#0'): bool {
    s1 == s2
}

// struct paymentv1::TransferLinkCreated at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:34:5+200
datatype $1_paymentv1_TransferLinkCreated {
    $1_paymentv1_TransferLinkCreated($link_id: $1_string_String, $sender: int, $amount: int, $token: $1_string_String, $expires_at: int, $timestamp: int)
}
function {:inline} $Update'$1_paymentv1_TransferLinkCreated'_link_id(s: $1_paymentv1_TransferLinkCreated, x: $1_string_String): $1_paymentv1_TransferLinkCreated {
    $1_paymentv1_TransferLinkCreated(x, s->$sender, s->$amount, s->$token, s->$expires_at, s->$timestamp)
}
function {:inline} $Update'$1_paymentv1_TransferLinkCreated'_sender(s: $1_paymentv1_TransferLinkCreated, x: int): $1_paymentv1_TransferLinkCreated {
    $1_paymentv1_TransferLinkCreated(s->$link_id, x, s->$amount, s->$token, s->$expires_at, s->$timestamp)
}
function {:inline} $Update'$1_paymentv1_TransferLinkCreated'_amount(s: $1_paymentv1_TransferLinkCreated, x: int): $1_paymentv1_TransferLinkCreated {
    $1_paymentv1_TransferLinkCreated(s->$link_id, s->$sender, x, s->$token, s->$expires_at, s->$timestamp)
}
function {:inline} $Update'$1_paymentv1_TransferLinkCreated'_token(s: $1_paymentv1_TransferLinkCreated, x: $1_string_String): $1_paymentv1_TransferLinkCreated {
    $1_paymentv1_TransferLinkCreated(s->$link_id, s->$sender, s->$amount, x, s->$expires_at, s->$timestamp)
}
function {:inline} $Update'$1_paymentv1_TransferLinkCreated'_expires_at(s: $1_paymentv1_TransferLinkCreated, x: int): $1_paymentv1_TransferLinkCreated {
    $1_paymentv1_TransferLinkCreated(s->$link_id, s->$sender, s->$amount, s->$token, x, s->$timestamp)
}
function {:inline} $Update'$1_paymentv1_TransferLinkCreated'_timestamp(s: $1_paymentv1_TransferLinkCreated, x: int): $1_paymentv1_TransferLinkCreated {
    $1_paymentv1_TransferLinkCreated(s->$link_id, s->$sender, s->$amount, s->$token, s->$expires_at, x)
}
function $IsValid'$1_paymentv1_TransferLinkCreated'(s: $1_paymentv1_TransferLinkCreated): bool {
    $IsValid'$1_string_String'(s->$link_id)
      && $IsValid'address'(s->$sender)
      && $IsValid'u64'(s->$amount)
      && $IsValid'$1_string_String'(s->$token)
      && $IsValid'u64'(s->$expires_at)
      && $IsValid'u64'(s->$timestamp)
}
function {:inline} $IsEqual'$1_paymentv1_TransferLinkCreated'(s1: $1_paymentv1_TransferLinkCreated, s2: $1_paymentv1_TransferLinkCreated): bool {
    $IsEqual'$1_string_String'(s1->$link_id, s2->$link_id)
    && $IsEqual'address'(s1->$sender, s2->$sender)
    && $IsEqual'u64'(s1->$amount, s2->$amount)
    && $IsEqual'$1_string_String'(s1->$token, s2->$token)
    && $IsEqual'u64'(s1->$expires_at, s2->$expires_at)
    && $IsEqual'u64'(s1->$timestamp, s2->$timestamp)}

// struct paymentv1::TransferLinkStore<#0> at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:59:5+100
datatype $1_paymentv1_TransferLinkStore'#0' {
    $1_paymentv1_TransferLinkStore'#0'($links: Table int ($1_paymentv1_TransferLink'#0'))
}
function {:inline} $Update'$1_paymentv1_TransferLinkStore'#0''_links(s: $1_paymentv1_TransferLinkStore'#0', x: Table int ($1_paymentv1_TransferLink'#0')): $1_paymentv1_TransferLinkStore'#0' {
    $1_paymentv1_TransferLinkStore'#0'(x)
}
function $IsValid'$1_paymentv1_TransferLinkStore'#0''(s: $1_paymentv1_TransferLinkStore'#0'): bool {
    $IsValid'$1_table_Table'$1_string_String_$1_paymentv1_TransferLink'#0'''(s->$links)
}
function {:inline} $IsEqual'$1_paymentv1_TransferLinkStore'#0''(s1: $1_paymentv1_TransferLinkStore'#0', s2: $1_paymentv1_TransferLinkStore'#0'): bool {
    s1 == s2
}
var $1_paymentv1_TransferLinkStore'#0'_$memory: $Memory $1_paymentv1_TransferLinkStore'#0';

// fun paymentv1::init [verification] at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:73:5+500
procedure {:timeLimit 40} $1_paymentv1_init$verify(_$t0: $signer) returns ()
{
    // declare local variables
    var $t1: $1_account_SignerCapability;
    var $t2: $signer;
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: bool;
    var $t7: int;
    var $t8: bool;
    var $t9: Vec (int);
    var $t10: int;
    var $t11: int;
    var $t12: $1_account_Account;
    var $t13: Vec (int);
    var $t14: $signer;
    var $t15: $1_account_SignerCapability;
    var $t16: $1_paymentv1_EscrowCapability;
    var $t17: int;
    var $t0: $signer;
    var $temp_0'$1_account_SignerCapability': $1_account_SignerCapability;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:73:5+1
    assume {:print "$at(2,1897,1898)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($t0->$addr);

    // assume forall $rsc: 0x1::features::Features: ResourceDomain<0x1::features::Features>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:73:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_features_Features_$memory, $a_0)}(var $rsc := $ResourceValue($1_features_Features_$memory, $a_0);
    ($IsValid'$1_features_Features'($rsc))));

    // assume forall $rsc: 0x1::permissioned_signer::PermissionStorage: ResourceDomain<0x1::permissioned_signer::PermissionStorage>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:73:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_permissioned_signer_PermissionStorage_$memory, $a_0)}(var $rsc := $ResourceValue($1_permissioned_signer_PermissionStorage_$memory, $a_0);
    ($IsValid'$1_permissioned_signer_PermissionStorage'($rsc))));

    // assume forall $rsc: 0x1::account::Account: ResourceDomain<0x1::account::Account>(): And(WellFormed($rsc), And(Le(Len<address>(select option::Option.vec(select account::CapabilityOffer.for(select account::Account.rotation_capability_offer($rsc)))), 1), Le(Len<address>(select option::Option.vec(select account::CapabilityOffer.for(select account::Account.signer_capability_offer($rsc)))), 1))) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:73:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_account_Account_$memory, $a_0)}(var $rsc := $ResourceValue($1_account_Account_$memory, $a_0);
    (($IsValid'$1_account_Account'($rsc) && ((LenVec($rsc->$rotation_capability_offer->$for->$vec) <= 1) && (LenVec($rsc->$signer_capability_offer->$for->$vec) <= 1))))));

    // assume forall $rsc: 0x1::object::ObjectCore: ResourceDomain<0x1::object::ObjectCore>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:73:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_ObjectCore_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_ObjectCore_$memory, $a_0);
    ($IsValid'$1_object_ObjectCore'($rsc))));

    // assume forall $rsc: 0x1::fungible_asset::ConcurrentSupply: ResourceDomain<0x1::fungible_asset::ConcurrentSupply>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:73:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_ConcurrentSupply_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_ConcurrentSupply_$memory, $a_0);
    ($IsValid'$1_fungible_asset_ConcurrentSupply'($rsc))));

    // assume forall $rsc: 0x1::fungible_asset::FungibleStore: ResourceDomain<0x1::fungible_asset::FungibleStore>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:73:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_FungibleStore_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_FungibleStore_$memory, $a_0);
    ($IsValid'$1_fungible_asset_FungibleStore'($rsc))));

    // assume forall $rsc: 0x1::fungible_asset::Metadata: ResourceDomain<0x1::fungible_asset::Metadata>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:73:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_Metadata_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_Metadata_$memory, $a_0);
    ($IsValid'$1_fungible_asset_Metadata'($rsc))));

    // assume forall $rsc: 0x1::fungible_asset::Supply: ResourceDomain<0x1::fungible_asset::Supply>(): And(WellFormed($rsc), Le(Len<u128>(select option::Option.vec(select fungible_asset::Supply.maximum($rsc))), 1)) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:73:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_Supply_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_Supply_$memory, $a_0);
    (($IsValid'$1_fungible_asset_Supply'($rsc) && (LenVec($rsc->$maximum->$vec) <= 1)))));

    // assume forall $rsc: 0x1::primary_fungible_store::DeriveRefPod: ResourceDomain<0x1::primary_fungible_store::DeriveRefPod>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:73:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_primary_fungible_store_DeriveRefPod_$memory, $a_0)}(var $rsc := $ResourceValue($1_primary_fungible_store_DeriveRefPod_$memory, $a_0);
    ($IsValid'$1_primary_fungible_store_DeriveRefPod'($rsc))));

    // assume forall $rsc: 0x1::coin::CoinConversionMap: ResourceDomain<0x1::coin::CoinConversionMap>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:73:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinConversionMap_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinConversionMap_$memory, $a_0);
    ($IsValid'$1_coin_CoinConversionMap'($rsc))));

    // assume forall $rsc: 0x1::coin::PairedCoinType: ResourceDomain<0x1::coin::PairedCoinType>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:73:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_PairedCoinType_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_PairedCoinType_$memory, $a_0);
    ($IsValid'$1_coin_PairedCoinType'($rsc))));

    // assume forall $rsc: 0x1::coin::PairedFungibleAssetRefs: ResourceDomain<0x1::coin::PairedFungibleAssetRefs>(): And(WellFormed($rsc), And(And(Le(Len<0x1::fungible_asset::MintRef>(select option::Option.vec(select coin::PairedFungibleAssetRefs.mint_ref_opt($rsc))), 1), Le(Len<0x1::fungible_asset::TransferRef>(select option::Option.vec(select coin::PairedFungibleAssetRefs.transfer_ref_opt($rsc))), 1)), Le(Len<0x1::fungible_asset::BurnRef>(select option::Option.vec(select coin::PairedFungibleAssetRefs.burn_ref_opt($rsc))), 1))) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:73:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_PairedFungibleAssetRefs_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_PairedFungibleAssetRefs_$memory, $a_0);
    (($IsValid'$1_coin_PairedFungibleAssetRefs'($rsc) && (((LenVec($rsc->$mint_ref_opt->$vec) <= 1) && (LenVec($rsc->$transfer_ref_opt->$vec) <= 1)) && (LenVec($rsc->$burn_ref_opt->$vec) <= 1))))));

    // assume forall $rsc: 0x1::coin::CoinInfo<0x1::aptos_coin::AptosCoin>: ResourceDomain<0x1::coin::CoinInfo<0x1::aptos_coin::AptosCoin>>(): And(WellFormed($rsc), And(Le(Len<0x1::optional_aggregator::OptionalAggregator>(select option::Option.vec(select coin::CoinInfo.supply($rsc))), 1), forall $elem: 0x1::optional_aggregator::OptionalAggregator: select option::Option.vec(select coin::CoinInfo.supply($rsc)): And(And(And(And(And(Iff(option::$is_some<0x1::aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)), option::$is_none<0x1::optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem))), Iff(option::$is_some<0x1::optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)), option::$is_none<0x1::aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)))), Implies(option::$is_some<0x1::optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)), Le(select optional_aggregator::Integer.value<0x1::optional_aggregator::Integer>(option::$borrow<0x1::optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem))), select optional_aggregator::Integer.limit<0x1::optional_aggregator::Integer>(option::$borrow<0x1::optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)))))), Implies(option::$is_some<0x1::aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)), Le(aggregator::spec_aggregator_get_val(option::$borrow<0x1::aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem))), aggregator::spec_get_limit(option::$borrow<0x1::aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)))))), Le(Len<0x1::aggregator::Aggregator>(select option::Option.vec(select optional_aggregator::OptionalAggregator.aggregator($elem))), 1)), Le(Len<0x1::optional_aggregator::Integer>(select option::Option.vec(select optional_aggregator::OptionalAggregator.integer($elem))), 1)))) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:73:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    (($IsValid'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''($rsc) && ((LenVec($rsc->$supply->$vec) <= 1) && (var $range_1 := $rsc->$supply->$vec; (forall $i_2: int :: InRangeVec($range_1, $i_2) ==> (var $elem := ReadVec($range_1, $i_2);
    ((((((($1_option_$is_some'$1_aggregator_Aggregator'($elem->$aggregator) <==> $1_option_$is_none'$1_optional_aggregator_Integer'($elem->$integer)) && ($1_option_$is_some'$1_optional_aggregator_Integer'($elem->$integer) <==> $1_option_$is_none'$1_aggregator_Aggregator'($elem->$aggregator))) && ($1_option_$is_some'$1_optional_aggregator_Integer'($elem->$integer) ==> ($1_option_$borrow'$1_optional_aggregator_Integer'($elem->$integer)->$value <= $1_option_$borrow'$1_optional_aggregator_Integer'($elem->$integer)->$limit))) && ($1_option_$is_some'$1_aggregator_Aggregator'($elem->$aggregator) ==> ($1_aggregator_spec_aggregator_get_val($1_option_$borrow'$1_aggregator_Aggregator'($elem->$aggregator)) <= $1_aggregator_spec_get_limit($1_option_$borrow'$1_aggregator_Aggregator'($elem->$aggregator))))) && (LenVec($elem->$aggregator->$vec) <= 1)) && (LenVec($elem->$integer->$vec) <= 1)))))))))));

    // assume forall $rsc: 0x1::coin::CoinStore<0x1::aptos_coin::AptosCoin>: ResourceDomain<0x1::coin::CoinStore<0x1::aptos_coin::AptosCoin>>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:73:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    ($IsValid'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''($rsc))));

    // assume forall $rsc: 0x1::coin::Ghost$supply<0x1::aptos_coin::AptosCoin>: ResourceDomain<0x1::coin::Ghost$supply<0x1::aptos_coin::AptosCoin>>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:73:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    ($IsValid'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''($rsc))));

    // assume exists<0x1::coin::Ghost$supply<0x1::aptos_coin::AptosCoin>>(0x0) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:73:5+1
    assume $ResourceExists($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, 0);

    // assume forall $rsc: 0x1::coin::Ghost$aggregate_supply<0x1::aptos_coin::AptosCoin>: ResourceDomain<0x1::coin::Ghost$aggregate_supply<0x1::aptos_coin::AptosCoin>>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:73:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    ($IsValid'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''($rsc))));

    // assume exists<0x1::coin::Ghost$aggregate_supply<0x1::aptos_coin::AptosCoin>>(0x0) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:73:5+1
    assume $ResourceExists($1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory, 0);

    // assume forall $rsc: 0x1::paymentv1::EscrowCapability: ResourceDomain<0x1::paymentv1::EscrowCapability>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:73:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_paymentv1_EscrowCapability_$memory, $a_0)}(var $rsc := $ResourceValue($1_paymentv1_EscrowCapability_$memory, $a_0);
    ($IsValid'$1_paymentv1_EscrowCapability'($rsc))));

    // trace_local[admin]($t0) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:73:5+1
    assume {:print "$track_local(101,0,0):", $t0} $t0 == $t0;

    // $t3 := signer::address_of($t0) on_abort goto L6 with $t4 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:74:19+25
    assume {:print "$at(2,1956,1981)"} true;
    call $t3 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,1956,1981)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(101,0):", $t4} $t4 == $t4;
        goto L6;
    }

    // $t5 := 0x1 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:75:24+7
    assume {:print "$at(2,2007,2014)"} true;
    $t5 := 1;
    assume $IsValid'address'($t5);

    // $t6 := ==($t3, $t5) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:75:17+14
    $t6 := $IsEqual'address'($t3, $t5);

    // if ($t6) goto L1 else goto L0 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:75:9+6
    if ($t6) { goto L1; } else { goto L0; }

    // label L1 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:77:39+7
    assume {:print "$at(2,2084,2091)"} true;
L1:

    // $t7 := 0x1 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:77:39+7
    assume {:print "$at(2,2084,2091)"} true;
    $t7 := 1;
    assume $IsValid'address'($t7);

    // $t8 := exists<0x1::paymentv1::EscrowCapability>($t7) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:77:14+33
    $t8 := $ResourceExists($1_paymentv1_EscrowCapability_$memory, $t7);

    // if ($t8) goto L2 else goto L3 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:77:13+34
    if ($t8) { goto L2; } else { goto L3; }

    // label L3 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:78:73+5
    assume {:print "$at(2,2169,2174)"} true;
L3:

    // $t9 := [114, 101, 108, 121, 110, 107, 95, 101, 115, 99, 114, 111, 119, 95, 118, 49] at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:78:80+19
    assume {:print "$at(2,2176,2195)"} true;
    $t9 := ConcatVec(ConcatVec(ConcatVec(MakeVec4(114, 101, 108, 121), MakeVec4(110, 107, 95, 101)), MakeVec4(115, 99, 114, 111)), MakeVec4(119, 95, 118, 49));
    assume $IsValid'vec'u8''($t9);

    // assume Identical($t10, signer::$address_of($t0)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.spec.move:601:9+45
    assume {:print "$at(98,30975,31020)"} true;
    assume ($t10 == $1_signer_$address_of($t0));

    // assume Identical($t11, account::spec_create_resource_address($t10, $t9)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.spec.move:602:9+68
    assume {:print "$at(98,31030,31098)"} true;
    assume ($t11 == $1_account_spec_create_resource_address($t10, $t9));

    // assume Identical($t12, global<0x1::account::Account>($t11)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.spec.move:676:9+45
    assume {:print "$at(98,34131,34176)"} true;
    assume ($t12 == $ResourceValue($1_account_Account_$memory, $t11));

    // assume Identical($t13, bcs::$to_bytes<address>($t11)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.spec.move:170:9+45
    assume {:print "$at(98,9261,9306)"} true;
    assume ($t13 == $1_bcs_$to_bytes'address'($t11));

    // ($t14, $t15) := account::create_resource_account($t0, $t9) on_abort goto L6 with $t4 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:78:40+60
    assume {:print "$at(2,2136,2196)"} true;
    call $t14,$t15 := $1_account_create_resource_account($t0, $t9);
    if ($abort_flag) {
        assume {:print "$at(2,2136,2196)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(101,0):", $t4} $t4 == $t4;
        goto L6;
    }

    // trace_local[cap]($t15) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:78:40+60
    assume {:print "$track_local(101,0,1):", $t15} $t15 == $t15;

    // trace_local[escrow_signer]($t14) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:78:40+60
    assume {:print "$track_local(101,0,2):", $t14} $t14 == $t14;

    // coin::register<0x1::aptos_coin::AptosCoin>($t14) on_abort goto L6 with $t4 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:80:13+70
    assume {:print "$at(2,2253,2323)"} true;
    call $1_coin_register'$1_aptos_coin_AptosCoin'($t14);
    if ($abort_flag) {
        assume {:print "$at(2,2253,2323)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(101,0):", $t4} $t4 == $t4;
        goto L6;
    }

    // $t16 := pack 0x1::paymentv1::EscrowCapability($t15) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:81:28+24
    assume {:print "$at(2,2353,2377)"} true;
    $t16 := $1_paymentv1_EscrowCapability($t15);

    // move_to<0x1::paymentv1::EscrowCapability>($t16, $t0) on_abort goto L6 with $t4 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:81:13+40
    if ($ResourceExists($1_paymentv1_EscrowCapability_$memory, $t0->$addr)) {
        call $ExecFailureAbort();
    } else {
        $1_paymentv1_EscrowCapability_$memory := $ResourceUpdate($1_paymentv1_EscrowCapability_$memory, $t0->$addr, $t16);
    }
    if ($abort_flag) {
        assume {:print "$at(2,2338,2378)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(101,0):", $t4} $t4 == $t4;
        goto L6;
    }

    // label L4 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:73:43+462
    assume {:print "$at(2,1935,2397)"} true;
L4:

    // goto L5 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:73:43+462
    assume {:print "$at(2,1935,2397)"} true;
    goto L5;

    // label L2 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:77:9+336
    assume {:print "$at(2,2054,2390)"} true;
L2:

    // goto L4 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:77:9+336
    assume {:print "$at(2,2054,2390)"} true;
    goto L4;

    // label L0 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:75:9+6
    assume {:print "$at(2,1992,1998)"} true;
L0:

    // $t17 := 7 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:75:33+16
    assume {:print "$at(2,2016,2032)"} true;
    $t17 := 7;
    assume $IsValid'u64'($t17);

    // trace_abort($t17) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:75:9+6
    assume {:print "$at(2,1992,1998)"} true;
    assume {:print "$track_abort(101,0):", $t17} $t17 == $t17;

    // $t4 := move($t17) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:75:9+6
    $t4 := $t17;

    // goto L6 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:75:9+6
    goto L6;

    // label L5 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:83:5+1
    assume {:print "$at(2,2396,2397)"} true;
L5:

    // return () at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:83:5+1
    assume {:print "$at(2,2396,2397)"} true;
    return;

    // label L6 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:83:5+1
L6:

    // abort($t4) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:83:5+1
    assume {:print "$at(2,2396,2397)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun paymentv1::claim_transfer [verification] at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:194:5+1472
procedure {:timeLimit 40} $1_paymentv1_claim_transfer$verify(_$t0: $signer, _$t1: $1_string_String) returns ()
{
    // declare local variables
    var $t2: int;
    var $t3: $Mutation ($1_paymentv1_TransferLinkStore'#0');
    var $t4: $Mutation ($1_paymentv1_TransferLink'#0');
    var $t5: $signer;
    var $t6: int;
    var $t7: int;
    var $t8: bool;
    var $t9: int;
    var $t10: $Mutation ($1_paymentv1_TransferLinkStore'#0');
    var $t11: Table int ($1_paymentv1_TransferLink'#0');
    var $t12: bool;
    var $t13: $Mutation (Table int ($1_paymentv1_TransferLink'#0'));
    var $t14: $Mutation ($1_paymentv1_TransferLink'#0');
    var $t15: bool;
    var $t16: int;
    var $t17: int;
    var $t18: bool;
    var $t19: int;
    var $t20: $1_paymentv1_EscrowCapability;
    var $t21: $1_account_SignerCapability;
    var $t22: int;
    var $t23: $signer;
    var $t24: int;
    var $t25: int;
    var $t26: $1_coin_CoinStore'#0';
    var $t27: $1_coin_CoinStore'#0';
    var $t28: bool;
    var $t29: $Mutation (bool);
    var $t30: int;
    var $t31: int;
    var $t32: $1_string_String;
    var $t33: int;
    var $t34: $1_paymentv1_TransferClaimed;
    var $t35: int;
    var $t36: int;
    var $t37: int;
    var $t0: $signer;
    var $t1: $1_string_String;
    var $temp_0'$1_paymentv1_TransferLink'#0'': $1_paymentv1_TransferLink'#0';
    var $temp_0'$1_paymentv1_TransferLinkStore'#0'': $1_paymentv1_TransferLinkStore'#0';
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    $t0 := _$t0;
    $t1 := _$t1;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:194:5+1
    assume {:print "$at(2,6278,6279)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($t0->$addr);

    // assume WellFormed($t1) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:194:5+1
    assume $IsValid'$1_string_String'($t1);

    // assume forall $rsc: 0x1::features::Features: ResourceDomain<0x1::features::Features>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:194:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_features_Features_$memory, $a_0)}(var $rsc := $ResourceValue($1_features_Features_$memory, $a_0);
    ($IsValid'$1_features_Features'($rsc))));

    // assume forall $rsc: 0x1::chain_status::GenesisEndMarker: ResourceDomain<0x1::chain_status::GenesisEndMarker>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:194:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0)}(var $rsc := $ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0);
    ($IsValid'$1_chain_status_GenesisEndMarker'($rsc))));

    // assume forall $rsc: 0x1::timestamp::CurrentTimeMicroseconds: ResourceDomain<0x1::timestamp::CurrentTimeMicroseconds>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:194:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0)}(var $rsc := $ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0);
    ($IsValid'$1_timestamp_CurrentTimeMicroseconds'($rsc))));

    // assume forall $rsc: 0x1::permissioned_signer::PermissionStorage: ResourceDomain<0x1::permissioned_signer::PermissionStorage>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:194:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_permissioned_signer_PermissionStorage_$memory, $a_0)}(var $rsc := $ResourceValue($1_permissioned_signer_PermissionStorage_$memory, $a_0);
    ($IsValid'$1_permissioned_signer_PermissionStorage'($rsc))));

    // assume forall $rsc: 0x1::account::Account: ResourceDomain<0x1::account::Account>(): And(WellFormed($rsc), And(Le(Len<address>(select option::Option.vec(select account::CapabilityOffer.for(select account::Account.rotation_capability_offer($rsc)))), 1), Le(Len<address>(select option::Option.vec(select account::CapabilityOffer.for(select account::Account.signer_capability_offer($rsc)))), 1))) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:194:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_account_Account_$memory, $a_0)}(var $rsc := $ResourceValue($1_account_Account_$memory, $a_0);
    (($IsValid'$1_account_Account'($rsc) && ((LenVec($rsc->$rotation_capability_offer->$for->$vec) <= 1) && (LenVec($rsc->$signer_capability_offer->$for->$vec) <= 1))))));

    // assume forall $rsc: 0x1::object::ObjectCore: ResourceDomain<0x1::object::ObjectCore>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:194:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_ObjectCore_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_ObjectCore_$memory, $a_0);
    ($IsValid'$1_object_ObjectCore'($rsc))));

    // assume forall $rsc: 0x1::object::TombStone: ResourceDomain<0x1::object::TombStone>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:194:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_TombStone_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_TombStone_$memory, $a_0);
    ($IsValid'$1_object_TombStone'($rsc))));

    // assume forall $rsc: 0x1::object::Untransferable: ResourceDomain<0x1::object::Untransferable>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:194:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_Untransferable_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_Untransferable_$memory, $a_0);
    ($IsValid'$1_object_Untransferable'($rsc))));

    // assume forall $rsc: 0x1::fungible_asset::Untransferable: ResourceDomain<0x1::fungible_asset::Untransferable>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:194:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_Untransferable_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_Untransferable_$memory, $a_0);
    ($IsValid'$1_fungible_asset_Untransferable'($rsc))));

    // assume forall $rsc: 0x1::fungible_asset::ConcurrentFungibleBalance: ResourceDomain<0x1::fungible_asset::ConcurrentFungibleBalance>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:194:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_ConcurrentFungibleBalance_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_ConcurrentFungibleBalance_$memory, $a_0);
    ($IsValid'$1_fungible_asset_ConcurrentFungibleBalance'($rsc))));

    // assume forall $rsc: 0x1::fungible_asset::ConcurrentSupply: ResourceDomain<0x1::fungible_asset::ConcurrentSupply>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:194:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_ConcurrentSupply_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_ConcurrentSupply_$memory, $a_0);
    ($IsValid'$1_fungible_asset_ConcurrentSupply'($rsc))));

    // assume forall $rsc: 0x1::fungible_asset::DispatchFunctionStore: ResourceDomain<0x1::fungible_asset::DispatchFunctionStore>(): And(WellFormed($rsc), And(And(Le(Len<0x1::function_info::FunctionInfo>(select option::Option.vec(select fungible_asset::DispatchFunctionStore.withdraw_function($rsc))), 1), Le(Len<0x1::function_info::FunctionInfo>(select option::Option.vec(select fungible_asset::DispatchFunctionStore.deposit_function($rsc))), 1)), Le(Len<0x1::function_info::FunctionInfo>(select option::Option.vec(select fungible_asset::DispatchFunctionStore.derived_balance_function($rsc))), 1))) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:194:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_DispatchFunctionStore_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_DispatchFunctionStore_$memory, $a_0);
    (($IsValid'$1_fungible_asset_DispatchFunctionStore'($rsc) && (((LenVec($rsc->$withdraw_function->$vec) <= 1) && (LenVec($rsc->$deposit_function->$vec) <= 1)) && (LenVec($rsc->$derived_balance_function->$vec) <= 1))))));

    // assume forall $rsc: 0x1::fungible_asset::FungibleStore: ResourceDomain<0x1::fungible_asset::FungibleStore>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:194:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_FungibleStore_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_FungibleStore_$memory, $a_0);
    ($IsValid'$1_fungible_asset_FungibleStore'($rsc))));

    // assume forall $rsc: 0x1::fungible_asset::Metadata: ResourceDomain<0x1::fungible_asset::Metadata>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:194:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_Metadata_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_Metadata_$memory, $a_0);
    ($IsValid'$1_fungible_asset_Metadata'($rsc))));

    // assume forall $rsc: 0x1::fungible_asset::Supply: ResourceDomain<0x1::fungible_asset::Supply>(): And(WellFormed($rsc), Le(Len<u128>(select option::Option.vec(select fungible_asset::Supply.maximum($rsc))), 1)) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:194:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_Supply_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_Supply_$memory, $a_0);
    (($IsValid'$1_fungible_asset_Supply'($rsc) && (LenVec($rsc->$maximum->$vec) <= 1)))));

    // assume forall $rsc: 0x1::dispatchable_fungible_asset::TransferRefStore: ResourceDomain<0x1::dispatchable_fungible_asset::TransferRefStore>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:194:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_dispatchable_fungible_asset_TransferRefStore_$memory, $a_0)}(var $rsc := $ResourceValue($1_dispatchable_fungible_asset_TransferRefStore_$memory, $a_0);
    ($IsValid'$1_dispatchable_fungible_asset_TransferRefStore'($rsc))));

    // assume forall $rsc: 0x1::primary_fungible_store::DeriveRefPod: ResourceDomain<0x1::primary_fungible_store::DeriveRefPod>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:194:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_primary_fungible_store_DeriveRefPod_$memory, $a_0)}(var $rsc := $ResourceValue($1_primary_fungible_store_DeriveRefPod_$memory, $a_0);
    ($IsValid'$1_primary_fungible_store_DeriveRefPod'($rsc))));

    // assume forall $rsc: 0x1::coin::CoinConversionMap: ResourceDomain<0x1::coin::CoinConversionMap>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:194:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinConversionMap_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinConversionMap_$memory, $a_0);
    ($IsValid'$1_coin_CoinConversionMap'($rsc))));

    // assume forall $rsc: 0x1::coin::PairedCoinType: ResourceDomain<0x1::coin::PairedCoinType>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:194:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_PairedCoinType_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_PairedCoinType_$memory, $a_0);
    ($IsValid'$1_coin_PairedCoinType'($rsc))));

    // assume forall $rsc: 0x1::coin::PairedFungibleAssetRefs: ResourceDomain<0x1::coin::PairedFungibleAssetRefs>(): And(WellFormed($rsc), And(And(Le(Len<0x1::fungible_asset::MintRef>(select option::Option.vec(select coin::PairedFungibleAssetRefs.mint_ref_opt($rsc))), 1), Le(Len<0x1::fungible_asset::TransferRef>(select option::Option.vec(select coin::PairedFungibleAssetRefs.transfer_ref_opt($rsc))), 1)), Le(Len<0x1::fungible_asset::BurnRef>(select option::Option.vec(select coin::PairedFungibleAssetRefs.burn_ref_opt($rsc))), 1))) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:194:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_PairedFungibleAssetRefs_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_PairedFungibleAssetRefs_$memory, $a_0);
    (($IsValid'$1_coin_PairedFungibleAssetRefs'($rsc) && (((LenVec($rsc->$mint_ref_opt->$vec) <= 1) && (LenVec($rsc->$transfer_ref_opt->$vec) <= 1)) && (LenVec($rsc->$burn_ref_opt->$vec) <= 1))))));

    // assume forall $rsc: 0x1::coin::CoinInfo<#0>: ResourceDomain<0x1::coin::CoinInfo<#0>>(): And(WellFormed($rsc), And(Le(Len<0x1::optional_aggregator::OptionalAggregator>(select option::Option.vec(select coin::CoinInfo.supply($rsc))), 1), forall $elem: 0x1::optional_aggregator::OptionalAggregator: select option::Option.vec(select coin::CoinInfo.supply($rsc)): And(And(And(And(And(Iff(option::$is_some<0x1::aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)), option::$is_none<0x1::optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem))), Iff(option::$is_some<0x1::optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)), option::$is_none<0x1::aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)))), Implies(option::$is_some<0x1::optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)), Le(select optional_aggregator::Integer.value<0x1::optional_aggregator::Integer>(option::$borrow<0x1::optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem))), select optional_aggregator::Integer.limit<0x1::optional_aggregator::Integer>(option::$borrow<0x1::optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)))))), Implies(option::$is_some<0x1::aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)), Le(aggregator::spec_aggregator_get_val(option::$borrow<0x1::aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem))), aggregator::spec_get_limit(option::$borrow<0x1::aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)))))), Le(Len<0x1::aggregator::Aggregator>(select option::Option.vec(select optional_aggregator::OptionalAggregator.aggregator($elem))), 1)), Le(Len<0x1::optional_aggregator::Integer>(select option::Option.vec(select optional_aggregator::OptionalAggregator.integer($elem))), 1)))) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:194:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinInfo'#0'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinInfo'#0'_$memory, $a_0);
    (($IsValid'$1_coin_CoinInfo'#0''($rsc) && ((LenVec($rsc->$supply->$vec) <= 1) && (var $range_1 := $rsc->$supply->$vec; (forall $i_2: int :: InRangeVec($range_1, $i_2) ==> (var $elem := ReadVec($range_1, $i_2);
    ((((((($1_option_$is_some'$1_aggregator_Aggregator'($elem->$aggregator) <==> $1_option_$is_none'$1_optional_aggregator_Integer'($elem->$integer)) && ($1_option_$is_some'$1_optional_aggregator_Integer'($elem->$integer) <==> $1_option_$is_none'$1_aggregator_Aggregator'($elem->$aggregator))) && ($1_option_$is_some'$1_optional_aggregator_Integer'($elem->$integer) ==> ($1_option_$borrow'$1_optional_aggregator_Integer'($elem->$integer)->$value <= $1_option_$borrow'$1_optional_aggregator_Integer'($elem->$integer)->$limit))) && ($1_option_$is_some'$1_aggregator_Aggregator'($elem->$aggregator) ==> ($1_aggregator_spec_aggregator_get_val($1_option_$borrow'$1_aggregator_Aggregator'($elem->$aggregator)) <= $1_aggregator_spec_get_limit($1_option_$borrow'$1_aggregator_Aggregator'($elem->$aggregator))))) && (LenVec($elem->$aggregator->$vec) <= 1)) && (LenVec($elem->$integer->$vec) <= 1)))))))))));

    // assume forall $rsc: 0x1::coin::CoinStore<#0>: ResourceDomain<0x1::coin::CoinStore<#0>>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:194:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinStore'#0'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinStore'#0'_$memory, $a_0);
    ($IsValid'$1_coin_CoinStore'#0''($rsc))));

    // assume forall $rsc: 0x1::coin::Ghost$supply<#0>: ResourceDomain<0x1::coin::Ghost$supply<#0>>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:194:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_Ghost$supply'#0'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_Ghost$supply'#0'_$memory, $a_0);
    ($IsValid'$1_coin_Ghost$supply'#0''($rsc))));

    // assume exists<0x1::coin::Ghost$supply<#0>>(0x0) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:194:5+1
    assume $ResourceExists($1_coin_Ghost$supply'#0'_$memory, 0);

    // assume forall $rsc: 0x1::coin::Ghost$aggregate_supply<#0>: ResourceDomain<0x1::coin::Ghost$aggregate_supply<#0>>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:194:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_Ghost$aggregate_supply'#0'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_Ghost$aggregate_supply'#0'_$memory, $a_0);
    ($IsValid'$1_coin_Ghost$aggregate_supply'#0''($rsc))));

    // assume exists<0x1::coin::Ghost$aggregate_supply<#0>>(0x0) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:194:5+1
    assume $ResourceExists($1_coin_Ghost$aggregate_supply'#0'_$memory, 0);

    // assume forall $rsc: 0x1::reconfiguration::Configuration: ResourceDomain<0x1::reconfiguration::Configuration>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:194:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_reconfiguration_Configuration_$memory, $a_0)}(var $rsc := $ResourceValue($1_reconfiguration_Configuration_$memory, $a_0);
    ($IsValid'$1_reconfiguration_Configuration'($rsc))));

    // assume forall $rsc: 0x1::paymentv1::EscrowCapability: ResourceDomain<0x1::paymentv1::EscrowCapability>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:194:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_paymentv1_EscrowCapability_$memory, $a_0)}(var $rsc := $ResourceValue($1_paymentv1_EscrowCapability_$memory, $a_0);
    ($IsValid'$1_paymentv1_EscrowCapability'($rsc))));

    // assume forall $rsc: 0x1::paymentv1::TransferLinkStore<#0>: ResourceDomain<0x1::paymentv1::TransferLinkStore<#0>>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:194:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_paymentv1_TransferLinkStore'#0'_$memory, $a_0)}(var $rsc := $ResourceValue($1_paymentv1_TransferLinkStore'#0'_$memory, $a_0);
    ($IsValid'$1_paymentv1_TransferLinkStore'#0''($rsc))));

    // assume Implies(chain_status::$is_operating(), exists<0x1::timestamp::CurrentTimeMicroseconds>(0x1)) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:194:5+1472
    // global invariant at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\timestamp.spec.move:36:9+107
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, 1));

    // assume Implies(chain_status::$is_operating(), Ge(timestamp::spec_now_microseconds(), reconfiguration::$last_reconfiguration_time())) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:194:5+1472
    // global invariant at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\reconfiguration.spec.move:51:9+138
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> ($1_timestamp_spec_now_microseconds($1_timestamp_CurrentTimeMicroseconds_$memory) >= $1_reconfiguration_$last_reconfiguration_time($1_reconfiguration_Configuration_$memory)));

    // trace_local[claimer]($t0) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:194:5+1
    assume {:print "$track_local(101,1,0):", $t0} $t0 == $t0;

    // trace_local[link_id]($t1) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:194:5+1
    assume {:print "$track_local(101,1,1):", $t1} $t1 == $t1;

    // $t6 := signer::address_of($t0) on_abort goto L10 with $t7 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:198:28+27
    assume {:print "$at(2,6456,6483)"} true;
    call $t6 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,6456,6483)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(101,1):", $t7} $t7 == $t7;
        goto L10;
    }

    // trace_local[claimer_addr]($t6) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:198:28+27
    assume {:print "$track_local(101,1,2):", $t6} $t6 == $t6;

    // $t8 := coin::is_account_registered<#0>($t6) on_abort goto L10 with $t7 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:201:14+44
    assume {:print "$at(2,6564,6608)"} true;
    call $t8 := $1_coin_is_account_registered'#0'($t6);
    if ($abort_flag) {
        assume {:print "$at(2,6564,6608)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(101,1):", $t7} $t7 == $t7;
        goto L10;
    }

    // if ($t8) goto L0 else goto L1 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:201:13+45
    if ($t8) { goto L0; } else { goto L1; }

    // label L1 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:202:13+26
    assume {:print "$at(2,6625,6651)"} true;
L1:

    // coin::register<#0>($t0) on_abort goto L10 with $t7 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:202:13+26
    assume {:print "$at(2,6625,6651)"} true;
    call $1_coin_register'#0'($t0);
    if ($abort_flag) {
        assume {:print "$at(2,6625,6651)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(101,1):", $t7} $t7 == $t7;
        goto L10;
    }

    // label L8 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:205:61+7
    assume {:print "$at(2,6736,6743)"} true;
L8:

    // $t9 := 0x1 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:205:61+7
    assume {:print "$at(2,6736,6743)"} true;
    $t9 := 1;
    assume $IsValid'address'($t9);

    // $t10 := borrow_global<0x1::paymentv1::TransferLinkStore<#0>>($t9) on_abort goto L10 with $t7 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:205:21+48
    if (!$ResourceExists($1_paymentv1_TransferLinkStore'#0'_$memory, $t9)) {
        call $ExecFailureAbort();
    } else {
        $t10 := $Mutation($Global($t9), EmptyVec(), $ResourceValue($1_paymentv1_TransferLinkStore'#0'_$memory, $t9));
    }
    if ($abort_flag) {
        assume {:print "$at(2,6696,6744)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(101,1):", $t7} $t7 == $t7;
        goto L10;
    }

    // trace_local[store]($t10) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:205:21+48
    $temp_0'$1_paymentv1_TransferLinkStore'#0'' := $Dereference($t10);
    assume {:print "$track_local(101,1,3):", $temp_0'$1_paymentv1_TransferLinkStore'#0''} $temp_0'$1_paymentv1_TransferLinkStore'#0'' == $temp_0'$1_paymentv1_TransferLinkStore'#0'';

    // $t11 := get_field<0x1::paymentv1::TransferLinkStore<#0>>.links($t10) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:206:33+12
    assume {:print "$at(2,6779,6791)"} true;
    $t11 := $Dereference($t10)->$links;

    // $t12 := table::contains<0x1::string::String, 0x1::paymentv1::TransferLink<#0>>($t11, $t1) on_abort goto L10 with $t7 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:206:17+38
    call $t12 := $1_table_contains'$1_string_String_$1_paymentv1_TransferLink'#0''($t11, $t1);
    if ($abort_flag) {
        assume {:print "$at(2,6763,6801)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(101,1):", $t7} $t7 == $t7;
        goto L10;
    }

    // if ($t12) goto L3 else goto L2 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:206:9+6
    if ($t12) { goto L3; } else { goto L2; }

    // label L3 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:208:47+16
    assume {:print "$at(2,6879,6895)"} true;
L3:

    // $t13 := borrow_field<0x1::paymentv1::TransferLinkStore<#0>>.links($t10) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:208:47+16
    assume {:print "$at(2,6879,6895)"} true;
    $t13 := $ChildMutation($t10, 0, $Dereference($t10)->$links);

    // $t14 := table::borrow_mut<0x1::string::String, 0x1::paymentv1::TransferLink<#0>>($t13, $t1) on_abort goto L10 with $t7 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:208:29+44
    call $t14,$t13 := $1_table_borrow_mut'$1_string_String_$1_paymentv1_TransferLink'#0''($t13, $t1);
    if ($abort_flag) {
        assume {:print "$at(2,6861,6905)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(101,1):", $t7} $t7 == $t7;
        goto L10;
    }

    // trace_local[transfer_link]($t14) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:208:29+44
    $temp_0'$1_paymentv1_TransferLink'#0'' := $Dereference($t14);
    assume {:print "$track_local(101,1,4):", $temp_0'$1_paymentv1_TransferLink'#0''} $temp_0'$1_paymentv1_TransferLink'#0'' == $temp_0'$1_paymentv1_TransferLink'#0'';

    // $t15 := get_field<0x1::paymentv1::TransferLink<#0>>.is_claimed($t14) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:209:18+24
    assume {:print "$at(2,6925,6949)"} true;
    $t15 := $Dereference($t14)->$is_claimed;

    // if ($t15) goto L11 else goto L5 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:209:17+25
    if ($t15) { goto L11; } else { goto L5; }

    // label L5 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:210:17+24
    assume {:print "$at(2,6993,7017)"} true;
L5:

    // $t16 := timestamp::now_seconds() on_abort goto L10 with $t7 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:210:17+24
    assume {:print "$at(2,6993,7017)"} true;
    call $t16 := $1_timestamp_now_seconds();
    if ($abort_flag) {
        assume {:print "$at(2,6993,7017)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(101,1):", $t7} $t7 == $t7;
        goto L10;
    }

    // $t17 := get_field<0x1::paymentv1::TransferLink<#0>>.expires_at($t14) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:210:45+24
    $t17 := $Dereference($t14)->$expires_at;

    // $t18 := <=($t16, $t17) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:210:17+52
    call $t18 := $Le($t16, $t17);

    // if ($t18) goto L7 else goto L12 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:210:9+6
    if ($t18) { goto L7; } else { goto L12; }

    // label L7 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:213:51+7
    assume {:print "$at(2,7190,7197)"} true;
L7:

    // $t19 := 0x1 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:213:51+7
    assume {:print "$at(2,7190,7197)"} true;
    $t19 := 1;
    assume $IsValid'address'($t19);

    // $t20 := get_global<0x1::paymentv1::EscrowCapability>($t19) on_abort goto L10 with $t7 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:213:19+40
    if (!$ResourceExists($1_paymentv1_EscrowCapability_$memory, $t19)) {
        call $ExecFailureAbort();
    } else {
        $t20 := $ResourceValue($1_paymentv1_EscrowCapability_$memory, $t19);
    }
    if ($abort_flag) {
        assume {:print "$at(2,7158,7198)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(101,1):", $t7} $t7 == $t7;
        goto L10;
    }

    // $t21 := get_field<0x1::paymentv1::EscrowCapability>.cap($t20) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:214:68+8
    assume {:print "$at(2,7268,7276)"} true;
    $t21 := $t20->$cap;

    // assume Identical($t22, select account::SignerCapability.account<0x1::account::SignerCapability>($t21)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.spec.move:670:9+30
    assume {:print "$at(98,33947,33977)"} true;
    assume ($t22 == $t21->$account);

    // $t23 := account::create_signer_with_capability($t21) on_abort goto L10 with $t7 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:214:29+48
    assume {:print "$at(2,7229,7277)"} true;
    call $t23 := $1_account_create_signer_with_capability($t21);
    if ($abort_flag) {
        assume {:print "$at(2,7229,7277)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(101,1):", $t7} $t7 == $t7;
        goto L10;
    }

    // trace_local[escrow_signer]($t23) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:214:29+48
    assume {:print "$track_local(101,1,5):", $t23} $t23 == $t23;

    // $t24 := get_field<0x1::paymentv1::TransferLink<#0>>.amount($t14) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:216:57+20
    assume {:print "$at(2,7346,7366)"} true;
    $t24 := $Dereference($t14)->$amount;

    // assume Identical($t25, signer::$address_of($t23)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.spec.move:496:9+49
    assume {:print "$at(132,21619,21668)"} true;
    assume ($t25 == $1_signer_$address_of($t23));

    // assume Identical($t26, global<0x1::coin::CoinStore<#0>>($t25)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.spec.move:497:9+69
    assume {:print "$at(132,21678,21747)"} true;
    assume ($t26 == $ResourceValue($1_coin_CoinStore'#0'_$memory, $t25));

    // assume Identical($t27, global<0x1::coin::CoinStore<#0>>($t6)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.spec.move:499:9+52
    assume {:print "$at(132,21846,21898)"} true;
    assume ($t27 == $ResourceValue($1_coin_CoinStore'#0'_$memory, $t6));

    // coin::transfer<#0>($t23, $t6, $t24) on_abort goto L10 with $t7 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:216:9+69
    assume {:print "$at(2,7298,7367)"} true;
    call $1_coin_transfer'#0'($t23, $t6, $t24);
    if ($abort_flag) {
        assume {:print "$at(2,7298,7367)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(101,1):", $t7} $t7 == $t7;
        goto L10;
    }

    // $t28 := true at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:219:36+4
    assume {:print "$at(2,7443,7447)"} true;
    $t28 := true;
    assume $IsValid'bool'($t28);

    // $t29 := borrow_field<0x1::paymentv1::TransferLink<#0>>.is_claimed($t14) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:219:9+24
    $t29 := $ChildMutation($t14, 4, $Dereference($t14)->$is_claimed);

    // write_ref($t29, $t28) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:219:9+31
    $t29 := $UpdateMutation($t29, $t28);

    // write_back[Reference($t14).is_claimed (bool)]($t29) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:219:9+31
    $t14 := $UpdateMutation($t14, $Update'$1_paymentv1_TransferLink'#0''_is_claimed($Dereference($t14), $Dereference($t29)));

    // $t30 := get_field<0x1::paymentv1::TransferLink<#0>>.sender($t14) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:223:21+20
    assume {:print "$at(2,7533,7553)"} true;
    $t30 := $Dereference($t14)->$sender;

    // $t31 := get_field<0x1::paymentv1::TransferLink<#0>>.amount($t14) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:225:21+20
    assume {:print "$at(2,7612,7632)"} true;
    $t31 := $Dereference($t14)->$amount;

    // write_back[Reference($t13)[]]($t14) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:225:21+20
    $t13 := $UpdateMutation($t13, UpdateTable($Dereference($t13), ReadVec($t14->p, LenVec($t13->p)), $Dereference($t14)));

    // write_back[Reference($t10).links (0x1::table::Table<0x1::string::String, 0x1::paymentv1::TransferLink<#0>>)]($t13) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:225:21+20
    $t10 := $UpdateMutation($t10, $Update'$1_paymentv1_TransferLinkStore'#0''_links($Dereference($t10), $Dereference($t13)));

    // write_back[0x1::paymentv1::TransferLinkStore<#0>@]($t10) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:225:21+20
    $1_paymentv1_TransferLinkStore'#0'_$memory := $ResourceUpdate($1_paymentv1_TransferLinkStore'#0'_$memory, $GlobalLocationAddress($t10),
        $Dereference($t10));

    // $t32 := type_info::type_name<#0>() on_abort goto L10 with $t7 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:226:20+25
    assume {:print "$at(2,7654,7679)"} true;
    $t32 := $1_string_String($TypeName(#0_info));
    if ($abort_flag) {
        assume {:print "$at(2,7654,7679)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(101,1):", $t7} $t7 == $t7;
        goto L10;
    }

    // $t33 := timestamp::now_seconds() on_abort goto L10 with $t7 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:227:24+24
    assume {:print "$at(2,7705,7729)"} true;
    call $t33 := $1_timestamp_now_seconds();
    if ($abort_flag) {
        assume {:print "$at(2,7705,7729)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(101,1):", $t7} $t7 == $t7;
        goto L10;
    }

    // $t34 := pack 0x1::paymentv1::TransferClaimed($t1, $t30, $t6, $t31, $t32, $t33) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:221:21+269
    assume {:print "$at(2,7472,7741)"} true;
    $t34 := $1_paymentv1_TransferClaimed($t1, $t30, $t6, $t31, $t32, $t33);

    // opaque begin: event::emit<0x1::paymentv1::TransferClaimed>($t34) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:221:9+282

    // opaque end: event::emit<0x1::paymentv1::TransferClaimed>($t34) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:221:9+282

    // goto L9 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:197:52+1324
    assume {:print "$at(2,6426,7750)"} true;
    goto L9;

    // label L6 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:210:9+6
    assume {:print "$at(2,6985,6991)"} true;
L6:

    // drop($t14) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:210:9+6
    assume {:print "$at(2,6985,6991)"} true;

    // $t35 := 6 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:210:71+14
    $t35 := 6;
    assume $IsValid'u64'($t35);

    // trace_abort($t35) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:210:9+6
    assume {:print "$at(2,6985,6991)"} true;
    assume {:print "$track_abort(101,1):", $t35} $t35 == $t35;

    // $t7 := move($t35) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:210:9+6
    $t7 := $t35;

    // goto L10 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:210:9+6
    goto L10;

    // label L4 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:209:9+6
    assume {:print "$at(2,6916,6922)"} true;
L4:

    // drop($t14) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:209:9+6
    assume {:print "$at(2,6916,6922)"} true;

    // $t36 := 5 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:209:44+22
    $t36 := 5;
    assume $IsValid'u64'($t36);

    // trace_abort($t36) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:209:9+6
    assume {:print "$at(2,6916,6922)"} true;
    assume {:print "$track_abort(101,1):", $t36} $t36 == $t36;

    // $t7 := move($t36) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:209:9+6
    $t7 := $t36;

    // goto L10 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:209:9+6
    goto L10;

    // label L2 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:206:9+6
    assume {:print "$at(2,6755,6761)"} true;
L2:

    // drop($t10) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:206:9+6
    assume {:print "$at(2,6755,6761)"} true;

    // $t37 := 4 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:206:57+16
    $t37 := 4;
    assume $IsValid'u64'($t37);

    // trace_abort($t37) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:206:9+6
    assume {:print "$at(2,6755,6761)"} true;
    assume {:print "$track_abort(101,1):", $t37} $t37 == $t37;

    // $t7 := move($t37) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:206:9+6
    $t7 := $t37;

    // goto L10 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:206:9+6
    goto L10;

    // label L0 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:201:9+104
    assume {:print "$at(2,6559,6663)"} true;
L0:

    // goto L8 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:201:9+104
    assume {:print "$at(2,6559,6663)"} true;
    goto L8;

    // label L9 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:229:5+1
    assume {:print "$at(2,7749,7750)"} true;
L9:

    // return () at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:229:5+1
    assume {:print "$at(2,7749,7750)"} true;
    return;

    // label L10 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:229:5+1
L10:

    // abort($t7) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:229:5+1
    assume {:print "$at(2,7749,7750)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

    // label L11 at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;
L11:

    // drop($t10) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // drop($t13) at <internal>:1:1+10

    // goto L4 at <internal>:1:1+10
    goto L4;

    // label L12 at <internal>:1:1+10
L12:

    // drop($t10) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // drop($t13) at <internal>:1:1+10

    // goto L6 at <internal>:1:1+10
    goto L6;

}

// fun paymentv1::create_transfer_with_link [verification] at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:135:5+2092
procedure {:timeLimit 40} $1_paymentv1_create_transfer_with_link$verify(_$t0: $signer, _$t1: $1_string_String, _$t2: int, _$t3: int) returns ()
{
    // declare local variables
    var $t4: int;
    var $t5: $signer;
    var $t6: int;
    var $t7: $Mutation ($1_paymentv1_TransferLinkStore'#0');
    var $t8: int;
    var $t9: int;
    var $t10: bool;
    var $t11: int;
    var $t12: int;
    var $t13: int;
    var $t14: int;
    var $t15: bool;
    var $t16: bool;
    var $t17: int;
    var $t18: $1_paymentv1_EscrowCapability;
    var $t19: $1_account_SignerCapability;
    var $t20: int;
    var $t21: $signer;
    var $t22: int;
    var $t23: bool;
    var $t24: int;
    var $t25: $Mutation ($1_paymentv1_TransferLinkStore'#0');
    var $t26: Table int ($1_paymentv1_TransferLink'#0');
    var $t27: bool;
    var $t28: int;
    var $t29: $1_coin_CoinStore'#0';
    var $t30: $1_coin_CoinStore'#0';
    var $t31: int;
    var $t32: int;
    var $t33: int;
    var $t34: int;
    var $t35: $Mutation (Table int ($1_paymentv1_TransferLink'#0'));
    var $t36: int;
    var $t37: bool;
    var $t38: $1_paymentv1_TransferLink'#0';
    var $t39: $1_string_String;
    var $t40: int;
    var $t41: $1_paymentv1_TransferLinkCreated;
    var $t42: int;
    var $t43: int;
    var $t44: int;
    var $t0: $signer;
    var $t1: $1_string_String;
    var $t2: int;
    var $t3: int;
    var $temp_0'$1_paymentv1_TransferLinkStore'#0'': $1_paymentv1_TransferLinkStore'#0';
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;
    $t3 := _$t3;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:135:5+1
    assume {:print "$at(2,4117,4118)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($t0->$addr);

    // assume WellFormed($t1) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:135:5+1
    assume $IsValid'$1_string_String'($t1);

    // assume WellFormed($t2) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:135:5+1
    assume $IsValid'u64'($t2);

    // assume WellFormed($t3) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:135:5+1
    assume $IsValid'u64'($t3);

    // assume forall $rsc: 0x1::features::Features: ResourceDomain<0x1::features::Features>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:135:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_features_Features_$memory, $a_0)}(var $rsc := $ResourceValue($1_features_Features_$memory, $a_0);
    ($IsValid'$1_features_Features'($rsc))));

    // assume forall $rsc: 0x1::chain_status::GenesisEndMarker: ResourceDomain<0x1::chain_status::GenesisEndMarker>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:135:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0)}(var $rsc := $ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0);
    ($IsValid'$1_chain_status_GenesisEndMarker'($rsc))));

    // assume forall $rsc: 0x1::timestamp::CurrentTimeMicroseconds: ResourceDomain<0x1::timestamp::CurrentTimeMicroseconds>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:135:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0)}(var $rsc := $ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0);
    ($IsValid'$1_timestamp_CurrentTimeMicroseconds'($rsc))));

    // assume forall $rsc: 0x1::permissioned_signer::PermissionStorage: ResourceDomain<0x1::permissioned_signer::PermissionStorage>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:135:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_permissioned_signer_PermissionStorage_$memory, $a_0)}(var $rsc := $ResourceValue($1_permissioned_signer_PermissionStorage_$memory, $a_0);
    ($IsValid'$1_permissioned_signer_PermissionStorage'($rsc))));

    // assume forall $rsc: 0x1::account::Account: ResourceDomain<0x1::account::Account>(): And(WellFormed($rsc), And(Le(Len<address>(select option::Option.vec(select account::CapabilityOffer.for(select account::Account.rotation_capability_offer($rsc)))), 1), Le(Len<address>(select option::Option.vec(select account::CapabilityOffer.for(select account::Account.signer_capability_offer($rsc)))), 1))) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:135:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_account_Account_$memory, $a_0)}(var $rsc := $ResourceValue($1_account_Account_$memory, $a_0);
    (($IsValid'$1_account_Account'($rsc) && ((LenVec($rsc->$rotation_capability_offer->$for->$vec) <= 1) && (LenVec($rsc->$signer_capability_offer->$for->$vec) <= 1))))));

    // assume forall $rsc: 0x1::object::ObjectCore: ResourceDomain<0x1::object::ObjectCore>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:135:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_ObjectCore_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_ObjectCore_$memory, $a_0);
    ($IsValid'$1_object_ObjectCore'($rsc))));

    // assume forall $rsc: 0x1::object::TombStone: ResourceDomain<0x1::object::TombStone>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:135:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_TombStone_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_TombStone_$memory, $a_0);
    ($IsValid'$1_object_TombStone'($rsc))));

    // assume forall $rsc: 0x1::object::Untransferable: ResourceDomain<0x1::object::Untransferable>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:135:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_Untransferable_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_Untransferable_$memory, $a_0);
    ($IsValid'$1_object_Untransferable'($rsc))));

    // assume forall $rsc: 0x1::fungible_asset::Untransferable: ResourceDomain<0x1::fungible_asset::Untransferable>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:135:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_Untransferable_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_Untransferable_$memory, $a_0);
    ($IsValid'$1_fungible_asset_Untransferable'($rsc))));

    // assume forall $rsc: 0x1::fungible_asset::ConcurrentFungibleBalance: ResourceDomain<0x1::fungible_asset::ConcurrentFungibleBalance>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:135:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_ConcurrentFungibleBalance_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_ConcurrentFungibleBalance_$memory, $a_0);
    ($IsValid'$1_fungible_asset_ConcurrentFungibleBalance'($rsc))));

    // assume forall $rsc: 0x1::fungible_asset::ConcurrentSupply: ResourceDomain<0x1::fungible_asset::ConcurrentSupply>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:135:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_ConcurrentSupply_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_ConcurrentSupply_$memory, $a_0);
    ($IsValid'$1_fungible_asset_ConcurrentSupply'($rsc))));

    // assume forall $rsc: 0x1::fungible_asset::DispatchFunctionStore: ResourceDomain<0x1::fungible_asset::DispatchFunctionStore>(): And(WellFormed($rsc), And(And(Le(Len<0x1::function_info::FunctionInfo>(select option::Option.vec(select fungible_asset::DispatchFunctionStore.withdraw_function($rsc))), 1), Le(Len<0x1::function_info::FunctionInfo>(select option::Option.vec(select fungible_asset::DispatchFunctionStore.deposit_function($rsc))), 1)), Le(Len<0x1::function_info::FunctionInfo>(select option::Option.vec(select fungible_asset::DispatchFunctionStore.derived_balance_function($rsc))), 1))) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:135:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_DispatchFunctionStore_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_DispatchFunctionStore_$memory, $a_0);
    (($IsValid'$1_fungible_asset_DispatchFunctionStore'($rsc) && (((LenVec($rsc->$withdraw_function->$vec) <= 1) && (LenVec($rsc->$deposit_function->$vec) <= 1)) && (LenVec($rsc->$derived_balance_function->$vec) <= 1))))));

    // assume forall $rsc: 0x1::fungible_asset::FungibleStore: ResourceDomain<0x1::fungible_asset::FungibleStore>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:135:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_FungibleStore_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_FungibleStore_$memory, $a_0);
    ($IsValid'$1_fungible_asset_FungibleStore'($rsc))));

    // assume forall $rsc: 0x1::fungible_asset::Metadata: ResourceDomain<0x1::fungible_asset::Metadata>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:135:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_Metadata_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_Metadata_$memory, $a_0);
    ($IsValid'$1_fungible_asset_Metadata'($rsc))));

    // assume forall $rsc: 0x1::fungible_asset::Supply: ResourceDomain<0x1::fungible_asset::Supply>(): And(WellFormed($rsc), Le(Len<u128>(select option::Option.vec(select fungible_asset::Supply.maximum($rsc))), 1)) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:135:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_Supply_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_Supply_$memory, $a_0);
    (($IsValid'$1_fungible_asset_Supply'($rsc) && (LenVec($rsc->$maximum->$vec) <= 1)))));

    // assume forall $rsc: 0x1::dispatchable_fungible_asset::TransferRefStore: ResourceDomain<0x1::dispatchable_fungible_asset::TransferRefStore>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:135:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_dispatchable_fungible_asset_TransferRefStore_$memory, $a_0)}(var $rsc := $ResourceValue($1_dispatchable_fungible_asset_TransferRefStore_$memory, $a_0);
    ($IsValid'$1_dispatchable_fungible_asset_TransferRefStore'($rsc))));

    // assume forall $rsc: 0x1::primary_fungible_store::DeriveRefPod: ResourceDomain<0x1::primary_fungible_store::DeriveRefPod>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:135:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_primary_fungible_store_DeriveRefPod_$memory, $a_0)}(var $rsc := $ResourceValue($1_primary_fungible_store_DeriveRefPod_$memory, $a_0);
    ($IsValid'$1_primary_fungible_store_DeriveRefPod'($rsc))));

    // assume forall $rsc: 0x1::coin::CoinConversionMap: ResourceDomain<0x1::coin::CoinConversionMap>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:135:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinConversionMap_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinConversionMap_$memory, $a_0);
    ($IsValid'$1_coin_CoinConversionMap'($rsc))));

    // assume forall $rsc: 0x1::coin::PairedCoinType: ResourceDomain<0x1::coin::PairedCoinType>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:135:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_PairedCoinType_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_PairedCoinType_$memory, $a_0);
    ($IsValid'$1_coin_PairedCoinType'($rsc))));

    // assume forall $rsc: 0x1::coin::PairedFungibleAssetRefs: ResourceDomain<0x1::coin::PairedFungibleAssetRefs>(): And(WellFormed($rsc), And(And(Le(Len<0x1::fungible_asset::MintRef>(select option::Option.vec(select coin::PairedFungibleAssetRefs.mint_ref_opt($rsc))), 1), Le(Len<0x1::fungible_asset::TransferRef>(select option::Option.vec(select coin::PairedFungibleAssetRefs.transfer_ref_opt($rsc))), 1)), Le(Len<0x1::fungible_asset::BurnRef>(select option::Option.vec(select coin::PairedFungibleAssetRefs.burn_ref_opt($rsc))), 1))) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:135:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_PairedFungibleAssetRefs_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_PairedFungibleAssetRefs_$memory, $a_0);
    (($IsValid'$1_coin_PairedFungibleAssetRefs'($rsc) && (((LenVec($rsc->$mint_ref_opt->$vec) <= 1) && (LenVec($rsc->$transfer_ref_opt->$vec) <= 1)) && (LenVec($rsc->$burn_ref_opt->$vec) <= 1))))));

    // assume forall $rsc: 0x1::coin::CoinInfo<#0>: ResourceDomain<0x1::coin::CoinInfo<#0>>(): And(WellFormed($rsc), And(Le(Len<0x1::optional_aggregator::OptionalAggregator>(select option::Option.vec(select coin::CoinInfo.supply($rsc))), 1), forall $elem: 0x1::optional_aggregator::OptionalAggregator: select option::Option.vec(select coin::CoinInfo.supply($rsc)): And(And(And(And(And(Iff(option::$is_some<0x1::aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)), option::$is_none<0x1::optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem))), Iff(option::$is_some<0x1::optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)), option::$is_none<0x1::aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)))), Implies(option::$is_some<0x1::optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)), Le(select optional_aggregator::Integer.value<0x1::optional_aggregator::Integer>(option::$borrow<0x1::optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem))), select optional_aggregator::Integer.limit<0x1::optional_aggregator::Integer>(option::$borrow<0x1::optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)))))), Implies(option::$is_some<0x1::aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)), Le(aggregator::spec_aggregator_get_val(option::$borrow<0x1::aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem))), aggregator::spec_get_limit(option::$borrow<0x1::aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)))))), Le(Len<0x1::aggregator::Aggregator>(select option::Option.vec(select optional_aggregator::OptionalAggregator.aggregator($elem))), 1)), Le(Len<0x1::optional_aggregator::Integer>(select option::Option.vec(select optional_aggregator::OptionalAggregator.integer($elem))), 1)))) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:135:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinInfo'#0'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinInfo'#0'_$memory, $a_0);
    (($IsValid'$1_coin_CoinInfo'#0''($rsc) && ((LenVec($rsc->$supply->$vec) <= 1) && (var $range_1 := $rsc->$supply->$vec; (forall $i_2: int :: InRangeVec($range_1, $i_2) ==> (var $elem := ReadVec($range_1, $i_2);
    ((((((($1_option_$is_some'$1_aggregator_Aggregator'($elem->$aggregator) <==> $1_option_$is_none'$1_optional_aggregator_Integer'($elem->$integer)) && ($1_option_$is_some'$1_optional_aggregator_Integer'($elem->$integer) <==> $1_option_$is_none'$1_aggregator_Aggregator'($elem->$aggregator))) && ($1_option_$is_some'$1_optional_aggregator_Integer'($elem->$integer) ==> ($1_option_$borrow'$1_optional_aggregator_Integer'($elem->$integer)->$value <= $1_option_$borrow'$1_optional_aggregator_Integer'($elem->$integer)->$limit))) && ($1_option_$is_some'$1_aggregator_Aggregator'($elem->$aggregator) ==> ($1_aggregator_spec_aggregator_get_val($1_option_$borrow'$1_aggregator_Aggregator'($elem->$aggregator)) <= $1_aggregator_spec_get_limit($1_option_$borrow'$1_aggregator_Aggregator'($elem->$aggregator))))) && (LenVec($elem->$aggregator->$vec) <= 1)) && (LenVec($elem->$integer->$vec) <= 1)))))))))));

    // assume forall $rsc: 0x1::coin::CoinStore<#0>: ResourceDomain<0x1::coin::CoinStore<#0>>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:135:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinStore'#0'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinStore'#0'_$memory, $a_0);
    ($IsValid'$1_coin_CoinStore'#0''($rsc))));

    // assume forall $rsc: 0x1::coin::Ghost$supply<#0>: ResourceDomain<0x1::coin::Ghost$supply<#0>>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:135:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_Ghost$supply'#0'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_Ghost$supply'#0'_$memory, $a_0);
    ($IsValid'$1_coin_Ghost$supply'#0''($rsc))));

    // assume exists<0x1::coin::Ghost$supply<#0>>(0x0) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:135:5+1
    assume $ResourceExists($1_coin_Ghost$supply'#0'_$memory, 0);

    // assume forall $rsc: 0x1::coin::Ghost$aggregate_supply<#0>: ResourceDomain<0x1::coin::Ghost$aggregate_supply<#0>>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:135:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_Ghost$aggregate_supply'#0'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_Ghost$aggregate_supply'#0'_$memory, $a_0);
    ($IsValid'$1_coin_Ghost$aggregate_supply'#0''($rsc))));

    // assume exists<0x1::coin::Ghost$aggregate_supply<#0>>(0x0) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:135:5+1
    assume $ResourceExists($1_coin_Ghost$aggregate_supply'#0'_$memory, 0);

    // assume forall $rsc: 0x1::reconfiguration::Configuration: ResourceDomain<0x1::reconfiguration::Configuration>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:135:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_reconfiguration_Configuration_$memory, $a_0)}(var $rsc := $ResourceValue($1_reconfiguration_Configuration_$memory, $a_0);
    ($IsValid'$1_reconfiguration_Configuration'($rsc))));

    // assume forall $rsc: 0x1::supported_tokens::SupportedTokens: ResourceDomain<0x1::supported_tokens::SupportedTokens>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:135:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_supported_tokens_SupportedTokens_$memory, $a_0)}(var $rsc := $ResourceValue($1_supported_tokens_SupportedTokens_$memory, $a_0);
    ($IsValid'$1_supported_tokens_SupportedTokens'($rsc))));

    // assume forall $rsc: 0x1::paymentv1::EscrowCapability: ResourceDomain<0x1::paymentv1::EscrowCapability>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:135:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_paymentv1_EscrowCapability_$memory, $a_0)}(var $rsc := $ResourceValue($1_paymentv1_EscrowCapability_$memory, $a_0);
    ($IsValid'$1_paymentv1_EscrowCapability'($rsc))));

    // assume forall $rsc: 0x1::paymentv1::TransferLinkStore<#0>: ResourceDomain<0x1::paymentv1::TransferLinkStore<#0>>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:135:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_paymentv1_TransferLinkStore'#0'_$memory, $a_0)}(var $rsc := $ResourceValue($1_paymentv1_TransferLinkStore'#0'_$memory, $a_0);
    ($IsValid'$1_paymentv1_TransferLinkStore'#0''($rsc))));

    // assume Implies(chain_status::$is_operating(), exists<0x1::timestamp::CurrentTimeMicroseconds>(0x1)) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:135:5+2092
    // global invariant at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\timestamp.spec.move:36:9+107
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, 1));

    // assume Implies(chain_status::$is_operating(), Ge(timestamp::spec_now_microseconds(), reconfiguration::$last_reconfiguration_time())) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:135:5+2092
    // global invariant at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\reconfiguration.spec.move:51:9+138
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> ($1_timestamp_spec_now_microseconds($1_timestamp_CurrentTimeMicroseconds_$memory) >= $1_reconfiguration_$last_reconfiguration_time($1_reconfiguration_Configuration_$memory)));

    // trace_local[sender]($t0) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:135:5+1
    assume {:print "$track_local(101,2,0):", $t0} $t0 == $t0;

    // trace_local[link_id]($t1) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:135:5+1
    assume {:print "$track_local(101,2,1):", $t1} $t1 == $t1;

    // trace_local[amount]($t2) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:135:5+1
    assume {:print "$track_local(101,2,2):", $t2} $t2 == $t2;

    // trace_local[expires_in_hours]($t3) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:135:5+1
    assume {:print "$track_local(101,2,3):", $t3} $t3 == $t3;

    // $t9 := 0 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:141:26+1
    assume {:print "$at(2,4358,4359)"} true;
    $t9 := 0;
    assume $IsValid'u64'($t9);

    // $t10 := >($t2, $t9) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:141:17+10
    call $t10 := $Gt($t2, $t9);

    // if ($t10) goto L1 else goto L0 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:141:9+6
    if ($t10) { goto L1; } else { goto L0; }

    // label L1 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:142:47+7
    assume {:print "$at(2,4427,4434)"} true;
L1:

    // $t11 := 0x1 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:142:47+7
    assume {:print "$at(2,4427,4434)"} true;
    $t11 := 1;
    assume $IsValid'address'($t11);

    // supported_tokens::assert_supported<#0>($t11) on_abort goto L13 with $t12 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:142:9+46
    call $1_supported_tokens_assert_supported'#0'($t11);
    if ($abort_flag) {
        assume {:print "$at(2,4389,4435)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(101,2):", $t12} $t12 == $t12;
        goto L13;
    }

    // $t13 := signer::address_of($t0) on_abort goto L13 with $t12 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:144:27+26
    assume {:print "$at(2,4474,4500)"} true;
    call $t13 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,4474,4500)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(101,2):", $t12} $t12 == $t12;
        goto L13;
    }

    // trace_local[$t8]($t13) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:144:27+26
    assume {:print "$track_local(101,2,4):", $t13} $t13 == $t13;

    // $t14 := coin::balance<#0>($t13) on_abort goto L13 with $t12 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:147:23+29
    assume {:print "$at(2,4582,4611)"} true;
    call $t14 := $1_coin_balance'#0'($t13);
    if ($abort_flag) {
        assume {:print "$at(2,4582,4611)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(101,2):", $t12} $t12 == $t12;
        goto L13;
    }

    // $t15 := >=($t14, $t2) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:148:17+17
    assume {:print "$at(2,4630,4647)"} true;
    call $t15 := $Ge($t14, $t2);

    // if ($t15) goto L3 else goto L2 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:148:9+6
    if ($t15) { goto L3; } else { goto L2; }

    // label L3 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:151:14+43
    assume {:print "$at(2,4752,4795)"} true;
L3:

    // $t16 := coin::is_account_registered<#0>($t13) on_abort goto L13 with $t12 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:151:14+43
    assume {:print "$at(2,4752,4795)"} true;
    call $t16 := $1_coin_is_account_registered'#0'($t13);
    if ($abort_flag) {
        assume {:print "$at(2,4752,4795)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(101,2):", $t12} $t12 == $t12;
        goto L13;
    }

    // if ($t16) goto L5 else goto L4 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:151:13+44
    if ($t16) { goto L5; } else { goto L4; }

    // label L5 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:151:9+102
L5:

    // goto L6 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:151:9+102
    assume {:print "$at(2,4747,4849)"} true;
    goto L6;

    // label L4 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:152:13+25
    assume {:print "$at(2,4812,4837)"} true;
L4:

    // coin::register<#0>($t0) on_abort goto L13 with $t12 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:152:13+25
    assume {:print "$at(2,4812,4837)"} true;
    call $1_coin_register'#0'($t0);
    if ($abort_flag) {
        assume {:print "$at(2,4812,4837)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(101,2):", $t12} $t12 == $t12;
        goto L13;
    }

    // label L6 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:156:51+7
    assume {:print "$at(2,4942,4949)"} true;
L6:

    // $t17 := 0x1 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:156:51+7
    assume {:print "$at(2,4942,4949)"} true;
    $t17 := 1;
    assume $IsValid'address'($t17);

    // $t18 := get_global<0x1::paymentv1::EscrowCapability>($t17) on_abort goto L13 with $t12 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:156:19+40
    if (!$ResourceExists($1_paymentv1_EscrowCapability_$memory, $t17)) {
        call $ExecFailureAbort();
    } else {
        $t18 := $ResourceValue($1_paymentv1_EscrowCapability_$memory, $t17);
    }
    if ($abort_flag) {
        assume {:print "$at(2,4910,4950)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(101,2):", $t12} $t12 == $t12;
        goto L13;
    }

    // $t19 := get_field<0x1::paymentv1::EscrowCapability>.cap($t18) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:157:68+8
    assume {:print "$at(2,5020,5028)"} true;
    $t19 := $t18->$cap;

    // assume Identical($t20, select account::SignerCapability.account<0x1::account::SignerCapability>($t19)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\account\account.spec.move:670:9+30
    assume {:print "$at(98,33947,33977)"} true;
    assume ($t20 == $t19->$account);

    // $t21 := account::create_signer_with_capability($t19) on_abort goto L13 with $t12 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:157:29+48
    assume {:print "$at(2,4981,5029)"} true;
    call $t21 := $1_account_create_signer_with_capability($t19);
    if ($abort_flag) {
        assume {:print "$at(2,4981,5029)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(101,2):", $t12} $t12 == $t12;
        goto L13;
    }

    // trace_local[escrow_signer]($t21) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:157:29+48
    assume {:print "$track_local(101,2,5):", $t21} $t21 == $t21;

    // $t22 := signer::address_of($t21) on_abort goto L13 with $t12 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:158:27+34
    assume {:print "$at(2,5058,5092)"} true;
    call $t22 := $1_signer_address_of($t21);
    if ($abort_flag) {
        assume {:print "$at(2,5058,5092)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(101,2):", $t12} $t12 == $t12;
        goto L13;
    }

    // trace_local[$t17]($t22) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:158:27+34
    assume {:print "$track_local(101,2,6):", $t22} $t22 == $t22;

    // $t23 := coin::is_account_registered<#0>($t22) on_abort goto L13 with $t12 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:161:14+43
    assume {:print "$at(2,5173,5216)"} true;
    call $t23 := $1_coin_is_account_registered'#0'($t22);
    if ($abort_flag) {
        assume {:print "$at(2,5173,5216)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(101,2):", $t12} $t12 == $t12;
        goto L13;
    }

    // if ($t23) goto L8 else goto L7 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:161:13+44
    if ($t23) { goto L8; } else { goto L7; }

    // label L8 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:161:9+110
L8:

    // goto L9 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:161:9+110
    assume {:print "$at(2,5168,5278)"} true;
    goto L9;

    // label L7 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:162:31+14
    assume {:print "$at(2,5251,5265)"} true;
L7:

    // coin::register<#0>($t21) on_abort goto L13 with $t12 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:162:13+33
    assume {:print "$at(2,5233,5266)"} true;
    call $1_coin_register'#0'($t21);
    if ($abort_flag) {
        assume {:print "$at(2,5233,5266)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(101,2):", $t12} $t12 == $t12;
        goto L13;
    }

    // label L9 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:166:61+7
    assume {:print "$at(2,5377,5384)"} true;
L9:

    // $t24 := 0x1 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:166:61+7
    assume {:print "$at(2,5377,5384)"} true;
    $t24 := 1;
    assume $IsValid'address'($t24);

    // $t25 := borrow_global<0x1::paymentv1::TransferLinkStore<#0>>($t24) on_abort goto L13 with $t12 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:166:21+48
    if (!$ResourceExists($1_paymentv1_TransferLinkStore'#0'_$memory, $t24)) {
        call $ExecFailureAbort();
    } else {
        $t25 := $Mutation($Global($t24), EmptyVec(), $ResourceValue($1_paymentv1_TransferLinkStore'#0'_$memory, $t24));
    }
    if ($abort_flag) {
        assume {:print "$at(2,5337,5385)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(101,2):", $t12} $t12 == $t12;
        goto L13;
    }

    // trace_local[store]($t25) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:166:21+48
    $temp_0'$1_paymentv1_TransferLinkStore'#0'' := $Dereference($t25);
    assume {:print "$track_local(101,2,7):", $temp_0'$1_paymentv1_TransferLinkStore'#0''} $temp_0'$1_paymentv1_TransferLinkStore'#0'' == $temp_0'$1_paymentv1_TransferLinkStore'#0'';

    // $t26 := get_field<0x1::paymentv1::TransferLinkStore<#0>>.links($t25) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:167:34+12
    assume {:print "$at(2,5421,5433)"} true;
    $t26 := $Dereference($t25)->$links;

    // $t27 := table::contains<0x1::string::String, 0x1::paymentv1::TransferLink<#0>>($t26, $t1) on_abort goto L13 with $t12 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:167:18+38
    call $t27 := $1_table_contains'$1_string_String_$1_paymentv1_TransferLink'#0''($t26, $t1);
    if ($abort_flag) {
        assume {:print "$at(2,5405,5443)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(101,2):", $t12} $t12 == $t12;
        goto L13;
    }

    // if ($t27) goto L10 else goto L11 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:167:17+39
    if ($t27) { goto L10; } else { goto L11; }

    // label L11 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:170:27+6
    assume {:print "$at(2,5544,5550)"} true;
L11:

    // assume Identical($t28, signer::$address_of($t0)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.spec.move:496:9+49
    assume {:print "$at(132,21619,21668)"} true;
    assume ($t28 == $1_signer_$address_of($t0));

    // assume Identical($t29, global<0x1::coin::CoinStore<#0>>($t28)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.spec.move:497:9+69
    assume {:print "$at(132,21678,21747)"} true;
    assume ($t29 == $ResourceValue($1_coin_CoinStore'#0'_$memory, $t28));

    // assume Identical($t30, global<0x1::coin::CoinStore<#0>>($t22)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.spec.move:499:9+52
    assume {:print "$at(132,21846,21898)"} true;
    assume ($t30 == $ResourceValue($1_coin_CoinStore'#0'_$memory, $t22));

    // coin::transfer<#0>($t0, $t22, $t2) on_abort goto L13 with $t12 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:170:9+46
    assume {:print "$at(2,5526,5572)"} true;
    call $1_coin_transfer'#0'($t0, $t22, $t2);
    if ($abort_flag) {
        assume {:print "$at(2,5526,5572)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(101,2):", $t12} $t12 == $t12;
        goto L13;
    }

    // $t31 := timestamp::now_seconds() on_abort goto L13 with $t12 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:172:26+24
    assume {:print "$at(2,5610,5634)"} true;
    call $t31 := $1_timestamp_now_seconds();
    if ($abort_flag) {
        assume {:print "$at(2,5610,5634)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(101,2):", $t12} $t12 == $t12;
        goto L13;
    }

    // $t32 := 3600 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:172:72+4
    $t32 := 3600;
    assume $IsValid'u64'($t32);

    // $t33 := *($t3, $t32) on_abort goto L13 with $t12 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:172:53+23
    call $t33 := $MulU64($t3, $t32);
    if ($abort_flag) {
        assume {:print "$at(2,5637,5660)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(101,2):", $t12} $t12 == $t12;
        goto L13;
    }

    // $t34 := +($t31, $t33) on_abort goto L13 with $t12 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:172:26+50
    call $t34 := $AddU64($t31, $t33);
    if ($abort_flag) {
        assume {:print "$at(2,5610,5660)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(101,2):", $t12} $t12 == $t12;
        goto L13;
    }

    // trace_local[$t5]($t34) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:172:26+50
    assume {:print "$track_local(101,2,8):", $t34} $t34 == $t34;

    // $t35 := borrow_field<0x1::paymentv1::TransferLinkStore<#0>>.links($t25) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:175:20+16
    assume {:print "$at(2,5725,5741)"} true;
    $t35 := $ChildMutation($t25, 0, $Dereference($t25)->$links);

    // $t36 := timestamp::now_seconds() on_abort goto L13 with $t12 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:178:25+24
    assume {:print "$at(2,5850,5874)"} true;
    call $t36 := $1_timestamp_now_seconds();
    if ($abort_flag) {
        assume {:print "$at(2,5850,5874)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(101,2):", $t12} $t12 == $t12;
        goto L13;
    }

    // $t37 := false at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:180:25+5
    assume {:print "$at(2,5926,5931)"} true;
    $t37 := false;
    assume $IsValid'bool'($t37);

    // $t38 := pack 0x1::paymentv1::TransferLink<#0>($t13, $t2, $t36, $t34, $t37) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:175:47+191
    assume {:print "$at(2,5752,5943)"} true;
    $t38 := $1_paymentv1_TransferLink'#0'($t13, $t2, $t36, $t34, $t37);

    // table::add<0x1::string::String, 0x1::paymentv1::TransferLink<#0>>($t35, $t1, $t38) on_abort goto L13 with $t12 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:175:9+230
    call $t35 := $1_table_add'$1_string_String_$1_paymentv1_TransferLink'#0''($t35, $t1, $t38);
    if ($abort_flag) {
        assume {:print "$at(2,5714,5944)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(101,2):", $t12} $t12 == $t12;
        goto L13;
    }

    // write_back[Reference($t25).links (0x1::table::Table<0x1::string::String, 0x1::paymentv1::TransferLink<#0>>)]($t35) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:175:9+230
    $t25 := $UpdateMutation($t25, $Update'$1_paymentv1_TransferLinkStore'#0''_links($Dereference($t25), $Dereference($t35)));

    // write_back[0x1::paymentv1::TransferLinkStore<#0>@]($t25) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:175:9+230
    $1_paymentv1_TransferLinkStore'#0'_$memory := $ResourceUpdate($1_paymentv1_TransferLinkStore'#0'_$memory, $GlobalLocationAddress($t25),
        $Dereference($t25));

    // $t39 := type_info::type_name<#0>() on_abort goto L13 with $t12 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:187:20+25
    assume {:print "$at(2,6088,6113)"} true;
    $t39 := $1_string_String($TypeName(#0_info));
    if ($abort_flag) {
        assume {:print "$at(2,6088,6113)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(101,2):", $t12} $t12 == $t12;
        goto L13;
    }

    // $t40 := timestamp::now_seconds() on_abort goto L13 with $t12 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:189:24+24
    assume {:print "$at(2,6164,6188)"} true;
    call $t40 := $1_timestamp_now_seconds();
    if ($abort_flag) {
        assume {:print "$at(2,6164,6188)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(101,2):", $t12} $t12 == $t12;
        goto L13;
    }

    // $t41 := pack 0x1::paymentv1::TransferLinkCreated($t1, $t13, $t2, $t39, $t34, $t40) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:183:21+231
    assume {:print "$at(2,5969,6200)"} true;
    $t41 := $1_paymentv1_TransferLinkCreated($t1, $t13, $t2, $t39, $t34, $t40);

    // opaque begin: event::emit<0x1::paymentv1::TransferLinkCreated>($t41) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:183:9+244

    // opaque end: event::emit<0x1::paymentv1::TransferLinkCreated>($t41) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:183:9+244

    // goto L12 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:140:52+1879
    assume {:print "$at(2,4330,6209)"} true;
    goto L12;

    // label L10 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:167:9+6
    assume {:print "$at(2,5396,5402)"} true;
L10:

    // drop($t25) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:167:9+6
    assume {:print "$at(2,5396,5402)"} true;

    // $t42 := 8 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:167:58+21
    $t42 := 8;
    assume $IsValid'u64'($t42);

    // trace_abort($t42) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:167:9+6
    assume {:print "$at(2,5396,5402)"} true;
    assume {:print "$track_abort(101,2):", $t42} $t42 == $t42;

    // $t12 := move($t42) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:167:9+6
    $t12 := $t42;

    // goto L13 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:167:9+6
    goto L13;

    // label L2 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:148:9+6
    assume {:print "$at(2,4622,4628)"} true;
L2:

    // $t43 := 3 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:148:36+22
    assume {:print "$at(2,4649,4671)"} true;
    $t43 := 3;
    assume $IsValid'u64'($t43);

    // trace_abort($t43) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:148:9+6
    assume {:print "$at(2,4622,4628)"} true;
    assume {:print "$track_abort(101,2):", $t43} $t43 == $t43;

    // $t12 := move($t43) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:148:9+6
    $t12 := $t43;

    // goto L13 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:148:9+6
    goto L13;

    // label L0 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:141:9+6
    assume {:print "$at(2,4341,4347)"} true;
L0:

    // $t44 := 2 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:141:29+16
    assume {:print "$at(2,4361,4377)"} true;
    $t44 := 2;
    assume $IsValid'u64'($t44);

    // trace_abort($t44) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:141:9+6
    assume {:print "$at(2,4341,4347)"} true;
    assume {:print "$track_abort(101,2):", $t44} $t44 == $t44;

    // $t12 := move($t44) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:141:9+6
    $t12 := $t44;

    // goto L13 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:141:9+6
    goto L13;

    // label L12 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:191:5+1
    assume {:print "$at(2,6208,6209)"} true;
L12:

    // return () at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:191:5+1
    assume {:print "$at(2,6208,6209)"} true;
    return;

    // label L13 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:191:5+1
L13:

    // abort($t12) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:191:5+1
    assume {:print "$at(2,6208,6209)"} true;
    $abort_code := $t12;
    $abort_flag := true;
    return;

}

// fun paymentv1::ensure_store [verification] at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:86:5+370
procedure {:timeLimit 40} $1_paymentv1_ensure_store$verify(_$t0: $signer) returns ()
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t4: bool;
    var $t5: int;
    var $t6: bool;
    var $t7: Table int ($1_paymentv1_TransferLink'#0');
    var $t8: $1_paymentv1_TransferLinkStore'#0';
    var $t9: int;
    var $t0: $signer;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:86:5+1
    assume {:print "$at(2,2450,2451)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($t0->$addr);

    // assume forall $rsc: 0x1::paymentv1::TransferLinkStore<#0>: ResourceDomain<0x1::paymentv1::TransferLinkStore<#0>>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:86:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_paymentv1_TransferLinkStore'#0'_$memory, $a_0)}(var $rsc := $ResourceValue($1_paymentv1_TransferLinkStore'#0'_$memory, $a_0);
    ($IsValid'$1_paymentv1_TransferLinkStore'#0''($rsc))));

    // trace_local[admin]($t0) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:86:5+1
    assume {:print "$track_local(101,3,0):", $t0} $t0 == $t0;

    // $t1 := signer::address_of($t0) on_abort goto L6 with $t2 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:87:19+25
    assume {:print "$at(2,2527,2552)"} true;
    call $t1 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,2527,2552)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(101,3):", $t2} $t2 == $t2;
        goto L6;
    }

    // $t3 := 0x1 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:88:24+7
    assume {:print "$at(2,2578,2585)"} true;
    $t3 := 1;
    assume $IsValid'address'($t3);

    // $t4 := ==($t1, $t3) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:88:17+14
    $t4 := $IsEqual'address'($t1, $t3);

    // if ($t4) goto L1 else goto L0 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:88:9+6
    if ($t4) { goto L1; } else { goto L0; }

    // label L1 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:90:43+7
    assume {:print "$at(2,2659,2666)"} true;
L1:

    // $t5 := 0x1 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:90:43+7
    assume {:print "$at(2,2659,2666)"} true;
    $t5 := 1;
    assume $IsValid'address'($t5);

    // $t6 := exists<0x1::paymentv1::TransferLinkStore<#0>>($t5) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:90:14+37
    $t6 := $ResourceExists($1_paymentv1_TransferLinkStore'#0'_$memory, $t5);

    // if ($t6) goto L2 else goto L3 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:90:13+38
    if ($t6) { goto L2; } else { goto L3; }

    // label L3 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:91:21+5
    assume {:print "$at(2,2692,2697)"} true;
L3:

    // $t7 := table::new<0x1::string::String, 0x1::paymentv1::TransferLink<#0>>() on_abort goto L6 with $t2 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:92:24+37
    assume {:print "$at(2,2747,2784)"} true;
    call $t7 := $1_table_new'$1_string_String_$1_paymentv1_TransferLink'#0''();
    if ($abort_flag) {
        assume {:print "$at(2,2747,2784)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(101,3):", $t2} $t2 == $t2;
        goto L6;
    }

    // $t8 := pack 0x1::paymentv1::TransferLinkStore<#0>($t7) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:91:28+101
    assume {:print "$at(2,2699,2800)"} true;
    $t8 := $1_paymentv1_TransferLinkStore'#0'($t7);

    // move_to<0x1::paymentv1::TransferLinkStore<#0>>($t8, $t0) on_abort goto L6 with $t2 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:91:13+117
    if ($ResourceExists($1_paymentv1_TransferLinkStore'#0'_$memory, $t0->$addr)) {
        call $ExecFailureAbort();
    } else {
        $1_paymentv1_TransferLinkStore'#0'_$memory := $ResourceUpdate($1_paymentv1_TransferLinkStore'#0'_$memory, $t0->$addr, $t8);
    }
    if ($abort_flag) {
        assume {:print "$at(2,2684,2801)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(101,3):", $t2} $t2 == $t2;
        goto L6;
    }

    // label L4 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:86:61+314
    assume {:print "$at(2,2506,2820)"} true;
L4:

    // goto L5 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:86:61+314
    assume {:print "$at(2,2506,2820)"} true;
    goto L5;

    // label L2 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:90:9+188
    assume {:print "$at(2,2625,2813)"} true;
L2:

    // goto L4 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:90:9+188
    assume {:print "$at(2,2625,2813)"} true;
    goto L4;

    // label L0 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:88:9+6
    assume {:print "$at(2,2563,2569)"} true;
L0:

    // $t9 := 7 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:88:33+16
    assume {:print "$at(2,2587,2603)"} true;
    $t9 := 7;
    assume $IsValid'u64'($t9);

    // trace_abort($t9) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:88:9+6
    assume {:print "$at(2,2563,2569)"} true;
    assume {:print "$track_abort(101,3):", $t9} $t9 == $t9;

    // $t2 := move($t9) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:88:9+6
    $t2 := $t9;

    // goto L6 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:88:9+6
    goto L6;

    // label L5 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:95:5+1
    assume {:print "$at(2,2819,2820)"} true;
L5:

    // return () at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:95:5+1
    assume {:print "$at(2,2819,2820)"} true;
    return;

    // label L6 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:95:5+1
L6:

    // abort($t2) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:95:5+1
    assume {:print "$at(2,2819,2820)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun paymentv1::get_transfer_link_info [verification] at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:233:5+574
procedure {:timeLimit 40} $1_paymentv1_get_transfer_link_info$verify(_$t0: $1_string_String) returns ($ret0: int, $ret1: int, $ret2: int, $ret3: int, $ret4: bool)
{
    // declare local variables
    var $t1: $1_paymentv1_TransferLinkStore'#0';
    var $t2: $1_paymentv1_TransferLink'#0';
    var $t3: int;
    var $t4: bool;
    var $t5: int;
    var $t6: int;
    var $t7: int;
    var $t8: int;
    var $t9: bool;
    var $t10: int;
    var $t11: int;
    var $t12: int;
    var $t13: int;
    var $t14: bool;
    var $t15: int;
    var $t16: $1_paymentv1_TransferLinkStore'#0';
    var $t17: int;
    var $t18: Table int ($1_paymentv1_TransferLink'#0');
    var $t19: bool;
    var $t20: int;
    var $t21: int;
    var $t22: int;
    var $t23: int;
    var $t24: bool;
    var $t25: Table int ($1_paymentv1_TransferLink'#0');
    var $t26: $1_paymentv1_TransferLink'#0';
    var $t27: int;
    var $t28: int;
    var $t29: int;
    var $t30: int;
    var $t31: bool;
    var $t0: $1_string_String;
    var $temp_0'$1_paymentv1_TransferLink'#0'': $1_paymentv1_TransferLink'#0';
    var $temp_0'$1_paymentv1_TransferLinkStore'#0'': $1_paymentv1_TransferLinkStore'#0';
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:233:5+1
    assume {:print "$at(2,7822,7823)"} true;
    assume $IsValid'$1_string_String'($t0);

    // assume forall $rsc: 0x1::paymentv1::TransferLinkStore<#0>: ResourceDomain<0x1::paymentv1::TransferLinkStore<#0>>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:233:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_paymentv1_TransferLinkStore'#0'_$memory, $a_0)}(var $rsc := $ResourceValue($1_paymentv1_TransferLinkStore'#0'_$memory, $a_0);
    ($IsValid'$1_paymentv1_TransferLinkStore'#0''($rsc))));

    // trace_local[link_id]($t0) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:233:5+1
    assume {:print "$track_local(101,4,0):", $t0} $t0 == $t0;

    // $t3 := 0x1 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:234:43+7
    assume {:print "$at(2,7980,7987)"} true;
    $t3 := 1;
    assume $IsValid'address'($t3);

    // $t4 := exists<0x1::paymentv1::TransferLinkStore<#0>>($t3) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:234:14+37
    $t4 := $ResourceExists($1_paymentv1_TransferLinkStore'#0'_$memory, $t3);

    // if ($t4) goto L0 else goto L1 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:234:13+38
    if ($t4) { goto L0; } else { goto L1; }

    // label L1 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:235:21+4
    assume {:print "$at(2,8013,8017)"} true;
L1:

    // $t5 := 0x0 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:235:21+4
    assume {:print "$at(2,8013,8017)"} true;
    $t5 := 0;
    assume $IsValid'address'($t5);

    // $t6 := 0 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:235:27+1
    $t6 := 0;
    assume $IsValid'u64'($t6);

    // $t7 := 0 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:235:30+1
    $t7 := 0;
    assume $IsValid'u64'($t7);

    // $t8 := 0 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:235:33+1
    $t8 := 0;
    assume $IsValid'u64'($t8);

    // $t9 := false at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:235:36+5
    $t9 := false;
    assume $IsValid'bool'($t9);

    // trace_return[0]($t5) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:235:13+29
    assume {:print "$track_return(101,4,0):", $t5} $t5 == $t5;

    // trace_return[1]($t6) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:235:13+29
    assume {:print "$track_return(101,4,1):", $t6} $t6 == $t6;

    // trace_return[2]($t7) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:235:13+29
    assume {:print "$track_return(101,4,2):", $t7} $t7 == $t7;

    // trace_return[3]($t8) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:235:13+29
    assume {:print "$track_return(101,4,3):", $t8} $t8 == $t8;

    // trace_return[4]($t9) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:235:13+29
    assume {:print "$track_return(101,4,4):", $t9} $t9 == $t9;

    // $t10 := move($t5) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:235:13+29
    $t10 := $t5;

    // $t11 := move($t6) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:235:13+29
    $t11 := $t6;

    // $t12 := move($t7) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:235:13+29
    $t12 := $t7;

    // $t13 := move($t8) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:235:13+29
    $t13 := $t8;

    // $t14 := move($t9) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:235:13+29
    $t14 := $t9;

    // goto L4 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:235:13+29
    goto L4;

    // label L0 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:238:57+7
    assume {:print "$at(2,8114,8121)"} true;
L0:

    // $t15 := 0x1 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:238:57+7
    assume {:print "$at(2,8114,8121)"} true;
    $t15 := 1;
    assume $IsValid'address'($t15);

    // $t16 := get_global<0x1::paymentv1::TransferLinkStore<#0>>($t15) on_abort goto L5 with $t17 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:238:21+44
    if (!$ResourceExists($1_paymentv1_TransferLinkStore'#0'_$memory, $t15)) {
        call $ExecFailureAbort();
    } else {
        $t16 := $ResourceValue($1_paymentv1_TransferLinkStore'#0'_$memory, $t15);
    }
    if ($abort_flag) {
        assume {:print "$at(2,8078,8122)"} true;
        $t17 := $abort_code;
        assume {:print "$track_abort(101,4):", $t17} $t17 == $t17;
        goto L5;
    }

    // trace_local[store]($t16) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:238:21+44
    assume {:print "$track_local(101,4,1):", $t16} $t16 == $t16;

    // $t18 := get_field<0x1::paymentv1::TransferLinkStore<#0>>.links($t16) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:239:30+12
    assume {:print "$at(2,8154,8166)"} true;
    $t18 := $t16->$links;

    // $t19 := table::contains<0x1::string::String, 0x1::paymentv1::TransferLink<#0>>($t18, $t0) on_abort goto L5 with $t17 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:239:14+38
    call $t19 := $1_table_contains'$1_string_String_$1_paymentv1_TransferLink'#0''($t18, $t0);
    if ($abort_flag) {
        assume {:print "$at(2,8138,8176)"} true;
        $t17 := $abort_code;
        assume {:print "$track_abort(101,4):", $t17} $t17 == $t17;
        goto L5;
    }

    // if ($t19) goto L2 else goto L3 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:239:13+39
    if ($t19) { goto L2; } else { goto L3; }

    // label L3 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:240:13+29
    assume {:print "$at(2,8193,8222)"} true;
L3:

    // $t20 := 0x0 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:240:21+4
    assume {:print "$at(2,8201,8205)"} true;
    $t20 := 0;
    assume $IsValid'address'($t20);

    // $t21 := 0 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:240:27+1
    $t21 := 0;
    assume $IsValid'u64'($t21);

    // $t22 := 0 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:240:30+1
    $t22 := 0;
    assume $IsValid'u64'($t22);

    // $t23 := 0 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:240:33+1
    $t23 := 0;
    assume $IsValid'u64'($t23);

    // $t24 := false at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:240:36+5
    $t24 := false;
    assume $IsValid'bool'($t24);

    // trace_return[0]($t20) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:240:13+29
    assume {:print "$track_return(101,4,0):", $t20} $t20 == $t20;

    // trace_return[1]($t21) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:240:13+29
    assume {:print "$track_return(101,4,1):", $t21} $t21 == $t21;

    // trace_return[2]($t22) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:240:13+29
    assume {:print "$track_return(101,4,2):", $t22} $t22 == $t22;

    // trace_return[3]($t23) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:240:13+29
    assume {:print "$track_return(101,4,3):", $t23} $t23 == $t23;

    // trace_return[4]($t24) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:240:13+29
    assume {:print "$track_return(101,4,4):", $t24} $t24 == $t24;

    // $t10 := move($t20) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:240:13+29
    $t10 := $t20;

    // $t11 := move($t21) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:240:13+29
    $t11 := $t21;

    // $t12 := move($t22) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:240:13+29
    $t12 := $t22;

    // $t13 := move($t23) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:240:13+29
    $t13 := $t23;

    // $t14 := move($t24) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:240:13+29
    $t14 := $t24;

    // goto L4 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:240:13+29
    goto L4;

    // label L2 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:243:34+12
    assume {:print "$at(2,8279,8291)"} true;
L2:

    // $t25 := get_field<0x1::paymentv1::TransferLinkStore<#0>>.links($t16) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:243:34+12
    assume {:print "$at(2,8279,8291)"} true;
    $t25 := $t16->$links;

    // $t26 := table::borrow<0x1::string::String, 0x1::paymentv1::TransferLink<#0>>($t25, $t0) on_abort goto L5 with $t17 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:243:20+36
    call $t26 := $1_table_borrow'$1_string_String_$1_paymentv1_TransferLink'#0''($t25, $t0);
    if ($abort_flag) {
        assume {:print "$at(2,8265,8301)"} true;
        $t17 := $abort_code;
        assume {:print "$track_abort(101,4):", $t17} $t17 == $t17;
        goto L5;
    }

    // trace_local[link]($t26) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:243:20+36
    assume {:print "$track_local(101,4,2):", $t26} $t26 == $t26;

    // $t27 := get_field<0x1::paymentv1::TransferLink<#0>>.sender($t26) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:244:10+11
    assume {:print "$at(2,8313,8324)"} true;
    $t27 := $t26->$sender;

    // $t28 := get_field<0x1::paymentv1::TransferLink<#0>>.amount($t26) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:244:23+11
    $t28 := $t26->$amount;

    // $t29 := get_field<0x1::paymentv1::TransferLink<#0>>.created_at($t26) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:244:36+15
    $t29 := $t26->$created_at;

    // $t30 := get_field<0x1::paymentv1::TransferLink<#0>>.expires_at($t26) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:244:53+15
    $t30 := $t26->$expires_at;

    // $t31 := get_field<0x1::paymentv1::TransferLink<#0>>.is_claimed($t26) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:244:70+15
    $t31 := $t26->$is_claimed;

    // trace_return[0]($t27) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:233:118+461
    assume {:print "$at(2,7935,8396)"} true;
    assume {:print "$track_return(101,4,0):", $t27} $t27 == $t27;

    // trace_return[1]($t28) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:233:118+461
    assume {:print "$track_return(101,4,1):", $t28} $t28 == $t28;

    // trace_return[2]($t29) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:233:118+461
    assume {:print "$track_return(101,4,2):", $t29} $t29 == $t29;

    // trace_return[3]($t30) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:233:118+461
    assume {:print "$track_return(101,4,3):", $t30} $t30 == $t30;

    // trace_return[4]($t31) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:233:118+461
    assume {:print "$track_return(101,4,4):", $t31} $t31 == $t31;

    // $t10 := move($t27) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:233:118+461
    $t10 := $t27;

    // $t11 := move($t28) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:233:118+461
    $t11 := $t28;

    // $t12 := move($t29) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:233:118+461
    $t12 := $t29;

    // $t13 := move($t30) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:233:118+461
    $t13 := $t30;

    // $t14 := move($t31) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:233:118+461
    $t14 := $t31;

    // label L4 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:245:5+1
    assume {:print "$at(2,8395,8396)"} true;
L4:

    // return ($t10, $t11, $t12, $t13, $t14) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:245:5+1
    assume {:print "$at(2,8395,8396)"} true;
    $ret0 := $t10;
    $ret1 := $t11;
    $ret2 := $t12;
    $ret3 := $t13;
    $ret4 := $t14;
    return;

    // label L5 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:245:5+1
L5:

    // abort($t17) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:245:5+1
    assume {:print "$at(2,8395,8396)"} true;
    $abort_code := $t17;
    $abort_flag := true;
    return;

}

// fun paymentv1::is_token_supported [verification] at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:248:5+101
procedure {:timeLimit 40} $1_paymentv1_is_token_supported$verify() returns ($ret0: bool)
{
    // declare local variables
    var $t0: int;
    var $t1: bool;
    var $t2: int;
    var $temp_0'bool': bool;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume forall $rsc: 0x1::supported_tokens::SupportedTokens: ResourceDomain<0x1::supported_tokens::SupportedTokens>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:248:5+1
    assume {:print "$at(2,8417,8418)"} true;
    assume (forall $a_0: int :: {$ResourceValue($1_supported_tokens_SupportedTokens_$memory, $a_0)}(var $rsc := $ResourceValue($1_supported_tokens_SupportedTokens_$memory, $a_0);
    ($IsValid'$1_supported_tokens_SupportedTokens'($rsc))));

    // $t0 := 0x1 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:249:43+7
    assume {:print "$at(2,8503,8510)"} true;
    $t0 := 1;
    assume $IsValid'address'($t0);

    // $t1 := supported_tokens::is_supported<#0>($t0) on_abort goto L2 with $t2 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:249:9+42
    call $t1 := $1_supported_tokens_is_supported'#0'($t0);
    if ($abort_flag) {
        assume {:print "$at(2,8469,8511)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(101,5):", $t2} $t2 == $t2;
        goto L2;
    }

    // trace_return[0]($t1) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:249:9+42
    assume {:print "$track_return(101,5,0):", $t1} $t1 == $t1;

    // label L1 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:250:5+1
    assume {:print "$at(2,8517,8518)"} true;
L1:

    // return $t1 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:250:5+1
    assume {:print "$at(2,8517,8518)"} true;
    $ret0 := $t1;
    return;

    // label L2 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:250:5+1
L2:

    // abort($t2) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:250:5+1
    assume {:print "$at(2,8517,8518)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun paymentv1::process_payment [verification] at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:99:5+1062
procedure {:timeLimit 40} $1_paymentv1_process_payment$verify(_$t0: $signer, _$t1: int, _$t2: int, _$t3: $1_string_String) returns ()
{
    // declare local variables
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: int;
    var $t8: bool;
    var $t9: int;
    var $t10: int;
    var $t11: bool;
    var $t12: bool;
    var $t13: int;
    var $t14: $1_coin_CoinStore'#0';
    var $t15: $1_coin_CoinStore'#0';
    var $t16: $1_string_String;
    var $t17: int;
    var $t18: $1_paymentv1_PaymentProcessed;
    var $t19: int;
    var $t20: int;
    var $t0: $signer;
    var $t1: int;
    var $t2: int;
    var $t3: $1_string_String;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;
    $t3 := _$t3;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:99:5+1
    assume {:print "$at(2,2966,2967)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($t0->$addr);

    // assume WellFormed($t1) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:99:5+1
    assume $IsValid'address'($t1);

    // assume WellFormed($t2) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:99:5+1
    assume $IsValid'u64'($t2);

    // assume WellFormed($t3) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:99:5+1
    assume $IsValid'$1_string_String'($t3);

    // assume forall $rsc: 0x1::features::Features: ResourceDomain<0x1::features::Features>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:99:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_features_Features_$memory, $a_0)}(var $rsc := $ResourceValue($1_features_Features_$memory, $a_0);
    ($IsValid'$1_features_Features'($rsc))));

    // assume forall $rsc: 0x1::chain_status::GenesisEndMarker: ResourceDomain<0x1::chain_status::GenesisEndMarker>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:99:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0)}(var $rsc := $ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0);
    ($IsValid'$1_chain_status_GenesisEndMarker'($rsc))));

    // assume forall $rsc: 0x1::timestamp::CurrentTimeMicroseconds: ResourceDomain<0x1::timestamp::CurrentTimeMicroseconds>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:99:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0)}(var $rsc := $ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0);
    ($IsValid'$1_timestamp_CurrentTimeMicroseconds'($rsc))));

    // assume forall $rsc: 0x1::permissioned_signer::PermissionStorage: ResourceDomain<0x1::permissioned_signer::PermissionStorage>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:99:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_permissioned_signer_PermissionStorage_$memory, $a_0)}(var $rsc := $ResourceValue($1_permissioned_signer_PermissionStorage_$memory, $a_0);
    ($IsValid'$1_permissioned_signer_PermissionStorage'($rsc))));

    // assume forall $rsc: 0x1::account::Account: ResourceDomain<0x1::account::Account>(): And(WellFormed($rsc), And(Le(Len<address>(select option::Option.vec(select account::CapabilityOffer.for(select account::Account.rotation_capability_offer($rsc)))), 1), Le(Len<address>(select option::Option.vec(select account::CapabilityOffer.for(select account::Account.signer_capability_offer($rsc)))), 1))) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:99:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_account_Account_$memory, $a_0)}(var $rsc := $ResourceValue($1_account_Account_$memory, $a_0);
    (($IsValid'$1_account_Account'($rsc) && ((LenVec($rsc->$rotation_capability_offer->$for->$vec) <= 1) && (LenVec($rsc->$signer_capability_offer->$for->$vec) <= 1))))));

    // assume forall $rsc: 0x1::object::ObjectCore: ResourceDomain<0x1::object::ObjectCore>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:99:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_ObjectCore_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_ObjectCore_$memory, $a_0);
    ($IsValid'$1_object_ObjectCore'($rsc))));

    // assume forall $rsc: 0x1::object::TombStone: ResourceDomain<0x1::object::TombStone>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:99:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_TombStone_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_TombStone_$memory, $a_0);
    ($IsValid'$1_object_TombStone'($rsc))));

    // assume forall $rsc: 0x1::object::Untransferable: ResourceDomain<0x1::object::Untransferable>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:99:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_Untransferable_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_Untransferable_$memory, $a_0);
    ($IsValid'$1_object_Untransferable'($rsc))));

    // assume forall $rsc: 0x1::fungible_asset::Untransferable: ResourceDomain<0x1::fungible_asset::Untransferable>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:99:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_Untransferable_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_Untransferable_$memory, $a_0);
    ($IsValid'$1_fungible_asset_Untransferable'($rsc))));

    // assume forall $rsc: 0x1::fungible_asset::ConcurrentFungibleBalance: ResourceDomain<0x1::fungible_asset::ConcurrentFungibleBalance>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:99:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_ConcurrentFungibleBalance_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_ConcurrentFungibleBalance_$memory, $a_0);
    ($IsValid'$1_fungible_asset_ConcurrentFungibleBalance'($rsc))));

    // assume forall $rsc: 0x1::fungible_asset::ConcurrentSupply: ResourceDomain<0x1::fungible_asset::ConcurrentSupply>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:99:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_ConcurrentSupply_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_ConcurrentSupply_$memory, $a_0);
    ($IsValid'$1_fungible_asset_ConcurrentSupply'($rsc))));

    // assume forall $rsc: 0x1::fungible_asset::DispatchFunctionStore: ResourceDomain<0x1::fungible_asset::DispatchFunctionStore>(): And(WellFormed($rsc), And(And(Le(Len<0x1::function_info::FunctionInfo>(select option::Option.vec(select fungible_asset::DispatchFunctionStore.withdraw_function($rsc))), 1), Le(Len<0x1::function_info::FunctionInfo>(select option::Option.vec(select fungible_asset::DispatchFunctionStore.deposit_function($rsc))), 1)), Le(Len<0x1::function_info::FunctionInfo>(select option::Option.vec(select fungible_asset::DispatchFunctionStore.derived_balance_function($rsc))), 1))) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:99:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_DispatchFunctionStore_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_DispatchFunctionStore_$memory, $a_0);
    (($IsValid'$1_fungible_asset_DispatchFunctionStore'($rsc) && (((LenVec($rsc->$withdraw_function->$vec) <= 1) && (LenVec($rsc->$deposit_function->$vec) <= 1)) && (LenVec($rsc->$derived_balance_function->$vec) <= 1))))));

    // assume forall $rsc: 0x1::fungible_asset::FungibleStore: ResourceDomain<0x1::fungible_asset::FungibleStore>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:99:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_FungibleStore_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_FungibleStore_$memory, $a_0);
    ($IsValid'$1_fungible_asset_FungibleStore'($rsc))));

    // assume forall $rsc: 0x1::fungible_asset::Metadata: ResourceDomain<0x1::fungible_asset::Metadata>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:99:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_Metadata_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_Metadata_$memory, $a_0);
    ($IsValid'$1_fungible_asset_Metadata'($rsc))));

    // assume forall $rsc: 0x1::fungible_asset::Supply: ResourceDomain<0x1::fungible_asset::Supply>(): And(WellFormed($rsc), Le(Len<u128>(select option::Option.vec(select fungible_asset::Supply.maximum($rsc))), 1)) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:99:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_Supply_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_Supply_$memory, $a_0);
    (($IsValid'$1_fungible_asset_Supply'($rsc) && (LenVec($rsc->$maximum->$vec) <= 1)))));

    // assume forall $rsc: 0x1::dispatchable_fungible_asset::TransferRefStore: ResourceDomain<0x1::dispatchable_fungible_asset::TransferRefStore>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:99:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_dispatchable_fungible_asset_TransferRefStore_$memory, $a_0)}(var $rsc := $ResourceValue($1_dispatchable_fungible_asset_TransferRefStore_$memory, $a_0);
    ($IsValid'$1_dispatchable_fungible_asset_TransferRefStore'($rsc))));

    // assume forall $rsc: 0x1::primary_fungible_store::DeriveRefPod: ResourceDomain<0x1::primary_fungible_store::DeriveRefPod>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:99:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_primary_fungible_store_DeriveRefPod_$memory, $a_0)}(var $rsc := $ResourceValue($1_primary_fungible_store_DeriveRefPod_$memory, $a_0);
    ($IsValid'$1_primary_fungible_store_DeriveRefPod'($rsc))));

    // assume forall $rsc: 0x1::coin::CoinConversionMap: ResourceDomain<0x1::coin::CoinConversionMap>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:99:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinConversionMap_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinConversionMap_$memory, $a_0);
    ($IsValid'$1_coin_CoinConversionMap'($rsc))));

    // assume forall $rsc: 0x1::coin::PairedCoinType: ResourceDomain<0x1::coin::PairedCoinType>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:99:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_PairedCoinType_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_PairedCoinType_$memory, $a_0);
    ($IsValid'$1_coin_PairedCoinType'($rsc))));

    // assume forall $rsc: 0x1::coin::PairedFungibleAssetRefs: ResourceDomain<0x1::coin::PairedFungibleAssetRefs>(): And(WellFormed($rsc), And(And(Le(Len<0x1::fungible_asset::MintRef>(select option::Option.vec(select coin::PairedFungibleAssetRefs.mint_ref_opt($rsc))), 1), Le(Len<0x1::fungible_asset::TransferRef>(select option::Option.vec(select coin::PairedFungibleAssetRefs.transfer_ref_opt($rsc))), 1)), Le(Len<0x1::fungible_asset::BurnRef>(select option::Option.vec(select coin::PairedFungibleAssetRefs.burn_ref_opt($rsc))), 1))) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:99:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_PairedFungibleAssetRefs_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_PairedFungibleAssetRefs_$memory, $a_0);
    (($IsValid'$1_coin_PairedFungibleAssetRefs'($rsc) && (((LenVec($rsc->$mint_ref_opt->$vec) <= 1) && (LenVec($rsc->$transfer_ref_opt->$vec) <= 1)) && (LenVec($rsc->$burn_ref_opt->$vec) <= 1))))));

    // assume forall $rsc: 0x1::coin::CoinInfo<#0>: ResourceDomain<0x1::coin::CoinInfo<#0>>(): And(WellFormed($rsc), And(Le(Len<0x1::optional_aggregator::OptionalAggregator>(select option::Option.vec(select coin::CoinInfo.supply($rsc))), 1), forall $elem: 0x1::optional_aggregator::OptionalAggregator: select option::Option.vec(select coin::CoinInfo.supply($rsc)): And(And(And(And(And(Iff(option::$is_some<0x1::aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)), option::$is_none<0x1::optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem))), Iff(option::$is_some<0x1::optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)), option::$is_none<0x1::aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)))), Implies(option::$is_some<0x1::optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)), Le(select optional_aggregator::Integer.value<0x1::optional_aggregator::Integer>(option::$borrow<0x1::optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem))), select optional_aggregator::Integer.limit<0x1::optional_aggregator::Integer>(option::$borrow<0x1::optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)))))), Implies(option::$is_some<0x1::aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)), Le(aggregator::spec_aggregator_get_val(option::$borrow<0x1::aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem))), aggregator::spec_get_limit(option::$borrow<0x1::aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)))))), Le(Len<0x1::aggregator::Aggregator>(select option::Option.vec(select optional_aggregator::OptionalAggregator.aggregator($elem))), 1)), Le(Len<0x1::optional_aggregator::Integer>(select option::Option.vec(select optional_aggregator::OptionalAggregator.integer($elem))), 1)))) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:99:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinInfo'#0'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinInfo'#0'_$memory, $a_0);
    (($IsValid'$1_coin_CoinInfo'#0''($rsc) && ((LenVec($rsc->$supply->$vec) <= 1) && (var $range_1 := $rsc->$supply->$vec; (forall $i_2: int :: InRangeVec($range_1, $i_2) ==> (var $elem := ReadVec($range_1, $i_2);
    ((((((($1_option_$is_some'$1_aggregator_Aggregator'($elem->$aggregator) <==> $1_option_$is_none'$1_optional_aggregator_Integer'($elem->$integer)) && ($1_option_$is_some'$1_optional_aggregator_Integer'($elem->$integer) <==> $1_option_$is_none'$1_aggregator_Aggregator'($elem->$aggregator))) && ($1_option_$is_some'$1_optional_aggregator_Integer'($elem->$integer) ==> ($1_option_$borrow'$1_optional_aggregator_Integer'($elem->$integer)->$value <= $1_option_$borrow'$1_optional_aggregator_Integer'($elem->$integer)->$limit))) && ($1_option_$is_some'$1_aggregator_Aggregator'($elem->$aggregator) ==> ($1_aggregator_spec_aggregator_get_val($1_option_$borrow'$1_aggregator_Aggregator'($elem->$aggregator)) <= $1_aggregator_spec_get_limit($1_option_$borrow'$1_aggregator_Aggregator'($elem->$aggregator))))) && (LenVec($elem->$aggregator->$vec) <= 1)) && (LenVec($elem->$integer->$vec) <= 1)))))))))));

    // assume forall $rsc: 0x1::coin::CoinStore<#0>: ResourceDomain<0x1::coin::CoinStore<#0>>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:99:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinStore'#0'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinStore'#0'_$memory, $a_0);
    ($IsValid'$1_coin_CoinStore'#0''($rsc))));

    // assume forall $rsc: 0x1::coin::Ghost$supply<#0>: ResourceDomain<0x1::coin::Ghost$supply<#0>>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:99:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_Ghost$supply'#0'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_Ghost$supply'#0'_$memory, $a_0);
    ($IsValid'$1_coin_Ghost$supply'#0''($rsc))));

    // assume exists<0x1::coin::Ghost$supply<#0>>(0x0) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:99:5+1
    assume $ResourceExists($1_coin_Ghost$supply'#0'_$memory, 0);

    // assume forall $rsc: 0x1::coin::Ghost$aggregate_supply<#0>: ResourceDomain<0x1::coin::Ghost$aggregate_supply<#0>>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:99:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_Ghost$aggregate_supply'#0'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_Ghost$aggregate_supply'#0'_$memory, $a_0);
    ($IsValid'$1_coin_Ghost$aggregate_supply'#0''($rsc))));

    // assume exists<0x1::coin::Ghost$aggregate_supply<#0>>(0x0) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:99:5+1
    assume $ResourceExists($1_coin_Ghost$aggregate_supply'#0'_$memory, 0);

    // assume forall $rsc: 0x1::reconfiguration::Configuration: ResourceDomain<0x1::reconfiguration::Configuration>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:99:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_reconfiguration_Configuration_$memory, $a_0)}(var $rsc := $ResourceValue($1_reconfiguration_Configuration_$memory, $a_0);
    ($IsValid'$1_reconfiguration_Configuration'($rsc))));

    // assume forall $rsc: 0x1::supported_tokens::SupportedTokens: ResourceDomain<0x1::supported_tokens::SupportedTokens>(): WellFormed($rsc) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:99:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_supported_tokens_SupportedTokens_$memory, $a_0)}(var $rsc := $ResourceValue($1_supported_tokens_SupportedTokens_$memory, $a_0);
    ($IsValid'$1_supported_tokens_SupportedTokens'($rsc))));

    // assume Implies(chain_status::$is_operating(), exists<0x1::timestamp::CurrentTimeMicroseconds>(0x1)) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:99:5+1062
    // global invariant at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\timestamp.spec.move:36:9+107
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, 1));

    // assume Implies(chain_status::$is_operating(), Ge(timestamp::spec_now_microseconds(), reconfiguration::$last_reconfiguration_time())) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:99:5+1062
    // global invariant at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\reconfiguration.spec.move:51:9+138
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> ($1_timestamp_spec_now_microseconds($1_timestamp_CurrentTimeMicroseconds_$memory) >= $1_reconfiguration_$last_reconfiguration_time($1_reconfiguration_Configuration_$memory)));

    // trace_local[payer]($t0) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:99:5+1
    assume {:print "$track_local(101,6,0):", $t0} $t0 == $t0;

    // trace_local[recipient]($t1) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:99:5+1
    assume {:print "$track_local(101,6,1):", $t1} $t1 == $t1;

    // trace_local[amount]($t2) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:99:5+1
    assume {:print "$track_local(101,6,2):", $t2} $t2 == $t2;

    // trace_local[payment_id]($t3) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:99:5+1
    assume {:print "$track_local(101,6,3):", $t3} $t3 == $t3;

    // $t5 := signer::address_of($t0) on_abort goto L8 with $t6 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:105:26+25
    assume {:print "$at(2,3152,3177)"} true;
    call $t5 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,3152,3177)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(101,6):", $t6} $t6 == $t6;
        goto L8;
    }

    // trace_local[payer_addr]($t5) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:105:26+25
    assume {:print "$track_local(101,6,4):", $t5} $t5 == $t5;

    // $t7 := 0 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:108:26+1
    assume {:print "$at(2,3235,3236)"} true;
    $t7 := 0;
    assume $IsValid'u64'($t7);

    // $t8 := >($t2, $t7) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:108:17+10
    call $t8 := $Gt($t2, $t7);

    // if ($t8) goto L1 else goto L0 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:108:9+6
    if ($t8) { goto L1; } else { goto L0; }

    // label L1 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:109:47+7
    assume {:print "$at(2,3304,3311)"} true;
L1:

    // $t9 := 0x1 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:109:47+7
    assume {:print "$at(2,3304,3311)"} true;
    $t9 := 1;
    assume $IsValid'address'($t9);

    // supported_tokens::assert_supported<#0>($t9) on_abort goto L8 with $t6 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:109:9+46
    call $1_supported_tokens_assert_supported'#0'($t9);
    if ($abort_flag) {
        assume {:print "$at(2,3266,3312)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(101,6):", $t6} $t6 == $t6;
        goto L8;
    }

    // $t10 := coin::balance<#0>($t5) on_abort goto L8 with $t6 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:112:23+28
    assume {:print "$at(2,3371,3399)"} true;
    call $t10 := $1_coin_balance'#0'($t5);
    if ($abort_flag) {
        assume {:print "$at(2,3371,3399)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(101,6):", $t6} $t6 == $t6;
        goto L8;
    }

    // $t11 := >=($t10, $t2) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:113:17+17
    assume {:print "$at(2,3418,3435)"} true;
    call $t11 := $Ge($t10, $t2);

    // if ($t11) goto L3 else goto L2 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:113:9+6
    if ($t11) { goto L3; } else { goto L2; }

    // label L3 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:116:14+42
    assume {:print "$at(2,3540,3582)"} true;
L3:

    // $t12 := coin::is_account_registered<#0>($t5) on_abort goto L8 with $t6 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:116:14+42
    assume {:print "$at(2,3540,3582)"} true;
    call $t12 := $1_coin_is_account_registered'#0'($t5);
    if ($abort_flag) {
        assume {:print "$at(2,3540,3582)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(101,6):", $t6} $t6 == $t6;
        goto L8;
    }

    // if ($t12) goto L5 else goto L4 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:116:13+43
    if ($t12) { goto L5; } else { goto L4; }

    // label L5 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:116:9+100
L5:

    // goto L6 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:116:9+100
    assume {:print "$at(2,3535,3635)"} true;
    goto L6;

    // label L4 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:117:13+24
    assume {:print "$at(2,3599,3623)"} true;
L4:

    // coin::register<#0>($t0) on_abort goto L8 with $t6 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:117:13+24
    assume {:print "$at(2,3599,3623)"} true;
    call $1_coin_register'#0'($t0);
    if ($abort_flag) {
        assume {:print "$at(2,3599,3623)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(101,6):", $t6} $t6 == $t6;
        goto L8;
    }

    // label L6 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:121:27+5
    assume {:print "$at(2,3718,3723)"} true;
L6:

    // assume Identical($t13, signer::$address_of($t0)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.spec.move:496:9+49
    assume {:print "$at(132,21619,21668)"} true;
    assume ($t13 == $1_signer_$address_of($t0));

    // assume Identical($t14, global<0x1::coin::CoinStore<#0>>($t13)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.spec.move:497:9+69
    assume {:print "$at(132,21678,21747)"} true;
    assume ($t14 == $ResourceValue($1_coin_CoinStore'#0'_$memory, $t13));

    // assume Identical($t15, global<0x1::coin::CoinStore<#0>>($t1)) at C:\Users\ramad/.move\https___github_com_aptos-labs_aptos-framework_git_mainnet\aptos-framework\sources\coin.spec.move:499:9+52
    assume {:print "$at(132,21846,21898)"} true;
    assume ($t15 == $ResourceValue($1_coin_CoinStore'#0'_$memory, $t1));

    // coin::transfer<#0>($t0, $t1, $t2) on_abort goto L8 with $t6 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:121:9+43
    assume {:print "$at(2,3700,3743)"} true;
    call $1_coin_transfer'#0'($t0, $t1, $t2);
    if ($abort_flag) {
        assume {:print "$at(2,3700,3743)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(101,6):", $t6} $t6 == $t6;
        goto L8;
    }

    // $t16 := type_info::type_name<#0>() on_abort goto L8 with $t6 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:129:20+25
    assume {:print "$at(2,3932,3957)"} true;
    $t16 := $1_string_String($TypeName(#0_info));
    if ($abort_flag) {
        assume {:print "$at(2,3932,3957)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(101,6):", $t6} $t6 == $t6;
        goto L8;
    }

    // $t17 := timestamp::now_seconds() on_abort goto L8 with $t6 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:130:24+24
    assume {:print "$at(2,3983,4007)"} true;
    call $t17 := $1_timestamp_now_seconds();
    if ($abort_flag) {
        assume {:print "$at(2,3983,4007)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(101,6):", $t6} $t6 == $t6;
        goto L8;
    }

    // $t18 := pack 0x1::paymentv1::PaymentProcessed($t3, $t5, $t1, $t2, $t16, $t17) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:124:21+228
    assume {:print "$at(2,3791,4019)"} true;
    $t18 := $1_paymentv1_PaymentProcessed($t3, $t5, $t1, $t2, $t16, $t17);

    // opaque begin: event::emit<0x1::paymentv1::PaymentProcessed>($t18) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:124:9+241

    // opaque end: event::emit<0x1::paymentv1::PaymentProcessed>($t18) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:124:9+241

    // goto L7 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:104:7+904
    assume {:print "$at(2,3124,4028)"} true;
    goto L7;

    // label L2 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:113:9+6
    assume {:print "$at(2,3410,3416)"} true;
L2:

    // $t19 := 3 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:113:36+22
    assume {:print "$at(2,3437,3459)"} true;
    $t19 := 3;
    assume $IsValid'u64'($t19);

    // trace_abort($t19) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:113:9+6
    assume {:print "$at(2,3410,3416)"} true;
    assume {:print "$track_abort(101,6):", $t19} $t19 == $t19;

    // $t6 := move($t19) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:113:9+6
    $t6 := $t19;

    // goto L8 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:113:9+6
    goto L8;

    // label L0 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:108:9+6
    assume {:print "$at(2,3218,3224)"} true;
L0:

    // $t20 := 2 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:108:29+16
    assume {:print "$at(2,3238,3254)"} true;
    $t20 := 2;
    assume $IsValid'u64'($t20);

    // trace_abort($t20) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:108:9+6
    assume {:print "$at(2,3218,3224)"} true;
    assume {:print "$track_abort(101,6):", $t20} $t20 == $t20;

    // $t6 := move($t20) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:108:9+6
    $t6 := $t20;

    // goto L8 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:108:9+6
    goto L8;

    // label L7 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:132:5+1
    assume {:print "$at(2,4027,4028)"} true;
L7:

    // return () at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:132:5+1
    assume {:print "$at(2,4027,4028)"} true;
    return;

    // label L8 at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:132:5+1
L8:

    // abort($t6) at D:\Hackathon\relynk-aptos\relynk-contract-move\sources\payment.move:132:5+1
    assume {:print "$at(2,4027,4028)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}
